	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\.Ifx_Shell.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc26x -D__CPU_TC26X__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\User -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.src ..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c'

	
$TC16X
	.sdecl	'.rodata.IfxStdIf_DPipe..33.cnt',data,rom
	.sect	'.rodata.IfxStdIf_DPipe..33.cnt'
	.align	4
.33.cnt:	.type	object
	.size	.33.cnt,8
	.word	-1,2147483647
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_isEndOfLine',code,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.text.Ifx_Shell.Ifx_Shell_isEndOfLine'
	.align	2
	
	.global	Ifx_Shell_isEndOfLine

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     2   * \file Ifx_Shell.c
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     3   * \brief shell functions.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     5   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    16  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    26  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    32   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    33  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    41  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    42   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    43   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    45  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    46  #include "Ifx_Shell.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    47  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    48  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    49  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    50  #include <string.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    51  #include <stdlib.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    52  #include <stdio.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    53  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    54  #define IFX_SHELL_LLD              "%lld "
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    55  #define IFX_SHELL_LLX              "%llx "
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    56  #define IFX_SHELL_LLU              "%llu "
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    57  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    58  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    59  #define IFX_SHELL_MAX_MESSAGE_SIZE 255
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    60  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    61  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    62  /* Macro to detect space character */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    63  #define ISSPACE(c)           (((c) == ' ') || ((c) == '\t'))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    65  /* Macro to only execute parameter if echo is enabled for this shell */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    66  #define IFX_SHELL_IF_ECHO(X) {if (shell->control.echo) {X; }}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    68  /* Macro to write lots of spaces */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    69  #define IFX_SHELL_WRITE_SPACES(X) \ 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    70      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, " "); }}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    71  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    72  /* Macro to write lots of backspaces */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    73  #define IFX_SHELL_WRITE_BACKSPACES(X) \ 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    74      {int ii; for (ii = 0; ii < (X); ii++) {IfxStdIf_DPipe_print(shell->io, "\b"); }}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    75  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    76  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    77  char Ifx_Shell_cmdBuffer[IFX_CFG_SHELL_CMD_LINE_SIZE * IFX_CFG_SHELL_CMD_HISTORY_SIZE];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    78  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    79  void                     Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    80  void                     Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    81  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args, Ifx_Shell_CommandListConst *commandList);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    82  static boolean           Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    84  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    85  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    86   * \brief Check whether the args is already at the end.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    87   * \param args The argument null-terminated string
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    88   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    89  boolean Ifx_Shell_isEndOfLine(pchar args)
; Function Ifx_Shell_isEndOfLine
.L272:
Ifx_Shell_isEndOfLine:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    90  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    91      return ((args == NULL_PTR) || (*args == IFX_SHELL_NULL_CHAR)) ? TRUE : FALSE;
	jz.a	a4,.L2
.L1582:
	ld.bu	d15,[a4]
.L1583:
	jne	d15,#0,.L3
.L2:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    92  }
	mov	d2,#1
	ret
.L3:
	mov	d2,#0
	ret
.L763:
	
__Ifx_Shell_isEndOfLine_function_end:
	.size	Ifx_Shell_isEndOfLine,__Ifx_Shell_isEndOfLine_function_end-Ifx_Shell_isEndOfLine
.L475:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_writeResult',code,cluster('Ifx_Shell_writeResult')
	.sect	'.text.Ifx_Shell.Ifx_Shell_writeResult'
	.align	2
	

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    93  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    94  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    95  static boolean Ifx_Shell_writeResult(Ifx_Shell *shell, Ifx_SizeT Code)
; Function Ifx_Shell_writeResult
.L274:
Ifx_Shell_writeResult:	.type	func
	sub.a	a10,#8
.L781:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    96  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    97      Ifx_SizeT length = sizeof(Code);
	mov	d15,#2
	st.h	[a10],d4
.L1588:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    98      boolean   result = IfxStdIf_DPipe_write(shell->io, &Code, &length, TIME_INFINITE);
	ld.a	a15,[a4]
.L1589:
	st.h	[a10]2,d15
.L769:
	mov.aa	a5,a10
.L1590:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	ld.a	a2,[a15]8
.L1591:
	ld.a	a4,[a15]
.L783:
	movh.a	a15,#@his(.33.cnt)
	lea	a15,[a15]@los(.33.cnt)
	ld.d	e4,[a15]0
.L782:
	lea	a6,[a10]2
.L1592:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	ji	a2
.L765:
	
__Ifx_Shell_writeResult_function_end:
	.size	Ifx_Shell_writeResult,__Ifx_Shell_writeResult_function_end-Ifx_Shell_writeResult
.L480:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle',code,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingle'
	.align	2
	
	.global	Ifx_Shell_showHelpSingle

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	    99   IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   100  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   101      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   102  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   103  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   104  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   105  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   106  boolean Ifx_Shell_showHelpSingle(Ifx_Shell_CommandListConst commandList, IfxStdIf_DPipe *io, boolean briefOnly, boolean singleCommand)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   107  {
; Function Ifx_Shell_showHelpSingle
.L276:
Ifx_Shell_showHelpSingle:	.type	func
	sub.a	a10,#40
.L784:
	mov.aa	a12,a5
.L785:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   108      const Ifx_Shell_Command *command          = commandList;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   109      uint32                   index            = 0;
	mov	e8,d5,d4
	st.a	[a10]36,a4
.L786:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   110      pchar                    space            = "";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   111      pchar                    spaceParam       = "";
	mov	d10,#0
	movh.a	a13,#@his(.1.str)
.L787:
	lea	a13,[a13]@los(.1.str)
	st.a	[a10]32,a13
.L658:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   112  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   113      while (command->commandLine != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   114      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   115          pchar   help     = command->help;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   116          pchar   chunk;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   117          boolean isParam  = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   118          boolean isSyntax = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   119          IfxStdIf_DPipe_print(io, "%s%s", space, command->commandLine);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   120  
	movh.a	a15,#@his(.2.str)
	lea	a15,[a15]@los(.2.str)
	st.a	[a10]28,a15
.L665:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   121          while (*help != IFX_SHELL_NULL_CHAR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   122          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   123              Ifx_SizeT count;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   124              pchar     matchp     = "/p";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   125              pchar     matchs     = "/s";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   126                   spaceParam = "";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   127  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   128              if (Ifx_Shell_matchCommand(&help, &matchp))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   129              {   /* Parameter description found */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   130                  isParam    = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   131                  isSyntax   = FALSE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   132                  spaceParam = "      ";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   133              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   134              else if (Ifx_Shell_matchCommand(&help, &matchs))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   135              {   /* Parameter description found */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   136                  isParam    = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   137                  isSyntax   = TRUE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   138                  spaceParam = "    SYNTAX: ";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   139              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   140              else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   141              {     /* Other text */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   142                  if (isParam)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   143                  { /* Show param details*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   144                      spaceParam = "        ";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   145                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   146                  else if (isSyntax)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   147                  {   /* Show param details*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   148                      spaceParam = "            ";
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   149                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   150              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   151  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   152              /* Split print by ENDL */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   153              chunk = strstr(help, ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   154  
	movh.a	a15,#@his(.9.str)
	lea	a15,[a15]@los(.9.str)
	st.a	[a10]24,a15
.L659:
	j	.L7
.L8:
	ld.a	a15,[a15]4
.L788:
	st.a	[a10]8,a15
.L1366:
	st.a	[a10],a13
.L1367:
	mov	d11,#0
	mov.aa	a4,a12
.L789:
	ld.a	a15,[a10]36
.L791:
	mov	d12,d11
.L793:
	ld.a	a15,[a15]
.L792:
	st.a	[a10]4,a15
.L1368:
	ld.a	a5,[a10]28
	call	IfxStdIf_DPipe_print
.L790:
	j	.L9
.L10:
	movh.a	a15,#@his(.3.str)
	lea	a15,[a15]@los(.3.str)
.L1369:
	st.a	[a10]16,a15
.L1370:
	movh.a	a15,#@his(.4.str)
	lea	a15,[a15]@los(.4.str)
.L1371:
	st.a	[a10]20,a15
.L1372:
	lea	a4,[a10]8
.L1373:
	ld.a	a15,[a10]32
.L794:
	lea	a5,[a10]16
	call	Ifx_Shell_matchCommand
.L1374:
	jeq	d2,#0,.L11
.L1375:
	mov	d11,#1
	movh.a	a15,#@his(.5.str)
.L1376:
	mov	d12,#0
	lea	a15,[a15]@los(.5.str)
.L1377:
	j	.L12
.L11:
	lea	a4,[a10]8
.L1378:
	lea	a5,[a10]20
	call	Ifx_Shell_matchCommand
.L1379:
	jeq	d2,#0,.L13
.L1380:
	mov	d11,#0
	movh.a	a15,#@his(.6.str)
.L1381:
	mov	d12,#1
	lea	a15,[a15]@los(.6.str)
.L1382:
	j	.L14
.L13:
	jeq	d11,#0,.L15
.L1383:
	movh.a	a15,#@his(.7.str)
	lea	a15,[a15]@los(.7.str)
.L1384:
	j	.L16
.L15:
	jeq	d12,#0,.L17
.L1385:
	movh.a	a15,#@his(.8.str)
	lea	a15,[a15]@los(.8.str)
.L17:
.L16:
.L14:
.L12:
	ld.a	a4,[a10]8
.L1386:
	ld.a	a5,[a10]24
	call	strstr
.L796:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   155              if (chunk == NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   156              {
	jnz.a	a2,.L18
.L1387:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   157                  chunk = help + strlen(help);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   158              }
	ld.a	a14,[a10]8
.L1388:
	mov.aa	a4,a14
	call	strlen
.L797:
	addsc.a	a2,a14,d2,#0
.L798:
	j	.L19
.L18:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   159              else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   160              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   161                  if (!briefOnly)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   162                  {
	jne	d8,#0,.L20
.L800:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   163                      chunk += strlen(ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   164                  }
	add.a	a2,#2
.L20:
.L19:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   165              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   166  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   167              count = chunk - help;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   168              IfxStdIf_DPipe_print(io, "%s%s", space, spaceParam);
	ld.a	a4,[a10]8
.L1389:
	sub.a	a2,a2,a4
.L799:
	mov.d	d15,a2
.L1390:
	st.h	[a10]12,d15
.L1391:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   169              IfxStdIf_DPipe_write(io, (void *)help, &count, TIME_INFINITE);
	st.a	[a10],a13
.L1392:
	st.a	[a10]4,a15
.L1393:
	mov.aa	a4,a12
.L801:
	ld.a	a5,[a10]28
	call	IfxStdIf_DPipe_print
.L670:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	ld.a	a15,[a12]8
.L795:
	ld.a	a4,[a12]
.L1394:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   170   /* Print Brief only */
	ld.a	a5,[a10]8
.L1395:
	lea	a6,[a10]12
.L1396:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
	movh.a	a2,#@his(.33.cnt)
	lea	a2,[a2]@los(.33.cnt)
	ld.d	e4,[a2]0
	calli	a15
.L671:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   171                 break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   172              }
	ld.a	a15,[a10]8
.L1397:
	ld.h	d15,[a10]12
.L1398:
	addsc.a	a15,a15,d15,#0
	st.a	[a10]8,a15
.L802:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   173          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   174  
	jne	d8,#0,.L21
.L9:
	ld.a	a15,[a10]8
.L1399:
	ld.bu	d15,[a15]
.L1400:
	jne	d15,#0,.L10

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   175          IfxStdIf_DPipe_print(io, ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   176  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   177          if ((command->call == NULL_PTR) && (index == 0))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   178          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   179              index = 1;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   180              space = "  ";
.L21:
	mov.aa	a4,a12
.L803:
	ld.a	a5,[a10]24
	call	IfxStdIf_DPipe_print
.L804:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   181          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   182  
	ld.a	a15,[a10]36
.L805:
	ld.w	d15,[a15]12
.L1401:
	jne	d15,#0,.L22
.L1402:
	jne	d10,#0,.L23
.L1403:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   183          command = &command[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   184  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   185          if (singleCommand)
	mov	d10,#1
	movh.a	a13,#@his(.10.str)
	lea	a13,[a13]@los(.10.str)
.L23:
.L22:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   186          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   187              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   188          }
	lea	a15,[a15]16
	st.a	[a10]36,a15
.L806:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   189      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   190  
	jne	d9,#0,.L24
.L7:
	ld.a	a15,[a10]36
.L807:
	ld.w	d15,[a15]
.L1404:
	jne	d15,#0,.L8

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   191      return TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   192  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   193  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   194  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   195  boolean Ifx_Shell_showHelpSingleCommand(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   196  {
.L24:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   197      Ifx_Shell_CommandListConst commandList;
	mov	d2,#1
	ret
.L647:
	
__Ifx_Shell_showHelpSingle_function_end:
	.size	Ifx_Shell_showHelpSingle,__Ifx_Shell_showHelpSingle_function_end-Ifx_Shell_showHelpSingle
.L430:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelpSingleCommand',code,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelpSingleCommand'
	.align	2
	
	.global	Ifx_Shell_showHelpSingleCommand

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   198      const Ifx_Shell_Command   *shellCommand = Ifx_Shell_commandListFind(shellPtr, args, &args, &commandList);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   199  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   200      if (shellCommand != NULL_PTR)
; Function Ifx_Shell_showHelpSingleCommand
.L278:
Ifx_Shell_showHelpSingleCommand:	.type	func
	sub.a	a10,#16
.L808:
	st.a	[a10]4,a4
	mov.aa	a12,a6
.L812:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   201      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   202          if (shellCommand->call == NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   203          {
	mov.aa	a15,a4
.L1597:
	lea	a6,[a10]4
.L810:
	lea	a7,[a10]8
	mov.aa	a4,a5
.L809:
	mov.aa	a5,a15
.L811:
	call	Ifx_Shell_commandListFind
.L813:
	mov.aa	a15,a2
.L815:
	ld.a	a4,[a10]8
.L816:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   204              Ifx_Shell_showHelpSingle(commandList, io, FALSE, FALSE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   205          }
	jz.a	a15,.L26
.L1598:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   206          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   207          {
	ld.w	d15,[a15]12
.L1599:
	jne	d15,#0,.L27
.L1600:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   208              if (commandList->call == NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   209              {
	mov	d4,#0
.L1601:
	mov	d5,d4
	j	.L28
.L27:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   210                  IfxStdIf_DPipe_print(io, "%s ", commandList->commandLine);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   211              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   212  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   213              Ifx_Shell_showHelpSingle(shellCommand, io, FALSE, TRUE);
	ld.w	d15,[a4]12
.L1602:
	jne	d15,#0,.L29
.L1603:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   214          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   215  
	ld.a	a2,[a4]
.L814:
	st.a	[a10],a2
.L1604:
	movh.a	a5,#@his(.11.str)
	lea	a5,[a5]@los(.11.str)
	mov.aa	a4,a12
.L817:
	call	IfxStdIf_DPipe_print
.L29:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   216          return TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   217      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   218      else
	mov	d4,#0
.L1605:
	mov	d5,#1
	mov.aa	a4,a15
.L28:
	mov.aa	a5,a12
.L818:
	call	Ifx_Shell_showHelpSingle
.L819:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   219      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   220          IfxStdIf_DPipe_print(io, "unknown command");
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   221          return FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   222      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   223  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   224  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   225  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   226  boolean Ifx_Shell_showHelp(pchar args, void *shellPtr, IfxStdIf_DPipe *io)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   227  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   228      sint32     i;
	mov	d2,#1
	ret
.L26:
	movh.a	a5,#@his(.12.str)
	lea	a5,[a5]@los(.12.str)
	mov.aa	a4,a12
.L820:
	call	IfxStdIf_DPipe_print
.L821:
	mov	d2,#0
	ret
.L774:
	
__Ifx_Shell_showHelpSingleCommand_function_end:
	.size	Ifx_Shell_showHelpSingleCommand,__Ifx_Shell_showHelpSingleCommand_function_end-Ifx_Shell_showHelpSingleCommand
.L485:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_showHelp',code,cluster('Ifx_Shell_showHelp')
	.sect	'.text.Ifx_Shell.Ifx_Shell_showHelp'
	.align	2
	
	.global	Ifx_Shell_showHelp

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   229      Ifx_Shell *shell  = shellPtr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   230      boolean    result = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   231  
; Function Ifx_Shell_showHelp
.L280:
Ifx_Shell_showHelp:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   232      if (*args == IFX_SHELL_NULL_CHAR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   233      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   234          for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   235          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   236              if (shell->commandList[i] != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   237              {
	ld.bu	d15,[a4]
.L1409:
	mov	d8,#1
.L825:
	jne	d15,#0,.L32
.L1410:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   238                  Ifx_Shell_showHelpSingle(shell->commandList[i], io, TRUE, FALSE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   239              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   240          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   241      }
	ld.a	a4,[a5]324
.L822:
	jz.a	a4,.L33
.L1411:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   242      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   243      {
	mov	d4,d8
	mov.aa	a5,a6
.L824:
	mov	d5,#0
	call	Ifx_Shell_showHelpSingle
.L823:
	j	.L34
.L32:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   244          result = Ifx_Shell_showHelpSingleCommand(args, shellPtr, io);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   245      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   246  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   247      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   248  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   249  
	call	Ifx_Shell_showHelpSingleCommand
.L826:
	mov	d8,d2
.L34:
.L33:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   250  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   251  boolean Ifx_Shell_protocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   252  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   253      Ifx_Shell *shell  = data;
	mov	d2,d8
	ret
.L681:
	
__Ifx_Shell_showHelp_function_end:
	.size	Ifx_Shell_showHelp,__Ifx_Shell_showHelp_function_end-Ifx_Shell_showHelp
.L435:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_protocolStart',code,cluster('Ifx_Shell_protocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_protocolStart'
	.align	2
	
	.global	Ifx_Shell_protocolStart

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   254      boolean    Result = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   255  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   256      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; Function Ifx_Shell_protocolStart
.L282:
Ifx_Shell_protocolStart:	.type	func
	sub.a	a10,#8
.L827:
	st.a	[a10],a4
	mov.aa	a15,a5
.L831:
	mov.aa	a12,a6
.L832:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   257      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   258          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   259          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   260      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   261      else if (Ifx_Shell_matchToken(&args, "start") != FALSE)
	mov	d15,#1
	mov.aa	a4,a10
.L828:
	movh.a	a5,#@his(.13.str)
.L829:
	lea	a5,[a5]@los(.13.str)
	call	Ifx_Shell_matchToken
.L830:
	jeq	d2,#0,.L36
.L1424:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   262      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   263          if ((shell->protocol.start != NULL_PTR) && (shell->protocol.object != NULL_PTR))
	movh.a	a5,#@his(.14.str)
	lea	a5,[a5]@los(.14.str)
	mov.aa	a4,a12
.L834:
	call	IfxStdIf_DPipe_print
.L835:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   264          {
	movh.a	a5,#@his(.15.str)
	lea	a5,[a5]@los(.15.str)
	mov.aa	a4,a12
.L836:
	call	IfxStdIf_DPipe_print
.L837:
	j	.L37
.L36:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   265              Result                  = shell->protocol.start(shell->protocol.object, io);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   266              shell->protocol.started = (Result != FALSE);
	mov.aa	a4,a10
.L1425:
	movh.a	a5,#@his(.16.str)
	lea	a5,[a5]@los(.16.str)
	call	Ifx_Shell_matchToken
.L1426:
	jeq	d2,#0,.L38
.L1427:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   267  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   268              if (shell->protocol.onStart != NULL_PTR)
	ld.a	a2,[a15]328
.L1428:
	jz.a	a2,.L39
.L1429:
	ld.a	a4,[a15]344
.L1430:
	jz.a	a4,.L40
.L1431:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   269              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   270                  shell->protocol.onStart(shell->protocol.object, shell->protocol.onStartData);
	mov.aa	a5,a12
.L838:
	calli	a2
.L833:
	mov	d15,d2
.L840:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   271              }
	ne	d0,d15,#0
	st.b	[a15]348,d0
.L1432:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   272          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   273          else
	ld.a	a2,[a15]336
.L1433:
	jz.a	a2,.L41
.L1434:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   274          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   275              Result = FALSE;
	ld.a	a4,[a15]344
.L1435:
	ld.a	a5,[a15]340
	calli	a2
.L839:
	j	.L42
.L40:
.L39:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   276          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   277      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   278      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   279      {}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   280  
	mov	d15,#0
.L42:
.L41:
.L38:
.L37:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   281      return Result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   282  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   283  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   284  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   285  boolean Ifx_Shell_bbProtocolStart(pchar args, void *data, IfxStdIf_DPipe *io)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   286  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   287      boolean result = TRUE;
	mov	d2,d15
	ret
.L693:
	
__Ifx_Shell_protocolStart_function_end:
	.size	Ifx_Shell_protocolStart,__Ifx_Shell_protocolStart_function_end-Ifx_Shell_protocolStart
.L445:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart',code,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.text.Ifx_Shell.Ifx_Shell_bbProtocolStart'
	.align	2
	
	.global	Ifx_Shell_bbProtocolStart

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   288  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   289      if (Ifx_Shell_matchToken(&args, "?") != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   290      {
; Function Ifx_Shell_bbProtocolStart
.L284:
Ifx_Shell_bbProtocolStart:	.type	func
	sub.a	a10,#8
.L841:
	st.a	[a10],a4
	mov.aa	a15,a5
.L845:
	mov.aa	a12,a6
.L846:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   291          IfxStdIf_DPipe_print(io, "Syntax     : protocol start" ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   292          IfxStdIf_DPipe_print(io, "           > start a protocol" ENDL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   293      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   294      else if (Ifx_Shell_matchToken(&args, "protocol") != FALSE)
	mov	d15,#1
	mov.aa	a4,a10
.L842:
	movh.a	a5,#@his(.13.str)
.L843:
	lea	a5,[a5]@los(.13.str)
	call	Ifx_Shell_matchToken
.L844:
	jeq	d2,#0,.L44
.L1440:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   295      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   296          result = Ifx_Shell_protocolStart(args, data, io);
	movh.a	a5,#@his(.14.str)
	lea	a5,[a5]@los(.14.str)
	mov.aa	a4,a12
.L848:
	call	IfxStdIf_DPipe_print
.L849:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   297      }
	movh.a	a5,#@his(.15.str)
	lea	a5,[a5]@los(.15.str)
	mov.aa	a4,a12
.L850:
	call	IfxStdIf_DPipe_print
.L851:
	j	.L45
.L44:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   298      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   299      {}
	mov.aa	a4,a10
.L1441:
	movh.a	a5,#@his(.17.str)
	lea	a5,[a5]@los(.17.str)
	call	Ifx_Shell_matchToken
.L1442:
	jeq	d2,#0,.L46
.L1443:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   300  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   301      return result;
	ld.a	a4,[a10]
.L1444:
	mov.aa	a5,a15
.L852:
	mov.aa	a6,a12
.L853:
	call	Ifx_Shell_protocolStart
.L847:
	mov	d15,d2
.L46:
.L45:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   302  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   303  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   304  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   305  //---------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   306  void Ifx_Shell_initConfig(Ifx_Shell_Config *config)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   307  {
	mov	d2,d15
	ret
.L699:
	
__Ifx_Shell_bbProtocolStart_function_end:
	.size	Ifx_Shell_bbProtocolStart,__Ifx_Shell_bbProtocolStart_function_end-Ifx_Shell_bbProtocolStart
.L450:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_initConfig',code,cluster('Ifx_Shell_initConfig')
	.sect	'.text.Ifx_Shell.Ifx_Shell_initConfig'
	.align	2
	
	.global	Ifx_Shell_initConfig

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   308      uint32 i;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   309  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   310      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   311      {
; Function Ifx_Shell_initConfig
.L286:
Ifx_Shell_initConfig:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   312          config->commandList[i] = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   313      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   314  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   315      config->standardIo           = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   316      config->echo                 = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   317      config->protocol.execute     = NULL_PTR;
	mov.a	a15,#0
.L1042:
	st.a	[a4]8,a15
.L1043:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   318      config->protocol.object      = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   319      config->protocol.onStart     = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   320      config->protocol.onStartData = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   321      config->protocol.start       = NULL_PTR;
	mov	d15,#1
	st.b	[a4]4,d15
.L1044:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   322      config->protocol.started     = FALSE;
	st.a	[a4]16,a15
.L1045:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   323      config->sendResultCode       = FALSE;
	st.a	[a4]28,a15
.L1046:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   324      config->showPrompt           = TRUE;
	st.a	[a4]20,a15
.L1047:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   325      config->standardIo           = NULL_PTR;
	st.a	[a4]24,a15
.L1048:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   326  }
	st.a	[a4]12,a15
.L1049:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   327  
	mov	d0,#0
	st.b	[a4]32,d0
.L1050:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   328  
	st.b	[a4]6,d0
.L1051:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   329  boolean Ifx_Shell_init(Ifx_Shell *shell, const Ifx_Shell_Config *config)
	st.b	[a4]5,d15
.L1052:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   330  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   331      sint32 i;
	st.a	[a4],a15
	ret
.L508:
	
__Ifx_Shell_initConfig_function_end:
	.size	Ifx_Shell_initConfig,__Ifx_Shell_initConfig_function_end-Ifx_Shell_initConfig
.L345:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_init',code,cluster('Ifx_Shell_init')
	.sect	'.text.Ifx_Shell.Ifx_Shell_init'
	.align	2
	
	.global	Ifx_Shell_init

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   332      char **CmdHistory = NULL_PTR;   /* Pointer to array of pointers for command history items */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   333  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   334      /* Ensure state variable is cleared */
; Function Ifx_Shell_init
.L288:
Ifx_Shell_init:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   335      memset(shell, 0, sizeof(*shell));
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   336  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   337      shell->protocol               = config->protocol;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   338      shell->protocol.started       = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   339  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   340      shell->io                     = config->standardIo;
	mov	d4,#0
	mov.aa	a15,a4
.L855:
	mov	d5,#352
	mov.aa	a12,a5
.L856:
	call	memset
.L854:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   341      shell->control.showPrompt     = config->showPrompt;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   342      shell->control.sendResultCode = config->sendResultCode;
	lea	a2,[a12]12
.L1057:
	lea	a4,[a15]328
	mov.a	a5,#5
.L48:
	ld.w	d15,[a2+]
	st.w	[a4+],d15
	loop	a5,.L48
.L1058:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   343      shell->control.echo           = config->echo;
	mov	d4,#0
	st.b	[a15]348,d4
.L1059:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   344      shell->control.echoError      = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   345      shell->control.enabled        = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   346  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   347      shell->locals.escBracketNum   = IFX_SHELL_NULL_CHAR; /* Used to cache number in sequence "ESC [ 1/2/3/4 ~" */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   348      shell->locals.cmdState        = IFX_SHELL_CMD_STATE_NORMAL;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   349  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   350      /* Copy command line buffer pointer into state variable */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   351      shell->cmd.cmdStr = shell->locals.cmdStr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   352  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   353      /* Initialize command history space and cache pointer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   354      memset(Ifx_Shell_cmdBuffer, 0, sizeof(Ifx_Shell_cmdBuffer));
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   355      shell->cmdHistory[0] = &Ifx_Shell_cmdBuffer[0];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   356  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   357      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   358      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   359          shell->commandList[i] = config->commandList[i];
	movh.a	a13,#@his(Ifx_Shell_cmdBuffer)
.L1060:
	ld.a	a2,[a12]
.L1061:
	st.a	[a15],a2
.L1062:
	mov	d5,#1280
	lea	a2,[a15]191
.L1063:
	ld.bu	d15,[a15]4
.L1064:
	ld.bu	d0,[a12]5
.L1065:
	lea	a13,[a13]@los(Ifx_Shell_cmdBuffer)
.L1066:
	insert	d15,d15,d0,#0,#1
	st.b	[a15]4,d15
.L1067:
	mov.aa	a4,a13
.L1068:
	ld.bu	d0,[a12]6
.L1069:
	insert	d15,d15,d0,#2,#1
	st.b	[a15]4,d15
.L1070:
	ld.bu	d0,[a12]4
.L1071:
	insert	d15,d15,d0,#3,#1
.L1072:
	or	d15,#16
.L1073:
	or	d15,#2
	st.b	[a15]4,d15
.L1074:
	st.b	[a15]320,d4
.L1075:
	st.b	[a15]319,d4
.L1076:
	st.a	[a15]48,a2
.L1077:
	call	memset
.L1078:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   360      }
	st.a	[a15]8,a13
.L1079:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   361  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   362      /* Initialize command history pointers */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   363      CmdHistory = shell->cmdHistory;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   364  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   365      for (i = 1; i < IFX_CFG_SHELL_CMD_HISTORY_SIZE; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   366      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   367          CmdHistory[i] = &CmdHistory[i - 1][IFX_CFG_SHELL_CMD_LINE_SIZE];    /* Items are just offsets into a large allocated area */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   368      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   369  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   370      shell->cmd.historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
	mov.a	a5,#8
.L1080:
	ld.a	a2,[a12]8
.L1081:
	st.a	[a15]324,a2
.L1082:
	lea	a2,[a15]8
.L857:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   371  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   372      /* Pre-load useful commands into history buffer */
	lea	a4,[a2]4
.L49:
	ld.a	a6,[a4]-4
.L1083:
	lea	a6,[a6]128
.L1084:
	st.a	[a4+],a6
	loop	a5,.L49
.L1085:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   373      strcpy(CmdHistory[0], "help");
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   374      //strcpy(CmdHistory[1], "protocol start");
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   375  
	mov	d15,#-1
	st.h	[a15]58,d15
.L1086:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   376      if (shell->control.showPrompt != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   377      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   378          IfxStdIf_DPipe_print(shell->io, ENDL);
	movh.a	a5,#@his(.18.str)
	lea	a5,[a5]@los(.18.str)
.L1087:
	ld.a	a4,[a2]
.L1088:
	call	strcpy
.L858:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   379          IfxStdIf_DPipe_print(shell->io, IFX_CFG_SHELL_PROMPT);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   380      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   381  
	ld.bu	d15,[a15]4
.L1089:
	jz.t	d15:0,.L50
.L1090:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   382      return TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   383  }
	ld.a	a4,[a15]
.L1091:
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	call	IfxStdIf_DPipe_print
.L1092:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   384  
	ld.a	a4,[a15]
.L1093:
	movh.a	a5,#@his(.19.str)
	lea	a5,[a5]@los(.19.str)
	call	IfxStdIf_DPipe_print
.L50:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   385  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   386  void Ifx_Shell_process(Ifx_Shell *shell)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   387  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   388      Ifx_SizeT          i, j;           /* Loop variables */
	mov	d2,#1
	ret
.L512:
	
__Ifx_Shell_init_function_end:
	.size	Ifx_Shell_init,__Ifx_Shell_init_function_end-Ifx_Shell_init
.L350:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_process',code,cluster('Ifx_Shell_process')
	.sect	'.text.Ifx_Shell.Ifx_Shell_process'
	.align	2
	
	.global	Ifx_Shell_process

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   389      Ifx_SizeT          count;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   390      Ifx_SizeT          readCount;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   391      boolean            NormalKeyPress; /* Indicates if this is a normal keypress, i.e. not part of an escape code */
; Function Ifx_Shell_process
.L290:
Ifx_Shell_process:	.type	func
	mov.aa	a12,a4
.L881:
	sub.a	a10,#16
.L859:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   392  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   393      Ifx_Shell_CmdLine *Cmd         = &shell->cmd;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   394      char              *inputbuffer = shell->locals.inputbuffer;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   395      char              *cmdStr      = shell->locals.cmdStr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   396      char             **CmdHistory  = shell->cmdHistory;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   397  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   398      if (shell->control.enabled == 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   399      {
	lea	a15,[a12]62
.L861:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   400          return;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   401      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   402  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   403      if ((shell->protocol.object != NULL_PTR) && (shell->protocol.started != FALSE))
	ld.bu	d15,[a12]4
.L1115:
	st.a	[a10]8,a15
.L880:
	lea	a15,[a12]8
.L862:
	st.a	[a10]12,a15
.L875:
	lea	a13,[a12]191
.L877:
	jz.t	d15:1,.L52
.L1116:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   404      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   405          shell->protocol.execute(shell->protocol.object);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   406      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   407      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   408      {
	ld.a	a4,[a12]344
.L860:
	jz.a	a4,.L53
.L1117:
	ld.bu	d15,[a12]348
.L1118:
	jeq	d15,#0,.L54
.L1119:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   409          /**** NORMAL MODE ****/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   410  
	ld.a	a15,[a12]332
.L863:
	ji	a15
.L54:
.L53:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   411          /********************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   412          /* Read all characters until enter inclusive.                                   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   413          /* If the command is bigger than IFX_SHELL_CMD_SIZE, the command is ignored.    */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   414          /*                                                                              */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   415          /* Escape sequences are handled by a state machine.                             */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   416          /* The following escape sequences (prefix "ESC [") are supported:               */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   417          /*                                                                              */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   418          /* A  - up      B - down       C - right     D - left                           */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   419          /* 1~ - HOME   2~ - INSERT    3~ - DELETE   5~ - END                            */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   420          /*                                                                              */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   421          /* Backspace ('\b') is also supported.                                          */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   422          /********************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   423  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   424          count     = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   425          readCount = IFX_CFG_SHELL_CMD_LINE_SIZE - count;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   426          IfxStdIf_DPipe_read(shell->io, &inputbuffer[count], &readCount, TIME_NULL);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   427          count    += readCount;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   428  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   429          for (i = 0; i < count; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   430          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   431              /* By default, we assume character is part of escape sequence */
	mov	d15,#128
	ld.a	a15,[a12]
.L864:
	st.h	[a10]4,d15
.L549:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   268  /** \copydoc IfxStdIf_DPipe_Read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   269   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   270  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   271  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);
	mov	e4,#0
	lea	a6,[a10]4
.L1120:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   268  /** \copydoc IfxStdIf_DPipe_Read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   269   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   270  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   271  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);
	ld.a	a5,[a10]8
.L865:
	ld.a	a2,[a15]12
.L1121:
	ld.a	a4,[a15]
.L1122:
	calli	a2
.L550:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   432  utbuffer[i])
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   433              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   434              /* New line (ENTER) */
	mov	d10,#0
	ld.h	d8,[a10]4
.L878:
	mov	d9,d10
	j	.L56
.L57:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   435              case '\n':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   436              case '\r':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   437                  /* Print new line to terminal if requested */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   438                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, ENDL))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   439  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   440                  /* Execute command if length is valid - i.e. not an over-full buffer
	ld.a	a15,[a10]8
.L866:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   441                   * (prevents attempted execution of junk) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   442                  if (Cmd->length < IFX_CFG_SHELL_CMD_LINE_SIZE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   443                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   444                      cmdStr[Cmd->length] = IFX_SHELL_NULL_CHAR;  /* Terminate cmdStr */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   445  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   446                      if (Cmd->historyAdd != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   447                      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   448                          /* Shuffle history up */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   449                          for (j = IFX_CFG_SHELL_CMD_HISTORY_SIZE - 1; j > 0; j--)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   450                          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   451                              /* Copy text */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   452                              strncpy(CmdHistory[j], CmdHistory[j - 1], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   453                          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   454  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   455                          /* Copy in new entry */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   456                          strncpy(CmdHistory[0], cmdStr, IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   457                      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   458  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   459                      /* Execute command */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   460                      Ifx_Shell_execute(shell, cmdStr);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   461                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   462  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   463                  /* Show prompt if in main shell */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   464                  if (shell->control.showPrompt != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   465                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   466                      IfxStdIf_DPipe_print(shell->io, IFX_CFG_SHELL_PROMPT);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   467                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   468  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   469                  /* Reset command line buffer length */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   470                  Cmd->length = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   471  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   472                  /* Reset command line buffer cursor position */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   473                  Cmd->cursor = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   474  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   475                  /* Clear flag */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   476                  Cmd->historyAdd = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   477  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   478                  /* Ensure we're not in command history list */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   479                  Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   480                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   481  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   482              /* Backspace (may occur in middle of text if cursor location is not at end) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   483              case '\b':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   484  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   485                  if (Cmd->cursor > 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   486                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   487                      /* Update on screen */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   488                      if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   489                      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   490                          /* Move left one character */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   491                          IfxStdIf_DPipe_print(shell->io, "\b");
	mov	d15,#8
.L1123:
	mov	d11,#0
.L876:
	ld.b	d4,[a15]0
.L1124:
	jeq	d15,d4,.L58
.L1125:
	mov	d15,#10
	jeq	d15,d4,.L59
.L1126:
	mov	d15,#13
	jeq	d15,d4,.L60
.L1127:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   492  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   493                          /* Update line with new characters */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   494                          for (j = Cmd->cursor; j < Cmd->length; j++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   495                          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   496                              IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[j]);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   497                          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   498  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   499                          /* Write over duplicated character at end */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   500                          IfxStdIf_DPipe_print(shell->io, " ");
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   501                          IFX_SHELL_WRITE_BACKSPACES((Cmd->length - Cmd->cursor) + 1)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   502                      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   503  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   504                      /* Update in command line variable. Shuffle text left */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   505                      strncpy(&cmdStr[Cmd->cursor - 1], &cmdStr[Cmd->cursor], Cmd->length - Cmd->cursor);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   506  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   507                      /* Terminate string at end of shorter string */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   508                      cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   509  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   510                      Cmd->length--;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   511                      Cmd->cursor--;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   512  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   513                      /* Command line has been modified */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   514                      Cmd->historyAdd = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   515                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   516  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   517                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   518  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   519              /* Escape character */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   520              case '\x1B':       /*'\x1B': */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   521                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   522                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   523  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   524              /* '[' - check to see if this is second part of an escape sequence */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   525              case '[':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   526  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   527                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   528                  {
	mov	d15,#27
	jeq	d15,d4,.L61
.L1128:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   529                      /* ESC [ pressed */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   530                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   531                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   532                  else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   533                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   534                      NormalKeyPress = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   535                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   536  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   537                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   538  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   539              /* Check for supported characters in escape sequences ( ESC [ A/B/C/D ) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   540              case 'A':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   541              case 'B':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   542              case 'C':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   543              case 'D':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   544  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   545                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   546                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   547                      /* Process arrow keys */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   548                      Ifx_Shell_cmdEscapeProcess(shell, inputbuffer[i], 0);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   549  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   550                      /* End of escape sequence */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   551                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   552                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   553                  else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   554                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   555                      NormalKeyPress = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   556                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   557  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   558                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   559  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   560              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   561              case '1':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   562              case '2':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   563              case '3':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   564              case '4':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   565  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   566                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   567                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   568                      /* Store number for use once complete escape sequence is confirmed (below) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   569                      shell->locals.escBracketNum = inputbuffer[i];
	mov	d15,#49
	jeq	d15,d4,.L62
.L1129:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   570                      shell->locals.cmdState      = IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER;
	mov	d15,#50
	jeq	d15,d4,.L63
.L1130:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   571                  }
	mov	d15,#51
	jeq	d15,d4,.L64
.L1131:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   572                  else
	mov	d15,#52
	jeq	d15,d4,.L65
.L1132:
	mov	d15,#65
	jeq	d15,d4,.L66
.L1133:
	mov	d15,#66
	jeq	d15,d4,.L67
.L1134:
	mov	d15,#67
	jeq	d15,d4,.L68
.L1135:
	mov	d15,#68
	jeq	d15,d4,.L69
.L1136:
	mov	d15,#91
	jeq	d15,d4,.L70
.L1137:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   573                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   574                      NormalKeyPress = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   575                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   576  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   577                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   578  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   579              /* Check for supported characters in escape sequences (ESC [ 2/4/5 ~) */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   580              case '~':
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   581  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   582                  if (shell->locals.cmdState == IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   583                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   584                      /* Process home/delete/end */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   585                      Ifx_Shell_cmdEscapeProcess(shell, shell->locals.escBracketNum, '~');
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   586  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   587                      /* End of escape sequence */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   588                      shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
	mov	d15,#126
	jeq	d15,d4,.L71
	j	.L72
.L60:
.L59:
	ld.bu	d15,[a12]4
	jz.t	d15:3,.L73
	ld.a	a4,[a12]
	movh.a	a5,#@his(.9.str)
	lea	a5,[a5]@los(.9.str)
	call	IfxStdIf_DPipe_print
.L73:
	ld.h	d0,[a12]54
.L1138:
	mov	d15,#128
.L1139:
	jge	d0,d15,.L74
.L1140:
	addsc.a	a15,a13,d0,#0
.L867:
	mov	d15,#0
.L1141:
	st.b	[a15],d15
.L1142:
	ld.bu	d15,[a12]56
.L1143:
	jeq	d15,#0,.L75
.L1144:
	lea	a15,[a12]44
.L1145:
	mov.a	a14,#8
.L76:
	ld.a	a4,[a15]
.L1146:
	ld.a	a5,[+a15]-4
.L1147:
	mov	d4,#128
	call	strncpy
.L1148:
	loop	a14,.L76
.L1149:
	ld.a	a15,[a10]12
.L868:
	mov	d4,#128
	mov.aa	a5,a13
.L869:
	ld.a	a4,[a15]
.L1150:
	call	strncpy
.L75:
	mov.aa	a4,a12
.L870:
	mov.aa	a5,a13
.L871:
	call	Ifx_Shell_execute
.L74:
	ld.bu	d15,[a12]4
.L1151:
	jz.t	d15:0,.L77
.L1152:
	ld.a	a4,[a12]
.L1153:
	movh.a	a5,#@his(.19.str)
	lea	a5,[a5]@los(.19.str)
	call	IfxStdIf_DPipe_print
.L77:
	st.h	[a12]54,d10
.L1154:
	st.h	[a12]52,d10
.L1155:
	st.b	[a12]56,d10
.L1156:
	mov	d15,#-1
	st.h	[a12]58,d15
.L1157:
	j	.L78
.L58:
	ld.h	d15,[a12]52
.L1158:
	jlt	d15,#1,.L79
.L1159:
	ld.bu	d15,[a12]4
.L1160:
	jz.t	d15:3,.L80
.L1161:
	movh.a	a15,#@his(.20.str)
.L872:
	lea	a15,[a15]@los(.20.str)
.L1162:
	ld.a	a4,[a12]
.L1163:
	mov.aa	a5,a15
	call	IfxStdIf_DPipe_print
.L1164:
	ld.h	d15,[a12]52
.L873:
	addsc.a	a14,a13,d15,#0
.L1165:
	j	.L81
.L82:
	ld.b	d0,[a14+]1
	st.w	[a10],d0
.L1166:
	ld.a	a4,[a12]
.L1167:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
	call	IfxStdIf_DPipe_print
.L1168:
	add	d15,#1
.L874:
	extr	d15,d15,#0,#16
.L81:
	ld.h	d0,[a12]54
.L1169:
	jlt	d15,d0,.L82
.L1170:
	fcall	.cocofun_35
.L560:
	mov	d12,#0
	j	.L83
.L84:
	add	d12,#1
	mov.aa	a5,a15
.L83:
	ld.a	a4,[a12]
	call	IfxStdIf_DPipe_print
	ld.h	d15,[a12]54
	ld.h	d0,[a12]52
	sub	d15,d0
	add	d15,#1
	jlt	d12,d15,.L84
.L80:
	ld.h	d15,[a12]52
.L1171:
	ld.h	d4,[a12]54
.L1172:
	addsc.a	a15,a12,d15,#0
.L1173:
	addsc.a	a5,a13,d15,#0
.L1174:
	sub	d4,d15
	lea	a4,[a15]190
.L1175:
	call	strncpy
.L1176:
	ld.h	d15,[a12]54
.L1177:
	addsc.a	a15,a12,d15,#0
.L1178:
	mov	d15,#0
.L1179:
	st.b	[a15]190,d15
.L1180:
	ld.h	d15,[a12]54
.L1181:
	add	d15,#-1
	st.h	[a12]54,d15
.L1182:
	ld.h	d15,[a12]52
.L1183:
	add	d15,#-1
	st.h	[a12]52,d15
.L1184:
	mov	d15,#1
	st.b	[a12]56,d15
.L1185:
	j	.L85
.L61:
	mov	d15,#1
	j	.L86
.L70:
	ld.bu	d15,[a12]319
.L1186:
	jne	d15,#1,.L87
.L1187:
	mov	d15,#2
	j	.L88
.L69:
.L68:
.L67:
.L66:
	ld.bu	d15,[a12]319
.L1188:
	jne	d15,#2,.L89
.L1189:
	mov	d5,#0
	j	.L90
.L65:
.L64:
.L63:
.L62:
	ld.bu	d15,[a12]319
.L1190:
	jne	d15,#2,.L91
.L1191:
	st.b	[a12]320,d4
.L1192:
	mov	d15,#3
	j	.L92
.L71:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   589                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   590                  else
	ld.bu	d15,[a12]319
.L1193:
	jne	d15,#3,.L93
.L1194:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   591                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   592                      NormalKeyPress = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   593                  }
	mov	d5,#126
	ld.b	d4,[a12]320
.L90:
	mov.aa	a4,a12
.L882:
	call	Ifx_Shell_cmdEscapeProcess
.L883:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   594  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   595                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   596  
	mov	d15,#0
.L92:
.L88:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   597              /* Normal character - add to command string */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   598              default:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   599                  NormalKeyPress = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   600                  break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   601              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   602  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   603              IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length >= Cmd->cursor);    /* Sanity check */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   604  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   605              /* If this was a normal key press (not part of an escape sequence),
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   606               * add it to the command string */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   607              if (NormalKeyPress != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   608              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   609                  /* Ensure state machine is reset */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   610                  shell->locals.cmdState = IFX_SHELL_CMD_STATE_NORMAL;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   611  
.L86:
	st.b	[a12]319,d15
.L1195:
	j	.L94
.L93:
.L91:
.L89:
.L87:
.L72:
	mov	d11,#1
.L94:
.L85:
.L79:
.L78:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   612                  /* If not filled buffer, add in this character */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   613                  if (Cmd->length < (IFX_CFG_SHELL_CMD_LINE_SIZE - 1))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   614                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   615                      /* Command line has been modified */
	jeq	d11,#0,.L95
.L1196:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   616                      Cmd->historyAdd = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   617  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   618                      /* Copy into command line */
	mov	d15,#0
	st.b	[a12]319,d15
.L1197:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   619                      cmdStr[Cmd->cursor] = inputbuffer[i];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   620                      Cmd->cursor++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   621  
	ld.h	d0,[a12]54
.L1198:
	mov	d15,#127
.L1199:
	jge	d0,d15,.L96
.L1200:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   622                      /* Update length of buffer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   623                      Cmd->length = __max(Cmd->length, Cmd->cursor);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   624  
	mov	d15,#1
	st.b	[a12]56,d15
.L1201:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   625                      if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   626                      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   627                          /* echo character to shell output if requested */
	ld.a	a15,[a10]8
.L884:
	ld.h	d15,[a12]52
.L1202:
	addsc.a	a2,a13,d15,#0
.L1203:
	ld.bu	d15,[a15]
.L1204:
	st.b	[a2],d15
.L1205:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   628                          shell->locals.echo[0] = inputbuffer[i];
	ld.h	d15,[a12]52
.L1206:
	add	d15,#1
	st.h	[a12]52,d15
.L1207:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   629                          IfxStdIf_DPipe_print(shell->io, shell->locals.echo);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   630                      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   631                  }
	ld.h	d15,[a12]54
.L1208:
	ld.h	d0,[a12]52
.L1209:
	max	d15,d15,d0
	st.h	[a12]54,d15
.L1210:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   632                  else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   633                  {
	ld.bu	d15,[a12]4
.L1211:
	jz.t	d15:3,.L97
.L1212:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   634                      /* Line too long - ignore further characters */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   635                      Cmd->historyAdd = FALSE;    /* Invalid command line */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   636                  }
	ld.bu	d15,[a15]
.L1213:
	st.b	[a12]60,d15
.L1214:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   637              }
	lea	a5,[a12]60
.L1215:
	ld.a	a4,[a12]
.L1216:
	call	IfxStdIf_DPipe_print
.L1217:
	j	.L98
.L96:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   638          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   639      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   640  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   641  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   642  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   643  void Ifx_Shell_deinit(Ifx_Shell *shell)
	st.b	[a12]56,d10
.L98:
.L97:
.L95:
	ld.a	a15,[a10]8
.L885:
	add	d9,#1
.L879:
	extr	d9,d9,#0,#16
.L886:
	add.a	a15,#1
	st.a	[a10]8,a15
.L56:
	jlt	d9,d8,.L57

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   644  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   645      (void)shell;                /* ignore compiler warning; */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   646      // tbd free necessary memory
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   647  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   648  
.L52:
	ret
.L533:
	
__Ifx_Shell_process_function_end:
	.size	Ifx_Shell_process,__Ifx_Shell_process_function_end-Ifx_Shell_process
.L370:
	; End of function
	
	.sdecl	'.text.Ifx_Shell..cocofun_35',code,cluster('.cocofun_35')
	.sect	'.text.Ifx_Shell..cocofun_35'
	.align	2
; Function .cocofun_35
.L292:
.cocofun_35:	.type	func
; Function body .cocofun_35, coco_iter:0
	movh.a	a5,#@his(.22.str)
	lea	a5,[a5]@los(.22.str)
.L1615:
	fret
.L495:
	; End of function
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_deinit',code,cluster('Ifx_Shell_deinit')
	.sect	'.text.Ifx_Shell.Ifx_Shell_deinit'
	.align	2
	
	.global	Ifx_Shell_deinit

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   649  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   650  pchar Ifx_Shell_skipWhitespace(pchar args)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   651  {
; Function Ifx_Shell_deinit
.L294:
Ifx_Shell_deinit:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   652      if (args != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   653      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   654          while ((*args != IFX_SHELL_NULL_CHAR) && (ISSPACE(*args)))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   655          {
	ret
.L521:
	
__Ifx_Shell_deinit_function_end:
	.size	Ifx_Shell_deinit,__Ifx_Shell_deinit_function_end-Ifx_Shell_deinit
.L355:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace',code,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.text.Ifx_Shell.Ifx_Shell_skipWhitespace'
	.align	2
	
	.global	Ifx_Shell_skipWhitespace

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   656              args = &args[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   657          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   658      }
; Function Ifx_Shell_skipWhitespace
.L296:
Ifx_Shell_skipWhitespace:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   659  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   660      return args;
	jz.a	a4,.L99
.L1222:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   661  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   662  
	j	.L100
.L101:
.L102:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   663  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   664  boolean Ifx_Shell_matchToken(pchar *argsPtr, pchar token)
	add.a	a4,#1
.L100:
	ld.b	d0,[a4]0
.L1223:
	jeq	d0,#0,.L103
.L1224:
	mov	d15,#32
	jeq	d15,d0,.L102
	mov	d15,#9
	jeq	d15,d0,.L101
.L103:
.L99:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   665  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   666      pchar   savedArguments = *argsPtr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   667      char    buffer[256];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   668      boolean result         = FALSE;
	mov.aa	a2,a4
.L887:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   669  
	ret
.L564:
	
__Ifx_Shell_skipWhitespace_function_end:
	.size	Ifx_Shell_skipWhitespace,__Ifx_Shell_skipWhitespace_function_end-Ifx_Shell_skipWhitespace
.L375:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchToken',code,cluster('Ifx_Shell_matchToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchToken'
	.align	2
	
	.global	Ifx_Shell_matchToken

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   670      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   671      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   672          if (strcmp(token, buffer) == 0)
; Function Ifx_Shell_matchToken
.L298:
Ifx_Shell_matchToken:	.type	func
	lea	a10,[a10]-256
.L888:
	mov.aa	a15,a4
.L891:
	mov.aa	a12,a5
.L892:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   673          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   674              result = TRUE;
	ld.a	a13,[a15]
.L893:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   675          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   676      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   677  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   678      if (result == FALSE)
	mov	d15,#0
	mov.aa	a5,a10
.L890:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L889:
	jeq	d2,#0,.L105
.L1229:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   679      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   680          // No match: don't advance pointer
	mov.aa	a5,a10
	mov.aa	a4,a12
.L894:
	call	strcmp
.L895:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   681          *argsPtr = savedArguments;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   682      }
	sel	d15,d2,d15,#1
.L105:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   683  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   684      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   685  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   686  
	jne	d15,#0,.L107
.L1230:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   687  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   688  static boolean Ifx_Shell_matchCommand(pchar *argsPtr, pchar *match)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   689  {
	st.a	[a15],a13
.L107:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   690      boolean result         = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   691      pchar   savedArguments = *argsPtr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   692      pchar   savedMatch     = *match;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   693      char    buffer0[256];
	mov	d2,d15
	ret
.L566:
	
__Ifx_Shell_matchToken_function_end:
	.size	Ifx_Shell_matchToken,__Ifx_Shell_matchToken_function_end-Ifx_Shell_matchToken
.L380:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_matchCommand',code,cluster('Ifx_Shell_matchCommand')
	.sect	'.text.Ifx_Shell.Ifx_Shell_matchCommand'
	.align	2
	

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   694      char    buffer1[256];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   695  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   696      if ((Ifx_Shell_parseToken(argsPtr, buffer0, Ifx_COUNTOF(buffer0)) != FALSE)
; Function Ifx_Shell_matchCommand
.L300:
Ifx_Shell_matchCommand:	.type	func
	lea	a10,[a10]-512
.L896:
	mov.aa	a15,a4
.L899:
	mov.aa	a12,a5
.L900:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   697          && (Ifx_Shell_parseToken(match, buffer1, Ifx_COUNTOF(buffer1)) != FALSE))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   698      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   699          if (strcmp(buffer1, buffer0) == 0)
	mov	d15,#0
	ld.a	a13,[a15]
.L901:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   700          {
	ld.a	a14,[a12]
.L902:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   701              result = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   702          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   703      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   704  
	mov.aa	a5,a10
.L898:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L897:
	jeq	d2,#0,.L109
.L1571:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   705      if (result == FALSE)
	lea	a5,[a10]256
.L1572:
	mov.aa	a4,a12
.L903:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L904:
	jeq	d2,#0,.L110
.L1573:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   706      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   707          // No match: don't advance pointer
	lea	a4,[a10]256
.L1574:
	mov.aa	a5,a10
	call	strcmp
.L1575:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   708          *argsPtr = savedArguments;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   709          *match   = savedMatch;
	sel	d15,d2,d15,#1
.L110:
.L109:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   710      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   711  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   712      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   713  }
	jne	d15,#0,.L112
.L1576:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   714  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   715  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   716  boolean Ifx_Shell_parseToken(pchar *argsPtr, char *tokenBuffer, int bufferLength)
	st.a	[a15],a13
.L1577:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   717  {
	st.a	[a12],a14
.L112:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   718      int   mindex = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   719      pchar args   = Ifx_Shell_skipWhitespace(*argsPtr);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   720  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   721      tokenBuffer[0] = IFX_SHELL_NULL_CHAR;
	mov	d2,d15
	ret
.L755:
	
__Ifx_Shell_matchCommand_function_end:
	.size	Ifx_Shell_matchCommand,__Ifx_Shell_matchCommand_function_end-Ifx_Shell_matchCommand
.L470:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseToken',code,cluster('Ifx_Shell_parseToken')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseToken'
	.align	2
	
	.global	Ifx_Shell_parseToken

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   722  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   723      if (args == NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   724      {
; Function Ifx_Shell_parseToken
.L302:
Ifx_Shell_parseToken:	.type	func
	mov	d8,d4
	mov.aa	a12,a4
.L907:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   725          return FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   726      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   727  
	mov	d9,#0
	ld.a	a4,[a12]
.L905:
	mov.aa	a15,a5
.L909:
	call	Ifx_Shell_skipWhitespace
.L906:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   728      if (*args == '\"')
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   729      {
	mov	d15,#0
	st.b	[a15],d15
.L1235:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   730          args = &args[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   731  
	jz.a	a2,.L114
.L1236:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   732          while ((*args != IFX_SHELL_NULL_CHAR) && (*args != '\"'))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   733          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   734              if (mindex < bufferLength)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   735              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   736                  tokenBuffer[mindex] = *args;
	ld.b	d15,[a2]0
.L1237:
	mov	d0,#34
.L1238:
	jne	d15,d0,.L115
.L1239:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   737                  mindex++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   738              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   739  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   740              args = &args[1];
	mov.aa	a4,a15
	j	.L116
.L117:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   741          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   742  
	jge	d9,d8,.L118
.L1240:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   743          // error if no closing quote
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   744          if (*args != '\"')
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   745          {
	add	d9,#1
	ld.bu	d15,[a2]
.L1241:
	st.b	[a4+],d15
.L118:
.L116:
	ld.b	d0,[+a2]1
.L1242:
	jeq	d0,#0,.L119
.L1243:
	mov	d15,#34
.L1244:
	jne	d15,d0,.L117
.L119:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   746              return FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   747          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   748  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   749          args = &args[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   750      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   751      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   752      {
	mov	d15,#34
.L1245:
	jne	d15,d0,.L120
.L1246:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   753          // don't allow unquoted empty tokens
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   754          if (*args == IFX_SHELL_NULL_CHAR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   755          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   756              return FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   757          }
	add.a	a2,#1
.L1247:
	j	.L121
.L115:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   758  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   759          while ((*args != IFX_SHELL_NULL_CHAR) && (!ISSPACE(*args)))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   760          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   761              if (mindex < bufferLength)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   762              {
	jne	d15,#0,.L122

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   763                  tokenBuffer[mindex] = *args;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   764                  mindex++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   765              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   766  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   767              args = &args[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   768          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   769      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   770  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   771      // make sure string is zero terminated
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   772      if (bufferLength > 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   773      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   774          tokenBuffer[__min(mindex, bufferLength - 1)] = IFX_SHELL_NULL_CHAR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   775      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   776  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   777      *argsPtr = Ifx_Shell_skipWhitespace(args);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   778  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   779      return TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   780  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   781  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   782  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   783  boolean Ifx_Shell_parseAddress(pchar *argsPtr, void **address)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   784  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   785      char    buffer[32];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   786      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   787  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   788      *address = 0;
.L120:
.L114:
	mov	d2,#0
	ret
.L122:
	mov.aa	a4,a15
	j	.L124
.L125:
	jge	d9,d8,.L126
.L1248:
	add	d9,#1
	ld.bu	d15,[a2]
.L1249:
	st.b	[a4+],d15
.L126:
	add.a	a2,#1
.L124:
	ld.b	d0,[a2]0
.L1250:
	jeq	d0,#0,.L127
.L1251:
	mov	d15,#32
	jeq	d15,d0,.L128
	mov	d15,#9
	jne	d15,d0,.L125
.L128:
.L127:
.L121:
	jlt	d8,#1,.L129
.L1252:
	add	d8,#-1
.L908:
	min	d15,d9,d8
.L1253:
	addsc.a	a15,a15,d15,#0
.L910:
	mov	d15,#0
.L1254:
	st.b	[a15],d15
.L129:
	mov.aa	a4,a2
.L912:
	call	Ifx_Shell_skipWhitespace
.L911:
	st.a	[a12],a2
.L1255:
	mov	d2,#1
	ret
.L574:
	
__Ifx_Shell_parseToken_function_end:
	.size	Ifx_Shell_parseToken,__Ifx_Shell_parseToken_function_end-Ifx_Shell_parseToken
.L385:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseAddress',code,cluster('Ifx_Shell_parseAddress')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseAddress'
	.align	2
	
	.global	Ifx_Shell_parseAddress

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   789  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   790      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   791      {
; Function Ifx_Shell_parseAddress
.L304:
Ifx_Shell_parseAddress:	.type	func
	sub.a	a10,#40
.L913:
	mov.aa	a15,a5
.L916:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   792          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   793      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   794      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   795      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   796          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%x ", (unsigned int *)address) == 1);
	mov.a	a2,#0
.L1260:
	st.a	[a15],a2
.L1261:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   797      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   798  
	lea	a5,[a10]4
.L914:
	mov	d4,#32
	call	Ifx_Shell_parseToken
.L915:
	jne	d2,#0,.L131
.L1262:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   799      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   800  }
	mov	d8,#0
	j	.L132
.L131:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   801  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   802  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   803  boolean Ifx_Shell_parseSInt32(pchar *argsPtr, sint32 *value)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   804  {
	ld.bu	d15,[a10]4
.L1263:
	mov	d8,#0
.L917:
	jeq	d15,#0,.L133
.L1264:
	st.a	[a10],a15
.L1265:
	lea	a4,[a10]4
.L1266:
	movh.a	a5,#@his(.23.str)
	lea	a5,[a5]@los(.23.str)
	call	sscanf
.L1267:
	eq	d15,d2,#1
.L1268:
	cmov	d8,d15,#1
.L133:
.L132:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   805      sint64  value64;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   806      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   807  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   808      *value = 0;
	mov	d2,d8
	ret
.L580:
	
__Ifx_Shell_parseAddress_function_end:
	.size	Ifx_Shell_parseAddress,__Ifx_Shell_parseAddress_function_end-Ifx_Shell_parseAddress
.L390:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt32',code,cluster('Ifx_Shell_parseSInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt32'
	.align	2
	
	.global	Ifx_Shell_parseSInt32

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   809  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   810      if (Ifx_Shell_parseSInt64(argsPtr, &value64) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   811      {
; Function Ifx_Shell_parseSInt32
.L306:
Ifx_Shell_parseSInt32:	.type	func
	sub.a	a10,#8
.L918:
	mov.aa	a15,a5
.L921:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   812          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   813      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   814      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   815      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   816          *value = (sint32)value64;
	mov	d15,#0
	st.w	[a15],d15
.L1273:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   817          result = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   818      }
	mov.aa	a5,a10
.L920:
	call	Ifx_Shell_parseSInt64
.L919:
	jne	d2,#0,.L136
.L1274:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   819  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   820      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   821  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   822  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   823  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   824  boolean Ifx_Shell_parseUInt32(pchar *argsPtr, uint32 *value, boolean hex)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   825  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   826      uint64  value64;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   827      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   828  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   829      *value = 0;
	ret
.L136:
	ld.d	e0,[a10]0
.L1275:
	st.w	[a15],d0
.L1276:
	mov	d2,#1
	ret
.L587:
	
__Ifx_Shell_parseSInt32_function_end:
	.size	Ifx_Shell_parseSInt32,__Ifx_Shell_parseSInt32_function_end-Ifx_Shell_parseSInt32
.L395:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt32',code,cluster('Ifx_Shell_parseUInt32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt32'
	.align	2
	
	.global	Ifx_Shell_parseUInt32

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   830  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   831      if (Ifx_Shell_parseUInt64(argsPtr, &value64, hex) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   832      {
; Function Ifx_Shell_parseUInt32
.L308:
Ifx_Shell_parseUInt32:	.type	func
	sub.a	a10,#8
.L922:
	mov.aa	a15,a5
.L925:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   833          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   834      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   835      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   836      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   837          *value = (uint32)value64;
	mov	d15,#0
	st.w	[a15],d15
.L1281:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   838          result = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   839      }
	mov.aa	a5,a10
.L924:
	call	Ifx_Shell_parseUInt64
.L923:
	jne	d2,#0,.L139
.L1282:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   840  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   841      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   842  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   843  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   844  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   845  boolean Ifx_Shell_parseSInt64(pchar *argsPtr, sint64 *value)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   846  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   847      char    buffer[64];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   848      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   849  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   850      *value = 0;
	ret
.L139:
	ld.d	e0,[a10]0
.L1283:
	st.w	[a15],d0
.L1284:
	mov	d2,#1
	ret
.L594:
	
__Ifx_Shell_parseUInt32_function_end:
	.size	Ifx_Shell_parseUInt32,__Ifx_Shell_parseUInt32_function_end-Ifx_Shell_parseUInt32
.L400:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseSInt64',code,cluster('Ifx_Shell_parseSInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseSInt64'
	.align	2
	
	.global	Ifx_Shell_parseSInt64

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   851  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   852      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   853      {
; Function Ifx_Shell_parseSInt64
.L310:
Ifx_Shell_parseSInt64:	.type	func
	sub.a	a10,#72
.L926:
	mov.aa	a15,a5
.L929:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   854          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   855      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   856      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   857      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   858          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, IFX_SHELL_LLD, value) == 1);
	mov	e0,#0
	st.d	[a15]0,e0
.L1289:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   859      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   860  
	lea	a5,[a10]4
.L928:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L927:
	jne	d2,#0,.L142
.L1290:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   861      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   862  }
	mov	d8,#0
	j	.L143
.L142:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   863  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   864  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   865  boolean Ifx_Shell_parseUInt64(pchar *argsPtr, uint64 *value, boolean hex)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   866  {
	ld.bu	d15,[a10]4
.L1291:
	mov	d8,#0
.L930:
	jeq	d15,#0,.L144
.L1292:
	st.a	[a10],a15
.L1293:
	lea	a4,[a10]4
.L1294:
	movh.a	a5,#@his(.24.str)
	lea	a5,[a5]@los(.24.str)
	call	sscanf
.L1295:
	eq	d15,d2,#1
.L1296:
	cmov	d8,d15,#1
.L144:
.L143:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   867      char    buffer[64];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   868      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   869  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   870      *value = 0;
	mov	d2,d8
	ret
.L602:
	
__Ifx_Shell_parseSInt64_function_end:
	.size	Ifx_Shell_parseSInt64,__Ifx_Shell_parseSInt64_function_end-Ifx_Shell_parseSInt64
.L405:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseUInt64',code,cluster('Ifx_Shell_parseUInt64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseUInt64'
	.align	2
	
	.global	Ifx_Shell_parseUInt64

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   871  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   872      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   873      {
; Function Ifx_Shell_parseUInt64
.L312:
Ifx_Shell_parseUInt64:	.type	func
	mov	d8,d4
	sub.a	a10,#72
.L931:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   874          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   875      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   876      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   877      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   878          char *bufferPointer = buffer;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   879  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   880          if ((buffer[0] == '0') && (buffer[1] == 'x'))
	mov	d4,#64
	mov.aa	a15,a5
.L933:
	mov	e0,#0
	st.d	[a15]0,e0
.L1301:
	lea	a5,[a10]4
.L934:
	call	Ifx_Shell_parseToken
.L932:
	jne	d2,#0,.L147
.L1302:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   881          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   882              bufferPointer = &bufferPointer[2];
	mov	d8,#0
	j	.L148
.L147:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   883              hex           = TRUE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   884          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   885  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   886          if (hex != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   887          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   888              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLX, value) == 1);
	mov	d15,#48
	ld.b	d0,[a10]4
.L1303:
	lea	a4,[a10]4
.L936:
	jne	d15,d0,.L149
.L1304:
	ld.b	d0,[a10]5
.L1305:
	mov	d15,#120
.L1306:
	jne	d15,d0,.L150
.L1307:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   889          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   890          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   891          {
	mov	d8,#1
	lea	a4,[a10]6
.L150:
.L149:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   892              result = (bufferPointer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(bufferPointer, IFX_SHELL_LLU, value) == 1);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   893          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   894      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   895  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   896      return result;
	ld.b	d15,[a4]0
.L1308:
	jeq	d8,#0,.L151
.L1309:
	mov	d8,#0
.L935:
	jeq	d15,#0,.L154
.L1310:
	st.a	[a10],a15
.L1311:
	movh.a	a5,#@his(.25.str)
	lea	a5,[a5]@los(.25.str)
	call	sscanf
.L937:
	eq	d15,d2,#1
.L1312:
	cmov	d8,d15,#1
	j	.L154
.L151:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   897  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   898  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   899  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   900  boolean Ifx_Shell_parseFloat64(pchar *argsPtr, float64 *value)
	jeq	d15,#0,.L155
.L1313:
	st.a	[a10],a15
.L1314:
	movh.a	a5,#@his(.26.str)
	lea	a5,[a5]@los(.26.str)
	call	sscanf
.L938:
	eq	d15,d2,#1
.L939:
	cmov	d8,d15,#1
.L155:
.L154:
.L148:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   901  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   902      char    buffer[64];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   903      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   904  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   905      *value = 0;
	mov	d2,d8
	ret
.L609:
	
__Ifx_Shell_parseUInt64_function_end:
	.size	Ifx_Shell_parseUInt64,__Ifx_Shell_parseUInt64_function_end-Ifx_Shell_parseUInt64
.L410:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat64',code,cluster('Ifx_Shell_parseFloat64')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat64'
	.align	2
	
	.global	Ifx_Shell_parseFloat64

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   906  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   907      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   908      {
; Function Ifx_Shell_parseFloat64
.L314:
Ifx_Shell_parseFloat64:	.type	func
	sub.a	a10,#72
.L940:
	mov.aa	a15,a5
.L943:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   909          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   910      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   911      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   912      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   913          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%lf ", value) == 1);
	mov	d15,#0
	st.w	[a15],d15
.L1319:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   914      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   915  
	lea	a5,[a10]4
.L942:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L941:
	jne	d2,#0,.L158
.L1320:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   916      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   917  }
	mov	d8,#0
	j	.L159
.L158:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   918  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   919  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   920  boolean Ifx_Shell_parseFloat32(pchar *argsPtr, float32 *value)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   921  {
	ld.bu	d15,[a10]4
.L1321:
	mov	d8,#0
.L944:
	jeq	d15,#0,.L160
.L1322:
	st.a	[a10],a15
.L1323:
	lea	a4,[a10]4
.L1324:
	movh.a	a5,#@his(.27.str)
	lea	a5,[a5]@los(.27.str)
	call	sscanf
.L1325:
	eq	d15,d2,#1
.L1326:
	cmov	d8,d15,#1
.L160:
.L159:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   922      char    buffer[64];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   923      boolean result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   924  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   925      *value = 0;
	mov	d2,d8
	ret
.L617:
	
__Ifx_Shell_parseFloat64_function_end:
	.size	Ifx_Shell_parseFloat64,__Ifx_Shell_parseFloat64_function_end-Ifx_Shell_parseFloat64
.L415:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_parseFloat32',code,cluster('Ifx_Shell_parseFloat32')
	.sect	'.text.Ifx_Shell.Ifx_Shell_parseFloat32'
	.align	2
	
	.global	Ifx_Shell_parseFloat32

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   926  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   927      if (Ifx_Shell_parseToken(argsPtr, buffer, Ifx_COUNTOF(buffer)) == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   928      {
; Function Ifx_Shell_parseFloat32
.L316:
Ifx_Shell_parseFloat32:	.type	func
	sub.a	a10,#72
.L945:
	mov.aa	a15,a5
.L948:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   929          result = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   930      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   931      else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   932      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   933          result = (buffer[0] != IFX_SHELL_NULL_CHAR) && (sscanf(buffer, "%f ", value) == 1);
	mov	d15,#0
	st.w	[a15],d15
.L1331:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   934      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   935  
	lea	a5,[a10]4
.L947:
	mov	d4,#64
	call	Ifx_Shell_parseToken
.L946:
	jne	d2,#0,.L163
.L1332:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   936      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   937  }
	mov	d8,#0
	j	.L164
.L163:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   938  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   939  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   940  const Ifx_Shell_Command *Ifx_Shell_commandFind(Ifx_Shell_CommandListConst commandList, pchar commandLine, pchar *args, uint32 *match)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   941  {
	ld.bu	d15,[a10]4
.L1333:
	mov	d8,#0
.L949:
	jeq	d15,#0,.L165
.L1334:
	st.a	[a10],a15
.L1335:
	lea	a4,[a10]4
.L1336:
	movh.a	a5,#@his(.28.str)
	lea	a5,[a5]@los(.28.str)
	call	sscanf
.L1337:
	eq	d15,d2,#1
.L1338:
	cmov	d8,d15,#1
.L165:
.L164:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   942      const Ifx_Shell_Command *command     = commandList;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   943      const Ifx_Shell_Command *result      = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   944      pchar                    cmdLineTemp = commandLine;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   945      uint32                   matchInit   = 0;
	mov	d2,d8
	ret
.L623:
	
__Ifx_Shell_parseFloat32_function_end:
	.size	Ifx_Shell_parseFloat32,__Ifx_Shell_parseFloat32_function_end-Ifx_Shell_parseFloat32
.L420:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandFind',code,cluster('Ifx_Shell_commandFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandFind'
	.align	2
	
	.global	Ifx_Shell_commandFind

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   946      uint32                   index       = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   947  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   948      boolean                  hasPrefix;
; Function Ifx_Shell_commandFind
.L318:
Ifx_Shell_commandFind:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   949  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   950      hasPrefix = (command->commandLine != NULL_PTR) && (command->call == NULL_PTR);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   951      *match    = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   952  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   953      while (command->commandLine != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   954      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   955          pchar  commandTemp     = command->commandLine;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   956          pchar  commandLineTemp = cmdLineTemp;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   957          char   buffer[256];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   958          uint32 matchCount      = matchInit;
	mov	d9,#0
	ld.w	d15,[a4]
.L951:
	mov	e10,d9,d9
	lea	a10,[a10]-272
.L950:
	st.a	[a10]264,a6
.L952:
	mov.aa	a12,a7
.L953:
	mov.aa	a13,a4
.L954:
	mov.aa	a15,a5
.L955:
	mov.a	a14,#0
.L956:
	jeq	d15,#0,.L168
.L1343:
	ld.w	d15,[a4]12
.L957:
	cmovn	d11,d15,#1
.L168:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   959  
	mov	d0,d9
	st.w	[a12],d0
.L958:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   960          while (Ifx_Shell_matchCommand(&commandLineTemp, &commandTemp) != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   961          {
	j	.L170
.L171:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   962              matchCount++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   963          }
	ld.a	a2,[a13]
.L1344:
	st.a	[a10],a2
.L1345:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   964  
	st.a	[a10]4,a15
.L1346:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   965          if ((matchCount > *match) && (Ifx_Shell_parseToken(&commandTemp, buffer, Ifx_COUNTOF(buffer)) == FALSE))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   966          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   967              if ((index == 0) && (command->call == NULL_PTR))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   968              {   /* List has a prefix */
	mov	d8,d9
	j	.L172
.L173:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   969                  cmdLineTemp = commandLineTemp;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   970                  matchInit   = matchCount;
	add	d8,#1
.L172:
	lea	a4,[a10]4
.L1347:
	mov.aa	a5,a10
	call	Ifx_Shell_matchCommand
.L1348:
	jne	d2,#0,.L173
.L1349:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   971              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   972  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   973              *match = matchCount;
	ld.w	d0,[a12]
.L1350:
	jge.u	d0,d8,.L174
.L1351:
	mov.aa	a4,a10
.L1352:
	lea	a5,[a10]8
.L1353:
	mov	d4,#256
	call	Ifx_Shell_parseToken
.L1354:
	jne	d2,#0,.L175
.L959:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   974              *args  = commandLineTemp;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   975              result = command;
	jne	d10,#0,.L176
.L960:
	ld.w	d15,[a13]12
.L1355:
	jne	d15,#0,.L177
.L1356:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   976          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   977          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   978          {
	mov	d9,d8
	ld.a	a15,[a10]4
.L177:
.L176:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   979              if ((index == 0) && hasPrefix)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   980              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   981                  /* Prefix does not match */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   982                  break;
	ld.a	a2,[a10]264
.L961:
	st.w	[a12],d8
.L1357:
	ld.a	a4,[a10]4
.L1358:
	st.a	[a2],a4
.L1359:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   983              }
	mov.aa	a14,a13
.L1360:
	j	.L178
.L175:
.L174:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   984          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   985  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   986          command = &command[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   987  
	jne	d10,#0,.L179
.L962:
	jne	d11,#0,.L180
.L179:
.L178:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   988          index++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   989      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   990  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   991      return result;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   992  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   993  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   994  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   995  const Ifx_Shell_Command *Ifx_Shell_commandListFind(Ifx_Shell *shell, pchar commandLine, pchar *args, Ifx_Shell_CommandListConst *commandList)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   996  {
	add	d10,#1
	lea	a13,[a13]16
.L170:
	ld.w	d15,[a13]
.L1361:
	jne	d15,#0,.L171

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   997      int                      i;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   998      const Ifx_Shell_Command *shellCommand = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	   999      const Ifx_Shell_Command *Command      = NULL_PTR;
.L180:
	mov.aa	a2,a14
.L963:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1000      uint32                   matchMax     = 0;
	ret
.L630:
	
__Ifx_Shell_commandFind_function_end:
	.size	Ifx_Shell_commandFind,__Ifx_Shell_commandFind_function_end-Ifx_Shell_commandFind
.L425:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_commandListFind',code,cluster('Ifx_Shell_commandListFind')
	.sect	'.text.Ifx_Shell.Ifx_Shell_commandListFind'
	.align	2
	
	.global	Ifx_Shell_commandListFind

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1001      uint32                   match;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1002  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1003      for (i = 0; i < IFX_CFG_SHELL_COMMAND_LISTS; i++)
; Function Ifx_Shell_commandListFind
.L320:
Ifx_Shell_commandListFind:	.type	func
	mov.aa	a15,a4
.L968:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1004      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1005          if (shell->commandList[i] != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1006          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1007              shellCommand = Ifx_Shell_commandFind(shell->commandList[i], commandLine, args, &match);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1008  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1009              if ((shellCommand != NULL_PTR) && (match > matchMax))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1010              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1011                  matchMax     = match;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1012                  Command      = shellCommand;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1013                  *commandList = shell->commandList[i];
	ld.a	a4,[a15]324
.L967:
	mov.aa	a12,a7
.L970:
	sub.a	a10,#8
.L964:
	mov.a	a13,#0
.L971:
	jz.a	a4,.L182
.L1562:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1014              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1015          }
	mov.aa	a7,a10
.L966:
	call	Ifx_Shell_commandFind
.L965:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1016      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1017  
	jz.a	a2,.L183
.L1563:
	ld.w	d15,[a10]
.L1564:
	jeq	d15,#0,.L184
.L1565:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1018      return Command;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1019  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1020  
	mov.aa	a13,a2
.L1566:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1021  
	ld.a	a15,[a15]324
.L969:
	st.a	[a12],a15
.L184:
.L183:
.L182:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1022  void Ifx_Shell_execute(Ifx_Shell *shell, pchar commandLine)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1023  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1024      pchar                      args         = NULL_PTR;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1025      Ifx_Shell_CommandListConst commandList;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1026      const Ifx_Shell_Command   *shellCommand = Ifx_Shell_commandListFind(shell, commandLine, &args, &commandList);
	mov.aa	a2,a13
.L972:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1027  
	ret
.L746:
	
__Ifx_Shell_commandListFind_function_end:
	.size	Ifx_Shell_commandListFind,__Ifx_Shell_commandListFind_function_end-Ifx_Shell_commandListFind
.L465:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_execute',code,cluster('Ifx_Shell_execute')
	.sect	'.text.Ifx_Shell.Ifx_Shell_execute'
	.align	2
	
	.global	Ifx_Shell_execute

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1028      if (shellCommand != NULL_PTR)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1029      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1030          if (shellCommand->call == NULL_PTR)
; Function Ifx_Shell_execute
.L322:
Ifx_Shell_execute:	.type	func
	sub.a	a10,#16
.L973:
	mov.aa	a15,a4
.L975:
	mov.aa	a12,a5
.L976:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1031          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1032              Ifx_Shell_showHelp(commandLine, shell, shell->io);
	mov.a	a2,#0
.L1449:
	st.a	[a10]4,a2
.L1450:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1033          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1034          else if (shellCommand->call(args, shellCommand->data, shell->io) != FALSE)
	lea	a6,[a10]4
.L1451:
	lea	a7,[a10]8
	call	Ifx_Shell_commandListFind
.L974:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1035          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1036              if (shell->control.sendResultCode != 0)
	jz.a	a2,.L186
.L1452:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1037              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1038                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_ok);
	ld.a	a7,[a2]12
.L1453:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1039              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1040          }
	ld.a	a6,[a15]
.L1454:
	jnz.a	a7,.L187
.L1455:
	mov.aa	a4,a12
.L978:
	mov.aa	a5,a15
.L979:
	j	Ifx_Shell_showHelp
.L187:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1041          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1042          {
	ld.a	a4,[a10]4
.L1456:
	ld.a	a5,[a2]8
.L1457:
	calli	a7
.L977:
	jeq	d2,#0,.L189
.L1458:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1043              if (shell->control.sendResultCode != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1044              {
	ld.bu	d15,[a15]4
.L1459:
	jz.t	d15:2,.L190
.L1460:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1045                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_nok);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1046              }
	mov	d4,#255
	j	.L191
.L189:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1047              else if (shell->control.echoError != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1048              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1049                  IfxStdIf_DPipe_print(shell->io, "\r\nShell command error: %s" ENDL, commandLine);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1050              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1051              else
	ld.bu	d15,[a15]4
.L1461:
	jz.t	d15:2,.L192
.L1462:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1052              {}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1053          }
	mov	d4,#129
	j	.L193
.L192:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1054      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1055      else
	jz.t	d15:4,.L194
.L1463:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1056      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1057          if (commandLine[0] != IFX_SHELL_NULL_CHAR)
	movh.a	a5,#@his(.29.str)
	lea	a5,[a5]@los(.29.str)
.L1464:
	j	.L195
.L186:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1058          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1059              if (shell->control.sendResultCode != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1060              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1061                  Ifx_Shell_writeResult(shell, Ifx_Shell_ResultCode_unknown);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1062              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1063              else if (shell->control.echoError != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1064              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1065                  IfxStdIf_DPipe_print(shell->io, "\r\nUnknown command: %s" ENDL, commandLine);
	ld.bu	d15,[a12]
.L1465:
	jeq	d15,#0,.L196
.L1466:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1066              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1067              else
	ld.bu	d15,[a15]4
.L1467:
	jz.t	d15:2,.L197
.L1468:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1068              {}
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1069          }
	mov	d4,#128
.L191:
.L193:
	mov.aa	a4,a15
.L980:
	j	Ifx_Shell_writeResult
.L197:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1070      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1071  }
	jz.t	d15:4,.L199
.L1469:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1072  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1073  
	movh.a	a5,#@his(.30.str)
	lea	a5,[a5]@los(.30.str)
.L195:
	ld.a	a4,[a15]
.L1470:
	st.a	[a10],a12
.L1471:
	j	IfxStdIf_DPipe_print
.L199:
.L196:
.L194:
.L190:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1074  /****************************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1075  /* Processes escape sequences, including handling command history.                      */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1076  /* The following escape sequences (prefix "ESC [") are supported:                       */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1077  /* A - up     B - down      C - right     D - left                                      */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1078  /* 1~ - HOME  2~ - INSERT   3~ - DELETE   4~ - END                                      */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1079  /*                                                                                      */
	ret
.L704:
	
__Ifx_Shell_execute_function_end:
	.size	Ifx_Shell_execute,__Ifx_Shell_execute_function_end-Ifx_Shell_execute
.L455:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess',code,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.text.Ifx_Shell.Ifx_Shell_cmdEscapeProcess'
	.align	2
	
	.global	Ifx_Shell_cmdEscapeProcess

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1080  /* Parameters:                                                                          */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1081  /*      EscapeChar1 - First character to follow ESC [                                   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1082  /*      EscapeChar2 - Second character following ESC [ , if applicable                  */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1083  /*                                                                                      */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1084  /****************************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1085  void Ifx_Shell_cmdEscapeProcess(Ifx_Shell *shell, char EscapeChar1, char EscapeChar2)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1086  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1087      Ifx_Shell_CmdLine *Cmd    = NULL_PTR; /* Command line editing state */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1088      char              *cmdStr = NULL_PTR; /* Cached pointer to command line being edited */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1089      sint32             i      = 0;        /* Loop variable */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1090  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1091      /* Validate parameters */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1092      boolean            result = (shell != NULL_PTR);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1093  
; Function Ifx_Shell_cmdEscapeProcess
.L324:
Ifx_Shell_cmdEscapeProcess:	.type	func
	sub.a	a10,#8
.L981:
	mov.aa	a15,a4
.L982:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1094      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, result != FALSE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1095  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1096      if (result == FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1097      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1098          return;                 /* ERROR CASE - no thread data available! */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1099      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1100  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1101      /* Cache command state and command line pointer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1102      Cmd    = &shell->cmd;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1103      cmdStr = Cmd->cmdStr;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1104  
	mov	e8,d5,d4
	jz.a	a15,.L200
.L1476:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1105      /* Validate command line state */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1106      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, cmdStr != NULL_PTR);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1107      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->cursor < IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1108      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, Cmd->length < IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1109  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1110      /* Switch on first character after ESC [ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1111      switch (EscapeChar1)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1112      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1113      case 'A':                  /* Up arrow */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1114  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1115          if (Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1116          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1117              /* Not using list at the moment - take most recent item [0] */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1118              Cmd->historyItem = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1119          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1120          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1121          {
	mov	d15,#65
	ld.a	a12,[a15]48
.L983:
	jeq	d15,d8,.L201
.L984:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1122              if (Cmd->historyItem < (IFX_CFG_SHELL_CMD_HISTORY_SIZE - 1))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1123              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1124                  /* If not already at oldest, go back one in list */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1125                  Cmd->historyItem++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1126              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1127          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1128  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1129          /* Copy text into buffer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1130          strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1131  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1132          /* echo to screen if requested */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1133          if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1134          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1135              IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1136              IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1137              IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1138              IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1139          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1140  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1141          Cmd->cursor     = (Ifx_SizeT)strlen(cmdStr); /* Store cursor position */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1142          Cmd->length     = Cmd->cursor;               /* Store command line length */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1143          Cmd->historyAdd = FALSE;                     /* Don't add back to history unless modified */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1144          break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1145  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1146      case 'B':                                        /* Down arrow */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1147  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1148          if ((Cmd->historyItem == IFX_SHELL_CMD_HISTORY_NO_ITEM) || (Cmd->historyItem == 0))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1149          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1150              /* Not using list at the moment, or have dropped off the end - just clear command line */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1151              if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1152              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1153                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)       /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1154                  IFX_SHELL_WRITE_SPACES(Cmd->length)           /* Overwrite text with spaces */
	mov	d15,#66
.L985:
	jeq	d15,d8,.L202
.L986:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1155                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)       /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1156              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1157  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1158              Cmd->length      = 0;                             /* Reset command line length */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1159              Cmd->cursor      = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1160              Cmd->historyItem = IFX_SHELL_CMD_HISTORY_NO_ITEM; /* Ensure we are not using list */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1161          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1162          else
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1163          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1164              /* Within list - move to more recent entry */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1165              Cmd->historyItem--;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1166  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1167              /* Copy text into buffer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1168              strncpy(cmdStr, shell->cmdHistory[Cmd->historyItem], IFX_CFG_SHELL_CMD_LINE_SIZE);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1169  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1170              if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1171              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1172                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor)  /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1173                  IFX_SHELL_WRITE_SPACES(Cmd->length)      /* Overwrite text with spaces */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1174                  IFX_SHELL_WRITE_BACKSPACES(Cmd->length)  /* Move cursor back to start */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1175                  IfxStdIf_DPipe_print(shell->io, cmdStr); /* Copy buffer to screen */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1176              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1177  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1178              Cmd->cursor = (Ifx_SizeT)strlen(cmdStr);     /* Store cursor position */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1179              Cmd->length = Cmd->cursor;                   /* Store command line length */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1180          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1181  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1182          Cmd->historyAdd = FALSE;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1183          break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1184  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1185      case 'C':                  /* Right arrow */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1186  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1187          if (Cmd->cursor < Cmd->length)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1188          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1189              /* Move cursor one place to right */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1190              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1191          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1192  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1193          break;
	mov	d15,#67
.L987:
	jeq	d15,d8,.L203
.L988:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1194  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1195      case 'D':                  /* Left arrow */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1196  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1197          if (Cmd->cursor > 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1198          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1199              /* Move cursor one place to left */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1200              IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "\b")) Cmd->cursor--;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1201          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1202  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1203          break;
	mov	d15,#68
.L989:
	jeq	d15,d8,.L204
.L990:
	j	.L205
.L201:
	ld.h	d15,[a15]58
.L1477:
	jne	d15,#-1,.L206
.L1478:
	mov	d0,#0
	st.h	[a15]58,d0
.L1479:
	j	.L207
.L206:
	mov	d0,#9
.L1480:
	jge	d15,d0,.L208
.L1481:
	add	d15,#1
	st.h	[a15]58,d15
.L208:
.L207:
	fcall	.cocofun_37
.L992:
	call	strncpy
.L993:
	ld.bu	d15,[a15]4
.L1482:
	jz.t	d15:3,.L209
.L720:
	mov	d15,#0
	j	.L210
.L211:
	fcall	.cocofun_34
.L994:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L210:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L211
.L721:
	mov	d15,#0
	j	.L212
.L213:
	ld.a	a4,[a15]
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L212:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L213
.L723:
	mov	d15,#0
	j	.L214
.L215:
	fcall	.cocofun_34
.L995:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L214:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L215
.L725:
	j	.L216
.L202:
	ld.h	d15,[a15]58
.L1483:
	jeq	d15,#-1,.L217
.L1484:
	jne	d15,#0,.L218
.L217:
	ld.bu	d15,[a15]4
.L1485:
	jz.t	d15:3,.L219
.L727:
	mov	d15,#0
	j	.L220
.L221:
	fcall	.cocofun_34
.L996:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L220:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L221
.L728:
	mov	d15,#0
	j	.L222
.L223:
	ld.a	a4,[a15]
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L222:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L223
.L730:
	mov	d15,#0
	j	.L224
.L225:
	fcall	.cocofun_34
.L997:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L224:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L225
.L219:
	mov	d15,#0
	st.h	[a15]54,d15
.L1486:
	st.h	[a15]52,d15
.L1487:
	mov	d15,#-1
	st.h	[a15]58,d15
.L1488:
	j	.L226
.L218:
	add	d15,#-1
	st.h	[a15]58,d15
.L998:
	fcall	.cocofun_37
.L1000:
	call	strncpy
.L1001:
	ld.bu	d15,[a15]4
.L1489:
	jz.t	d15:3,.L227
.L733:
	mov	d15,#0
	j	.L228
.L229:
	fcall	.cocofun_34
.L1002:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L228:
	ld.h	d0,[a15]52
	jlt	d15,d0,.L229
.L734:
	mov	d15,#0
	j	.L230
.L231:
	ld.a	a4,[a15]
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L230:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L231
.L736:
	mov	d15,#0
	j	.L232
.L233:
	fcall	.cocofun_34
.L1003:
	call	IfxStdIf_DPipe_print
	add	d15,#1
.L232:
	ld.h	d0,[a15]54
	jlt	d15,d0,.L233

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1204  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1205      default:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1206          break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1207      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1208  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1209      /* If second character after ESC [ is ~ then switch on number */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1210      if (EscapeChar2 == '~')
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1211      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1212          switch (EscapeChar1)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1213          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1214          case '1':              /* HOME - move to start of buffer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1215  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1216              if (Cmd->cursor > 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1217              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1218                  IFX_SHELL_WRITE_BACKSPACES(Cmd->cursor) Cmd->cursor = 0;
.L216:
	ld.a	a4,[a15]
.L1490:
	mov.aa	a5,a12
.L1004:
	call	IfxStdIf_DPipe_print
.L227:
.L209:
	mov.aa	a4,a12
.L1005:
	call	strlen
.L1006:
	st.h	[a15]52,d2
.L1491:
	ld.h	d15,[a15]52
.L1492:
	st.h	[a15]54,d15
.L226:
	mov	d15,#0
	st.b	[a15]56,d15
.L1493:
	j	.L234
.L203:
	ld.h	d0,[a15]52
.L1494:
	ld.h	d15,[a15]54
.L1495:
	jge	d0,d15,.L235
.L1496:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L236
	addsc.a	a2,a12,d0,#0
	ld.b	d15,[a2]0
	st.w	[a10],d15
	fcall	.cocofun_36
.L1007:
	call	IfxStdIf_DPipe_print
.L236:
	ld.h	d15,[a15]52
.L1497:
	add	d15,#1
	j	.L237
.L204:
	ld.h	d15,[a15]52
.L1498:
	jlt	d15,#1,.L238
.L1499:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L239
	fcall	.cocofun_34
.L1009:
	call	IfxStdIf_DPipe_print
.L239:
	ld.h	d15,[a15]52
.L1500:
	add	d15,#-1
.L237:
	st.h	[a15]52,d15
.L238:
.L235:
.L234:
.L205:
	mov	d15,#126
.L1011:
	jne	d15,d9,.L240
.L1012:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1219              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1220  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1221              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1222  
	mov	d15,#49
.L1013:
	jeq	d15,d8,.L241
.L1014:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1223          case '2':              /* INSERT - insert blank character at cursor and move all remaining characters right one */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1224  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1225              if ((Cmd->cursor < Cmd->length) && (Cmd->length < (IFX_CFG_SHELL_CMD_LINE_SIZE - 1)))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1226              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1227                  /* Update on screen */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1228                  if (shell->control.echo != FALSE)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1229                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1230                      /* write over duplicated character at cursor */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1231                      IfxStdIf_DPipe_print(shell->io, " ");
	mov	d15,#50
.L1015:
	jeq	d15,d8,.L242
.L1016:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1232  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1233                      /* Update line with new characters */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1234                      for (i = Cmd->cursor; i < Cmd->length; i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1235                      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1236                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i]);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1237                      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1238  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1239                      /* Move cursor back to new place */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1240                      IFX_SHELL_WRITE_BACKSPACES((Cmd->length + 1) - Cmd->cursor)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1241                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1242  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1243                  /* Update in command line variable */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1244                  for (i = Cmd->length; i > Cmd->cursor; i--)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1245                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1246                      cmdStr[i] = cmdStr[i - 1];                 /* Shuffle text right */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1247                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1248  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1249                  cmdStr[Cmd->length + 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of longer string */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1250                  cmdStr[Cmd->cursor]     = ' ';                 /* Blank character at cursor */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1251  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1252                  Cmd->length++;                                 /* Now one character longer */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1253              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1254  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1255              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1256  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1257          case '3':              /* DELETE - delete character to right and move all remaining characters left one */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1258  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1259              if (Cmd->cursor < Cmd->length)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1260              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1261                  /* Update on screen */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1262                  if (shell->control.echo != 0)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1263                  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1264                      for (i = Cmd->cursor; i < (Cmd->length - 1); i++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1265                      {
	mov	d15,#51
.L1017:
	jeq	d15,d8,.L243
.L1018:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1266                          /* Update line with new characters */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1267                          IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[i + 1]);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1268                      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1269  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1270                      /* write over duplicated character at end */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1271                      IfxStdIf_DPipe_print(shell->io, " ");
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1272  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1273                      /* Move cursor back to right place */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1274                      IFX_SHELL_WRITE_BACKSPACES(Cmd->length - Cmd->cursor)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1275                  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1276  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1277                  /* Update in command line variable. Shuffle text left */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1278                  strncpy(&cmdStr[Cmd->cursor], &cmdStr[Cmd->cursor + 1], Cmd->length - Cmd->cursor - 1);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1279  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1280                  cmdStr[Cmd->length - 1] = IFX_SHELL_NULL_CHAR; /* Terminate string at end of shorter string */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1281                  Cmd->length--;                                 /* Now one character shorter */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1282              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1283  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1284              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1285  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1286          case '4':              /* END - ensure cursor is at end */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1287  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1288              while (Cmd->cursor < Cmd->length)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1289              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1290                  IFX_SHELL_IF_ECHO(IfxStdIf_DPipe_print(shell->io, "%c", cmdStr[Cmd->cursor])) Cmd->cursor++;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1291              }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1292  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1293              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1294  
	mov	d15,#52
.L1019:
	jeq	d15,d8,.L266
.L240:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1295          default:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1296              break;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1297          }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1298      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1299  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1300  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1301  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1302  void Ifx_Shell_enable(Ifx_Shell *shell)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1303  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1304      // Clear the Rx buffer!
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1305      IfxStdIf_DPipe_clearRx(shell->io);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1306      // Enable the shell
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1307      shell->control.enabled = 1;
.L200:
	ret
.L241:
	ld.h	d15,[a15]52
.L1501:
	jlt	d15,#1,.L246
.L739:
	mov	d15,#0
.L247:
	fcall	.cocofun_34
	call	IfxStdIf_DPipe_print
	add	d15,#1
	ld.h	d0,[a15]52
	jlt	d15,d0,.L247
.L740:
	mov	d15,#0
	st.h	[a15]52,d15
.L246:
	ret
.L242:
	ld.h	d0,[a15]54
.L1502:
	ld.h	d15,[a15]52
.L1503:
	jge	d15,d0,.L249
.L1504:
	mov	d15,#127
.L1505:
	jge	d0,d15,.L250
.L1506:
	ld.bu	d15,[a15]4
.L1507:
	jz.t	d15:3,.L251
.L1508:
	ld.a	a4,[a15]
.L1509:
	fcall	.cocofun_35
	call	IfxStdIf_DPipe_print
.L1510:
	ld.h	d15,[a15]52
.L1020:
	addsc.a	a13,a12,d15,#0
.L1511:
	j	.L252
.L253:
	ld.b	d0,[a13+]1
	st.w	[a10],d0
.L1512:
	fcall	.cocofun_36
.L1513:
	call	IfxStdIf_DPipe_print
.L1514:
	add	d15,#1
.L252:
	ld.h	d0,[a15]54
.L1515:
	jlt	d15,d0,.L253
.L742:
	mov	d8,#0
	j	.L254
.L255:
	fcall	.cocofun_34
.L1021:
	call	IfxStdIf_DPipe_print
	add	d8,#1
.L254:
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	add	d15,#1
	jlt	d8,d15,.L255
.L251:
	ld.h	d15,[a15]54
.L1022:
	addsc.a	a2,a12,d15,#0
.L1516:
	j	.L256
.L257:
	add	d15,#-1
	lea	a4,[a2]-1
.L1517:
	ld.b	d0,[a2]-1
.L1518:
	st.b	[a2],d0
.L1519:
	mov.aa	a2,a4
.L256:
	ld.h	d0,[a15]52
.L1520:
	jlt	d0,d15,.L257
.L1521:
	ld.h	d15,[a15]54
.L1023:
	addsc.a	a2,a12,d15,#0
.L1522:
	mov	d15,#0
.L1523:
	st.b	[a2]1,d15
.L1524:
	ld.h	d15,[a15]52
.L1525:
	addsc.a	a2,a12,d15,#0
.L1526:
	mov	d15,#32
.L1527:
	st.b	[a2],d15
.L1528:
	ld.h	d15,[a15]54
.L1529:
	add	d15,#1
	j	.L258
.L243:
	ld.h	d0,[a15]54
.L1530:
	ld.h	d8,[a15]52
.L1024:
	jge	d8,d0,.L259
.L1531:
	ld.bu	d15,[a15]4
.L1532:
	jz.t	d15:3,.L260
.L1533:
	addsc.a	a2,a12,d8,#0
.L1534:
	add	d0,#-1
.L1535:
	lea	a13,[a2]1
.L1536:
	jge	d8,d0,.L261
.L262:
	ld.b	d15,[a13+]1
	st.w	[a10],d15
.L1537:
	fcall	.cocofun_36
.L1538:
	call	IfxStdIf_DPipe_print
.L1539:
	ld.h	d15,[a15]54
.L1540:
	add	d8,#1
.L1541:
	add	d15,#-1
.L1542:
	jlt	d8,d15,.L262
.L261:
	fcall	.cocofun_35
.L744:
	mov	d8,#0
	j	.L263
.L264:
	add	d8,#1
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
.L263:
	ld.a	a4,[a15]
	call	IfxStdIf_DPipe_print
	ld.h	d15,[a15]54
	ld.h	d0,[a15]52
	sub	d15,d0
	jlt	d8,d15,.L264
.L260:
	ld.h	d15,[a15]52
.L1543:
	ld.h	d0,[a15]54
.L1544:
	addsc.a	a4,a12,d15,#0
.L1545:
	sub	d0,d15
.L1546:
	lea	a5,[a4]1
.L1547:
	add	d4,d0,#-1
	call	strncpy
.L1548:
	ld.h	d15,[a15]54
.L1549:
	addsc.a	a2,a12,d15,#0
.L1550:
	mov	d15,#0
.L1551:
	st.b	[a2]-1,d15
.L1552:
	ld.h	d15,[a15]54
.L1553:
	add	d15,#-1
.L258:
	st.h	[a15]54,d15
.L259:
.L250:
.L249:
	ret
.L267:
	ld.bu	d15,[a15]4
	jz.t	d15:3,.L268
	ld.h	d15,[a15]52
	addsc.a	a2,a12,d15,#0
	ld.b	d15,[a2]0
	st.w	[a10],d15
	fcall	.cocofun_36
	call	IfxStdIf_DPipe_print
.L268:
	ld.h	d15,[a15]52
.L1554:
	add	d15,#1
	st.h	[a15]52,d15
.L266:
	ld.h	d15,[a15]52
.L1555:
	ld.h	d0,[a15]54
.L1556:
	jlt	d15,d0,.L267
.L1557:
	ret
.L710:
	
__Ifx_Shell_cmdEscapeProcess_function_end:
	.size	Ifx_Shell_cmdEscapeProcess,__Ifx_Shell_cmdEscapeProcess_function_end-Ifx_Shell_cmdEscapeProcess
.L460:
	; End of function
	
	.sdecl	'.text.Ifx_Shell..cocofun_37',code,cluster('.cocofun_37')
	.sect	'.text.Ifx_Shell..cocofun_37'
	.align	2
; Function .cocofun_37
.L326:
.cocofun_37:	.type	func
; Function body .cocofun_37, coco_iter:0
	ld.h	d15,[a15]58
.L999:
	mov	d4,#128
	mov.aa	a4,a12
.L991:
	addsc.a	a2,a15,d15,#2
	ld.a	a5,[a2]8
.L1625:
	fret
.L505:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_36',code,cluster('.cocofun_36')
	.sect	'.text.Ifx_Shell..cocofun_36'
	.align	2
; Function .cocofun_36
.L328:
.cocofun_36:	.type	func
; Function body .cocofun_36, coco_iter:0
	ld.a	a4,[a15]
.L1008:
	movh.a	a5,#@his(.21.str)
	lea	a5,[a5]@los(.21.str)
.L1620:
	fret
.L500:
	; End of function
	.sdecl	'.text.Ifx_Shell..cocofun_34',code,cluster('.cocofun_34')
	.sect	'.text.Ifx_Shell..cocofun_34'
	.align	2
; Function .cocofun_34
.L330:
.cocofun_34:	.type	func
; Function body .cocofun_34, coco_iter:0
	ld.a	a4,[a15]
.L1010:
	movh.a	a5,#@his(.20.str)
	lea	a5,[a5]@los(.20.str)
.L1610:
	fret
.L490:
	; End of function
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_enable',code,cluster('Ifx_Shell_enable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_enable'
	.align	2
	
	.global	Ifx_Shell_enable

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1308  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1309  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1310  
; Function Ifx_Shell_enable
.L332:
Ifx_Shell_enable:	.type	func
	mov.aa	a15,a4
.L1026:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1311  void Ifx_Shell_disable(Ifx_Shell *shell)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1312  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1313      shell->control.enabled = 0;
	ld.a	a2,[a15]
.L526:

; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     1  /**
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     2   * \file IfxStdIf_DPipe.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     3   * \brief Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     5   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     6   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     7   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     8   * $Date: 2014-02-27 20:08:24 GMT$
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	     9   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    11   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    12   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    17  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    18  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    20  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    27  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    33   * language processor.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    34  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    42  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    43   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    44   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    45   * \defgroup library_srvsw_stdif_dpipe Standard interface: Data Pipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    47   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    48   * The standard interafce data pipe (DPipe) abstract the hardware used for data transfer. It provide, after proper initialization an hardware independant way to write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    49   * and read data to/from as communciation channel.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    50   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    51   * \par Porting StandardIo to DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    52   * replace all
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    53   *  - StandardIo type with IfxStdIf_DPipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    54   *  - StandardIo_print with IfxStdIf_DPipe_print
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    55   * delete StandardIo.c and StandardIo.h
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    56   * Include "StdIf/IfxStdIf_DPipe.h" instead of "SysSe/Bsp/StandardIo.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    57   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    58   * The following files are already ported: Ifx_Console, Ifx_Shell
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    59   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    60   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    61  #ifndef STDIF_DPIPE_H_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    62  #define STDIF_DPIPE_H_ 1
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    63  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    64  #include "IfxStdIf.h"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    65  //----------------------------------------------------------------------------------------
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    66  #ifndef ENDL
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    67  #    define ENDL       "\r\n"
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    68  #endif
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    69  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    70  /** \brief Forward declaration */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    71  typedef struct IfxStdIf_DPipe_ IfxStdIf_DPipe;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    72  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    73  typedef volatile boolean      *IfxStdIf_DPipe_WriteEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    74  typedef volatile boolean      *IfxStdIf_DPipe_ReadEvent;
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    75  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    76  /** \brief Size of the buffer allocated on the stack for the print function */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    77  #define STDIF_DPIPE_MAX_PRINT_SIZE (255)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    78  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    79  /** \brief Write binary data into the \ref IfxStdIf_DPipe.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    80   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    81   * Initially the parameter 'count' specifies count of data to write.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    82   * After execution the data pointed by 'count' specifies the data actually written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    83   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    84   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    85   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    86   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    87   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    88   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    89   * \retval TRUE Returns TRUE if all items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    90   * \retval FALSE Returns FALSE if not all the items could be written
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    91   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    92  typedef boolean (*IfxStdIf_DPipe_Write)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    93  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    94  /** \brief Read data from the \ref IfxStdIf_DPipe object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    95   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    96   * Initially the parameter 'count' specifies count of data to read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    97   * After execution the data pointed by 'count' specifies the data actually read.
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    98   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	    99   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   100   * \param data Pointer to the start of data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   101   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   102   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   103   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   104   * \retval TRUE Returns TRUE if all items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   105   * \retval FALSE Returns FALSE if not all the items could be read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   106   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   107  typedef boolean (*IfxStdIf_DPipe_Read)(IfxStdIf_InterfaceDriver stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   108  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   109  /** \brief Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   110   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   111   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   112   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   113   * \return Returns the number of bytes in the rx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   114   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   115  typedef sint32 (*IfxStdIf_DPipe_GetReadCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   116  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   117  /** \brief Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   118   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   119   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   120   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   121   * \return Returns read event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   122   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   123  typedef IfxStdIf_DPipe_ReadEvent (*IfxStdIf_DPipe_GetReadEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   124  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   125  /** \brief Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   126   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   127   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   128   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   129   * \return Returns number of bytes send
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   130   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   131  typedef uint32 (*IfxStdIf_DPipe_GetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   132  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   133  /** \brief Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   134   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   135   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   136   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   137   * \return Returns the time stamp of the last transmit data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   138   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   139  typedef Ifx_TickTime (*IfxStdIf_DPipe_GetTxTimeStamp)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   140  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   141  /** \brief Returns the number of free bytes (free space) in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   142   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   143   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   144   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   145   * \return Returns the number of free bytes in the tx buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   146   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   147  typedef sint32 (*IfxStdIf_DPipe_GetWriteCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   148  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   149  /** \brief Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   150   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   151   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   152   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   153   * \return Returns write event object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   154   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   155  typedef IfxStdIf_DPipe_WriteEvent (*IfxStdIf_DPipe_GetWriteEvent)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   156  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   157  /** \brief Indicates if the required number of bytes are available for read in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   158   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   159   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   160   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   161   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   162   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   163   * \return Returns TRUE if at least count bytes are available for read in the rx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   164   * if not the Event is armed to be set when the buffer count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   165   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   166  typedef boolean (*IfxStdIf_DPipe_CanReadCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   167  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   168  /** \brief  Indicates if there is enough free space to write the data in the buffer
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   169   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   170   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   171   * \param count Pointer to the count of data (in bytes).
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   172   * \param timeout in system timer ticks
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   173   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   174   * \return Returns TRUE if at least count bytes can be written to the tx buffer,
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   175   *  if not the Event is armed to be set when the buffer free count is bigger or equal to the requested count
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   176   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   177  typedef boolean (*IfxStdIf_DPipe_CanWriteCount)(IfxStdIf_InterfaceDriver stdIf, Ifx_SizeT count, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   178  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   179  /** \brief Flush the transmit buffer by transmitting all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   180   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   181   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   182   * \param timeout timeout for the flush operation
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   183   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   184   * \return Returns TRUE if the FIFO is empty
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   185   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   186  typedef boolean (*IfxStdIf_DPipe_FlushTx)(IfxStdIf_InterfaceDriver stdIf, Ifx_TickTime timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   187  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   188  /** \brief Clears the RX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   189   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   190   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   191   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   192   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   193  typedef void (*IfxStdIf_DPipe_ClearRx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   194  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   195  /** \brief Clears the TX buffer by removing all data
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   196   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   197   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   198   * \return void
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   199   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   200  typedef void (*IfxStdIf_DPipe_ClearTx)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   201  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   202  /** \brief handler called on reveive event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   203   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   204   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   205   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   206   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   207   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   208  typedef void (*IfxStdIf_DPipe_OnReceive)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   209  /** \brief handler called on transmit event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   210   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   211   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   212   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   213   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   214   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   215  typedef void (*IfxStdIf_DPipe_OnTransmit)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   216  /** \brief handler called on error event
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   217   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   218   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   219   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   220   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   221   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   222  typedef void (*IfxStdIf_DPipe_OnError)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   223  /** \brief Reset the sendCount counter
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   224   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   225   * \param stdif Pointer to the interface driver object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   226   *
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   227   * \return none
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   228   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   229  typedef void (*IfxStdIf_DPipe_ResetSendCount)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   230  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   231  /** \brief Standard interface object
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   232   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   233  struct IfxStdIf_DPipe_
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   234  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   235      IfxStdIf_InterfaceDriver driver;              /**< \brief Pointer to the specific driver object */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   236      boolean                  txDisabled;          /**< \brief If disabled is set to TRUE, the output is disabled, else enabled */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   237  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   238      /* Standard interface APIs */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   239      IfxStdIf_DPipe_Write          write;          /**< \brief \see IfxStdIf_DPipe_Write */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   240      IfxStdIf_DPipe_Read           read;           /**< \brief \see IfxStdIf_DPipe_Read */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   241      IfxStdIf_DPipe_GetReadCount   getReadCount;   /**< \brief \see IfxStdIf_DPipe_GetReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   242      IfxStdIf_DPipe_GetReadEvent   getReadEvent;   /**< \brief \see IfxStdIf_DPipe_GetReadEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   243      IfxStdIf_DPipe_GetWriteCount  getWriteCount;  /**< \brief \see IfxStdIf_DPipe_GetWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   244      IfxStdIf_DPipe_GetWriteEvent  getWriteEvent;  /**< \brief \see IfxStdIf_DPipe_GetWriteEvent */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   245      IfxStdIf_DPipe_CanReadCount   canReadCount;   /**< \brief \see IfxStdIf_DPipe_CanReadCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   246      IfxStdIf_DPipe_CanWriteCount  canWriteCount;  /**< \brief \see IfxStdIf_DPipe_CanWriteCount */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   247      IfxStdIf_DPipe_FlushTx        flushTx;        /**< \brief \see IfxStdIf_DPipe_FlushTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   248      IfxStdIf_DPipe_ClearTx        clearTx;        /**< \brief \see IfxStdIf_DPipe_ClearTx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   249      IfxStdIf_DPipe_ClearRx        clearRx;        /**< \brief \see IfxStdIf_DPipe_ClearRx */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   250      IfxStdIf_DPipe_OnReceive      onReceive;      /**< \brief \see IfxStdIf_DPipe_OnReceive  */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   251      IfxStdIf_DPipe_OnTransmit     onTransmit;     /**< \brief \see IfxStdIf_DPipe_OnTransmit */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   252      IfxStdIf_DPipe_OnError        onError;        /**< \brief \see IfxStdIf_DPipe_OnError    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   253  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   254      IfxStdIf_DPipe_GetSendCount   getSendCount;   /**< \brief \see IfxStdIf_DPipe_GetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   255      IfxStdIf_DPipe_GetTxTimeStamp getTxTimeStamp; /**< \brief \see IfxStdIf_DPipe_GetTxTimeStamp    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   256      IfxStdIf_DPipe_ResetSendCount resetSendCount; /**< \brief \see IfxStdIf_DPipe_ResetSendCount    */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   257  };
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   258  /** \addtogroup library_srvsw_stdif_dpipe
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   259   * \{ */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   260  /** \copydoc IfxStdIf_DPipe_Write
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   261   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   262  IFX_INLINE boolean IfxStdIf_DPipe_write(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   263  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   264      return stdIf->write(stdIf->driver, data, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   265  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   266  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   267  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   268  /** \copydoc IfxStdIf_DPipe_Read
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   269   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   270  IFX_INLINE boolean IfxStdIf_DPipe_read(IfxStdIf_DPipe *stdIf, void *data, Ifx_SizeT *count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   271  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   272      return stdIf->read(stdIf->driver, data, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   273  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   274  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   275  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   276  /** \copydoc IfxStdIf_DPipe_GetReadCount
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   277   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   278  IFX_INLINE sint32 IfxStdIf_DPipe_getReadCount(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   279  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   280      return stdIf->getReadCount(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   281  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   282  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   283  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   284  /** \copydoc IfxStdIf_DPipe_GetWriteCount
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   285   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   286  IFX_INLINE sint32 IfxStdIf_DPipe_getWriteCount(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   287  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   288      return stdIf->getWriteCount(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   289  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   290  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   291  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   292  /** \copydoc IfxStdIf_DPipe_CanReadCount
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   293   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   294  IFX_INLINE boolean IfxStdIf_DPipe_canReadCount(IfxStdIf_DPipe *stdIf, Ifx_SizeT count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   295  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   296      return stdIf->canReadCount(stdIf->driver, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   297  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   298  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   299  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   300  /** \copydoc IfxStdIf_DPipe_CanWriteCount
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   301   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   302  IFX_INLINE boolean IfxStdIf_DPipe_canWriteCount(IfxStdIf_DPipe *stdIf, Ifx_SizeT count, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   303  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   304      return stdIf->canWriteCount(stdIf->driver, count, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   305  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   306  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   307  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   308  /** \copydoc IfxStdIf_DPipe_GetReadEvent
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   309   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   310  IFX_INLINE IfxStdIf_DPipe_ReadEvent IfxStdIf_DPipe_getReadEvent(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   311  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   312      return stdIf->getReadEvent(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   313  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   314  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   315  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   316  /** \copydoc IfxStdIf_DPipe_GetWriteEvent
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   317   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   318  IFX_INLINE IfxStdIf_DPipe_WriteEvent IfxStdIf_DPipe_getWriteEvent(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   319  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   320      return stdIf->getWriteEvent(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   321  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   322  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   323  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   324  /** \copydoc IfxStdIf_DPipe_FlushTx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   325   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   326  IFX_INLINE boolean IfxStdIf_DPipe_flushTx(IfxStdIf_DPipe *stdIf, Ifx_TickTime timeout)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   327  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   328      return stdIf->flushTx(stdIf->driver, timeout);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   329  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   330  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   331  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   332  /** \copydoc IfxStdIf_DPipe_ClearTx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   333   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   334  IFX_INLINE void IfxStdIf_DPipe_clearTx(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   335  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   336      stdIf->clearTx(stdIf->driver);
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   337  }
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   338  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   339  
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   340  /** \copydoc IfxStdIf_DPipe_ClearRx
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   341   */
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   342  IFX_INLINE void IfxStdIf_DPipe_clearRx(IfxStdIf_DPipe *stdIf)
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   343  {
; E:\tasking workspace\AICT-1of LQ_TC26xB_LIBtasking0512\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_DPipe.h	   344      stdIf->clearRx(stdIf->driver);
	ld.a	a5,[a2]48
.L1102:
	ld.a	a4,[a2]
.L1025:
	calli	a5
.L527:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1314  .enabled = 0;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1315  }
	ld.bu	d15,[a15]4
.L1103:
	or	d15,#2
	st.b	[a15]4,d15
.L1104:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1316  
	ret
.L523:
	
__Ifx_Shell_enable_function_end:
	.size	Ifx_Shell_enable,__Ifx_Shell_enable_function_end-Ifx_Shell_enable
.L360:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_disable',code,cluster('Ifx_Shell_disable')
	.sect	'.text.Ifx_Shell.Ifx_Shell_disable'
	.align	2
	
	.global	Ifx_Shell_disable

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1317  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1318  void Ifx_Shell_printSyntax(const Ifx_Shell_Syntax *syntaxList, IfxStdIf_DPipe *io)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1319  {
; Function Ifx_Shell_disable
.L334:
Ifx_Shell_disable:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1320      const Ifx_Shell_Syntax *syntax = syntaxList;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1321  
	ld.bu	d15,[a4]4
.L1109:
	insert	d15,d15,#0,#1,#1
	st.b	[a4]4,d15
.L1110:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1322      while (syntax->syntax != NULL_PTR)
	ret
.L531:
	
__Ifx_Shell_disable_function_end:
	.size	Ifx_Shell_disable,__Ifx_Shell_disable_function_end-Ifx_Shell_disable
.L365:
	; End of function
	
	.sdecl	'.text.Ifx_Shell.Ifx_Shell_printSyntax',code,cluster('Ifx_Shell_printSyntax')
	.sect	'.text.Ifx_Shell.Ifx_Shell_printSyntax'
	.align	2
	
	.global	Ifx_Shell_printSyntax

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1323      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1324          IfxStdIf_DPipe_print(io, "Syntax     : %s" ENDL, syntax->syntax);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1325          IfxStdIf_DPipe_print(io, "           > %s" ENDL, syntax->description);
; Function Ifx_Shell_printSyntax
.L336:
Ifx_Shell_printSyntax:	.type	func
	sub.a	a10,#8
.L1027:
	mov.aa	a12,a5
.L1028:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1326          syntax = &syntax[1];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1327      }
	mov.aa	a15,a4
.L1029:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Comm\Ifx_Shell.c	  1328  }

	j	.L269


.L270:


	ld.a	a2,[a15]


	st.a	[a10],a2
.L1416:


	movh.a	a5,#@his(.31.str)


	lea	a5,[a5]@los(.31.str)


	mov.aa	a4,a12
.L1030:


	call	IfxStdIf_DPipe_print
.L1031:


	ld.a	a2,[a15]4


	st.a	[a10],a2
.L1417:


	movh.a	a5,#@his(.32.str)


	lea	a5,[a5]@los(.32.str)


	mov.aa	a4,a12
.L1032:


	call	IfxStdIf_DPipe_print
.L1033:


	lea	a15,[a15]8


.L269:


	ld.w	d15,[a15]
.L1418:


	jne	d15,#0,.L270
.L1419:


	ret
.L688:
	
__Ifx_Shell_printSyntax_function_end:
	.size	Ifx_Shell_printSyntax,__Ifx_Shell_printSyntax_function_end-Ifx_Shell_printSyntax
.L440:
	; End of function
	
	.sdecl	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer',data,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.bss.Ifx_Shell.Ifx_Shell_cmdBuffer'
	.global	Ifx_Shell_cmdBuffer
Ifx_Shell_cmdBuffer:	.type	object
	.size	Ifx_Shell_cmdBuffer,1280
	.space	1280
	.sdecl	'.rodata.Ifx_Shell..1.str',data,rom
	.sect	'.rodata.Ifx_Shell..1.str'
.1.str:	.type	object
	.size	.1.str,1
	.space	1
	.sdecl	'.rodata.Ifx_Shell..2.str',data,rom
	.sect	'.rodata.Ifx_Shell..2.str'
.2.str:	.type	object
	.size	.2.str,5
	.byte	37,115,37,115
	.space	1
	.sdecl	'.rodata.Ifx_Shell..3.str',data,rom
	.sect	'.rodata.Ifx_Shell..3.str'
.3.str:	.type	object
	.size	.3.str,3
	.byte	47,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..4.str',data,rom
	.sect	'.rodata.Ifx_Shell..4.str'
.4.str:	.type	object
	.size	.4.str,3
	.byte	47,115
	.space	1
	.sdecl	'.rodata.Ifx_Shell..5.str',data,rom
	.sect	'.rodata.Ifx_Shell..5.str'
.5.str:	.type	object
	.size	.5.str,7
	.byte	32,32,32,32
	.byte	32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..6.str',data,rom
	.sect	'.rodata.Ifx_Shell..6.str'
.6.str:	.type	object
	.size	.6.str,13
	.byte	32,32,32,32
	.byte	83,89,78,84
	.byte	65,88,58,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..7.str',data,rom
	.sect	'.rodata.Ifx_Shell..7.str'
.7.str:	.type	object
	.size	.7.str,9
	.byte	32,32,32,32
	.byte	32,32,32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..8.str',data,rom
	.sect	'.rodata.Ifx_Shell..8.str'
.8.str:	.type	object
	.size	.8.str,13
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..9.str',data,rom
	.sect	'.rodata.Ifx_Shell..9.str'
.9.str:	.type	object
	.size	.9.str,3
	.byte	13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..10.str',data,rom
	.sect	'.rodata.Ifx_Shell..10.str'
.10.str:	.type	object
	.size	.10.str,3
	.byte	32,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..11.str',data,rom
	.sect	'.rodata.Ifx_Shell..11.str'
.11.str:	.type	object
	.size	.11.str,4
	.byte	37,115,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..12.str',data,rom
	.sect	'.rodata.Ifx_Shell..12.str'
.12.str:	.type	object
	.size	.12.str,16
	.byte	117,110,107,110
	.byte	111,119,110,32
	.byte	99,111,109,109
	.byte	97,110,100
	.space	1
	.sdecl	'.rodata.Ifx_Shell..13.str',data,rom
	.sect	'.rodata.Ifx_Shell..13.str'
.13.str:	.type	object
	.size	.13.str,2
	.byte	63
	.space	1
	.sdecl	'.rodata.Ifx_Shell..14.str',data,rom
	.sect	'.rodata.Ifx_Shell..14.str'
.14.str:	.type	object
	.size	.14.str,30
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,32,115,116
	.byte	97,114,116,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..15.str',data,rom
	.sect	'.rodata.Ifx_Shell..15.str'
.15.str:	.type	object
	.size	.15.str,32
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,115,116,97
	.byte	114,116,32,97
	.byte	32,112,114,111
	.byte	116,111,99,111
	.byte	108,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..16.str',data,rom
	.sect	'.rodata.Ifx_Shell..16.str'
.16.str:	.type	object
	.size	.16.str,6
	.byte	115,116,97,114
	.byte	116
	.space	1
	.sdecl	'.rodata.Ifx_Shell..17.str',data,rom
	.sect	'.rodata.Ifx_Shell..17.str'
.17.str:	.type	object
	.size	.17.str,9
	.byte	112,114,111,116
	.byte	111,99,111,108
	.space	1
	.sdecl	'.rodata.Ifx_Shell..18.str',data,rom
	.sect	'.rodata.Ifx_Shell..18.str'
.18.str:	.type	object
	.size	.18.str,5
	.byte	104,101,108,112
	.space	1
	.sdecl	'.rodata.Ifx_Shell..19.str',data,rom
	.sect	'.rodata.Ifx_Shell..19.str'
.19.str:	.type	object
	.size	.19.str,7
	.byte	83,104,101,108
	.byte	108,62
	.space	1
	.sdecl	'.rodata.Ifx_Shell..20.str',data,rom
	.sect	'.rodata.Ifx_Shell..20.str'
.20.str:	.type	object
	.size	.20.str,2
	.byte	8
	.space	1
	.sdecl	'.rodata.Ifx_Shell..21.str',data,rom
	.sect	'.rodata.Ifx_Shell..21.str'
.21.str:	.type	object
	.size	.21.str,3
	.byte	37,99
	.space	1
	.sdecl	'.rodata.Ifx_Shell..22.str',data,rom
	.sect	'.rodata.Ifx_Shell..22.str'
.22.str:	.type	object
	.size	.22.str,2
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..23.str',data,rom
	.sect	'.rodata.Ifx_Shell..23.str'
.23.str:	.type	object
	.size	.23.str,4
	.byte	37,120,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..24.str',data,rom
	.sect	'.rodata.Ifx_Shell..24.str'
.24.str:	.type	object
	.size	.24.str,6
	.byte	37,108,108,100
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..25.str',data,rom
	.sect	'.rodata.Ifx_Shell..25.str'
.25.str:	.type	object
	.size	.25.str,6
	.byte	37,108,108,120
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..26.str',data,rom
	.sect	'.rodata.Ifx_Shell..26.str'
.26.str:	.type	object
	.size	.26.str,6
	.byte	37,108,108,117
	.byte	32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..27.str',data,rom
	.sect	'.rodata.Ifx_Shell..27.str'
.27.str:	.type	object
	.size	.27.str,5
	.byte	37,108,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..28.str',data,rom
	.sect	'.rodata.Ifx_Shell..28.str'
.28.str:	.type	object
	.size	.28.str,4
	.byte	37,102,32
	.space	1
	.sdecl	'.rodata.Ifx_Shell..29.str',data,rom
	.sect	'.rodata.Ifx_Shell..29.str'
.29.str:	.type	object
	.size	.29.str,28
	.byte	13,10,83,104
	.byte	101,108,108,32
	.byte	99,111,109,109
	.byte	97,110,100,32
	.byte	101,114,114,111
	.byte	114,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..30.str',data,rom
	.sect	'.rodata.Ifx_Shell..30.str'
.30.str:	.type	object
	.size	.30.str,24
	.byte	13,10,85,110
	.byte	107,110,111,119
	.byte	110,32,99,111
	.byte	109,109,97,110
	.byte	100,58,32,37
	.byte	115,13,10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..31.str',data,rom
	.sect	'.rodata.Ifx_Shell..31.str'
.31.str:	.type	object
	.size	.31.str,18
	.byte	83,121,110,116
	.byte	97,120,32,32
	.byte	32,32,32,58
	.byte	32,37,115,13
	.byte	10
	.space	1
	.sdecl	'.rodata.Ifx_Shell..32.str',data,rom
	.sect	'.rodata.Ifx_Shell..32.str'
.32.str:	.type	object
	.size	.32.str,18
	.byte	32,32,32,32
	.byte	32,32,32,32
	.byte	32,32,32,62
	.byte	32,37,115,13
	.byte	10
	.space	1
	.calls	'Ifx_Shell_writeResult','__INDIRECT__'
	.calls	'Ifx_Shell_showHelpSingle','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelpSingle','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_showHelpSingle','strstr'
	.calls	'Ifx_Shell_showHelpSingle','strlen'
	.calls	'Ifx_Shell_showHelpSingle','__INDIRECT__'
	.calls	'Ifx_Shell_showHelpSingleCommand','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_showHelpSingleCommand','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_showHelpSingleCommand','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingle'
	.calls	'Ifx_Shell_showHelp','Ifx_Shell_showHelpSingleCommand'
	.calls	'Ifx_Shell_protocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_protocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_protocolStart','__INDIRECT__'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_matchToken'
	.calls	'Ifx_Shell_bbProtocolStart','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_bbProtocolStart','Ifx_Shell_protocolStart'
	.calls	'Ifx_Shell_init','memset'
	.calls	'Ifx_Shell_init','strcpy'
	.calls	'Ifx_Shell_init','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','__INDIRECT__'
	.calls	'Ifx_Shell_process','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','strncpy'
	.calls	'Ifx_Shell_process','Ifx_Shell_execute'
	.calls	'Ifx_Shell_process','Ifx_Shell_cmdEscapeProcess'
	.calls	'Ifx_Shell_matchToken','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchToken','strcmp'
	.calls	'Ifx_Shell_matchCommand','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_matchCommand','strcmp'
	.calls	'Ifx_Shell_parseToken','Ifx_Shell_skipWhitespace'
	.calls	'Ifx_Shell_parseAddress','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseAddress','sscanf'
	.calls	'Ifx_Shell_parseSInt32','Ifx_Shell_parseSInt64'
	.calls	'Ifx_Shell_parseUInt32','Ifx_Shell_parseUInt64'
	.calls	'Ifx_Shell_parseSInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseSInt64','sscanf'
	.calls	'Ifx_Shell_parseUInt64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseUInt64','sscanf'
	.calls	'Ifx_Shell_parseFloat64','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat64','sscanf'
	.calls	'Ifx_Shell_parseFloat32','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_parseFloat32','sscanf'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_matchCommand'
	.calls	'Ifx_Shell_commandFind','Ifx_Shell_parseToken'
	.calls	'Ifx_Shell_commandListFind','Ifx_Shell_commandFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_commandListFind'
	.calls	'Ifx_Shell_execute','Ifx_Shell_showHelp'
	.calls	'Ifx_Shell_execute','__INDIRECT__'
	.calls	'Ifx_Shell_execute','Ifx_Shell_writeResult'
	.calls	'Ifx_Shell_execute','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strncpy'
	.calls	'Ifx_Shell_cmdEscapeProcess','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_cmdEscapeProcess','strlen'
	.calls	'Ifx_Shell_enable','__INDIRECT__'
	.calls	'Ifx_Shell_printSyntax','IfxStdIf_DPipe_print'
	.calls	'Ifx_Shell_process','.cocofun_35'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_37'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_34'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_35'
	.calls	'Ifx_Shell_cmdEscapeProcess','.cocofun_36'
	.calls	'Ifx_Shell_isEndOfLine','',0
	.calls	'Ifx_Shell_writeResult','',8
	.calls	'Ifx_Shell_showHelpSingle','',40
	.calls	'Ifx_Shell_showHelpSingleCommand','',16
	.calls	'Ifx_Shell_showHelp','',0
	.calls	'Ifx_Shell_protocolStart','',8
	.calls	'Ifx_Shell_bbProtocolStart','',8
	.calls	'Ifx_Shell_initConfig','',0
	.calls	'Ifx_Shell_init','',0
	.calls	'Ifx_Shell_process','',16
	.calls	'.cocofun_35','',0
	.calls	'Ifx_Shell_deinit','',0
	.calls	'Ifx_Shell_skipWhitespace','',0
	.calls	'Ifx_Shell_matchToken','',256
	.calls	'Ifx_Shell_matchCommand','',512
	.calls	'Ifx_Shell_parseToken','',0
	.calls	'Ifx_Shell_parseAddress','',40
	.calls	'Ifx_Shell_parseSInt32','',8
	.calls	'Ifx_Shell_parseUInt32','',8
	.calls	'Ifx_Shell_parseSInt64','',72
	.calls	'Ifx_Shell_parseUInt64','',72
	.calls	'Ifx_Shell_parseFloat64','',72
	.calls	'Ifx_Shell_parseFloat32','',72
	.calls	'Ifx_Shell_commandFind','',272
	.calls	'Ifx_Shell_commandListFind','',8
	.calls	'Ifx_Shell_execute','',16
	.calls	'Ifx_Shell_cmdEscapeProcess','',8
	.calls	'.cocofun_37','',0
	.calls	'.cocofun_36','',0
	.calls	'.cocofun_34','',0
	.calls	'Ifx_Shell_enable','',0
	.calls	'Ifx_Shell_disable','',0
	.extern	IfxStdIf_DPipe_print
	.extern	strcpy
	.extern	strncpy
	.extern	strstr
	.extern	strcmp
	.extern	strlen
	.extern	memset
	.extern	sscanf
	.extern	__scanf_float
	.extern	__scanf_llong
	.extern	__INDIRECT__
	.calls	'Ifx_Shell_printSyntax','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L338:
	.word	4719
	.half	3
	.word	.L339
	.byte	4
.L337:
	.byte	1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L340
.L511:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'void',0
.L683:
	.byte	4
	.word	196
	.byte	5
	.byte	'IfxStdIf_InterfaceDriver',0,2,118,15
	.word	202
.L536:
	.byte	2
	.byte	'short int',0,2,5,4
	.word	240
.L591:
	.byte	2
	.byte	'long long int',0,8,5,6
	.word	179
	.byte	1,1,7
	.word	202
	.byte	7
	.word	202
	.byte	7
	.word	253
	.byte	7
	.word	258
	.byte	0,4
	.word	275
	.byte	5
	.byte	'IfxStdIf_DPipe_Write',0,1,92,19
	.word	303
	.byte	5
	.byte	'IfxStdIf_DPipe_Read',0,1,107,19
	.word	303
.L517:
	.byte	2
	.byte	'long int',0,4,5,6
	.word	365
	.byte	1,1,7
	.word	202
	.byte	0,4
	.word	377
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadCount',0,1,115,18
	.word	390
	.byte	8
	.word	179
	.byte	4
	.word	431
	.byte	6
	.word	436
	.byte	1,1,7
	.word	202
	.byte	0,4
	.word	441
	.byte	5
	.byte	'IfxStdIf_DPipe_GetReadEvent',0,1,123,36
	.word	454
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteCount',0,1,147,1,18
	.word	390
	.byte	4
	.word	441
	.byte	5
	.byte	'IfxStdIf_DPipe_GetWriteEvent',0,1,155,1,37
	.word	533
	.byte	6
	.word	179
	.byte	1,1,7
	.word	202
	.byte	7
	.word	240
	.byte	7
	.word	258
	.byte	0,4
	.word	576
	.byte	5
	.byte	'IfxStdIf_DPipe_CanReadCount',0,1,166,1,19
	.word	599
	.byte	5
	.byte	'IfxStdIf_DPipe_CanWriteCount',0,1,177,1,19
	.word	599
	.byte	6
	.word	179
	.byte	1,1,7
	.word	202
	.byte	7
	.word	258
	.byte	0,4
	.word	679
	.byte	5
	.byte	'IfxStdIf_DPipe_FlushTx',0,1,186,1,19
	.word	697
	.byte	9,1,1,7
	.word	202
	.byte	0,4
	.word	734
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearTx',0,1,200,1,16
	.word	743
	.byte	5
	.byte	'IfxStdIf_DPipe_ClearRx',0,1,193,1,16
	.word	743
	.byte	5
	.byte	'IfxStdIf_DPipe_OnReceive',0,1,208,1,16
	.word	743
	.byte	5
	.byte	'IfxStdIf_DPipe_OnTransmit',0,1,215,1,16
	.word	743
	.byte	5
	.byte	'IfxStdIf_DPipe_OnError',0,1,222,1,16
	.word	743
.L639:
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	913
	.byte	1,1,7
	.word	202
	.byte	0,4
	.word	934
	.byte	5
	.byte	'IfxStdIf_DPipe_GetSendCount',0,1,131,1,18
	.word	947
	.byte	6
	.word	258
	.byte	1,1,7
	.word	202
	.byte	0,4
	.word	989
	.byte	5
	.byte	'IfxStdIf_DPipe_GetTxTimeStamp',0,1,139,1,24
	.word	1002
	.byte	5
	.byte	'IfxStdIf_DPipe_ResetSendCount',0,1,229,1,16
	.word	743
	.byte	10
	.byte	'IfxStdIf_DPipe_',0,1,233,1,8,76,11
	.byte	'driver',0
	.word	207
	.byte	4,2,35,0,11
	.byte	'txDisabled',0
	.word	179
	.byte	1,2,35,4,11
	.byte	'write',0
	.word	308
	.byte	4,2,35,8,11
	.byte	'read',0
	.word	337
	.byte	4,2,35,12,11
	.byte	'getReadCount',0
	.word	395
	.byte	4,2,35,16,11
	.byte	'getReadEvent',0
	.word	459
	.byte	4,2,35,20,11
	.byte	'getWriteCount',0
	.word	495
	.byte	4,2,35,24,11
	.byte	'getWriteEvent',0
	.word	538
	.byte	4,2,35,28,11
	.byte	'canReadCount',0
	.word	604
	.byte	4,2,35,32,11
	.byte	'canWriteCount',0
	.word	641
	.byte	4,2,35,36,11
	.byte	'flushTx',0
	.word	702
	.byte	4,2,35,40,11
	.byte	'clearTx',0
	.word	748
	.byte	4,2,35,44,11
	.byte	'clearRx',0
	.word	780
	.byte	4,2,35,48,11
	.byte	'onReceive',0
	.word	812
	.byte	4,2,35,52,11
	.byte	'onTransmit',0
	.word	846
	.byte	4,2,35,56,11
	.byte	'onError',0
	.word	881
	.byte	4,2,35,60,11
	.byte	'getSendCount',0
	.word	952
	.byte	4,2,35,64,11
	.byte	'getTxTimeStamp',0
	.word	1007
	.byte	4,2,35,68,11
	.byte	'resetSendCount',0
	.word	1046
	.byte	4,2,35,72,0
.L649:
	.byte	4
	.word	1085
	.byte	4
	.word	240
.L669:
	.byte	12
	.byte	'IfxStdIf_DPipe_write',0,3,1,134,2,20
	.word	179
	.byte	1,1
.L672:
	.byte	13
	.byte	'stdIf',0,1,134,2,57
	.word	1485
.L674:
	.byte	13
	.byte	'data',0,1,134,2,70
	.word	202
.L676:
	.byte	13
	.byte	'count',0,1,134,2,87
	.word	1490
.L678:
	.byte	13
	.byte	'timeout',0,1,134,2,107
	.word	258
.L680:
	.byte	14,0,4
	.word	196
	.byte	4
	.word	275
	.byte	4
	.word	275
	.byte	4
	.word	377
	.byte	4
	.word	441
	.byte	4
	.word	377
	.byte	4
	.word	441
	.byte	4
	.word	576
	.byte	4
	.word	576
	.byte	4
	.word	679
	.byte	4
	.word	734
	.byte	4
	.word	734
	.byte	4
	.word	734
	.byte	4
	.word	734
	.byte	4
	.word	734
	.byte	4
	.word	934
	.byte	4
	.word	989
	.byte	4
	.word	734
.L548:
	.byte	12
	.byte	'IfxStdIf_DPipe_read',0,3,1,142,2,20
	.word	179
	.byte	1,1
.L551:
	.byte	13
	.byte	'stdIf',0,1,142,2,56
	.word	1485
.L553:
	.byte	13
	.byte	'data',0,1,142,2,69
	.word	202
.L555:
	.byte	13
	.byte	'count',0,1,142,2,86
	.word	1490
.L557:
	.byte	13
	.byte	'timeout',0,1,142,2,106
	.word	258
.L559:
	.byte	14,0
.L525:
	.byte	15
	.byte	'IfxStdIf_DPipe_clearRx',0,3,1,214,2,17,1,1
.L528:
	.byte	13
	.byte	'stdIf',0,1,214,2,56
	.word	1485
.L530:
	.byte	14,0,16,1,1,4
	.word	1824
	.byte	15
	.byte	'Ifx__jump_and_link',0,3,3,61,17,1,1,13
	.byte	'fun',0,3,61,43
	.word	1827
	.byte	14,0,2
	.byte	'__fract',0,4,128,1,2
	.byte	'float',0,4,4,12
	.byte	'Ifx__float_to_fract',0,3,3,152,2,18
	.word	1872
	.byte	1,1,13
	.byte	'a',0,3,152,2,44
	.word	1884
	.byte	14,0
.L599:
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'__ld64',0,3,4,135,1,19
	.word	1938
	.byte	1,1,13
	.byte	'addr',0,4,135,1,32
	.word	202
	.byte	14,0,15
	.byte	'__st64',0,3,4,143,1,17,1,1,13
	.byte	'addr',0,4,143,1,30
	.word	202
	.byte	13
	.byte	'value',0,4,143,1,43
	.word	1938
	.byte	14,0
.L561:
	.byte	2
	.byte	'int',0,4,5,17
	.word	2045
	.byte	18
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,7
	.word	2052
	.byte	0,2
	.byte	'unsigned int',0,4,7,8
	.word	2094
	.byte	4
	.word	2094
	.byte	19
	.byte	'__cmpswapw',0
	.word	2110
	.byte	1,1,1,1,20
	.byte	'p',0
	.word	2115
	.byte	20
	.byte	'value',0
	.word	2094
	.byte	20
	.byte	'compare',0
	.word	2094
	.byte	0,19
	.byte	'__max',0
	.word	2045
	.byte	1,1,1,1,7
	.word	2045
	.byte	7
	.word	2045
	.byte	0,19
	.byte	'__min',0
	.word	2045
	.byte	1,1,1,1,7
	.word	2045
	.byte	7
	.word	2045
	.byte	0,21
	.word	1495
	.byte	22
	.word	1528
	.byte	22
	.word	1543
	.byte	22
	.word	1557
	.byte	22
	.word	1572
	.byte	14,0,21
	.word	1681
	.byte	22
	.word	1713
	.byte	22
	.word	1728
	.byte	22
	.word	1742
	.byte	22
	.word	1757
	.byte	14,0,21
	.word	1776
	.byte	22
	.word	1807
	.byte	14,0
.L712:
	.byte	2
	.byte	'char',0,1,6,17
	.word	2290
	.byte	4
	.word	2298
.L563:
	.byte	5
	.byte	'pchar',0,5,56,28
	.word	2303
	.byte	23
	.byte	'IfxStdIf_DPipe_print',0,1,140,3,17,1,1,1,1,13
	.byte	'stdIf',0,1,140,3,54
	.word	1485
	.byte	13
	.byte	'format',0,1,140,3,67
	.word	2308
	.byte	24,1,140,3,75,0,17
	.word	2290
	.byte	4
	.word	2389
	.byte	4
	.word	1085
	.byte	6
	.word	179
	.byte	1,1,7
	.word	2303
	.byte	7
	.word	202
	.byte	7
	.word	2399
	.byte	0,4
	.word	2404
	.byte	5
	.byte	'Ifx_Shell_Call',0,6,169,1,19
	.word	2427
	.byte	25,6,172,1,9,16,11
	.byte	'commandLine',0
	.word	2308
	.byte	4,2,35,0,11
	.byte	'help',0
	.word	2308
	.byte	4,2,35,4,11
	.byte	'data',0
	.word	202
	.byte	4,2,35,8,11
	.byte	'call',0
	.word	2432
	.byte	4,2,35,12,0,17
	.word	2456
.L629:
	.byte	4
	.word	2526
.L631:
	.byte	5
	.byte	'Ifx_Shell_CommandListConst',0,6,231,1,34
	.word	2531
	.byte	26,4
	.word	2536
	.byte	27,0,0,6
	.word	179
	.byte	1,1,7
	.word	202
	.byte	7
	.word	2399
	.byte	0,4
	.word	2581
	.byte	9,1,1,7
	.word	202
	.byte	7
	.word	202
	.byte	0,4
	.word	2604
	.byte	25,6,200,1,9,24,11
	.byte	'start',0
	.word	2599
	.byte	4,2,35,0,11
	.byte	'execute',0
	.word	743
	.byte	4,2,35,4,11
	.byte	'onStart',0
	.word	2618
	.byte	4,2,35,8,11
	.byte	'onStartData',0
	.word	202
	.byte	4,2,35,12,11
	.byte	'object',0
	.word	202
	.byte	4,2,35,16,11
	.byte	'started',0
	.word	179
	.byte	1,2,35,20,0,25,6,136,2,9,36,11
	.byte	'standardIo',0
	.word	1485
	.byte	4,2,35,0,11
	.byte	'echo',0
	.word	179
	.byte	1,2,35,4,11
	.byte	'showPrompt',0
	.word	179
	.byte	1,2,35,5,11
	.byte	'sendResultCode',0
	.word	179
	.byte	1,2,35,6,11
	.byte	'commandList',0
	.word	2572
	.byte	4,2,35,8,11
	.byte	'protocol',0
	.word	2623
	.byte	24,2,35,12,0
.L509:
	.byte	4
	.word	2733
	.byte	17
	.word	2456
	.byte	4
	.word	2862
	.byte	4
	.word	2404
	.byte	25,6,211,1,9,1,28
	.byte	'showPrompt',0,1
	.word	179
	.byte	1,7,2,35,0,28
	.byte	'enabled',0,1
	.word	179
	.byte	1,6,2,35,0,28
	.byte	'sendResultCode',0,1
	.word	179
	.byte	1,5,2,35,0,28
	.byte	'echo',0,1
	.word	179
	.byte	1,4,2,35,0,28
	.byte	'echoError',0,1
	.word	179
	.byte	1,3,2,35,0,0
.L544:
	.byte	4
	.word	2290
	.byte	26,40
	.word	2988
	.byte	27,9,0,25,6,181,1,9,12,11
	.byte	'cmdStr',0
	.word	2988
	.byte	4,2,35,0,11
	.byte	'cursor',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'length',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'historyAdd',0
	.word	179
	.byte	1,2,35,8,11
	.byte	'historyItem',0
	.word	240
	.byte	2,2,35,10,0,26,2
	.word	2290
	.byte	27,1,0,26,129,1
	.word	2290
	.byte	27,128,1,0,26,128,1
	.word	2290
	.byte	27,127,0,29,6,191,1,9,1,30
	.byte	'IFX_SHELL_CMD_STATE_NORMAL',0,0,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE',0,1,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET',0,2,30
	.byte	'IFX_SHELL_CMD_STATE_ESCAPE_BRACKET_NUMBER',0,3,0,25,6,221,1,9,136,2,11
	.byte	'echo',0
	.word	3098
	.byte	2,2,35,0,11
	.byte	'inputbuffer',0
	.word	3107
	.byte	129,1,2,35,2,11
	.byte	'cmdStr',0
	.word	3118
	.byte	128,1,3,35,131,1,11
	.byte	'cmdState',0
	.word	3128
	.byte	1,3,35,131,2,11
	.byte	'escBracketNum',0
	.word	2290
	.byte	1,3,35,132,2,0,25,6,235,1,9,224,2,11
	.byte	'io',0
	.word	1485
	.byte	4,2,35,0,11
	.byte	'control',0
	.word	2877
	.byte	1,2,35,4,11
	.byte	'cmdHistory',0
	.word	2993
	.byte	40,2,35,8,11
	.byte	'cmd',0
	.word	3002
	.byte	12,2,35,48,11
	.byte	'locals',0
	.word	3274
	.byte	136,2,2,35,60,11
	.byte	'commandList',0
	.word	2572
	.byte	4,3,35,196,2,11
	.byte	'protocol',0
	.word	2623
	.byte	24,3,35,200,2,0
.L513:
	.byte	4
	.word	3379
	.byte	17
	.word	2733
.L515:
	.byte	4
	.word	3512
.L519:
	.byte	4
	.word	2988
.L542:
	.byte	4
	.word	3002
.L567:
	.byte	4
	.word	2308
.L571:
	.byte	26,128,2
	.word	2290
	.byte	27,255,1,0
.L582:
	.byte	4
	.word	202
.L584:
	.byte	26,32
	.word	2290
	.byte	27,31,0
.L589:
	.byte	4
	.word	365
.L596:
	.byte	4
	.word	913
.L604:
	.byte	4
	.word	258
.L606:
	.byte	26,64
	.word	2290
	.byte	27,63,0
.L611:
	.byte	4
	.word	1938
.L619:
	.byte	4
	.word	1884
.L625:
	.byte	4
	.word	1884
	.byte	25,6,149,2,9,8,11
	.byte	'syntax',0
	.word	2308
	.byte	4,2,35,0,11
	.byte	'description',0
	.word	2308
	.byte	4,2,35,4,0,17
	.word	3601
.L689:
	.byte	4
	.word	3645
	.byte	21
	.word	1832
	.byte	22
	.word	1858
	.byte	14,0,21
	.word	1893
	.byte	22
	.word	1925
	.byte	14,0,21
	.word	1964
	.byte	22
	.word	1983
	.byte	14,0,21
	.word	1999
	.byte	22
	.word	2014
	.byte	22
	.word	2028
	.byte	14,0,31
	.word	2988
	.byte	31
	.word	2303
	.byte	32
	.byte	'strcpy',0,7,39,17
	.word	2988
	.byte	1,1,1,1,33,7,39,33
	.word	3708
	.byte	33,7,39,56
	.word	3713
	.byte	0,31
	.word	2988
	.byte	31
	.word	2303
	.byte	32
	.byte	'strncpy',0,7,40,17
	.word	2988
	.byte	1,1,1,1,33,7,40,33
	.word	3754
	.byte	33,7,40,56
	.word	3759
	.byte	33,7,40,68
	.word	2094
	.byte	0,32
	.byte	'strstr',0,7,48,17
	.word	2988
	.byte	1,1,1,1,33,7,48,39
	.word	2303
	.byte	33,7,48,53
	.word	2303
	.byte	0,32
	.byte	'strcmp',0,7,50,17
	.word	2045
	.byte	1,1,1,1,33,7,50,39
	.word	2303
	.byte	33,7,50,53
	.word	2303
	.byte	0,32
	.byte	'strlen',0,7,52,17
	.word	2094
	.byte	1,1,1,1,33,7,52,39
	.word	2303
	.byte	0,32
	.byte	'memset',0,7,56,17
	.word	202
	.byte	1,1,1,1,33,7,56,33
	.word	202
	.byte	33,7,56,36
	.word	2045
	.byte	33,7,56,41
	.word	2094
	.byte	0,31
	.word	2303
	.byte	31
	.word	2303
	.byte	32
	.byte	'sscanf',0,8,145,1,16
	.word	2045
	.byte	1,1,1,1,33,8,145,1,38
	.word	3953
	.byte	33,8,145,1,61
	.word	3958
	.byte	24,8,145,1,73,0
.L750:
	.byte	4
	.word	2536
	.byte	34
	.byte	'__INDIRECT__',0,9,1,1,1,1,1,5
	.byte	'__wchar_t',0,9,1,1
	.word	240
	.byte	5
	.byte	'__size_t',0,9,1,1
	.word	2094
	.byte	5
	.byte	'__ptrdiff_t',0,9,1,1
	.word	2045
	.byte	35,1,4
	.word	4087
	.byte	5
	.byte	'__codeptr',0,9,1,1
	.word	4089
	.byte	5
	.byte	'size_t',0,10,24,25
	.word	2094
	.byte	5
	.byte	'boolean',0,11,101,29
	.word	179
	.byte	5
	.byte	'uint8',0,11,105,29
	.word	179
	.byte	2
	.byte	'unsigned short int',0,2,7,5
	.byte	'uint16',0,11,109,29
	.word	4157
	.byte	5
	.byte	'uint32',0,11,113,29
	.word	913
	.byte	5
	.byte	'uint64',0,11,118,29
	.word	1938
	.byte	5
	.byte	'sint16',0,11,126,29
	.word	240
	.byte	5
	.byte	'sint32',0,11,131,1,29
	.word	365
	.byte	5
	.byte	'sint64',0,11,139,1,29
	.word	258
	.byte	5
	.byte	'float32',0,11,168,1,29
	.word	1884
	.byte	5
	.byte	'float64',0,11,173,1,29
	.word	1884
	.byte	5
	.byte	'pvoid',0,5,57,28
	.word	202
	.byte	5
	.byte	'Ifx_TickTime',0,5,79,28
	.word	258
	.byte	5
	.byte	'Ifx_SizeT',0,5,92,16
	.word	240
	.byte	5
	.byte	'IfxStdIf_DPipe',0,1,71,32
	.word	1085
	.byte	8
	.word	179
	.byte	4
	.word	4381
	.byte	5
	.byte	'IfxStdIf_DPipe_WriteEvent',0,1,73,32
	.word	4386
	.byte	5
	.byte	'IfxStdIf_DPipe_ReadEvent',0,1,74,32
	.word	4386
	.byte	5
	.byte	'Ifx_Shell_Command',0,6,178,1,3
	.word	2456
	.byte	5
	.byte	'Ifx_Shell_CmdLine',0,6,188,1,3
	.word	3002
	.byte	5
	.byte	'Ifx_Shell_CmdState',0,6,197,1,3
	.word	3128
	.byte	5
	.byte	'Ifx_Shell_Protocol',0,6,208,1,3
	.word	2623
	.byte	5
	.byte	'Ifx_Shell_Flags',0,6,218,1,3
	.word	2877
	.byte	5
	.byte	'Ifx_Shell_Runtime',0,6,228,1,3
	.word	3274
	.byte	5
	.byte	'Ifx_Shell',0,6,131,2,3
	.word	3379
	.byte	5
	.byte	'Ifx_Shell_Config',0,6,144,2,3
	.word	2733
	.byte	5
	.byte	'Ifx_Shell_Syntax',0,6,153,2,3
	.word	3601
	.byte	5
	.byte	'_iob_flag_t',0,8,82,25
	.word	4157
.L780:
	.byte	26,128,10
	.word	2290
	.byte	27,255,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L339:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,22,0,3,8,58,15,59,15,57,15,73,19,0,0,6,21,1,73,19,54,15,39,12,0,0,7,5,0,73,19,0,0,8,53,0,73,19,0,0
	.byte	9,21,1,54,15,39,12,0,0,10,19,1,3,8,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,13,5,0,3,8,58,15,59,15,57,15,73,19,0,0,14,11,0,0,0
	.byte	15,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,16,21,0,54,15,39,12,0,0,17,38,0,73,19,0,0,18,46,1
	.byte	3,8,54,15,39,12,63,12,60,12,0,0,19,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,20,5,0,3,8,73,19,0,0,21
	.byte	46,1,49,19,0,0,22,5,0,49,19,0,0,23,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,24,24,0,58,15
	.byte	59,15,57,15,0,0,25,19,1,58,15,59,15,57,15,11,15,0,0,26,1,1,11,15,73,19,0,0,27,33,0,47,15,0,0,28,13,0,3
	.byte	8,11,15,73,19,13,15,12,15,56,9,0,0,29,4,1,58,15,59,15,57,15,11,15,0,0,30,40,0,3,8,28,13,0,0,31,55,0,73
	.byte	19,0,0,32,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,33,5,0,58,15,59,15,57,15,73,19
	.byte	0,0,34,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,35,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L340:
	.word	.L1035-.L1034
.L1034:
	.half	3
	.word	.L1037-.L1036
.L1036:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0
	.byte	'IfxStdIf.h',0,1,0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,2,0,0
	.byte	'IfxCpu_Intrinsics.h',0,2,0,0
	.byte	'Ifx_Types.h',0,2,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.h',0,0,0,0
	.byte	'string.h',0,3,0,0
	.byte	'stdio.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'stddef.h',0,3,0,0
	.byte	'Platform_Types.h',0,2,0,0,0
.L1037:
.L1035:
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_info'
.L341:
	.word	256
	.half	3
	.word	.L342
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L344,.L343
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_initConfig',0,1,183,2,6,1,1,1
	.word	.L286,.L508,.L285
	.byte	4
	.byte	'config',0,1,183,2,45
	.word	.L509,.L510
	.byte	5
	.word	.L286,.L508
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_abbrev'
.L342:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_line'
.L343:
	.word	.L1039-.L1038
.L1038:
	.half	3
	.word	.L1041-.L1040
.L1040:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1041:
	.byte	5,34,7,0,5,2
	.word	.L286
	.byte	3,188,2,1,5,32,9
	.half	.L1042-.L286
	.byte	1,5,36,9
	.half	.L1043-.L1042
	.byte	3,4,1,5,34,1,9
	.half	.L1044-.L1043
	.byte	3,1,1,9
	.half	.L1045-.L1044
	.byte	3,1,1,9
	.half	.L1046-.L1045
	.byte	3,1,1,9
	.half	.L1047-.L1046
	.byte	3,1,1,9
	.half	.L1048-.L1047
	.byte	3,1,1,5,36,9
	.half	.L1049-.L1048
	.byte	3,1,1,5,34,1,9
	.half	.L1050-.L1049
	.byte	3,1,1,9
	.half	.L1051-.L1050
	.byte	3,1,1,5,1,9
	.half	.L1052-.L1051
	.byte	3,2,1,9
	.half	.L345-.L1052
	.byte	0,1,1
.L1039:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_ranges'
.L344:
	.word	-1,.L286,0,.L345-.L286,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_info'
.L346:
	.word	313
	.half	3
	.word	.L347
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L349,.L348
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_init',0,1,206,2,9
	.word	.L511
	.byte	1,1,1
	.word	.L288,.L512,.L287
	.byte	4
	.byte	'shell',0,1,206,2,35
	.word	.L513,.L514
	.byte	4
	.byte	'config',0,1,206,2,66
	.word	.L515,.L516
	.byte	5
	.word	.L288,.L512
	.byte	6
	.byte	'i',0,1,208,2,12
	.word	.L517,.L518
	.byte	6
	.byte	'CmdHistory',0,1,209,2,12
	.word	.L519,.L520
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_abbrev'
.L347:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_line'
.L348:
	.word	.L1054-.L1053
.L1053:
	.half	3
	.word	.L1056-.L1055
.L1055:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1056:
	.byte	5,19,7,0,5,2
	.word	.L288
	.byte	3,211,2,1,5,9,3,122,1,5,22,9
	.half	.L855-.L288
	.byte	3,6,1,5,9,3,122,1,5,22,9
	.half	.L856-.L855
	.byte	3,6,1,5,43,9
	.half	.L854-.L856
	.byte	3,2,1,5,35,9
	.half	.L1057-.L854
	.byte	1,5,37,9
	.half	.L1058-.L1057
	.byte	3,1,1,5,35,1,5,12,9
	.half	.L1059-.L1058
	.byte	3,16,1,5,43,9
	.half	.L1060-.L1059
	.byte	3,114,1,5,35,9
	.half	.L1061-.L1060
	.byte	1,5,36,9
	.half	.L1062-.L1061
	.byte	3,14,1,5,30,3,125,1,5,19,9
	.half	.L1063-.L1062
	.byte	3,118,1,5,43,9
	.half	.L1064-.L1063
	.byte	1,5,12,9
	.half	.L1065-.L1064
	.byte	3,13,1,5,35,9
	.half	.L1066-.L1065
	.byte	3,115,1,5,36,9
	.half	.L1067-.L1066
	.byte	3,13,1,5,43,9
	.half	.L1068-.L1067
	.byte	3,116,1,5,35,9
	.half	.L1069-.L1068
	.byte	1,5,43,9
	.half	.L1070-.L1069
	.byte	3,1,1,5,35,9
	.half	.L1071-.L1070
	.byte	1,9
	.half	.L1072-.L1071
	.byte	3,1,1,9
	.half	.L1073-.L1072
	.byte	3,1,1,9
	.half	.L1074-.L1073
	.byte	3,2,1,9
	.half	.L1075-.L1074
	.byte	3,1,1,5,23,9
	.half	.L1076-.L1075
	.byte	3,3,1,5,36,9
	.half	.L1077-.L1076
	.byte	3,3,1,5,26,9
	.half	.L1078-.L1077
	.byte	3,1,1,5,51,9
	.half	.L1079-.L1078
	.byte	3,10,1,5,52,9
	.half	.L1080-.L1079
	.byte	3,122,1,5,31,9
	.half	.L1081-.L1080
	.byte	1,5,23,9
	.half	.L1082-.L1081
	.byte	3,4,1,5,39,9
	.half	.L857-.L1082
	.byte	3,4,1,5,36,9
	.half	.L49-.L857
	.byte	1,5,43,9
	.half	.L1083-.L49
	.byte	1,5,23,9
	.half	.L1084-.L1083
	.byte	1,5,51,3,126,1,5,30,7,9
	.half	.L1085-.L1084
	.byte	3,5,1,5,28,1,5,27,9
	.half	.L1086-.L1085
	.byte	3,3,1,5,22,9
	.half	.L1087-.L1086
	.byte	1,5,27,9
	.half	.L1088-.L1087
	.byte	1,5,23,9
	.half	.L858-.L1088
	.byte	3,3,1,5,5,9
	.half	.L1089-.L858
	.byte	1,5,35,7,9
	.half	.L1090-.L1089
	.byte	3,2,1,5,41,9
	.half	.L1091-.L1090
	.byte	1,5,35,9
	.half	.L1092-.L1091
	.byte	3,1,1,5,41,9
	.half	.L1093-.L1092
	.byte	1,5,12,9
	.half	.L50-.L1093
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L350-.L50
	.byte	0,1,1
.L1054:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_ranges'
.L349:
	.word	-1,.L288,0,.L350-.L288,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_info'
.L351:
	.word	251
	.half	3
	.word	.L352
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L354,.L353
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_deinit',0,1,139,5,6,1,1,1
	.word	.L294,.L521,.L293
	.byte	4
	.byte	'shell',0,1,139,5,34
	.word	.L513,.L522
	.byte	5
	.word	.L294,.L521
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_abbrev'
.L352:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_line'
.L353:
	.word	.L1095-.L1094
.L1094:
	.half	3
	.word	.L1097-.L1096
.L1096:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1097:
	.byte	5,1,7,0,5,2
	.word	.L294
	.byte	3,142,5,1,7,9
	.half	.L355-.L294
	.byte	0,1,1
.L1095:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_ranges'
.L354:
	.word	-1,.L294,0,.L355-.L294,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_info'
.L356:
	.word	288
	.half	3
	.word	.L357
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L359,.L358
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_enable',0,1,158,10,6,1,1,1
	.word	.L332,.L523,.L331
	.byte	4
	.byte	'shell',0,1,158,10,34
	.word	.L513,.L524
	.byte	5
	.word	.L332,.L523
	.byte	6
	.word	.L525,.L526,.L527
	.byte	7
	.word	.L528,.L529
	.byte	8
	.word	.L530,.L526,.L527
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_abbrev'
.L357:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_line'
.L358:
	.word	.L1099-.L1098
.L1098:
	.half	3
	.word	.L1101-.L1100
.L1100:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L1101:
	.byte	5,6,7,0,5,2
	.word	.L332
	.byte	3,157,10,1,5,33,9
	.half	.L1026-.L332
	.byte	3,3,1,4,2,5,10,9
	.half	.L526-.L1026
	.byte	3,183,120,1,5,25,9
	.half	.L1102-.L526
	.byte	1,4,1,5,19,9
	.half	.L527-.L1102
	.byte	3,203,7,1,5,28,9
	.half	.L1103-.L527
	.byte	1,5,1,9
	.half	.L1104-.L1103
	.byte	3,1,1,7,9
	.half	.L360-.L1104
	.byte	0,1,1
.L1099:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_ranges'
.L359:
	.word	-1,.L332,0,.L360-.L332,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_info'
.L361:
	.word	252
	.half	3
	.word	.L362
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L364,.L363
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_disable',0,1,167,10,6,1,1,1
	.word	.L334,.L531,.L333
	.byte	4
	.byte	'shell',0,1,167,10,35
	.word	.L513,.L532
	.byte	5
	.word	.L334,.L531
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_abbrev'
.L362:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_line'
.L363:
	.word	.L1106-.L1105
.L1105:
	.half	3
	.word	.L1108-.L1107
.L1107:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1108:
	.byte	5,19,7,0,5,2
	.word	.L334
	.byte	3,168,10,1,5,28,9
	.half	.L1109-.L334
	.byte	1,5,1,9
	.half	.L1110-.L1109
	.byte	3,1,1,7,9
	.half	.L365-.L1110
	.byte	0,1,1
.L1106:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_ranges'
.L364:
	.word	-1,.L334,0,.L365-.L334,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_info'
.L366:
	.word	524
	.half	3
	.word	.L367
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L369,.L368
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_process',0,1,135,3,6,1,1,1
	.word	.L290,.L533,.L289
	.byte	4
	.byte	'shell',0,1,135,3,35
	.word	.L513,.L534
	.byte	5
	.word	.L535
	.byte	6
	.byte	'i',0,1,137,3,24
	.word	.L536,.L537
	.byte	6
	.byte	'j',0,1,137,3,27
	.word	.L536,.L538
	.byte	6
	.byte	'count',0,1,138,3,24
	.word	.L536,.L539
	.byte	6
	.byte	'readCount',0,1,139,3,24
	.word	.L536,.L540
	.byte	6
	.byte	'NormalKeyPress',0,1,140,3,24
	.word	.L511,.L541
	.byte	6
	.byte	'Cmd',0,1,142,3,24
	.word	.L542,.L543
	.byte	6
	.byte	'inputbuffer',0,1,143,3,24
	.word	.L544,.L545
	.byte	6
	.byte	'cmdStr',0,1,144,3,24
	.word	.L544,.L546
	.byte	6
	.byte	'CmdHistory',0,1,145,3,24
	.word	.L519,.L547
	.byte	7
	.word	.L548,.L549,.L550
	.byte	8
	.word	.L551,.L552
	.byte	8
	.word	.L553,.L554
	.byte	8
	.word	.L555,.L556
	.byte	8
	.word	.L557,.L558
	.byte	9
	.word	.L559,.L549,.L550
	.byte	0,10
	.word	.L560,.L80
	.byte	6
	.byte	'ii',0,1,253,3,25
	.word	.L561,.L562
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_abbrev'
.L367:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0
	.byte	10,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_line'
.L368:
	.word	.L1112-.L1111
.L1111:
	.half	3
	.word	.L1114-.L1113
.L1113:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L1114:
	.byte	5,6,7,0,5,2
	.word	.L290
	.byte	3,134,3,1,5,43,9
	.half	.L859-.L290
	.byte	3,8,1,5,23,9
	.half	.L861-.L859
	.byte	3,4,1,5,43,9
	.half	.L1115-.L861
	.byte	3,124,1,9
	.half	.L880-.L1115
	.byte	3,2,1,9
	.half	.L875-.L880
	.byte	3,127,1,5,5,9
	.half	.L877-.L875
	.byte	3,3,1,5,25,7,9
	.half	.L1116-.L877
	.byte	3,5,1,5,9,9
	.half	.L860-.L1116
	.byte	1,5,65,7,9
	.half	.L1117-.L860
	.byte	1,5,74,9
	.half	.L1118-.L1117
	.byte	1,5,24,7,9
	.half	.L1119-.L1118
	.byte	3,2,1,5,48,9
	.half	.L863-.L1119
	.byte	1,5,49,7,9
	.half	.L53-.L863
	.byte	3,20,1,5,34,3,1,1,5,19,9
	.half	.L864-.L53
	.byte	3,127,1,4,2,5,52,9
	.half	.L549-.L864
	.byte	3,226,126,1,4,1,5,62,3,159,1,1,4,2,5,52,9
	.half	.L1120-.L549
	.byte	3,225,126,1,5,17,9
	.half	.L865-.L1120
	.byte	1,5,29,9
	.half	.L1121-.L865
	.byte	1,5,52,9
	.half	.L1122-.L1121
	.byte	1,4,1,5,18,9
	.half	.L550-.L1122
	.byte	3,162,1,1,5,21,3,126,1,5,16,9
	.half	.L878-.L550
	.byte	3,2,1,5,30,1,5,32,9
	.half	.L57-.L878
	.byte	3,6,1,5,18,9
	.half	.L866-.L57
	.byte	3,51,1,5,28,9
	.half	.L1123-.L866
	.byte	3,74,1,5,32,9
	.half	.L876-.L1123
	.byte	3,3,1,5,18,9
	.half	.L1124-.L876
	.byte	3,51,1,7,9
	.half	.L1125-.L1124
	.byte	3,80,1,9
	.half	.L1126-.L1125
	.byte	3,1,1,9
	.half	.L1127-.L1126
	.byte	3,212,0,1,9
	.half	.L1128-.L1127
	.byte	3,41,1,9
	.half	.L1129-.L1128
	.byte	3,1,1,9
	.half	.L1130-.L1129
	.byte	3,1,1,9
	.half	.L1131-.L1130
	.byte	3,1,1,9
	.half	.L1132-.L1131
	.byte	3,104,1,9
	.half	.L1133-.L1132
	.byte	3,1,1,9
	.half	.L1134-.L1133
	.byte	3,1,1,9
	.half	.L1135-.L1134
	.byte	3,1,1,9
	.half	.L1136-.L1135
	.byte	3,110,1,9
	.half	.L1137-.L1136
	.byte	3,55,1,5,17,9
	.half	.L59-.L1137
	.byte	3,242,126,1,5,24,9
	.half	.L73-.L59
	.byte	3,4,1,5,35,9
	.half	.L1138-.L73
	.byte	1,5,17,9
	.half	.L1139-.L1138
	.byte	1,5,27,7,9
	.half	.L1140-.L1139
	.byte	3,2,1,5,43,9
	.half	.L867-.L1140
	.byte	1,5,41,9
	.half	.L1141-.L867
	.byte	1,5,28,9
	.half	.L1142-.L1141
	.byte	3,2,1,5,21,9
	.half	.L1143-.L1142
	.byte	1,5,62,7,9
	.half	.L1144-.L1143
	.byte	3,6,1,5,75,9
	.half	.L1145-.L1144
	.byte	3,125,1,5,47,9
	.half	.L76-.L1145
	.byte	3,3,1,5,62,9
	.half	.L1146-.L76
	.byte	1,5,71,9
	.half	.L1147-.L1146
	.byte	1,5,75,9
	.half	.L1148-.L1147
	.byte	3,125,1,5,43,7,9
	.half	.L1149-.L1148
	.byte	3,7,1,5,56,9
	.half	.L868-.L1149
	.byte	1,5,43,9
	.half	.L869-.L868
	.byte	1,5,56,9
	.half	.L1150-.L869
	.byte	1,5,46,9
	.half	.L75-.L1150
	.byte	3,4,1,5,35,9
	.half	.L74-.L75
	.byte	3,4,1,5,17,9
	.half	.L1151-.L74
	.byte	1,5,47,7,9
	.half	.L1152-.L1151
	.byte	3,2,1,5,53,9
	.half	.L1153-.L1152
	.byte	1,5,29,9
	.half	.L77-.L1153
	.byte	3,4,1,9
	.half	.L1154-.L77
	.byte	3,3,1,5,33,9
	.half	.L1155-.L1154
	.byte	3,3,1,5,36,9
	.half	.L1156-.L1155
	.byte	3,3,1,5,34,1,5,17,9
	.half	.L1157-.L1156
	.byte	3,1,1,5,24,9
	.half	.L58-.L1157
	.byte	3,5,1,5,17,9
	.half	.L1158-.L58
	.byte	1,5,39,7,9
	.half	.L1159-.L1158
	.byte	3,3,1,5,21,9
	.half	.L1160-.L1159
	.byte	1,5,57,7,9
	.half	.L1161-.L1160
	.byte	3,3,1,5,51,9
	.half	.L1162-.L1161
	.byte	1,5,57,9
	.half	.L1163-.L1162
	.byte	1,5,37,9
	.half	.L1164-.L1163
	.byte	3,3,1,5,73,9
	.half	.L873-.L1164
	.byte	3,2,1,5,62,9
	.half	.L1165-.L873
	.byte	3,126,1,5,73,9
	.half	.L82-.L1165
	.byte	3,2,1,5,55,9
	.half	.L1166-.L82
	.byte	1,5,61,9
	.half	.L1167-.L1166
	.byte	1,5,65,9
	.half	.L1168-.L1167
	.byte	3,126,1,5,54,9
	.half	.L81-.L1168
	.byte	1,5,62,9
	.half	.L1169-.L81
	.byte	1,5,57,7,9
	.half	.L1170-.L1169
	.byte	3,6,1,5,25,9
	.half	.L560-.L1170
	.byte	3,1,1,5,40,9
	.half	.L80-.L560
	.byte	3,4,1,5,80,9
	.half	.L1171-.L80
	.byte	1,5,36,9
	.half	.L1172-.L1171
	.byte	1,5,62,9
	.half	.L1173-.L1172
	.byte	1,5,89,9
	.half	.L1174-.L1173
	.byte	1,5,36,1,5,89,9
	.half	.L1175-.L1174
	.byte	1,5,31,9
	.half	.L1176-.L1175
	.byte	3,3,1,5,27,9
	.half	.L1177-.L1176
	.byte	1,5,47,9
	.half	.L1178-.L1177
	.byte	1,5,45,9
	.half	.L1179-.L1178
	.byte	1,5,24,9
	.half	.L1180-.L1179
	.byte	3,2,1,5,32,9
	.half	.L1181-.L1180
	.byte	1,5,24,9
	.half	.L1182-.L1181
	.byte	3,1,1,5,32,9
	.half	.L1183-.L1182
	.byte	1,5,39,9
	.half	.L1184-.L1183
	.byte	3,3,1,5,37,1,5,17,9
	.half	.L1185-.L1184
	.byte	3,3,1,5,42,9
	.half	.L61-.L1185
	.byte	3,4,1,5,17,3,1,1,5,34,9
	.half	.L70-.L61
	.byte	3,5,1,5,17,9
	.half	.L1186-.L70
	.byte	1,5,46,7,9
	.half	.L1187-.L1186
	.byte	3,3,1,5,80,1,5,34,9
	.half	.L66-.L1187
	.byte	3,15,1,5,17,9
	.half	.L1188-.L66
	.byte	1,5,71,7,9
	.half	.L1189-.L1188
	.byte	3,3,1,5,73,1,5,34,9
	.half	.L62-.L1189
	.byte	3,18,1,5,17,9
	.half	.L1190-.L62
	.byte	1,5,49,7,9
	.half	.L1191-.L1190
	.byte	3,3,1,5,51,9
	.half	.L1192-.L1191
	.byte	3,1,1,5,65,3,127,1,5,34,9
	.half	.L71-.L1192
	.byte	3,13,1,5,17,9
	.half	.L1193-.L71
	.byte	1,5,84,7,9
	.half	.L1194-.L1193
	.byte	3,3,1,5,68,1,5,84,9
	.half	.L90-.L1194
	.byte	1,5,46,9
	.half	.L883-.L90
	.byte	3,3,1,5,44,9
	.half	.L86-.L883
	.byte	1,5,88,9
	.half	.L1195-.L86
	.byte	3,125,1,5,32,9
	.half	.L72-.L1195
	.byte	3,14,1,5,13,9
	.half	.L78-.L72
	.byte	3,8,1,5,42,7,9
	.half	.L1196-.L78
	.byte	3,3,1,5,40,1,5,24,9
	.half	.L1197-.L1196
	.byte	3,3,1,5,64,9
	.half	.L1198-.L1197
	.byte	1,5,17,9
	.half	.L1199-.L1198
	.byte	1,5,39,7,9
	.half	.L1200-.L1199
	.byte	3,3,1,5,37,1,5,54,9
	.half	.L1201-.L1200
	.byte	3,3,1,5,31,9
	.half	.L884-.L1201
	.byte	1,5,27,9
	.half	.L1202-.L884
	.byte	1,5,54,9
	.half	.L1203-.L1202
	.byte	1,5,41,9
	.half	.L1204-.L1203
	.byte	1,5,24,9
	.half	.L1205-.L1204
	.byte	3,1,1,5,32,9
	.half	.L1206-.L1205
	.byte	1,5,44,9
	.half	.L1207-.L1206
	.byte	3,3,1,5,57,9
	.half	.L1208-.L1207
	.byte	1,5,40,9
	.half	.L1209-.L1208
	.byte	1,5,33,1,5,39,9
	.half	.L1210-.L1209
	.byte	3,2,1,5,21,9
	.half	.L1211-.L1210
	.byte	1,5,60,7,9
	.half	.L1212-.L1211
	.byte	3,3,1,5,47,9
	.half	.L1213-.L1212
	.byte	1,5,62,9
	.half	.L1214-.L1213
	.byte	3,1,1,5,51,9
	.half	.L1215-.L1214
	.byte	1,5,70,9
	.half	.L1216-.L1215
	.byte	1,5,21,9
	.half	.L1217-.L1216
	.byte	3,124,1,5,37,9
	.half	.L96-.L1217
	.byte	3,10,1,5,33,9
	.half	.L95-.L96
	.byte	3,175,126,1,5,30,9
	.half	.L56-.L95
	.byte	1,5,1,7,9
	.half	.L52-.L56
	.byte	3,214,1,1,7,9
	.half	.L370-.L52
	.byte	0,1,1
.L1112:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_ranges'
.L369:
	.word	-1,.L290,0,.L370-.L290,0,0
.L535:
	.word	-1,.L290,0,.L533-.L290,-1,.L292,0,.L495-.L292,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_info'
.L371:
	.word	262
	.half	3
	.word	.L372
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L374,.L373
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_skipWhitespace',0,1,146,5,7
	.word	.L563
	.byte	1,1,1
	.word	.L296,.L564,.L295
	.byte	4
	.byte	'args',0,1,146,5,38
	.word	.L563,.L565
	.byte	5
	.word	.L296,.L564
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_abbrev'
.L372:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_line'
.L373:
	.word	.L1219-.L1218
.L1218:
	.half	3
	.word	.L1221-.L1220
.L1220:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1221:
	.byte	5,5,7,0,5,2
	.word	.L296
	.byte	3,147,5,1,5,66,7,9
	.half	.L1222-.L296
	.byte	3,2,1,5,25,9
	.half	.L102-.L1222
	.byte	3,2,1,5,17,9
	.half	.L100-.L102
	.byte	3,126,1,5,16,9
	.half	.L1223-.L100
	.byte	1,5,51,7,9
	.half	.L1224-.L1223
	.byte	1,5,5,9
	.half	.L99-.L1224
	.byte	3,6,1,5,1,9
	.half	.L887-.L99
	.byte	3,1,1,7,9
	.half	.L375-.L887
	.byte	0,1,1
.L1219:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_ranges'
.L374:
	.word	-1,.L296,0,.L375-.L296,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_info'
.L376:
	.word	349
	.half	3
	.word	.L377
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L379,.L378
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_matchToken',0,1,160,5,9
	.word	.L511
	.byte	1,1,1
	.word	.L298,.L566,.L297
	.byte	4
	.byte	'argsPtr',0,1,160,5,37
	.word	.L567,.L568
	.byte	4
	.byte	'token',0,1,160,5,52
	.word	.L563,.L569
	.byte	5
	.word	.L298,.L566
	.byte	6
	.byte	'savedArguments',0,1,162,5,13
	.word	.L563,.L570
	.byte	6
	.byte	'buffer',0,1,163,5,13
	.word	.L571,.L572
	.byte	6
	.byte	'result',0,1,164,5,13
	.word	.L511,.L573
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_abbrev'
.L377:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_line'
.L378:
	.word	.L1226-.L1225
.L1225:
	.half	3
	.word	.L1228-.L1227
.L1227:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1228:
	.byte	5,9,7,0,5,2
	.word	.L298
	.byte	3,159,5,1,5,30,9
	.half	.L892-.L298
	.byte	3,2,1,5,28,9
	.half	.L893-.L892
	.byte	3,2,1,5,39,3,2,1,5,47,9
	.half	.L890-.L893
	.byte	1,5,5,9
	.half	.L889-.L890
	.byte	1,5,27,7,9
	.half	.L1229-.L889
	.byte	3,2,1,5,20,9
	.half	.L895-.L1229
	.byte	3,2,1,5,5,9
	.half	.L105-.L895
	.byte	3,4,1,5,18,7,9
	.half	.L1230-.L105
	.byte	3,3,1,5,5,9
	.half	.L107-.L1230
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L380-.L107
	.byte	0,1,1
.L1226:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_ranges'
.L379:
	.word	-1,.L298,0,.L380-.L298,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_info'
.L381:
	.word	351
	.half	3
	.word	.L382
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L384,.L383
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseToken',0,1,212,5,9
	.word	.L511
	.byte	1,1,1
	.word	.L302,.L574,.L301
	.byte	4
	.byte	'argsPtr',0,1,212,5,37
	.word	.L567,.L575
	.byte	4
	.byte	'tokenBuffer',0,1,212,5,52
	.word	.L544,.L576
	.byte	4
	.byte	'bufferLength',0,1,212,5,69
	.word	.L561,.L577
	.byte	5
	.word	.L302,.L574
	.byte	6
	.byte	'mindex',0,1,214,5,11
	.word	.L561,.L578
	.byte	6
	.byte	'args',0,1,215,5,11
	.word	.L563,.L579
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_abbrev'
.L382:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_line'
.L383:
	.word	.L1232-.L1231
.L1231:
	.half	3
	.word	.L1234-.L1233
.L1233:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1234:
	.byte	5,9,7,0,5,2
	.word	.L302
	.byte	3,211,5,1,5,18,9
	.half	.L907-.L302
	.byte	3,2,1,5,45,3,1,1,5,9,9
	.half	.L905-.L907
	.byte	3,125,1,5,45,9
	.half	.L909-.L905
	.byte	3,3,1,5,22,9
	.half	.L906-.L909
	.byte	3,2,1,5,20,1,5,5,9
	.half	.L1235-.L906
	.byte	3,2,1,5,9,7,9
	.half	.L1236-.L1235
	.byte	3,5,1,5,18,9
	.half	.L1237-.L1236
	.byte	1,5,5,9
	.half	.L1238-.L1237
	.byte	1,5,65,7,9
	.half	.L1239-.L1238
	.byte	3,4,1,5,13,9
	.half	.L117-.L1239
	.byte	3,2,1,5,23,7,9
	.half	.L1240-.L117
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1241-.L1240
	.byte	1,5,17,9
	.half	.L116-.L1241
	.byte	3,124,1,5,16,9
	.half	.L1242-.L116
	.byte	1,5,60,7,9
	.half	.L1243-.L1242
	.byte	1,5,57,9
	.half	.L1244-.L1243
	.byte	1,5,22,7,9
	.half	.L119-.L1244
	.byte	3,12,1,5,9,9
	.half	.L1245-.L119
	.byte	1,5,21,7,9
	.half	.L1246-.L1245
	.byte	3,5,1,5,24,9
	.half	.L1247-.L1246
	.byte	1,5,9,9
	.half	.L115-.L1247
	.byte	3,5,1,5,20,7,9
	.half	.L114-.L115
	.byte	3,2,1,5,1,3,24,1,5,67,7,9
	.half	.L122-.L114
	.byte	3,107,1,5,13,9
	.half	.L125-.L122
	.byte	3,2,1,5,23,7,9
	.half	.L1248-.L125
	.byte	3,3,1,5,39,3,127,1,5,37,9
	.half	.L1249-.L1248
	.byte	1,5,25,9
	.half	.L126-.L1249
	.byte	3,4,1,5,17,9
	.half	.L124-.L126
	.byte	3,120,1,5,16,9
	.half	.L1250-.L124
	.byte	1,5,52,7,9
	.half	.L1251-.L1250
	.byte	1,5,5,9
	.half	.L121-.L1251
	.byte	3,13,1,5,48,7,9
	.half	.L1252-.L121
	.byte	3,2,1,5,26,9
	.half	.L908-.L1252
	.byte	1,5,20,9
	.half	.L1253-.L908
	.byte	1,5,56,9
	.half	.L910-.L1253
	.byte	1,5,54,9
	.half	.L1254-.L910
	.byte	1,5,41,9
	.half	.L129-.L1254
	.byte	3,3,1,5,14,9
	.half	.L911-.L129
	.byte	1,5,12,9
	.half	.L1255-.L911
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L385-.L1255
	.byte	0,1,1
.L1232:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_ranges'
.L384:
	.word	-1,.L302,0,.L385-.L302,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_info'
.L386:
	.word	325
	.half	3
	.word	.L387
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L389,.L388
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseAddress',0,1,151,6,9
	.word	.L511
	.byte	1,1,1
	.word	.L304,.L580,.L303
	.byte	4
	.byte	'argsPtr',0,1,151,6,39
	.word	.L567,.L581
	.byte	4
	.byte	'address',0,1,151,6,55
	.word	.L582,.L583
	.byte	5
	.word	.L304,.L580
	.byte	6
	.byte	'buffer',0,1,153,6,13
	.word	.L584,.L585
	.byte	6
	.byte	'result',0,1,154,6,13
	.word	.L511,.L586
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_abbrev'
.L387:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_line'
.L388:
	.word	.L1257-.L1256
.L1256:
	.half	3
	.word	.L1259-.L1258
.L1258:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1259:
	.byte	5,9,7,0,5,2
	.word	.L304
	.byte	3,150,6,1,5,16,9
	.half	.L916-.L304
	.byte	3,5,1,5,14,9
	.half	.L1260-.L916
	.byte	1,5,39,9
	.half	.L1261-.L1260
	.byte	3,2,1,5,47,9
	.half	.L914-.L1261
	.byte	1,5,5,9
	.half	.L915-.L914
	.byte	1,5,16,7,9
	.half	.L1262-.L915
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L131-.L1262
	.byte	3,4,1,5,53,9
	.half	.L1263-.L131
	.byte	1,5,18,9
	.half	.L917-.L1263
	.byte	1,5,79,7,9
	.half	.L1264-.L917
	.byte	1,5,64,9
	.half	.L1265-.L1264
	.byte	1,5,72,9
	.half	.L1266-.L1265
	.byte	1,5,104,9
	.half	.L1267-.L1266
	.byte	1,5,53,9
	.half	.L1268-.L1267
	.byte	1,5,5,9
	.half	.L132-.L1268
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L390-.L132
	.byte	0,1,1
.L1257:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_ranges'
.L389:
	.word	-1,.L304,0,.L390-.L304,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_info'
.L391:
	.word	323
	.half	3
	.word	.L392
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L394,.L393
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseSInt32',0,1,171,6,9
	.word	.L511
	.byte	1,1,1
	.word	.L306,.L587,.L305
	.byte	4
	.byte	'argsPtr',0,1,171,6,38
	.word	.L567,.L588
	.byte	4
	.byte	'value',0,1,171,6,55
	.word	.L589,.L590
	.byte	5
	.word	.L306,.L587
	.byte	6
	.byte	'value64',0,1,173,6,13
	.word	.L591,.L592
	.byte	6
	.byte	'result',0,1,174,6,13
	.word	.L511,.L593
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_abbrev'
.L392:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_line'
.L393:
	.word	.L1270-.L1269
.L1269:
	.half	3
	.word	.L1272-.L1271
.L1271:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1272:
	.byte	5,9,7,0,5,2
	.word	.L306
	.byte	3,170,6,1,5,14,9
	.half	.L921-.L306
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1273-.L921
	.byte	3,2,1,5,5,9
	.half	.L919-.L1273
	.byte	1,5,1,7,9
	.half	.L1274-.L919
	.byte	3,11,1,5,26,7,9
	.half	.L136-.L1274
	.byte	3,123,1,5,16,9
	.half	.L1275-.L136
	.byte	1,9
	.half	.L1276-.L1275
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L395-.L1276
	.byte	0,1,1
.L1270:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_ranges'
.L394:
	.word	-1,.L306,0,.L395-.L306,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_info'
.L396:
	.word	340
	.half	3
	.word	.L397
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L399,.L398
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseUInt32',0,1,192,6,9
	.word	.L511
	.byte	1,1,1
	.word	.L308,.L594,.L307
	.byte	4
	.byte	'argsPtr',0,1,192,6,38
	.word	.L567,.L595
	.byte	4
	.byte	'value',0,1,192,6,55
	.word	.L596,.L597
	.byte	4
	.byte	'hex',0,1,192,6,70
	.word	.L511,.L598
	.byte	5
	.word	.L308,.L594
	.byte	6
	.byte	'value64',0,1,194,6,13
	.word	.L599,.L600
	.byte	6
	.byte	'result',0,1,195,6,13
	.word	.L511,.L601
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_abbrev'
.L397:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_line'
.L398:
	.word	.L1278-.L1277
.L1277:
	.half	3
	.word	.L1280-.L1279
.L1279:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1280:
	.byte	5,9,7,0,5,2
	.word	.L308
	.byte	3,191,6,1,5,14,9
	.half	.L925-.L308
	.byte	3,5,1,5,12,1,5,41,9
	.half	.L1281-.L925
	.byte	3,2,1,5,50,9
	.half	.L924-.L1281
	.byte	1,5,5,9
	.half	.L923-.L924
	.byte	1,5,1,7,9
	.half	.L1282-.L923
	.byte	3,11,1,5,26,7,9
	.half	.L139-.L1282
	.byte	3,123,1,5,16,9
	.half	.L1283-.L139
	.byte	1,9
	.half	.L1284-.L1283
	.byte	3,1,1,5,1,3,4,1,7,9
	.half	.L400-.L1284
	.byte	0,1,1
.L1278:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_ranges'
.L399:
	.word	-1,.L308,0,.L400-.L308,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_info'
.L401:
	.word	322
	.half	3
	.word	.L402
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L404,.L403
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseSInt64',0,1,213,6,9
	.word	.L511
	.byte	1,1,1
	.word	.L310,.L602,.L309
	.byte	4
	.byte	'argsPtr',0,1,213,6,38
	.word	.L567,.L603
	.byte	4
	.byte	'value',0,1,213,6,55
	.word	.L604,.L605
	.byte	5
	.word	.L310,.L602
	.byte	6
	.byte	'buffer',0,1,215,6,13
	.word	.L606,.L607
	.byte	6
	.byte	'result',0,1,216,6,13
	.word	.L511,.L608
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_abbrev'
.L402:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_line'
.L403:
	.word	.L1286-.L1285
.L1285:
	.half	3
	.word	.L1288-.L1287
.L1287:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1288:
	.byte	5,9,7,0,5,2
	.word	.L310
	.byte	3,212,6,1,5,14,9
	.half	.L929-.L310
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1289-.L929
	.byte	3,2,1,5,47,9
	.half	.L928-.L1289
	.byte	1,5,5,9
	.half	.L927-.L928
	.byte	1,5,16,7,9
	.half	.L1290-.L927
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L142-.L1290
	.byte	3,4,1,5,53,9
	.half	.L1291-.L142
	.byte	1,5,18,9
	.half	.L930-.L1291
	.byte	1,5,87,7,9
	.half	.L1292-.L930
	.byte	1,5,64,9
	.half	.L1293-.L1292
	.byte	1,5,72,9
	.half	.L1294-.L1293
	.byte	1,5,94,9
	.half	.L1295-.L1294
	.byte	1,5,53,9
	.half	.L1296-.L1295
	.byte	1,5,5,9
	.half	.L143-.L1296
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L405-.L143
	.byte	0,1,1
.L1286:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_ranges'
.L404:
	.word	-1,.L310,0,.L405-.L310,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_info'
.L406:
	.word	376
	.half	3
	.word	.L407
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L409,.L408
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseUInt64',0,1,233,6,9
	.word	.L511
	.byte	1,1,1
	.word	.L312,.L609,.L311
	.byte	4
	.byte	'argsPtr',0,1,233,6,38
	.word	.L567,.L610
	.byte	4
	.byte	'value',0,1,233,6,55
	.word	.L611,.L612
	.byte	4
	.byte	'hex',0,1,233,6,70
	.word	.L511,.L613
	.byte	5
	.word	.L312,.L609
	.byte	6
	.byte	'buffer',0,1,235,6,13
	.word	.L606,.L614
	.byte	6
	.byte	'result',0,1,236,6,13
	.word	.L511,.L615
	.byte	5
	.word	.L147,.L148
	.byte	6
	.byte	'bufferPointer',0,1,246,6,15
	.word	.L544,.L616
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_abbrev'
.L407:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_line'
.L408:
	.word	.L1298-.L1297
.L1297:
	.half	3
	.word	.L1300-.L1299
.L1299:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1300:
	.byte	5,9,7,0,5,2
	.word	.L312
	.byte	3,232,6,1,5,47,9
	.half	.L931-.L312
	.byte	3,7,1,5,9,3,121,1,5,14,9
	.half	.L933-.L931
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1301-.L933
	.byte	3,2,1,5,47,9
	.half	.L934-.L1301
	.byte	1,5,5,9
	.half	.L932-.L934
	.byte	1,5,16,7,9
	.half	.L1302-.L932
	.byte	3,2,1,5,23,1,5,27,9
	.half	.L147-.L1302
	.byte	3,6,1,5,20,1,5,31,9
	.half	.L1303-.L147
	.byte	3,126,1,5,13,9
	.half	.L936-.L1303
	.byte	3,2,1,5,42,7,9
	.half	.L1304-.L936
	.byte	1,5,49,9
	.half	.L1305-.L1304
	.byte	1,5,46,9
	.half	.L1306-.L1305
	.byte	1,5,27,7,9
	.half	.L1307-.L1306
	.byte	3,3,1,5,43,3,127,1,5,36,9
	.half	.L149-.L1307
	.byte	3,6,1,5,9,9
	.half	.L1308-.L149
	.byte	3,126,1,5,64,7,9
	.half	.L1309-.L1308
	.byte	3,2,1,5,22,9
	.half	.L935-.L1309
	.byte	1,5,105,7,9
	.half	.L1310-.L935
	.byte	1,5,90,9
	.half	.L1311-.L1310
	.byte	1,5,112,9
	.half	.L937-.L1311
	.byte	1,5,64,9
	.half	.L1312-.L937
	.byte	1,5,117,1,5,22,9
	.half	.L151-.L1312
	.byte	3,4,1,5,105,7,9
	.half	.L1313-.L151
	.byte	1,5,90,9
	.half	.L1314-.L1313
	.byte	1,5,112,9
	.half	.L938-.L1314
	.byte	1,5,64,9
	.half	.L939-.L938
	.byte	1,5,5,9
	.half	.L148-.L939
	.byte	3,4,1,5,1,3,1,1,7,9
	.half	.L410-.L148
	.byte	0,1,1
.L1298:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_ranges'
.L409:
	.word	-1,.L312,0,.L410-.L312,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_info'
.L411:
	.word	323
	.half	3
	.word	.L412
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L414,.L413
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseFloat64',0,1,140,7,9
	.word	.L511
	.byte	1,1,1
	.word	.L314,.L617,.L313
	.byte	4
	.byte	'argsPtr',0,1,140,7,39
	.word	.L567,.L618
	.byte	4
	.byte	'value',0,1,140,7,57
	.word	.L619,.L620
	.byte	5
	.word	.L314,.L617
	.byte	6
	.byte	'buffer',0,1,142,7,13
	.word	.L606,.L621
	.byte	6
	.byte	'result',0,1,143,7,13
	.word	.L511,.L622
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_abbrev'
.L412:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_line'
.L413:
	.word	.L1316-.L1315
.L1315:
	.half	3
	.word	.L1318-.L1317
.L1317:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1318:
	.byte	5,9,7,0,5,2
	.word	.L314
	.byte	3,139,7,1,5,14,9
	.half	.L943-.L314
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1319-.L943
	.byte	3,2,1,5,47,9
	.half	.L942-.L1319
	.byte	1,5,5,9
	.half	.L941-.L942
	.byte	1,5,16,7,9
	.half	.L1320-.L941
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L158-.L1320
	.byte	3,4,1,5,53,9
	.half	.L1321-.L158
	.byte	1,5,18,9
	.half	.L944-.L1321
	.byte	1,5,80,7,9
	.half	.L1322-.L944
	.byte	1,5,64,9
	.half	.L1323-.L1322
	.byte	1,5,72,9
	.half	.L1324-.L1323
	.byte	1,5,87,9
	.half	.L1325-.L1324
	.byte	1,5,53,9
	.half	.L1326-.L1325
	.byte	1,5,5,9
	.half	.L159-.L1326
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L415-.L159
	.byte	0,1,1
.L1316:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_ranges'
.L414:
	.word	-1,.L314,0,.L415-.L314,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_info'
.L416:
	.word	323
	.half	3
	.word	.L417
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L419,.L418
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_parseFloat32',0,1,160,7,9
	.word	.L511
	.byte	1,1,1
	.word	.L316,.L623,.L315
	.byte	4
	.byte	'argsPtr',0,1,160,7,39
	.word	.L567,.L624
	.byte	4
	.byte	'value',0,1,160,7,57
	.word	.L625,.L626
	.byte	5
	.word	.L316,.L623
	.byte	6
	.byte	'buffer',0,1,162,7,13
	.word	.L606,.L627
	.byte	6
	.byte	'result',0,1,163,7,13
	.word	.L511,.L628
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_abbrev'
.L417:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_line'
.L418:
	.word	.L1328-.L1327
.L1327:
	.half	3
	.word	.L1330-.L1329
.L1329:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1330:
	.byte	5,9,7,0,5,2
	.word	.L316
	.byte	3,159,7,1,5,14,9
	.half	.L948-.L316
	.byte	3,5,1,5,12,1,5,39,9
	.half	.L1331-.L948
	.byte	3,2,1,5,47,9
	.half	.L947-.L1331
	.byte	1,5,5,9
	.half	.L946-.L947
	.byte	1,5,16,7,9
	.half	.L1332-.L946
	.byte	3,2,1,5,23,1,5,25,9
	.half	.L163-.L1332
	.byte	3,4,1,5,53,9
	.half	.L1333-.L163
	.byte	1,5,18,9
	.half	.L949-.L1333
	.byte	1,5,79,7,9
	.half	.L1334-.L949
	.byte	1,5,64,9
	.half	.L1335-.L1334
	.byte	1,5,72,9
	.half	.L1336-.L1335
	.byte	1,5,86,9
	.half	.L1337-.L1336
	.byte	1,5,53,9
	.half	.L1338-.L1337
	.byte	1,5,5,9
	.half	.L164-.L1338
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L420-.L164
	.byte	0,1,1
.L1328:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_ranges'
.L419:
	.word	-1,.L316,0,.L420-.L316,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_info'
.L421:
	.word	569
	.half	3
	.word	.L422
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L424,.L423
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_commandFind',0,1,180,7,26
	.word	.L629
	.byte	1,1,1
	.word	.L318,.L630,.L317
	.byte	4
	.byte	'commandList',0,1,180,7,75
	.word	.L631,.L632
	.byte	4
	.byte	'commandLine',0,1,180,7,94
	.word	.L563,.L633
	.byte	4
	.byte	'args',0,1,180,7,114
	.word	.L567,.L634
	.byte	4
	.byte	'match',0,1,180,7,128,1
	.word	.L596,.L635
	.byte	5
	.word	.L318,.L630
	.byte	6
	.byte	'command',0,1,182,7,30
	.word	.L629,.L636
	.byte	6
	.byte	'result',0,1,183,7,30
	.word	.L629,.L637
	.byte	6
	.byte	'cmdLineTemp',0,1,184,7,30
	.word	.L563,.L638
	.byte	6
	.byte	'matchInit',0,1,185,7,30
	.word	.L639,.L640
	.byte	6
	.byte	'index',0,1,186,7,30
	.word	.L639,.L641
	.byte	6
	.byte	'hasPrefix',0,1,188,7,30
	.word	.L511,.L642
	.byte	5
	.word	.L171,.L170
	.byte	6
	.byte	'commandTemp',0,1,195,7,16
	.word	.L563,.L643
	.byte	6
	.byte	'commandLineTemp',0,1,196,7,16
	.word	.L563,.L644
	.byte	6
	.byte	'buffer',0,1,197,7,16
	.word	.L571,.L645
	.byte	6
	.byte	'matchCount',0,1,198,7,16
	.word	.L639,.L646
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_abbrev'
.L422:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_line'
.L423:
	.word	.L1340-.L1339
.L1339:
	.half	3
	.word	.L1342-.L1341
.L1341:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1342:
	.byte	5,42,7,0,5,2
	.word	.L318
	.byte	3,184,7,1,5,25,3,5,1,5,42,9
	.half	.L951-.L318
	.byte	3,124,1,5,26,3,122,1,5,42,9
	.half	.L953-.L951
	.byte	3,2,1,9
	.half	.L954-.L953
	.byte	3,2,1,9
	.half	.L955-.L954
	.byte	3,127,1,5,17,9
	.half	.L956-.L955
	.byte	3,7,1,5,63,7,9
	.half	.L1343-.L956
	.byte	1,5,52,9
	.half	.L957-.L1343
	.byte	1,5,17,9
	.half	.L168-.L957
	.byte	3,1,1,5,15,1,5,44,9
	.half	.L958-.L168
	.byte	3,2,1,5,41,9
	.half	.L171-.L958
	.byte	3,2,1,5,32,9
	.half	.L1344-.L171
	.byte	1,9
	.half	.L1345-.L1344
	.byte	3,1,1,9
	.half	.L1346-.L1345
	.byte	3,2,1,5,79,3,2,1,5,23,9
	.half	.L173-.L1346
	.byte	3,2,1,5,40,9
	.half	.L172-.L173
	.byte	3,126,1,5,58,9
	.half	.L1347-.L172
	.byte	1,5,79,9
	.half	.L1348-.L1347
	.byte	1,5,27,7,9
	.half	.L1349-.L1348
	.byte	3,5,1,5,13,9
	.half	.L1350-.L1349
	.byte	1,5,61,7,9
	.half	.L1351-.L1350
	.byte	1,5,74,9
	.half	.L1352-.L1351
	.byte	1,5,82,9
	.half	.L1353-.L1352
	.byte	1,5,103,9
	.half	.L1354-.L1353
	.byte	1,5,17,7,9
	.half	.L959-.L1354
	.byte	3,2,1,5,41,7,9
	.half	.L960-.L959
	.byte	1,5,48,9
	.half	.L1355-.L960
	.byte	1,5,29,7,9
	.half	.L1356-.L1355
	.byte	3,3,1,5,31,3,127,1,5,20,9
	.half	.L176-.L1356
	.byte	3,5,1,9
	.half	.L961-.L176
	.byte	3,127,1,5,22,9
	.half	.L1357-.L961
	.byte	3,1,1,5,20,9
	.half	.L1358-.L1357
	.byte	1,9
	.half	.L1359-.L1358
	.byte	3,1,1,5,32,9
	.half	.L1360-.L1359
	.byte	3,126,1,5,17,9
	.half	.L174-.L1360
	.byte	3,6,1,5,33,7,9
	.half	.L962-.L174
	.byte	1,5,14,7,9
	.half	.L178-.L962
	.byte	3,9,1,5,27,3,126,1,5,19,9
	.half	.L170-.L178
	.byte	3,95,1,5,44,9
	.half	.L1361-.L170
	.byte	1,5,5,7,9
	.half	.L180-.L1361
	.byte	3,38,1,5,1,9
	.half	.L963-.L180
	.byte	3,1,1,7,9
	.half	.L425-.L963
	.byte	0,1,1
.L1340:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_ranges'
.L424:
	.word	-1,.L318,0,.L425-.L318,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_info'
.L426:
	.word	617
	.half	3
	.word	.L427
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L429,.L428
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_showHelpSingle',0,1,107,9
	.word	.L511
	.byte	1,1,1
	.word	.L276,.L647,.L275
	.byte	4
	.byte	'commandList',0,1,107,61
	.word	.L631,.L648
	.byte	4
	.byte	'io',0,1,107,90
	.word	.L649,.L650
	.byte	4
	.byte	'briefOnly',0,1,107,102
	.word	.L511,.L651
	.byte	4
	.byte	'singleCommand',0,1,107,121
	.word	.L511,.L652
	.byte	5
	.word	.L276,.L647
	.byte	6
	.byte	'command',0,1,109,30
	.word	.L629,.L653
	.byte	6
	.byte	'index',0,1,110,30
	.word	.L639,.L654
	.byte	6
	.byte	'space',0,1,111,30
	.word	.L563,.L655
	.byte	6
	.byte	'spaceParam',0,1,112,30
	.word	.L563,.L656
	.byte	7
	.word	.L657
	.byte	6
	.byte	'help',0,1,116,17
	.word	.L563,.L660
	.byte	6
	.byte	'chunk',0,1,117,17
	.word	.L563,.L661
	.byte	6
	.byte	'isParam',0,1,118,17
	.word	.L511,.L662
	.byte	6
	.byte	'isSyntax',0,1,119,17
	.word	.L511,.L663
	.byte	7
	.word	.L664
	.byte	6
	.byte	'count',0,1,124,23
	.word	.L536,.L666
	.byte	6
	.byte	'matchp',0,1,125,23
	.word	.L563,.L667
	.byte	6
	.byte	'matchs',0,1,126,23
	.word	.L563,.L668
	.byte	8
	.word	.L669,.L670,.L671
	.byte	9
	.word	.L672,.L673
	.byte	9
	.word	.L674,.L675
	.byte	9
	.word	.L676,.L677
	.byte	9
	.word	.L678,.L679
	.byte	10
	.word	.L680,.L670,.L671
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_abbrev'
.L427:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0
	.byte	0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_line'
.L428:
	.word	.L1363-.L1362
.L1362:
	.half	3
	.word	.L1365-.L1364
.L1364:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L1365:
	.byte	5,9,7,0,5,2
	.word	.L276
	.byte	3,234,0,1,5,47,9
	.half	.L785-.L276
	.byte	3,2,1,9
	.half	.L786-.L785
	.byte	3,1,1,5,49,3,1,1,5,34,9
	.half	.L658-.L786
	.byte	3,9,1,9
	.half	.L665-.L658
	.byte	3,34,1,5,44,9
	.half	.L659-.L665
	.byte	3,88,1,5,35,9
	.half	.L8-.L659
	.byte	3,2,1,5,26,9
	.half	.L788-.L8
	.byte	1,5,42,9
	.half	.L1366-.L788
	.byte	3,4,1,5,26,9
	.half	.L1367-.L1366
	.byte	3,126,1,5,34,3,2,1,5,56,9
	.half	.L789-.L1367
	.byte	1,5,26,9
	.half	.L791-.L789
	.byte	3,127,1,5,56,9
	.half	.L793-.L791
	.byte	3,1,1,5,34,9
	.half	.L1368-.L793
	.byte	1,5,44,9
	.half	.L790-.L1368
	.byte	3,2,1,5,36,9
	.half	.L10-.L790
	.byte	3,3,1,5,34,9
	.half	.L1369-.L10
	.byte	1,5,36,9
	.half	.L1370-.L1369
	.byte	3,1,1,5,34,9
	.half	.L1371-.L1370
	.byte	1,5,41,9
	.half	.L1372-.L1371
	.byte	3,3,1,5,29,9
	.half	.L1373-.L1372
	.byte	3,126,1,5,48,9
	.half	.L794-.L1373
	.byte	3,2,1,5,13,9
	.half	.L1374-.L794
	.byte	1,5,28,7,9
	.half	.L1375-.L1374
	.byte	3,2,1,5,30,3,2,1,5,28,9
	.half	.L1376-.L1375
	.byte	3,127,1,5,30,3,1,1,5,34,9
	.half	.L1377-.L1376
	.byte	3,126,1,5,46,9
	.half	.L11-.L1377
	.byte	3,4,1,5,53,9
	.half	.L1378-.L11
	.byte	1,5,18,9
	.half	.L1379-.L1378
	.byte	1,5,28,7,9
	.half	.L1380-.L1379
	.byte	3,2,1,5,30,3,2,1,5,28,9
	.half	.L1381-.L1380
	.byte	3,127,1,5,30,3,1,1,5,35,9
	.half	.L1382-.L1381
	.byte	3,126,1,5,17,9
	.half	.L13-.L1382
	.byte	3,6,1,5,34,7,9
	.half	.L1383-.L13
	.byte	3,2,1,5,44,9
	.half	.L1384-.L1383
	.byte	1,5,22,9
	.half	.L15-.L1384
	.byte	3,2,1,5,34,7,9
	.half	.L1385-.L15
	.byte	3,2,1,5,28,9
	.half	.L12-.L1385
	.byte	3,5,1,5,34,9
	.half	.L1386-.L12
	.byte	1,5,13,9
	.half	.L796-.L1386
	.byte	3,2,1,5,25,7,9
	.half	.L1387-.L796
	.byte	3,2,1,5,39,9
	.half	.L1388-.L1387
	.byte	1,5,30,9
	.half	.L797-.L1388
	.byte	1,5,44,9
	.half	.L798-.L797
	.byte	1,5,22,9
	.half	.L18-.L798
	.byte	3,4,1,5,27,7,9
	.half	.L800-.L18
	.byte	3,2,1,5,29,9
	.half	.L19-.L800
	.byte	3,4,1,5,27,9
	.half	.L1389-.L19
	.byte	1,5,19,9
	.half	.L1390-.L1389
	.byte	1,5,46,9
	.half	.L1391-.L1390
	.byte	3,1,1,5,53,9
	.half	.L1392-.L1391
	.byte	1,5,38,9
	.half	.L1393-.L1392
	.byte	1,4,2,5,17,9
	.half	.L670-.L1393
	.byte	3,223,0,1,5,30,9
	.half	.L795-.L670
	.byte	1,4,1,5,46,9
	.half	.L1394-.L795
	.byte	3,162,127,1,5,53,9
	.half	.L1395-.L1394
	.byte	1,4,2,9
	.half	.L1396-.L1395
	.byte	3,222,0,1,4,1,5,13,9
	.half	.L671-.L1396
	.byte	3,164,127,1,5,21,9
	.half	.L1397-.L671
	.byte	1,5,18,9
	.half	.L1398-.L1397
	.byte	1,5,13,9
	.half	.L802-.L1398
	.byte	3,2,1,5,17,7,9
	.half	.L9-.L802
	.byte	3,76,1,5,16,9
	.half	.L1399-.L9
	.byte	1,5,44,9
	.half	.L1400-.L1399
	.byte	1,5,34,7,9
	.half	.L21-.L1400
	.byte	3,58,1,5,21,9
	.half	.L804-.L21
	.byte	3,2,1,5,13,9
	.half	.L1401-.L804
	.byte	1,5,51,7,9
	.half	.L1402-.L1401
	.byte	1,5,19,7,9
	.half	.L1403-.L1402
	.byte	3,2,1,5,21,3,1,1,5,27,9
	.half	.L22-.L1403
	.byte	3,3,1,5,9,9
	.half	.L806-.L22
	.byte	3,2,1,5,19,7,9
	.half	.L7-.L806
	.byte	3,180,127,1,5,44,9
	.half	.L1404-.L7
	.byte	1,5,12,7,9
	.half	.L24-.L1404
	.byte	3,210,0,1,5,1,3,1,1,7,9
	.half	.L430-.L24
	.byte	0,1,1
.L1363:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_ranges'
.L429:
	.word	-1,.L276,0,.L430-.L276,0,0
.L657:
	.word	-1,.L276,.L658-.L276,.L659-.L276,.L8-.L276,.L7-.L276,0,0
.L664:
	.word	-1,.L276,.L665-.L276,.L659-.L276,.L10-.L276,.L9-.L276,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_info'
.L431:
	.word	334
	.half	3
	.word	.L432
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L434,.L433
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_showHelp',0,1,231,1,9
	.word	.L511
	.byte	1,1,1
	.word	.L280,.L681,.L279
	.byte	4
	.byte	'args',0,1,231,1,34
	.word	.L563,.L682
	.byte	4
	.byte	'shellPtr',0,1,231,1,46
	.word	.L683,.L684
	.byte	4
	.byte	'io',0,1,231,1,72
	.word	.L649,.L685
	.byte	5
	.word	.L280,.L681
	.byte	6
	.byte	'shell',0,1,234,1,16
	.word	.L513,.L686
	.byte	6
	.byte	'result',0,1,235,1,16
	.word	.L511,.L687
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_abbrev'
.L432:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_line'
.L433:
	.word	.L1406-.L1405
.L1405:
	.half	3
	.word	.L1408-.L1407
.L1407:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1408:
	.byte	5,9,7,0,5,2
	.word	.L280
	.byte	3,236,1,1,5,23,9
	.half	.L1409-.L280
	.byte	3,126,1,5,5,9
	.half	.L825-.L1409
	.byte	3,2,1,5,35,7,9
	.half	.L1410-.L825
	.byte	3,4,1,5,13,9
	.half	.L822-.L1410
	.byte	1,5,69,7,9
	.half	.L1411-.L822
	.byte	3,2,1,5,75,1,5,52,9
	.half	.L823-.L1411
	.byte	3,124,1,5,66,9
	.half	.L32-.L823
	.byte	3,10,1,5,16,9
	.half	.L826-.L32
	.byte	1,5,5,9
	.half	.L33-.L826
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L435-.L33
	.byte	0,1,1
.L1406:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_ranges'
.L434:
	.word	-1,.L280,0,.L435-.L280,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_info'
.L436:
	.word	298
	.half	3
	.word	.L437
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L439,.L438
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_printSyntax',0,1,173,10,6,1,1,1
	.word	.L336,.L688,.L335
	.byte	4
	.byte	'syntaxList',0,1,173,10,52
	.word	.L689,.L690
	.byte	4
	.byte	'io',0,1,173,10,80
	.word	.L649,.L691
	.byte	5
	.word	.L336,.L688
	.byte	6
	.byte	'syntax',0,1,175,10,29
	.word	.L689,.L692
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_abbrev'
.L437:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_line'
.L438:
	.word	.L1413-.L1412
.L1412:
	.half	3
	.word	.L1415-.L1414
.L1414:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1415:
	.byte	5,6,7,0,5,2
	.word	.L336
	.byte	3,172,10,1,5,36,9
	.half	.L1028-.L336
	.byte	3,2,1,5,38,9
	.half	.L1029-.L1028
	.byte	3,2,1,5,64,9
	.half	.L270-.L1029
	.byte	3,2,1,5,34,9
	.half	.L1416-.L270
	.byte	1,5,64,9
	.half	.L1031-.L1416
	.byte	3,1,1,5,34,9
	.half	.L1417-.L1031
	.byte	1,5,25,9
	.half	.L1033-.L1417
	.byte	3,1,1,5,18,9
	.half	.L269-.L1033
	.byte	3,124,1,5,38,9
	.half	.L1418-.L269
	.byte	1,5,1,7,9
	.half	.L1419-.L1418
	.byte	3,6,1,7,9
	.half	.L440-.L1419
	.byte	0,1,1
.L1413:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_ranges'
.L439:
	.word	-1,.L336,0,.L440-.L336,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_info'
.L441:
	.word	335
	.half	3
	.word	.L442
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L444,.L443
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_protocolStart',0,1,128,2,9
	.word	.L511
	.byte	1,1,1
	.word	.L282,.L693,.L281
	.byte	4
	.byte	'args',0,1,128,2,39
	.word	.L563,.L694
	.byte	4
	.byte	'data',0,1,128,2,51
	.word	.L683,.L695
	.byte	4
	.byte	'io',0,1,128,2,73
	.word	.L649,.L696
	.byte	5
	.word	.L282,.L693
	.byte	6
	.byte	'shell',0,1,130,2,16
	.word	.L513,.L697
	.byte	6
	.byte	'Result',0,1,131,2,16
	.word	.L511,.L698
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_abbrev'
.L442:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_line'
.L443:
	.word	.L1421-.L1420
.L1420:
	.half	3
	.word	.L1423-.L1422
.L1422:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1423:
	.byte	5,9,7,0,5,2
	.word	.L282
	.byte	3,255,1,1,5,23,9
	.half	.L832-.L282
	.byte	3,3,1,5,31,3,2,1,5,37,9
	.half	.L828-.L832
	.byte	1,5,5,9
	.half	.L830-.L828
	.byte	1,5,34,7,9
	.half	.L1424-.L830
	.byte	3,2,1,9
	.half	.L835-.L1424
	.byte	3,1,1,5,69,9
	.half	.L837-.L835
	.byte	3,127,1,5,36,9
	.half	.L36-.L837
	.byte	3,3,1,5,42,9
	.half	.L1425-.L36
	.byte	1,5,10,9
	.half	.L1426-.L1425
	.byte	1,5,29,7,9
	.half	.L1427-.L1426
	.byte	3,2,1,5,13,9
	.half	.L1428-.L1427
	.byte	1,5,68,7,9
	.half	.L1429-.L1428
	.byte	1,5,76,9
	.half	.L1430-.L1429
	.byte	1,5,85,7,9
	.half	.L1431-.L1430
	.byte	3,2,1,5,37,9
	.half	.L833-.L1431
	.byte	1,5,47,9
	.half	.L840-.L833
	.byte	3,1,1,5,37,1,5,32,9
	.half	.L1432-.L840
	.byte	3,2,1,5,13,9
	.half	.L1433-.L1432
	.byte	1,5,56,7,9
	.half	.L1434-.L1433
	.byte	3,2,1,5,80,9
	.half	.L1435-.L1434
	.byte	1,5,13,9
	.half	.L839-.L1435
	.byte	3,126,1,5,20,9
	.half	.L39-.L839
	.byte	3,7,1,5,5,9
	.half	.L37-.L39
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L445-.L37
	.byte	0,1,1
.L1421:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_ranges'
.L444:
	.word	-1,.L282,0,.L445-.L282,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_info'
.L446:
	.word	318
	.half	3
	.word	.L447
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L449,.L448
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_bbProtocolStart',0,1,162,2,9
	.word	.L511
	.byte	1,1,1
	.word	.L284,.L699,.L283
	.byte	4
	.byte	'args',0,1,162,2,41
	.word	.L563,.L700
	.byte	4
	.byte	'data',0,1,162,2,53
	.word	.L683,.L701
	.byte	4
	.byte	'io',0,1,162,2,75
	.word	.L649,.L702
	.byte	5
	.word	.L284,.L699
	.byte	6
	.byte	'result',0,1,164,2,13
	.word	.L511,.L703
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_abbrev'
.L447:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_line'
.L448:
	.word	.L1437-.L1436
.L1436:
	.half	3
	.word	.L1439-.L1438
.L1438:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1439:
	.byte	5,9,7,0,5,2
	.word	.L284
	.byte	3,161,2,1,5,20,9
	.half	.L846-.L284
	.byte	3,2,1,5,31,3,2,1,5,37,9
	.half	.L842-.L846
	.byte	1,5,5,9
	.half	.L844-.L842
	.byte	1,5,34,7,9
	.half	.L1440-.L844
	.byte	3,2,1,9
	.half	.L849-.L1440
	.byte	3,1,1,5,69,9
	.half	.L851-.L849
	.byte	3,127,1,5,36,9
	.half	.L44-.L851
	.byte	3,3,1,5,42,9
	.half	.L1441-.L44
	.byte	1,5,10,9
	.half	.L1442-.L1441
	.byte	1,5,42,7,9
	.half	.L1443-.L1442
	.byte	3,2,1,5,54,9
	.half	.L1444-.L1443
	.byte	1,5,16,9
	.half	.L847-.L1444
	.byte	1,5,5,9
	.half	.L45-.L847
	.byte	3,5,1,5,1,3,1,1,7,9
	.half	.L450-.L45
	.byte	0,1,1
.L1437:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_ranges'
.L449:
	.word	-1,.L284,0,.L450-.L284,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_info'
.L451:
	.word	347
	.half	3
	.word	.L452
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L454,.L453
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_execute',0,1,134,8,6,1,1,1
	.word	.L322,.L704,.L321
	.byte	4
	.byte	'shell',0,1,134,8,35
	.word	.L513,.L705
	.byte	4
	.byte	'commandLine',0,1,134,8,48
	.word	.L563,.L706
	.byte	5
	.word	.L322,.L704
	.byte	6
	.byte	'args',0,1,136,8,32
	.word	.L563,.L707
	.byte	6
	.byte	'commandList',0,1,137,8,32
	.word	.L631,.L708
	.byte	6
	.byte	'shellCommand',0,1,138,8,32
	.word	.L629,.L709
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_abbrev'
.L452:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_line'
.L453:
	.word	.L1446-.L1445
.L1445:
	.half	3
	.word	.L1448-.L1447
.L1447:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1448:
	.byte	5,6,7,0,5,2
	.word	.L322
	.byte	3,133,8,1,5,47,9
	.half	.L976-.L322
	.byte	3,2,1,5,45,9
	.half	.L1449-.L976
	.byte	1,5,94,9
	.half	.L1450-.L1449
	.byte	3,2,1,5,101,9
	.half	.L1451-.L1450
	.byte	1,5,5,9
	.half	.L974-.L1451
	.byte	3,2,1,5,25,7,9
	.half	.L1452-.L974
	.byte	3,2,1,5,57,9
	.half	.L1453-.L1452
	.byte	3,2,1,5,9,9
	.half	.L1454-.L1453
	.byte	3,126,1,5,57,7,9
	.half	.L1455-.L1454
	.byte	3,2,1,5,37,9
	.half	.L187-.L1455
	.byte	3,2,1,5,55,9
	.half	.L1456-.L187
	.byte	1,5,68,9
	.half	.L1457-.L1456
	.byte	1,5,14,9
	.half	.L977-.L1457
	.byte	1,5,31,7,9
	.half	.L1458-.L977
	.byte	3,2,1,5,13,9
	.half	.L1459-.L1458
	.byte	1,5,46,7,9
	.half	.L1460-.L1459
	.byte	3,2,1,5,13,3,126,1,5,31,9
	.half	.L189-.L1460
	.byte	3,7,1,5,13,9
	.half	.L1461-.L189
	.byte	1,5,46,7,9
	.half	.L1462-.L1461
	.byte	3,2,1,5,71,1,5,18,9
	.half	.L192-.L1462
	.byte	3,2,1,5,49,7,9
	.half	.L1463-.L192
	.byte	3,2,1,5,9,9
	.half	.L1464-.L1463
	.byte	3,113,1,5,24,9
	.half	.L186-.L1464
	.byte	3,23,1,5,9,9
	.half	.L1465-.L186
	.byte	1,5,31,7,9
	.half	.L1466-.L1465
	.byte	3,2,1,5,13,9
	.half	.L1467-.L1466
	.byte	1,5,46,7,9
	.half	.L1468-.L1467
	.byte	3,2,1,5,18,9
	.half	.L197-.L1468
	.byte	3,2,1,5,49,7,9
	.half	.L1469-.L197
	.byte	3,2,1,5,43,9
	.half	.L195-.L1469
	.byte	1,5,81,9
	.half	.L1470-.L195
	.byte	1,5,49,9
	.half	.L1471-.L1470
	.byte	1,5,1,7,9
	.half	.L190-.L1471
	.byte	3,6,1,7,9
	.half	.L455-.L190
	.byte	0,1,1
.L1446:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_ranges'
.L454:
	.word	-1,.L322,0,.L455-.L322,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_info'
.L456:
	.word	668
	.half	3
	.word	.L457
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L459,.L458
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_cmdEscapeProcess',0,1,197,8,6,1,1,1
	.word	.L324,.L710,.L323
	.byte	4
	.byte	'shell',0,1,197,8,44
	.word	.L513,.L711
	.byte	4
	.byte	'EscapeChar1',0,1,197,8,56
	.word	.L712,.L713
	.byte	4
	.byte	'EscapeChar2',0,1,197,8,74
	.word	.L712,.L714
	.byte	5
	.word	.L715
	.byte	6
	.byte	'Cmd',0,1,199,8,24
	.word	.L542,.L716
	.byte	6
	.byte	'cmdStr',0,1,200,8,24
	.word	.L544,.L717
	.byte	6
	.byte	'i',0,1,201,8,24
	.word	.L517,.L718
	.byte	5
	.word	.L719
	.byte	6
	.byte	'ii',0,1,247,8,13
	.word	.L561,.L722
	.byte	0,7
	.word	.L721,.L723
	.byte	6
	.byte	'ii',0,1,248,8,13
	.word	.L561,.L724
	.byte	0,7
	.word	.L723,.L725
	.byte	6
	.byte	'ii',0,1,249,8,13
	.word	.L561,.L726
	.byte	0,7
	.word	.L727,.L728
	.byte	6
	.byte	'ii',0,1,137,9,17
	.word	.L561,.L729
	.byte	0,7
	.word	.L728,.L730
	.byte	6
	.byte	'ii',0,1,138,9,17
	.word	.L561,.L731
	.byte	0,7
	.word	.L730,.L219
	.byte	6
	.byte	'ii',0,1,139,9,17
	.word	.L561,.L732
	.byte	0,7
	.word	.L733,.L734
	.byte	6
	.byte	'ii',0,1,156,9,17
	.word	.L561,.L735
	.byte	0,7
	.word	.L734,.L736
	.byte	6
	.byte	'ii',0,1,157,9,17
	.word	.L561,.L737
	.byte	0,7
	.word	.L736,.L216
	.byte	6
	.byte	'ii',0,1,158,9,17
	.word	.L561,.L738
	.byte	0,7
	.word	.L739,.L740
	.byte	6
	.byte	'ii',0,1,202,9,17
	.word	.L561,.L741
	.byte	0,7
	.word	.L742,.L251
	.byte	6
	.byte	'ii',0,1,224,9,21
	.word	.L561,.L743
	.byte	0,7
	.word	.L744,.L260
	.byte	6
	.byte	'ii',0,1,130,10,21
	.word	.L561,.L745
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_abbrev'
.L457:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_line'
.L458:
	.word	.L1473-.L1472
.L1472:
	.half	3
	.word	.L1475-.L1474
.L1474:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1475:
	.byte	5,6,7,0,5,2
	.word	.L324
	.byte	3,196,8,1,5,5,9
	.half	.L982-.L324
	.byte	3,11,1,5,10,7,9
	.half	.L1476-.L982
	.byte	3,17,1,5,17,3,118,1,5,10,9
	.half	.L983-.L1476
	.byte	3,10,1,7,9
	.half	.L984-.L983
	.byte	3,33,1,9
	.half	.L986-.L984
	.byte	3,39,1,9
	.half	.L988-.L986
	.byte	3,10,1,5,16,9
	.half	.L201-.L988
	.byte	3,176,127,1,5,9,9
	.half	.L1477-.L201
	.byte	1,5,32,7,9
	.half	.L1478-.L1477
	.byte	3,3,1,5,30,1,5,33,9
	.half	.L1479-.L1478
	.byte	1,5,68,9
	.half	.L206-.L1479
	.byte	3,4,1,5,13,9
	.half	.L1480-.L206
	.byte	1,5,33,7,9
	.half	.L1481-.L1480
	.byte	3,3,1,5,46,9
	.half	.L207-.L1481
	.byte	3,5,1,5,62,9
	.half	.L992-.L207
	.byte	1,5,27,9
	.half	.L993-.L992
	.byte	3,3,1,5,9,9
	.half	.L1482-.L993
	.byte	1,5,13,7,9
	.half	.L720-.L1482
	.byte	3,2,1,9
	.half	.L721-.L720
	.byte	3,1,1,9
	.half	.L723-.L721
	.byte	3,1,1,5,9,9
	.half	.L725-.L723
	.byte	3,7,1,5,17,9
	.half	.L202-.L725
	.byte	3,4,1,5,13,9
	.half	.L1483-.L202
	.byte	1,5,86,7,9
	.half	.L1484-.L1483
	.byte	1,5,31,7,9
	.half	.L217-.L1484
	.byte	3,3,1,5,13,9
	.half	.L1485-.L217
	.byte	1,5,17,7,9
	.half	.L727-.L1485
	.byte	3,2,1,9
	.half	.L728-.L727
	.byte	3,1,1,9
	.half	.L730-.L728
	.byte	3,1,1,5,32,9
	.half	.L219-.L730
	.byte	3,3,1,5,30,1,9
	.half	.L1486-.L219
	.byte	3,1,1,5,32,9
	.half	.L1487-.L1486
	.byte	3,1,1,5,30,1,5,33,9
	.half	.L1488-.L1487
	.byte	3,126,1,5,29,9
	.half	.L218-.L1488
	.byte	3,7,1,5,50,9
	.half	.L998-.L218
	.byte	3,3,1,5,66,9
	.half	.L1000-.L998
	.byte	1,5,31,9
	.half	.L1001-.L1000
	.byte	3,2,1,5,13,9
	.half	.L1489-.L1001
	.byte	1,5,17,7,9
	.half	.L733-.L1489
	.byte	3,2,1,9
	.half	.L734-.L733
	.byte	3,1,1,9
	.half	.L736-.L734
	.byte	3,1,1,5,43,9
	.half	.L216-.L736
	.byte	3,1,1,5,49,9
	.half	.L1490-.L216
	.byte	1,5,45,9
	.half	.L209-.L1490
	.byte	3,3,1,5,25,9
	.half	.L1006-.L209
	.byte	1,5,30,9
	.half	.L1491-.L1006
	.byte	3,1,1,5,25,9
	.half	.L1492-.L1491
	.byte	1,5,27,9
	.half	.L226-.L1492
	.byte	3,3,1,5,25,1,5,9,9
	.half	.L1493-.L226
	.byte	3,1,1,5,16,9
	.half	.L203-.L1493
	.byte	3,4,1,5,30,9
	.half	.L1494-.L203
	.byte	1,5,9,9
	.half	.L1495-.L1494
	.byte	1,5,13,7,9
	.half	.L1496-.L1495
	.byte	3,3,1,5,94,9
	.half	.L236-.L1496
	.byte	1,5,102,9
	.half	.L1497-.L236
	.byte	1,5,9,3,3,1,5,16,9
	.half	.L204-.L1497
	.byte	3,4,1,5,9,9
	.half	.L1498-.L204
	.byte	1,5,13,7,9
	.half	.L1499-.L1498
	.byte	3,3,1,5,73,9
	.half	.L239-.L1499
	.byte	1,5,81,9
	.half	.L1500-.L239
	.byte	1,5,24,9
	.half	.L205-.L1500
	.byte	3,10,1,5,5,9
	.half	.L1011-.L205
	.byte	1,5,14,7,9
	.half	.L1012-.L1011
	.byte	3,4,1,9
	.half	.L1014-.L1012
	.byte	3,9,1,9
	.half	.L1016-.L1014
	.byte	3,34,1,9
	.half	.L1018-.L1016
	.byte	3,29,1,5,1,9
	.half	.L200-.L1018
	.byte	3,13,1,5,20,7,9
	.half	.L241-.L200
	.byte	3,173,127,1,5,13,9
	.half	.L1501-.L241
	.byte	1,5,17,7,9
	.half	.L739-.L1501
	.byte	3,2,1,5,71,9
	.half	.L740-.L739
	.byte	1,5,69,1,5,1,9
	.half	.L246-.L740
	.byte	3,209,0,1,5,35,7,9
	.half	.L242-.L246
	.byte	3,182,127,1,5,21,9
	.half	.L1502-.L242
	.byte	1,5,17,9
	.half	.L1503-.L1502
	.byte	1,5,92,7,9
	.half	.L1504-.L1503
	.byte	1,5,61,9
	.half	.L1505-.L1504
	.byte	1,5,35,7,9
	.half	.L1506-.L1505
	.byte	3,3,1,5,17,9
	.half	.L1507-.L1506
	.byte	1,5,47,7,9
	.half	.L1508-.L1507
	.byte	3,3,1,5,53,9
	.half	.L1509-.L1508
	.byte	1,5,33,9
	.half	.L1510-.L1509
	.byte	3,3,1,5,69,9
	.half	.L1020-.L1510
	.byte	3,2,1,5,58,9
	.half	.L1511-.L1020
	.byte	3,126,1,5,69,9
	.half	.L253-.L1511
	.byte	3,2,1,5,51,9
	.half	.L1512-.L253
	.byte	1,5,57,9
	.half	.L1513-.L1512
	.byte	1,5,61,9
	.half	.L1514-.L1513
	.byte	3,126,1,5,50,9
	.half	.L252-.L1514
	.byte	1,5,58,9
	.half	.L1515-.L252
	.byte	1,5,21,7,9
	.half	.L742-.L1515
	.byte	3,6,1,5,29,9
	.half	.L251-.L742
	.byte	3,4,1,5,39,9
	.half	.L1022-.L251
	.byte	3,2,1,5,54,9
	.half	.L1516-.L1022
	.byte	3,126,1,5,57,9
	.half	.L257-.L1516
	.byte	1,5,44,3,2,1,5,39,9
	.half	.L1517-.L257
	.byte	1,5,31,9
	.half	.L1518-.L1517
	.byte	1,5,57,9
	.half	.L1519-.L1518
	.byte	3,126,1,5,46,9
	.half	.L256-.L1519
	.byte	1,5,54,9
	.half	.L1520-.L256
	.byte	1,5,27,7,9
	.half	.L1521-.L1520
	.byte	3,5,1,5,23,9
	.half	.L1023-.L1521
	.byte	1,5,43,9
	.half	.L1522-.L1023
	.byte	1,5,41,9
	.half	.L1523-.L1522
	.byte	1,5,27,9
	.half	.L1524-.L1523
	.byte	3,1,1,5,23,9
	.half	.L1525-.L1524
	.byte	1,5,43,9
	.half	.L1526-.L1525
	.byte	1,5,41,9
	.half	.L1527-.L1526
	.byte	1,5,20,9
	.half	.L1528-.L1527
	.byte	3,2,1,5,28,9
	.half	.L1529-.L1528
	.byte	1,5,13,3,3,1,5,34,9
	.half	.L243-.L1529
	.byte	3,4,1,5,20,9
	.half	.L1530-.L243
	.byte	1,5,13,9
	.half	.L1024-.L1530
	.byte	1,5,35,7,9
	.half	.L1531-.L1024
	.byte	3,3,1,5,17,9
	.half	.L1532-.L1531
	.byte	1,5,69,7,9
	.half	.L1533-.L1532
	.byte	3,5,1,5,60,9
	.half	.L1534-.L1533
	.byte	3,125,1,5,69,9
	.half	.L1535-.L1534
	.byte	3,3,1,5,64,9
	.half	.L1536-.L1535
	.byte	3,125,1,5,69,7,9
	.half	.L262-.L1536
	.byte	3,3,1,5,51,9
	.half	.L1537-.L262
	.byte	1,5,57,9
	.half	.L1538-.L1537
	.byte	1,5,51,9
	.half	.L1539-.L1538
	.byte	3,125,1,5,67,9
	.half	.L1540-.L1539
	.byte	1,5,60,9
	.half	.L1541-.L1540
	.byte	1,5,64,9
	.half	.L1542-.L1541
	.byte	1,5,53,7,9
	.half	.L261-.L1542
	.byte	3,7,1,5,21,9
	.half	.L744-.L261
	.byte	3,3,1,5,36,9
	.half	.L260-.L744
	.byte	3,4,1,5,76,9
	.half	.L1543-.L260
	.byte	1,5,32,9
	.half	.L1544-.L1543
	.byte	1,5,85,9
	.half	.L1545-.L1544
	.byte	1,5,54,9
	.half	.L1546-.L1545
	.byte	1,5,99,9
	.half	.L1547-.L1546
	.byte	1,5,27,9
	.half	.L1548-.L1547
	.byte	3,2,1,5,23,9
	.half	.L1549-.L1548
	.byte	1,5,43,9
	.half	.L1550-.L1549
	.byte	1,5,41,9
	.half	.L1551-.L1550
	.byte	1,5,20,9
	.half	.L1552-.L1551
	.byte	3,1,1,5,28,9
	.half	.L1553-.L1552
	.byte	1,5,1,9
	.half	.L249-.L1553
	.byte	3,18,1,5,17,7,9
	.half	.L267-.L249
	.byte	3,119,1,5,98,9
	.half	.L268-.L267
	.byte	1,5,106,9
	.half	.L1554-.L268
	.byte	1,5,23,9
	.half	.L266-.L1554
	.byte	3,126,1,5,37,9
	.half	.L1555-.L266
	.byte	1,5,45,9
	.half	.L1556-.L1555
	.byte	1,5,1,7,9
	.half	.L1557-.L1556
	.byte	3,11,1,7,9
	.half	.L460-.L1557
	.byte	0,1,1
.L1473:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_ranges'
.L459:
	.word	-1,.L324,0,.L460-.L324,0,0
.L715:
	.word	-1,.L324,0,.L710-.L324,-1,.L326,0,.L505-.L326,-1,.L328,0,.L500-.L328,0,0
.L719:
	.word	-1,.L324,.L720-.L324,.L721-.L324,-1,.L330,0,.L490-.L330,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_info'
.L461:
	.word	400
	.half	3
	.word	.L462
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L464,.L463
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_commandListFind',0,1,235,7,26
	.word	.L629
	.byte	1,1,1
	.word	.L320,.L746,.L319
	.byte	4
	.byte	'shell',0,1,235,7,63
	.word	.L513,.L747
	.byte	4
	.byte	'commandLine',0,1,235,7,76
	.word	.L563,.L748
	.byte	4
	.byte	'args',0,1,235,7,96
	.word	.L567,.L749
	.byte	4
	.byte	'commandList',0,1,235,7,130,1
	.word	.L750,.L751
	.byte	5
	.word	.L320,.L746
	.byte	6
	.byte	'shellCommand',0,1,238,7,30
	.word	.L629,.L752
	.byte	6
	.byte	'Command',0,1,239,7,30
	.word	.L629,.L753
	.byte	6
	.byte	'match',0,1,241,7,30
	.word	.L639,.L754
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_abbrev'
.L462:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_line'
.L463:
	.word	.L1559-.L1558
.L1558:
	.half	3
	.word	.L1561-.L1560
.L1560:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1561:
	.byte	5,26,7,0,5,2
	.word	.L320
	.byte	3,234,7,1,5,31,9
	.half	.L968-.L320
	.byte	3,10,1,5,26,9
	.half	.L967-.L968
	.byte	3,118,1,5,43,9
	.half	.L964-.L967
	.byte	3,4,1,5,9,9
	.half	.L971-.L964
	.byte	3,6,1,5,93,7,9
	.half	.L1562-.L971
	.byte	3,2,1,5,17,9
	.half	.L965-.L1562
	.byte	3,2,1,5,48,7,9
	.half	.L1563-.L965
	.byte	1,5,54,9
	.half	.L1564-.L1563
	.byte	1,5,30,7,9
	.half	.L1565-.L1564
	.byte	3,3,1,5,50,9
	.half	.L1566-.L1565
	.byte	3,1,1,5,30,9
	.half	.L969-.L1566
	.byte	1,5,5,9
	.half	.L182-.L969
	.byte	3,5,1,5,1,9
	.half	.L972-.L182
	.byte	3,1,1,7,9
	.half	.L465-.L972
	.byte	0,1,1
.L1559:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_ranges'
.L464:
	.word	-1,.L320,0,.L465-.L320,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_info'
.L466:
	.word	396
	.half	3
	.word	.L467
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L469,.L468
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_matchCommand',0,1,184,5,16
	.word	.L511
	.byte	1,1
	.word	.L300,.L755,.L299
	.byte	4
	.byte	'argsPtr',0,1,184,5,46
	.word	.L567,.L756
	.byte	4
	.byte	'match',0,1,184,5,62
	.word	.L567,.L757
	.byte	5
	.word	.L300,.L755
	.byte	6
	.byte	'result',0,1,186,5,13
	.word	.L511,.L758
	.byte	6
	.byte	'savedArguments',0,1,187,5,13
	.word	.L563,.L759
	.byte	6
	.byte	'savedMatch',0,1,188,5,13
	.word	.L563,.L760
	.byte	6
	.byte	'buffer0',0,1,189,5,13
	.word	.L571,.L761
	.byte	6
	.byte	'buffer1',0,1,190,5,13
	.word	.L571,.L762
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_abbrev'
.L467:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_line'
.L468:
	.word	.L1568-.L1567
.L1567:
	.half	3
	.word	.L1570-.L1569
.L1569:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1570:
	.byte	5,16,7,0,5,2
	.word	.L300
	.byte	3,183,5,1,5,28,9
	.half	.L900-.L300
	.byte	3,2,1,5,30,3,1,1,9
	.half	.L901-.L900
	.byte	3,1,1,5,40,9
	.half	.L902-.L901
	.byte	3,4,1,5,49,9
	.half	.L898-.L902
	.byte	1,5,9,9
	.half	.L897-.L898
	.byte	1,5,41,7,9
	.half	.L1571-.L897
	.byte	3,1,1,5,50,9
	.half	.L1572-.L1571
	.byte	1,5,49,9
	.half	.L903-.L1572
	.byte	3,127,1,5,50,3,1,1,5,72,9
	.half	.L904-.L903
	.byte	1,5,20,7,9
	.half	.L1573-.L904
	.byte	3,2,1,5,29,9
	.half	.L1574-.L1573
	.byte	1,5,20,9
	.half	.L1575-.L1574
	.byte	3,2,1,5,5,9
	.half	.L109-.L1575
	.byte	3,4,1,5,18,7,9
	.half	.L1576-.L109
	.byte	3,3,1,9
	.half	.L1577-.L1576
	.byte	3,1,1,5,5,9
	.half	.L112-.L1577
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L470-.L112
	.byte	0,1,1
.L1568:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_ranges'
.L469:
	.word	-1,.L300,0,.L470-.L300,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_info'
.L471:
	.word	257
	.half	3
	.word	.L472
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L474,.L473
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_isEndOfLine',0,1,89,9
	.word	.L511
	.byte	1,1,1
	.word	.L272,.L763,.L271
	.byte	4
	.byte	'args',0,1,89,37
	.word	.L563,.L764
	.byte	5
	.word	.L272,.L763
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_abbrev'
.L472:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_line'
.L473:
	.word	.L1579-.L1578
.L1578:
	.half	3
	.word	.L1581-.L1580
.L1580:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1581:
	.byte	5,13,7,0,5,2
	.word	.L272
	.byte	3,218,0,1,5,36,7,9
	.half	.L1582-.L272
	.byte	1,5,42,9
	.half	.L1583-.L1582
	.byte	1,5,67,7,9
	.half	.L2-.L1583
	.byte	1,5,1,3,1,1,5,67,7,9
	.half	.L3-.L2
	.byte	3,127,1,5,1,3,1,1,7,9
	.half	.L475-.L3
	.byte	0,1,1
.L1579:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_ranges'
.L474:
	.word	-1,.L272,0,.L475-.L272,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_info'
.L476:
	.word	357
	.half	3
	.word	.L477
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L479,.L478
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_writeResult',0,1,95,16
	.word	.L511
	.byte	1,1
	.word	.L274,.L765,.L273
	.byte	4
	.byte	'shell',0,1,95,49
	.word	.L513,.L766
	.byte	4
	.byte	'Code',0,1,95,66
	.word	.L536,.L767
	.byte	5
	.word	.L274,.L765
	.byte	6
	.byte	'length',0,1,97,15
	.word	.L536,.L768
	.byte	7
	.word	.L669,.L769,.L765
	.byte	8
	.word	.L672,.L770
	.byte	8
	.word	.L674,.L771
	.byte	8
	.word	.L676,.L772
	.byte	8
	.word	.L678,.L773
	.byte	9
	.word	.L680,.L769,.L765
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_abbrev'
.L477:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_line'
.L478:
	.word	.L1585-.L1584
.L1584:
	.half	3
	.word	.L1587-.L1586
.L1586:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0
	.byte	'IfxStdIf_DPipe.h',0,1,0,0,0
.L1587:
	.byte	5,16,7,0,5,2
	.word	.L274
	.byte	3,222,0,1,5,24,9
	.half	.L781-.L274
	.byte	3,2,1,5,16,3,126,1,5,50,9
	.half	.L1588-.L781
	.byte	3,3,1,5,22,9
	.half	.L1589-.L1588
	.byte	3,127,1,5,57,9
	.half	.L769-.L1589
	.byte	3,1,1,4,2,5,17,9
	.half	.L1590-.L769
	.byte	3,166,1,1,5,30,9
	.half	.L1591-.L1590
	.byte	1,5,53,9
	.half	.L783-.L1591
	.byte	1,4,1,5,64,9
	.half	.L782-.L783
	.byte	3,218,126,1,4,2,5,53,9
	.half	.L1592-.L782
	.byte	3,166,1,1,4,1,5,1,7,9
	.half	.L480-.L1592
	.byte	3,223,126,0,1,1
.L1585:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_ranges'
.L479:
	.word	-1,.L274,0,.L480-.L274,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_info'
.L481:
	.word	359
	.half	3
	.word	.L482
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L484,.L483
	.byte	2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_showHelpSingleCommand',0,1,200,1,9
	.word	.L511
	.byte	1,1,1
	.word	.L278,.L774,.L277
	.byte	4
	.byte	'args',0,1,200,1,47
	.word	.L563,.L775
	.byte	4
	.byte	'shellPtr',0,1,200,1,59
	.word	.L683,.L776
	.byte	4
	.byte	'io',0,1,200,1,85
	.word	.L649,.L777
	.byte	5
	.word	.L278,.L774
	.byte	6
	.byte	'commandList',0,1,202,1,32
	.word	.L631,.L778
	.byte	6
	.byte	'shellCommand',0,1,203,1,32
	.word	.L629,.L779
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_abbrev'
.L482:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_line'
.L483:
	.word	.L1594-.L1593
.L1593:
	.half	3
	.word	.L1596-.L1595
.L1595:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1596:
	.byte	5,9,7,0,5,2
	.word	.L278
	.byte	3,199,1,1,5,83,9
	.half	.L812-.L278
	.byte	3,3,1,5,90,9
	.half	.L1597-.L812
	.byte	1,5,97,9
	.half	.L810-.L1597
	.byte	1,5,45,9
	.half	.L813-.L810
	.byte	1,5,97,9
	.half	.L815-.L813
	.byte	1,5,5,9
	.half	.L816-.L815
	.byte	3,2,1,5,25,7,9
	.half	.L1598-.L816
	.byte	3,2,1,5,9,9
	.half	.L1599-.L1598
	.byte	1,5,55,7,9
	.half	.L1600-.L1599
	.byte	3,2,1,5,62,9
	.half	.L1601-.L1600
	.byte	1,5,68,1,5,28,9
	.half	.L27-.L1601
	.byte	3,4,1,5,13,9
	.half	.L1602-.L27
	.byte	1,5,60,7,9
	.half	.L1603-.L1602
	.byte	3,2,1,5,42,9
	.half	.L1604-.L1603
	.byte	1,5,56,9
	.half	.L29-.L1604
	.byte	3,3,1,5,63,9
	.half	.L1605-.L29
	.byte	1,5,16,9
	.half	.L819-.L1605
	.byte	3,3,1,5,1,3,7,1,5,34,7,9
	.half	.L26-.L819
	.byte	3,125,1,5,16,9
	.half	.L821-.L26
	.byte	3,1,1,5,1,3,2,1,7,9
	.half	.L485-.L821
	.byte	0,1,1
.L1594:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_ranges'
.L484:
	.word	-1,.L278,0,.L485-.L278,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_34')
	.sect	'.debug_info'
.L486:
	.word	215
	.half	3
	.word	.L487
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L489,.L488
	.byte	2
	.word	.L337
	.byte	3
	.byte	'.cocofun_34',0,1,197,8,6,1
	.word	.L330,.L490,.L329
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_34')
	.sect	'.debug_abbrev'
.L487:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_34')
	.sect	'.debug_line'
.L488:
	.word	.L1607-.L1606
.L1606:
	.half	3
	.word	.L1609-.L1608
.L1608:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1609:
	.byte	5,13,7,0,5,2
	.word	.L330
	.byte	3,246,8,1,9
	.half	.L490-.L330
	.byte	0,1,1,5,13,0,5,2
	.word	.L330
	.byte	3,248,8,1,9
	.half	.L1610-.L330
	.byte	3,126,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,17,0,5,2
	.word	.L330
	.byte	3,136,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,110,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,17,0,5,2
	.word	.L330
	.byte	3,138,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,108,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,17,0,5,2
	.word	.L330
	.byte	3,155,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,91,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,17,0,5,2
	.word	.L330
	.byte	3,157,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,89,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,13,0,5,2
	.word	.L330
	.byte	3,183,9,1,9
	.half	.L1610-.L330
	.byte	3,191,127,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,17,0,5,2
	.word	.L330
	.byte	3,201,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,173,127,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1,5,21,0,5,2
	.word	.L330
	.byte	3,223,9,1,5,13,9
	.half	.L1610-.L330
	.byte	3,151,127,1,7,9
	.half	.L490-.L1610
	.byte	0,1,1
.L1607:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_34')
	.sect	'.debug_ranges'
.L489:
	.word	-1,.L330,0,.L490-.L330,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_35')
	.sect	'.debug_info'
.L491:
	.word	215
	.half	3
	.word	.L492
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L494,.L493
	.byte	2
	.word	.L337
	.byte	3
	.byte	'.cocofun_35',0,1,135,3,6,1
	.word	.L292,.L495,.L291
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_35')
	.sect	'.debug_abbrev'
.L492:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_35')
	.sect	'.debug_line'
.L493:
	.word	.L1612-.L1611
.L1611:
	.half	3
	.word	.L1614-.L1613
.L1613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1614:
	.byte	5,57,7,0,5,2
	.word	.L292
	.byte	3,251,3,1,9
	.half	.L495-.L292
	.byte	0,1,1,5,13,0,5,2
	.word	.L292
	.byte	3,247,8,1,5,57,9
	.half	.L1615-.L292
	.byte	3,132,123,1,7,9
	.half	.L495-.L1615
	.byte	0,1,1,5,17,0,5,2
	.word	.L292
	.byte	3,137,9,1,5,57,9
	.half	.L1615-.L292
	.byte	3,242,122,1,7,9
	.half	.L495-.L1615
	.byte	0,1,1,5,17,0,5,2
	.word	.L292
	.byte	3,156,9,1,5,57,9
	.half	.L1615-.L292
	.byte	3,223,122,1,7,9
	.half	.L495-.L1615
	.byte	0,1,1,5,53,0,5,2
	.word	.L292
	.byte	3,214,9,1,5,57,9
	.half	.L1615-.L292
	.byte	3,165,122,1,7,9
	.half	.L495-.L1615
	.byte	0,1,1,5,53,0,5,2
	.word	.L292
	.byte	3,254,9,1,5,57,9
	.half	.L1615-.L292
	.byte	3,253,121,1,7,9
	.half	.L495-.L1615
	.byte	0,1,1
.L1612:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_35')
	.sect	'.debug_ranges'
.L494:
	.word	-1,.L292,0,.L495-.L292,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_36')
	.sect	'.debug_info'
.L496:
	.word	215
	.half	3
	.word	.L497
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L499,.L498
	.byte	2
	.word	.L337
	.byte	3
	.byte	'.cocofun_36',0,1,197,8,6,1
	.word	.L328,.L500,.L327
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_36')
	.sect	'.debug_abbrev'
.L497:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_36')
	.sect	'.debug_line'
.L498:
	.word	.L1617-.L1616
.L1616:
	.half	3
	.word	.L1619-.L1618
.L1618:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1619:
	.byte	5,51,7,0,5,2
	.word	.L328
	.byte	3,219,9,1,5,57,9
	.half	.L1008-.L328
	.byte	1,9
	.half	.L500-.L1008
	.byte	0,1,1,5,13,0,5,2
	.word	.L328
	.byte	3,173,9,1,5,57,9
	.half	.L1620-.L328
	.byte	3,46,1,7,9
	.half	.L500-.L1620
	.byte	0,1,1,5,51,0,5,2
	.word	.L328
	.byte	3,250,9,1,5,57,9
	.half	.L1008-.L328
	.byte	1,9
	.half	.L1620-.L1008
	.byte	3,97,1,7,9
	.half	.L500-.L1620
	.byte	0,1,1,5,17,0,5,2
	.word	.L328
	.byte	3,145,10,1,5,57,9
	.half	.L1620-.L328
	.byte	3,74,1,7,9
	.half	.L500-.L1620
	.byte	0,1,1
.L1617:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_36')
	.sect	'.debug_ranges'
.L499:
	.word	-1,.L328,0,.L500-.L328,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_37')
	.sect	'.debug_info'
.L501:
	.word	215
	.half	3
	.word	.L502
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1
	.word	.L504,.L503
	.byte	2
	.word	.L337
	.byte	3
	.byte	'.cocofun_37',0,1,197,8,6,1
	.word	.L326,.L505,.L325
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_37')
	.sect	'.debug_abbrev'
.L502:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_37')
	.sect	'.debug_line'
.L503:
	.word	.L1622-.L1621
.L1621:
	.half	3
	.word	.L1624-.L1623
.L1623:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0,0,0,0,0
.L1624:
	.byte	5,46,7,0,5,2
	.word	.L326
	.byte	3,241,8,1,5,62,9
	.half	.L999-.L326
	.byte	1,5,42,9
	.half	.L991-.L999
	.byte	1,5,62,9
	.half	.L1625-.L991
	.byte	1,7,9
	.half	.L505-.L1625
	.byte	0,1,1,5,50,0,5,2
	.word	.L326
	.byte	3,151,9,1,5,66,9
	.half	.L999-.L326
	.byte	1,5,46,9
	.half	.L991-.L999
	.byte	1,5,62,9
	.half	.L1625-.L991
	.byte	3,90,1,7,9
	.half	.L505-.L1625
	.byte	0,1,1
.L1622:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_37')
	.sect	'.debug_ranges'
.L504:
	.word	-1,.L326,0,.L505-.L326,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_info'
.L506:
	.word	212
	.half	3
	.word	.L507
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm\\Ifx_Shell.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\AICT-1of LQ_TC26xB_LIBtasking0512\\Debug\\',0,12,1,2
	.word	.L337
	.byte	3
	.byte	'Ifx_Shell_cmdBuffer',0,9,77,6
	.word	.L780
	.byte	1,5,3
	.word	Ifx_Shell_cmdBuffer
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_Shell_cmdBuffer')
	.sect	'.debug_abbrev'
.L507:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_34')
	.sect	'.debug_loc'
.L329:
	.word	-1,.L330,0,.L490-.L330
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_35')
	.sect	'.debug_loc'
.L291:
	.word	-1,.L292,0,.L495-.L292
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_36')
	.sect	'.debug_loc'
.L327:
	.word	-1,.L328,0,.L500-.L328
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_37')
	.sect	'.debug_loc'
.L325:
	.word	-1,.L326,0,.L505-.L326
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_loc'
.L283:
	.word	-1,.L284,0,.L841-.L284
	.half	2
	.byte	138,0
	.word	.L841-.L284,.L699-.L284
	.half	2
	.byte	138,8
	.word	.L699-.L284,.L699-.L284
	.half	2
	.byte	138,0
	.word	0,0
.L700:
	.word	-1,.L284,0,.L842-.L284
	.half	1
	.byte	100
	.word	0,.L699-.L284
	.half	2
	.byte	145,120
	.word	0,0
.L701:
	.word	-1,.L284,0,.L843-.L284
	.half	1
	.byte	101
	.word	.L845-.L284,.L699-.L284
	.half	1
	.byte	111
	.word	.L852-.L284,.L847-.L284
	.half	1
	.byte	101
	.word	0,0
.L702:
	.word	-1,.L284,0,.L844-.L284
	.half	1
	.byte	102
	.word	.L846-.L284,.L699-.L284
	.half	1
	.byte	108
	.word	.L848-.L284,.L849-.L284
	.half	1
	.byte	100
	.word	.L850-.L284,.L851-.L284
	.half	1
	.byte	100
	.word	.L853-.L284,.L847-.L284
	.half	1
	.byte	102
	.word	0,0
.L703:
	.word	-1,.L284,.L842-.L284,.L847-.L284
	.half	1
	.byte	95
	.word	.L847-.L284,.L45-.L284
	.half	1
	.byte	82
	.word	.L45-.L284,.L699-.L284
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_loc'
.L716:
	.word	0,0
.L713:
	.word	-1,.L324,0,.L207-.L324
	.half	1
	.byte	84
	.word	.L983-.L324,.L984-.L324
	.half	1
	.byte	88
	.word	.L985-.L324,.L986-.L324
	.half	1
	.byte	88
	.word	.L987-.L324,.L988-.L324
	.half	1
	.byte	88
	.word	.L989-.L324,.L990-.L324
	.half	1
	.byte	88
	.word	.L326-.L324,.L991-.L324
	.half	1
	.byte	84
	.word	.L202-.L324,.L221-.L324
	.half	1
	.byte	84
	.word	.L218-.L324,.L998-.L324
	.half	1
	.byte	84
	.word	.L326-.L324,.L999-.L324
	.half	1
	.byte	84
	.word	.L328-.L324,.L500-.L324
	.half	1
	.byte	84
	.word	.L203-.L324,.L236-.L324
	.half	1
	.byte	84
	.word	.L330-.L324,.L490-.L324
	.half	1
	.byte	84
	.word	.L204-.L324,.L239-.L324
	.half	1
	.byte	84
	.word	.L1013-.L324,.L1014-.L324
	.half	1
	.byte	88
	.word	.L1015-.L324,.L1016-.L324
	.half	1
	.byte	88
	.word	.L1017-.L324,.L1018-.L324
	.half	1
	.byte	88
	.word	.L1019-.L324,.L200-.L324
	.half	1
	.byte	88
	.word	0,0
.L714:
	.word	-1,.L324,0,.L207-.L324
	.half	1
	.byte	85
	.word	.L326-.L324,.L505-.L324
	.half	1
	.byte	85
	.word	.L992-.L324,.L993-.L324
	.half	1
	.byte	85
	.word	.L202-.L324,.L221-.L324
	.half	1
	.byte	85
	.word	.L218-.L324,.L998-.L324
	.half	1
	.byte	85
	.word	.L1000-.L324,.L1001-.L324
	.half	1
	.byte	85
	.word	.L328-.L324,.L500-.L324
	.half	1
	.byte	85
	.word	.L203-.L324,.L236-.L324
	.half	1
	.byte	85
	.word	.L330-.L324,.L490-.L324
	.half	1
	.byte	85
	.word	.L204-.L324,.L239-.L324
	.half	1
	.byte	85
	.word	.L1011-.L324,.L1012-.L324
	.half	1
	.byte	89
	.word	0,0
.L323:
	.word	-1,.L324,0,.L981-.L324
	.half	2
	.byte	138,0
	.word	.L981-.L324,.L241-.L324
	.half	2
	.byte	138,8
	.word	.L241-.L324,.L241-.L324
	.half	2
	.byte	138,0
	.word	.L241-.L324,.L242-.L324
	.half	2
	.byte	138,8
	.word	.L242-.L324,.L242-.L324
	.half	2
	.byte	138,0
	.word	.L242-.L324,.L267-.L324
	.half	2
	.byte	138,8
	.word	.L267-.L324,.L267-.L324
	.half	2
	.byte	138,0
	.word	.L267-.L324,.L710-.L324
	.half	2
	.byte	138,8
	.word	.L710-.L324,.L710-.L324
	.half	2
	.byte	138,0
	.word	0,0
.L717:
	.word	-1,.L324,.L983-.L324,.L207-.L324
	.half	1
	.byte	108
	.word	.L326-.L324,.L505-.L324
	.half	1
	.byte	108
	.word	.L991-.L324,.L505-.L324
	.half	1
	.byte	100
	.word	.L992-.L324,.L211-.L324
	.half	1
	.byte	108
	.word	.L992-.L324,.L993-.L324
	.half	1
	.byte	100
	.word	.L330-.L324,.L490-.L324
	.half	1
	.byte	108
	.word	.L292-.L324,.L495-.L324
	.half	1
	.byte	108
	.word	.L994-.L324,.L215-.L324
	.half	1
	.byte	108
	.word	.L995-.L324,.L221-.L324
	.half	1
	.byte	108
	.word	.L996-.L324,.L225-.L324
	.half	1
	.byte	108
	.word	.L997-.L324,.L998-.L324
	.half	1
	.byte	108
	.word	.L1000-.L324,.L229-.L324
	.half	1
	.byte	108
	.word	.L1000-.L324,.L1001-.L324
	.half	1
	.byte	100
	.word	.L1002-.L324,.L233-.L324
	.half	1
	.byte	108
	.word	.L1004-.L324,.L209-.L324
	.half	1
	.byte	101
	.word	.L1005-.L324,.L1006-.L324
	.half	1
	.byte	100
	.word	.L328-.L324,.L500-.L324
	.half	1
	.byte	108
	.word	.L1003-.L324,.L200-.L324
	.half	1
	.byte	108
	.word	.L241-.L324,.L255-.L324
	.half	1
	.byte	108
	.word	.L1021-.L324,.L710-.L324
	.half	1
	.byte	108
	.word	0,0
.L718:
	.word	-1,.L324,.L328-.L324,.L500-.L324
	.half	1
	.byte	95
	.word	.L1020-.L324,.L255-.L324
	.half	1
	.byte	95
	.word	.L1022-.L324,.L1023-.L324
	.half	1
	.byte	95
	.word	.L328-.L324,.L500-.L324
	.half	1
	.byte	88
	.word	.L292-.L324,.L495-.L324
	.half	1
	.byte	88
	.word	.L1024-.L324,.L264-.L324
	.half	1
	.byte	88
	.word	0,0
.L722:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L994-.L324,.L213-.L324
	.half	1
	.byte	95
	.word	0,0
.L724:
	.word	-1,.L324,.L292-.L324,.L495-.L324
	.half	1
	.byte	95
	.word	.L213-.L324,.L215-.L324
	.half	1
	.byte	95
	.word	0,0
.L726:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L995-.L324,.L202-.L324
	.half	1
	.byte	95
	.word	0,0
.L729:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L996-.L324,.L223-.L324
	.half	1
	.byte	95
	.word	0,0
.L731:
	.word	-1,.L324,.L292-.L324,.L495-.L324
	.half	1
	.byte	95
	.word	.L223-.L324,.L225-.L324
	.half	1
	.byte	95
	.word	0,0
.L732:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L997-.L324,.L219-.L324
	.half	1
	.byte	95
	.word	0,0
.L735:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L1002-.L324,.L231-.L324
	.half	1
	.byte	95
	.word	0,0
.L737:
	.word	-1,.L324,.L292-.L324,.L495-.L324
	.half	1
	.byte	95
	.word	.L231-.L324,.L233-.L324
	.half	1
	.byte	95
	.word	0,0
.L738:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L1003-.L324,.L216-.L324
	.half	1
	.byte	95
	.word	0,0
.L741:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	95
	.word	.L247-.L324,.L246-.L324
	.half	1
	.byte	95
	.word	0,0
.L743:
	.word	-1,.L324,.L330-.L324,.L490-.L324
	.half	1
	.byte	88
	.word	.L1021-.L324,.L251-.L324
	.half	1
	.byte	88
	.word	0,0
.L745:
	.word	-1,.L324,.L264-.L324,.L260-.L324
	.half	1
	.byte	88
	.word	0,0
.L711:
	.word	-1,.L324,0,.L207-.L324
	.half	1
	.byte	100
	.word	.L982-.L324,.L207-.L324
	.half	1
	.byte	111
	.word	.L326-.L324,.L991-.L324
	.half	1
	.byte	100
	.word	.L326-.L324,.L505-.L324
	.half	1
	.byte	111
	.word	.L992-.L324,.L211-.L324
	.half	1
	.byte	111
	.word	.L330-.L324,.L490-.L324
	.half	1
	.byte	111
	.word	.L292-.L324,.L495-.L324
	.half	1
	.byte	111
	.word	.L994-.L324,.L215-.L324
	.half	1
	.byte	111
	.word	.L995-.L324,.L221-.L324
	.half	1
	.byte	111
	.word	.L202-.L324,.L221-.L324
	.half	1
	.byte	100
	.word	.L996-.L324,.L225-.L324
	.half	1
	.byte	111
	.word	.L997-.L324,.L998-.L324
	.half	1
	.byte	111
	.word	.L218-.L324,.L998-.L324
	.half	1
	.byte	100
	.word	.L1000-.L324,.L229-.L324
	.half	1
	.byte	111
	.word	.L1002-.L324,.L233-.L324
	.half	1
	.byte	111
	.word	.L203-.L324,.L1007-.L324
	.half	1
	.byte	100
	.word	.L328-.L324,.L1008-.L324
	.half	1
	.byte	100
	.word	.L328-.L324,.L500-.L324
	.half	1
	.byte	111
	.word	.L204-.L324,.L1009-.L324
	.half	1
	.byte	100
	.word	.L330-.L324,.L1010-.L324
	.half	1
	.byte	100
	.word	.L1003-.L324,.L255-.L324
	.half	1
	.byte	111
	.word	.L1021-.L324,.L710-.L324
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_loc'
.L317:
	.word	-1,.L318,0,.L950-.L318
	.half	2
	.byte	138,0
	.word	.L950-.L318,.L630-.L318
	.half	3
	.byte	138,144,2
	.word	.L630-.L318,.L630-.L318
	.half	2
	.byte	138,0
	.word	0,0
.L634:
	.word	-1,.L318,0,.L171-.L318
	.half	1
	.byte	102
	.word	.L952-.L318,.L630-.L318
	.half	2
	.byte	145,120
	.word	.L961-.L318,.L174-.L318
	.half	1
	.byte	98
	.word	0,0
.L645:
	.word	-1,.L318,0,.L630-.L318
	.half	3
	.byte	145,248,125
	.word	0,0
.L638:
	.word	-1,.L318,.L955-.L318,.L630-.L318
	.half	1
	.byte	111
	.word	0,0
.L636:
	.word	-1,.L318,.L954-.L318,.L630-.L318
	.half	1
	.byte	109
	.word	0,0
.L633:
	.word	-1,.L318,0,.L171-.L318
	.half	1
	.byte	101
	.word	0,0
.L644:
	.word	-1,.L318,0,.L630-.L318
	.half	3
	.byte	145,244,125
	.word	0,0
.L632:
	.word	-1,.L318,0,.L171-.L318
	.half	1
	.byte	100
	.word	0,0
.L643:
	.word	-1,.L318,0,.L630-.L318
	.half	3
	.byte	145,240,125
	.word	0,0
.L642:
	.word	-1,.L318,.L957-.L318,.L168-.L318
	.half	1
	.byte	91
	.word	.L962-.L318,.L178-.L318
	.half	1
	.byte	91
	.word	0,0
.L641:
	.word	-1,.L318,.L959-.L318,.L960-.L318
	.half	1
	.byte	90
	.word	.L174-.L318,.L962-.L318
	.half	1
	.byte	90
	.word	.L178-.L318,.L170-.L318
	.half	1
	.byte	90
	.word	0,0
.L635:
	.word	-1,.L318,0,.L171-.L318
	.half	1
	.byte	103
	.word	.L953-.L318,.L630-.L318
	.half	1
	.byte	108
	.word	0,0
.L646:
	.word	-1,.L318,.L173-.L318,.L170-.L318
	.half	1
	.byte	88
	.word	0,0
.L640:
	.word	-1,.L318,.L951-.L318,.L630-.L318
	.half	1
	.byte	89
	.word	.L958-.L318,.L171-.L318
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L637:
	.word	-1,.L318,.L956-.L318,.L630-.L318
	.half	1
	.byte	110
	.word	.L963-.L318,.L630-.L318
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_loc'
.L753:
	.word	-1,.L320,.L971-.L320,.L746-.L320
	.half	1
	.byte	109
	.word	.L972-.L320,.L746-.L320
	.half	1
	.byte	98
	.word	0,0
.L319:
	.word	-1,.L320,0,.L964-.L320
	.half	2
	.byte	138,0
	.word	.L964-.L320,.L746-.L320
	.half	2
	.byte	138,8
	.word	.L746-.L320,.L746-.L320
	.half	2
	.byte	138,0
	.word	0,0
.L749:
	.word	-1,.L320,0,.L965-.L320
	.half	1
	.byte	102
	.word	0,0
.L748:
	.word	-1,.L320,0,.L965-.L320
	.half	1
	.byte	101
	.word	0,0
.L751:
	.word	-1,.L320,0,.L966-.L320
	.half	1
	.byte	103
	.word	.L970-.L320,.L746-.L320
	.half	1
	.byte	108
	.word	0,0
.L754:
	.word	-1,.L320,0,.L746-.L320
	.half	2
	.byte	145,120
	.word	0,0
.L747:
	.word	-1,.L320,0,.L967-.L320
	.half	1
	.byte	100
	.word	.L968-.L320,.L969-.L320
	.half	1
	.byte	111
	.word	0,0
.L752:
	.word	-1,.L320,.L965-.L320,.L182-.L320
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_loc'
.L293:
	.word	-1,.L294,0,.L521-.L294
	.half	2
	.byte	138,0
	.word	0,0
.L522:
	.word	-1,.L294,0,.L521-.L294
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_loc'
.L333:
	.word	-1,.L334,0,.L531-.L334
	.half	2
	.byte	138,0
	.word	0,0
.L532:
	.word	-1,.L334,0,.L531-.L334
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_loc'
.L331:
	.word	-1,.L332,0,.L523-.L332
	.half	2
	.byte	138,0
	.word	0,0
.L524:
	.word	-1,.L332,0,.L1025-.L332
	.half	1
	.byte	100
	.word	.L1026-.L332,.L523-.L332
	.half	1
	.byte	111
	.word	0,0
.L529:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_loc'
.L321:
	.word	-1,.L322,0,.L973-.L322
	.half	2
	.byte	138,0
	.word	.L973-.L322,.L187-.L322
	.half	2
	.byte	138,16
	.word	.L187-.L322,.L187-.L322
	.half	2
	.byte	138,0
	.word	.L187-.L322,.L197-.L322
	.half	2
	.byte	138,16
	.word	.L197-.L322,.L197-.L322
	.half	2
	.byte	138,0
	.word	.L197-.L322,.L199-.L322
	.half	2
	.byte	138,16
	.word	.L199-.L322,.L199-.L322
	.half	2
	.byte	138,0
	.word	.L199-.L322,.L704-.L322
	.half	2
	.byte	138,16
	.word	.L704-.L322,.L704-.L322
	.half	2
	.byte	138,0
	.word	0,0
.L707:
	.word	-1,.L322,0,.L704-.L322
	.half	2
	.byte	145,116
	.word	0,0
.L706:
	.word	-1,.L322,0,.L974-.L322
	.half	1
	.byte	101
	.word	.L976-.L322,.L704-.L322
	.half	1
	.byte	108
	.word	.L978-.L322,.L187-.L322
	.half	1
	.byte	100
	.word	0,0
.L708:
	.word	-1,.L322,0,.L704-.L322
	.half	2
	.byte	145,120
	.word	0,0
.L705:
	.word	-1,.L322,0,.L974-.L322
	.half	1
	.byte	100
	.word	.L975-.L322,.L704-.L322
	.half	1
	.byte	111
	.word	.L979-.L322,.L187-.L322
	.half	1
	.byte	101
	.word	.L980-.L322,.L197-.L322
	.half	1
	.byte	100
	.word	0,0
.L709:
	.word	-1,.L322,.L974-.L322,.L977-.L322
	.half	1
	.byte	98
	.word	.L186-.L322,.L193-.L322
	.half	1
	.byte	98
	.word	.L197-.L322,.L195-.L322
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_loc'
.L520:
	.word	-1,.L288,.L857-.L288,.L858-.L288
	.half	1
	.byte	98
	.word	0,0
.L287:
	.word	-1,.L288,0,.L512-.L288
	.half	2
	.byte	138,0
	.word	0,0
.L516:
	.word	-1,.L288,0,.L854-.L288
	.half	1
	.byte	101
	.word	.L856-.L288,.L512-.L288
	.half	1
	.byte	108
	.word	0,0
.L518:
	.word	0,0
.L514:
	.word	-1,.L288,0,.L854-.L288
	.half	1
	.byte	100
	.word	.L855-.L288,.L512-.L288
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_loc'
.L285:
	.word	-1,.L286,0,.L508-.L286
	.half	2
	.byte	138,0
	.word	0,0
.L510:
	.word	-1,.L286,0,.L508-.L286
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_loc'
.L271:
	.word	-1,.L272,0,.L763-.L272
	.half	2
	.byte	138,0
	.word	0,0
.L764:
	.word	-1,.L272,0,.L763-.L272
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_loc'
.L299:
	.word	-1,.L300,0,.L896-.L300
	.half	2
	.byte	138,0
	.word	.L896-.L300,.L755-.L300
	.half	3
	.byte	138,128,4
	.word	.L755-.L300,.L755-.L300
	.half	2
	.byte	138,0
	.word	0,0
.L756:
	.word	-1,.L300,0,.L897-.L300
	.half	1
	.byte	100
	.word	.L899-.L300,.L755-.L300
	.half	1
	.byte	111
	.word	0,0
.L761:
	.word	-1,.L300,0,.L755-.L300
	.half	3
	.byte	145,128,124
	.word	0,0
.L762:
	.word	-1,.L300,0,.L755-.L300
	.half	3
	.byte	145,128,126
	.word	0,0
.L757:
	.word	-1,.L300,0,.L898-.L300
	.half	1
	.byte	101
	.word	.L900-.L300,.L755-.L300
	.half	1
	.byte	108
	.word	.L903-.L300,.L904-.L300
	.half	1
	.byte	100
	.word	0,0
.L758:
	.word	-1,.L300,.L901-.L300,.L755-.L300
	.half	1
	.byte	95
	.word	0,0
.L759:
	.word	-1,.L300,.L901-.L300,.L755-.L300
	.half	1
	.byte	109
	.word	0,0
.L760:
	.word	-1,.L300,.L902-.L300,.L755-.L300
	.half	1
	.byte	110
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_loc'
.L297:
	.word	-1,.L298,0,.L888-.L298
	.half	2
	.byte	138,0
	.word	.L888-.L298,.L566-.L298
	.half	3
	.byte	138,128,2
	.word	.L566-.L298,.L566-.L298
	.half	2
	.byte	138,0
	.word	0,0
.L568:
	.word	-1,.L298,0,.L889-.L298
	.half	1
	.byte	100
	.word	.L891-.L298,.L566-.L298
	.half	1
	.byte	111
	.word	0,0
.L572:
	.word	-1,.L298,0,.L566-.L298
	.half	3
	.byte	145,128,126
	.word	0,0
.L573:
	.word	-1,.L298,.L890-.L298,.L566-.L298
	.half	1
	.byte	95
	.word	0,0
.L570:
	.word	-1,.L298,.L893-.L298,.L566-.L298
	.half	1
	.byte	109
	.word	0,0
.L569:
	.word	-1,.L298,0,.L890-.L298
	.half	1
	.byte	101
	.word	.L892-.L298,.L566-.L298
	.half	1
	.byte	108
	.word	.L894-.L298,.L895-.L298
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_loc'
.L303:
	.word	-1,.L304,0,.L913-.L304
	.half	2
	.byte	138,0
	.word	.L913-.L304,.L580-.L304
	.half	2
	.byte	138,40
	.word	.L580-.L304,.L580-.L304
	.half	2
	.byte	138,0
	.word	0,0
.L583:
	.word	-1,.L304,0,.L914-.L304
	.half	1
	.byte	101
	.word	.L916-.L304,.L580-.L304
	.half	1
	.byte	111
	.word	0,0
.L581:
	.word	-1,.L304,0,.L915-.L304
	.half	1
	.byte	100
	.word	0,0
.L585:
	.word	-1,.L304,0,.L580-.L304
	.half	2
	.byte	145,92
	.word	0,0
.L586:
	.word	-1,.L304,.L917-.L304,.L580-.L304
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_loc'
.L315:
	.word	-1,.L316,0,.L945-.L316
	.half	2
	.byte	138,0
	.word	.L945-.L316,.L623-.L316
	.half	3
	.byte	138,200,0
	.word	.L623-.L316,.L623-.L316
	.half	2
	.byte	138,0
	.word	0,0
.L624:
	.word	-1,.L316,0,.L946-.L316
	.half	1
	.byte	100
	.word	0,0
.L627:
	.word	-1,.L316,0,.L623-.L316
	.half	3
	.byte	145,188,127
	.word	0,0
.L628:
	.word	-1,.L316,.L949-.L316,.L623-.L316
	.half	1
	.byte	88
	.word	0,0
.L626:
	.word	-1,.L316,0,.L947-.L316
	.half	1
	.byte	101
	.word	.L948-.L316,.L623-.L316
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_loc'
.L313:
	.word	-1,.L314,0,.L940-.L314
	.half	2
	.byte	138,0
	.word	.L940-.L314,.L617-.L314
	.half	3
	.byte	138,200,0
	.word	.L617-.L314,.L617-.L314
	.half	2
	.byte	138,0
	.word	0,0
.L618:
	.word	-1,.L314,0,.L941-.L314
	.half	1
	.byte	100
	.word	0,0
.L621:
	.word	-1,.L314,0,.L617-.L314
	.half	3
	.byte	145,188,127
	.word	0,0
.L622:
	.word	-1,.L314,.L944-.L314,.L617-.L314
	.half	1
	.byte	88
	.word	0,0
.L620:
	.word	-1,.L314,0,.L942-.L314
	.half	1
	.byte	101
	.word	.L943-.L314,.L617-.L314
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_loc'
.L305:
	.word	-1,.L306,0,.L918-.L306
	.half	2
	.byte	138,0
	.word	.L918-.L306,.L136-.L306
	.half	2
	.byte	138,8
	.word	.L136-.L306,.L136-.L306
	.half	2
	.byte	138,0
	.word	.L136-.L306,.L587-.L306
	.half	2
	.byte	138,8
	.word	.L587-.L306,.L587-.L306
	.half	2
	.byte	138,0
	.word	0,0
.L588:
	.word	-1,.L306,0,.L919-.L306
	.half	1
	.byte	100
	.word	0,0
.L593:
	.word	0,0
.L590:
	.word	-1,.L306,0,.L920-.L306
	.half	1
	.byte	101
	.word	.L921-.L306,.L587-.L306
	.half	1
	.byte	111
	.word	0,0
.L592:
	.word	-1,.L306,0,.L587-.L306
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_loc'
.L309:
	.word	-1,.L310,0,.L926-.L310
	.half	2
	.byte	138,0
	.word	.L926-.L310,.L602-.L310
	.half	3
	.byte	138,200,0
	.word	.L602-.L310,.L602-.L310
	.half	2
	.byte	138,0
	.word	0,0
.L603:
	.word	-1,.L310,0,.L927-.L310
	.half	1
	.byte	100
	.word	0,0
.L607:
	.word	-1,.L310,0,.L602-.L310
	.half	3
	.byte	145,188,127
	.word	0,0
.L608:
	.word	-1,.L310,.L930-.L310,.L602-.L310
	.half	1
	.byte	88
	.word	0,0
.L605:
	.word	-1,.L310,0,.L928-.L310
	.half	1
	.byte	101
	.word	.L929-.L310,.L602-.L310
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_loc'
.L301:
	.word	-1,.L302,0,.L574-.L302
	.half	2
	.byte	138,0
	.word	0,0
.L579:
	.word	-1,.L302,.L906-.L302,.L911-.L302
	.half	1
	.byte	98
	.word	.L912-.L302,.L911-.L302
	.half	1
	.byte	100
	.word	0,0
.L575:
	.word	-1,.L302,0,.L905-.L302
	.half	1
	.byte	100
	.word	.L907-.L302,.L574-.L302
	.half	1
	.byte	108
	.word	0,0
.L577:
	.word	-1,.L302,0,.L906-.L302
	.half	1
	.byte	84
	.word	.L907-.L302,.L908-.L302
	.half	1
	.byte	88
	.word	0,0
.L578:
	.word	-1,.L302,.L905-.L302,.L574-.L302
	.half	1
	.byte	89
	.word	0,0
.L576:
	.word	-1,.L302,0,.L906-.L302
	.half	1
	.byte	101
	.word	.L909-.L302,.L910-.L302
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_loc'
.L307:
	.word	-1,.L308,0,.L922-.L308
	.half	2
	.byte	138,0
	.word	.L922-.L308,.L139-.L308
	.half	2
	.byte	138,8
	.word	.L139-.L308,.L139-.L308
	.half	2
	.byte	138,0
	.word	.L139-.L308,.L594-.L308
	.half	2
	.byte	138,8
	.word	.L594-.L308,.L594-.L308
	.half	2
	.byte	138,0
	.word	0,0
.L595:
	.word	-1,.L308,0,.L923-.L308
	.half	1
	.byte	100
	.word	0,0
.L598:
	.word	-1,.L308,0,.L923-.L308
	.half	1
	.byte	84
	.word	0,0
.L601:
	.word	0,0
.L597:
	.word	-1,.L308,0,.L924-.L308
	.half	1
	.byte	101
	.word	.L925-.L308,.L594-.L308
	.half	1
	.byte	111
	.word	0,0
.L600:
	.word	-1,.L308,0,.L594-.L308
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_loc'
.L311:
	.word	-1,.L312,0,.L931-.L312
	.half	2
	.byte	138,0
	.word	.L931-.L312,.L609-.L312
	.half	3
	.byte	138,200,0
	.word	.L609-.L312,.L609-.L312
	.half	2
	.byte	138,0
	.word	0,0
.L610:
	.word	-1,.L312,0,.L932-.L312
	.half	1
	.byte	100
	.word	0,0
.L614:
	.word	-1,.L312,0,.L609-.L312
	.half	3
	.byte	145,188,127
	.word	0,0
.L616:
	.word	-1,.L312,.L936-.L312,.L937-.L312
	.half	1
	.byte	100
	.word	.L151-.L312,.L938-.L312
	.half	1
	.byte	100
	.word	0,0
.L613:
	.word	-1,.L312,0,.L933-.L312
	.half	1
	.byte	84
	.word	.L931-.L312,.L935-.L312
	.half	1
	.byte	88
	.word	.L151-.L312,.L148-.L312
	.half	1
	.byte	88
	.word	0,0
.L615:
	.word	-1,.L312,.L935-.L312,.L151-.L312
	.half	1
	.byte	88
	.word	.L939-.L312,.L609-.L312
	.half	1
	.byte	88
	.word	0,0
.L612:
	.word	-1,.L312,0,.L934-.L312
	.half	1
	.byte	101
	.word	.L933-.L312,.L609-.L312
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_loc'
.L335:
	.word	-1,.L336,0,.L1027-.L336
	.half	2
	.byte	138,0
	.word	.L1027-.L336,.L688-.L336
	.half	2
	.byte	138,8
	.word	.L688-.L336,.L688-.L336
	.half	2
	.byte	138,0
	.word	0,0
.L691:
	.word	-1,.L336,0,.L270-.L336
	.half	1
	.byte	101
	.word	.L1028-.L336,.L688-.L336
	.half	1
	.byte	108
	.word	.L1030-.L336,.L1031-.L336
	.half	1
	.byte	100
	.word	.L1032-.L336,.L1033-.L336
	.half	1
	.byte	100
	.word	0,0
.L692:
	.word	-1,.L336,.L1029-.L336,.L688-.L336
	.half	1
	.byte	111
	.word	0,0
.L690:
	.word	-1,.L336,0,.L270-.L336
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_loc'
.L543:
	.word	0,0
.L547:
	.word	-1,.L290,.L862-.L290,.L863-.L290
	.half	1
	.byte	111
	.word	.L53-.L290,.L864-.L290
	.half	1
	.byte	111
	.word	.L868-.L290,.L75-.L290
	.half	1
	.byte	111
	.word	.L292-.L290,.L495-.L290
	.half	2
	.byte	145,124
	.word	.L875-.L290,.L533-.L290
	.half	2
	.byte	145,124
	.word	0,0
.L289:
	.word	-1,.L290,0,.L859-.L290
	.half	2
	.byte	138,0
	.word	.L859-.L290,.L54-.L290
	.half	2
	.byte	138,16
	.word	.L54-.L290,.L54-.L290
	.half	2
	.byte	138,0
	.word	.L54-.L290,.L533-.L290
	.half	2
	.byte	138,16
	.word	.L533-.L290,.L533-.L290
	.half	2
	.byte	138,0
	.word	0,0
.L541:
	.word	-1,.L290,.L292-.L290,.L495-.L290
	.half	1
	.byte	91
	.word	.L876-.L290,.L56-.L290
	.half	1
	.byte	91
	.word	0,0
.L546:
	.word	-1,.L290,.L869-.L290,.L75-.L290
	.half	1
	.byte	101
	.word	.L871-.L290,.L74-.L290
	.half	1
	.byte	101
	.word	.L292-.L290,.L495-.L290
	.half	1
	.byte	109
	.word	.L877-.L290,.L533-.L290
	.half	1
	.byte	109
	.word	0,0
.L556:
	.word	0,0
.L539:
	.word	-1,.L290,.L292-.L290,.L495-.L290
	.half	1
	.byte	88
	.word	.L878-.L290,.L52-.L290
	.half	1
	.byte	88
	.word	0,0
.L554:
	.word	0,0
.L537:
	.word	-1,.L290,.L292-.L290,.L495-.L290
	.half	1
	.byte	89
	.word	.L57-.L290,.L879-.L290
	.half	1
	.byte	89
	.word	.L886-.L290,.L52-.L290
	.half	1
	.byte	89
	.word	0,0
.L562:
	.word	-1,.L290,.L84-.L290,.L80-.L290
	.half	1
	.byte	92
	.word	0,0
.L545:
	.word	-1,.L290,.L861-.L290,.L862-.L290
	.half	1
	.byte	111
	.word	.L865-.L290,.L550-.L290
	.half	1
	.byte	101
	.word	.L866-.L290,.L867-.L290
	.half	1
	.byte	111
	.word	.L58-.L290,.L872-.L290
	.half	1
	.byte	111
	.word	.L292-.L290,.L495-.L290
	.half	2
	.byte	145,120
	.word	.L880-.L290,.L533-.L290
	.half	2
	.byte	145,120
	.word	.L61-.L290,.L78-.L290
	.half	1
	.byte	111
	.word	.L884-.L290,.L96-.L290
	.half	1
	.byte	111
	.word	.L885-.L290,.L56-.L290
	.half	1
	.byte	111
	.word	0,0
.L538:
	.word	-1,.L290,.L873-.L290,.L874-.L290
	.half	1
	.byte	95
	.word	.L292-.L290,.L495-.L290
	.half	1
	.byte	95
	.word	.L81-.L290,.L84-.L290
	.half	1
	.byte	95
	.word	0,0
.L540:
	.word	-1,.L290,.L292-.L290,.L495-.L290
	.half	2
	.byte	145,116
	.word	0,.L533-.L290
	.half	2
	.byte	145,116
	.word	0,0
.L534:
	.word	-1,.L290,0,.L860-.L290
	.half	1
	.byte	100
	.word	.L870-.L290,.L74-.L290
	.half	1
	.byte	100
	.word	.L292-.L290,.L495-.L290
	.half	1
	.byte	108
	.word	.L881-.L290,.L533-.L290
	.half	1
	.byte	108
	.word	.L882-.L290,.L883-.L290
	.half	1
	.byte	100
	.word	0,0
.L552:
	.word	0,0
.L558:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_loc'
.L281:
	.word	-1,.L282,0,.L827-.L282
	.half	2
	.byte	138,0
	.word	.L827-.L282,.L693-.L282
	.half	2
	.byte	138,8
	.word	.L693-.L282,.L693-.L282
	.half	2
	.byte	138,0
	.word	0,0
.L698:
	.word	-1,.L282,.L828-.L282,.L833-.L282
	.half	1
	.byte	95
	.word	.L833-.L282,.L839-.L282
	.half	1
	.byte	82
	.word	.L840-.L282,.L693-.L282
	.half	1
	.byte	95
	.word	0,0
.L694:
	.word	-1,.L282,0,.L828-.L282
	.half	1
	.byte	100
	.word	0,.L693-.L282
	.half	2
	.byte	145,120
	.word	0,0
.L695:
	.word	-1,.L282,0,.L829-.L282
	.half	1
	.byte	101
	.word	.L831-.L282,.L693-.L282
	.half	1
	.byte	111
	.word	0,0
.L696:
	.word	-1,.L282,0,.L830-.L282
	.half	1
	.byte	102
	.word	.L832-.L282,.L693-.L282
	.half	1
	.byte	108
	.word	.L834-.L282,.L835-.L282
	.half	1
	.byte	100
	.word	.L836-.L282,.L837-.L282
	.half	1
	.byte	100
	.word	.L838-.L282,.L833-.L282
	.half	1
	.byte	101
	.word	0,0
.L697:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_loc'
.L279:
	.word	-1,.L280,0,.L681-.L280
	.half	2
	.byte	138,0
	.word	0,0
.L682:
	.word	-1,.L280,0,.L822-.L280
	.half	1
	.byte	100
	.word	.L32-.L280,.L826-.L280
	.half	1
	.byte	100
	.word	0,0
.L685:
	.word	-1,.L280,0,.L823-.L280
	.half	1
	.byte	102
	.word	.L824-.L280,.L823-.L280
	.half	1
	.byte	101
	.word	.L32-.L280,.L826-.L280
	.half	1
	.byte	102
	.word	0,0
.L687:
	.word	-1,.L280,.L825-.L280,.L826-.L280
	.half	1
	.byte	88
	.word	.L824-.L280,.L823-.L280
	.half	1
	.byte	84
	.word	.L826-.L280,.L33-.L280
	.half	1
	.byte	82
	.word	.L33-.L280,.L681-.L280
	.half	1
	.byte	88
	.word	0,0
.L686:
	.word	0,0
.L684:
	.word	-1,.L280,0,.L824-.L280
	.half	1
	.byte	101
	.word	.L32-.L280,.L826-.L280
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_loc'
.L275:
	.word	-1,.L276,0,.L784-.L276
	.half	2
	.byte	138,0
	.word	.L784-.L276,.L647-.L276
	.half	2
	.byte	138,40
	.word	.L647-.L276,.L647-.L276
	.half	2
	.byte	138,0
	.word	0,0
.L651:
	.word	-1,.L276,0,.L8-.L276
	.half	1
	.byte	84
	.word	.L18-.L276,.L800-.L276
	.half	1
	.byte	88
	.word	.L802-.L276,.L9-.L276
	.half	1
	.byte	88
	.word	0,0
.L661:
	.word	-1,.L276,.L796-.L276,.L797-.L276
	.half	1
	.byte	98
	.word	.L798-.L276,.L799-.L276
	.half	1
	.byte	98
	.word	0,0
.L653:
	.word	-1,.L276,0,.L8-.L276
	.half	1
	.byte	100
	.word	.L786-.L276,.L647-.L276
	.half	2
	.byte	145,124
	.word	.L8-.L276,.L788-.L276
	.half	1
	.byte	111
	.word	.L791-.L276,.L792-.L276
	.half	1
	.byte	111
	.word	.L805-.L276,.L7-.L276
	.half	1
	.byte	111
	.word	.L807-.L276,.L24-.L276
	.half	1
	.byte	111
	.word	0,0
.L648:
	.word	-1,.L276,0,.L8-.L276
	.half	1
	.byte	100
	.word	0,0
.L666:
	.word	-1,.L276,0,.L647-.L276
	.half	2
	.byte	145,100
	.word	0,0
.L677:
	.word	0,0
.L675:
	.word	0,0
.L660:
	.word	-1,.L276,0,.L647-.L276
	.half	2
	.byte	145,96
	.word	0,0
.L654:
	.word	-1,.L276,.L787-.L276,.L647-.L276
	.half	1
	.byte	90
	.word	0,0
.L650:
	.word	-1,.L276,0,.L8-.L276
	.half	1
	.byte	101
	.word	.L785-.L276,.L647-.L276
	.half	1
	.byte	108
	.word	.L789-.L276,.L790-.L276
	.half	1
	.byte	100
	.word	.L801-.L276,.L670-.L276
	.half	1
	.byte	100
	.word	.L803-.L276,.L804-.L276
	.half	1
	.byte	100
	.word	0,0
.L662:
	.word	-1,.L276,.L789-.L276,.L7-.L276
	.half	1
	.byte	91
	.word	0,0
.L663:
	.word	-1,.L276,.L793-.L276,.L7-.L276
	.half	1
	.byte	92
	.word	0,0
.L667:
	.word	-1,.L276,0,.L647-.L276
	.half	2
	.byte	145,104
	.word	0,0
.L668:
	.word	-1,.L276,0,.L647-.L276
	.half	2
	.byte	145,108
	.word	0,0
.L652:
	.word	-1,.L276,0,.L8-.L276
	.half	1
	.byte	85
	.word	.L806-.L276,.L7-.L276
	.half	1
	.byte	89
	.word	0,0
.L655:
	.word	-1,.L276,.L787-.L276,.L647-.L276
	.half	1
	.byte	109
	.word	0,0
.L656:
	.word	-1,.L276,.L794-.L276,.L795-.L276
	.half	1
	.byte	111
	.word	0,0
.L673:
	.word	0,0
.L679:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_loc'
.L277:
	.word	-1,.L278,0,.L808-.L278
	.half	2
	.byte	138,0
	.word	.L808-.L278,.L26-.L278
	.half	2
	.byte	138,16
	.word	.L26-.L278,.L26-.L278
	.half	2
	.byte	138,0
	.word	.L26-.L278,.L774-.L278
	.half	2
	.byte	138,16
	.word	.L774-.L278,.L774-.L278
	.half	2
	.byte	138,0
	.word	0,0
.L775:
	.word	-1,.L278,0,.L774-.L278
	.half	2
	.byte	145,116
	.word	0,.L809-.L278
	.half	1
	.byte	100
	.word	0,0
.L778:
	.word	-1,.L278,.L816-.L278,.L817-.L278
	.half	1
	.byte	100
	.word	.L26-.L278,.L820-.L278
	.half	1
	.byte	100
	.word	0,0
.L777:
	.word	-1,.L278,0,.L810-.L278
	.half	1
	.byte	102
	.word	.L812-.L278,.L774-.L278
	.half	1
	.byte	108
	.word	.L817-.L278,.L29-.L278
	.half	1
	.byte	100
	.word	.L818-.L278,.L819-.L278
	.half	1
	.byte	101
	.word	.L820-.L278,.L821-.L278
	.half	1
	.byte	100
	.word	0,0
.L779:
	.word	-1,.L278,.L813-.L278,.L814-.L278
	.half	1
	.byte	98
	.word	.L815-.L278,.L774-.L278
	.half	1
	.byte	111
	.word	.L818-.L278,.L819-.L278
	.half	1
	.byte	100
	.word	.L26-.L278,.L821-.L278
	.half	1
	.byte	98
	.word	0,0
.L776:
	.word	-1,.L278,0,.L811-.L278
	.half	1
	.byte	101
	.word	.L809-.L278,.L813-.L278
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_loc'
.L295:
	.word	-1,.L296,0,.L564-.L296
	.half	2
	.byte	138,0
	.word	0,0
.L565:
	.word	-1,.L296,0,.L564-.L296
	.half	1
	.byte	100
	.word	.L887-.L296,.L564-.L296
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_loc'
.L767:
	.word	-1,.L274,0,.L782-.L274
	.half	1
	.byte	84
	.word	0,.L765-.L274
	.half	2
	.byte	145,120
	.word	0,0
.L273:
	.word	-1,.L274,0,.L781-.L274
	.half	2
	.byte	138,0
	.word	.L781-.L274,.L765-.L274
	.half	2
	.byte	138,8
	.word	.L765-.L274,.L765-.L274
	.half	2
	.byte	138,0
	.word	0,0
.L772:
	.word	0,0
.L771:
	.word	0,0
.L768:
	.word	-1,.L274,0,.L765-.L274
	.half	2
	.byte	145,122
	.word	0,0
.L766:
	.word	-1,.L274,0,.L783-.L274
	.half	1
	.byte	100
	.word	0,0
.L770:
	.word	0,0
.L773:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1626:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_isEndOfLine')
	.sect	'.debug_frame'
	.word	24
	.word	.L1626,.L272,.L763-.L272
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_writeResult')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L274,.L765-.L274
	.byte	4
	.word	(.L781-.L274)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L765-.L781)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingle')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L276,.L647-.L276
	.byte	4
	.word	(.L784-.L276)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L647-.L784)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelpSingleCommand')
	.sect	'.debug_frame'
	.word	52
	.word	.L1626,.L278,.L774-.L278
	.byte	4
	.word	(.L808-.L278)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L26-.L808)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L774-.L26)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_showHelp')
	.sect	'.debug_frame'
	.word	12
	.word	.L1626,.L280,.L681-.L280
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_protocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L282,.L693-.L282
	.byte	4
	.word	(.L827-.L282)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L693-.L827)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_bbProtocolStart')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L284,.L699-.L284
	.byte	4
	.word	(.L841-.L284)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L699-.L841)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_initConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L1626,.L286,.L508-.L286
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_init')
	.sect	'.debug_frame'
	.word	12
	.word	.L1626,.L288,.L512-.L288
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_process')
	.sect	'.debug_frame'
	.word	52
	.word	.L1626,.L290,.L533-.L290
	.byte	4
	.word	(.L859-.L290)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L54-.L859)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L533-.L54)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_deinit')
	.sect	'.debug_frame'
	.word	24
	.word	.L1626,.L294,.L521-.L294
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_skipWhitespace')
	.sect	'.debug_frame'
	.word	20
	.word	.L1626,.L296,.L564-.L296
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchToken')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L298,.L566-.L298
	.byte	4
	.word	(.L888-.L298)/2
	.byte	19,128,2,22,26,4,19,138,128,2,4
	.word	(.L566-.L888)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_matchCommand')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L300,.L755-.L300
	.byte	4
	.word	(.L896-.L300)/2
	.byte	19,128,4,22,26,4,19,138,128,4,4
	.word	(.L755-.L896)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseToken')
	.sect	'.debug_frame'
	.word	12
	.word	.L1626,.L302,.L574-.L302
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseAddress')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L304,.L580-.L304
	.byte	4
	.word	(.L913-.L304)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L580-.L913)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1626,.L306,.L587-.L306
	.byte	4
	.word	(.L918-.L306)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L136-.L918)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L587-.L136)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt32')
	.sect	'.debug_frame'
	.word	52
	.word	.L1626,.L308,.L594-.L308
	.byte	4
	.word	(.L922-.L308)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L139-.L922)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L594-.L139)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseSInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L310,.L602-.L310
	.byte	4
	.word	(.L926-.L310)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L602-.L926)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseUInt64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L312,.L609-.L312
	.byte	4
	.word	(.L931-.L312)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L609-.L931)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat64')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L314,.L617-.L314
	.byte	4
	.word	(.L940-.L314)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L617-.L940)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_parseFloat32')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L316,.L623-.L316
	.byte	4
	.word	(.L945-.L316)/2
	.byte	19,200,0,22,26,4,19,138,200,0,4
	.word	(.L623-.L945)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L318,.L630-.L318
	.byte	4
	.word	(.L950-.L318)/2
	.byte	19,144,2,22,26,4,19,138,144,2,4
	.word	(.L630-.L950)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_commandListFind')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L320,.L746-.L320
	.byte	4
	.word	(.L964-.L320)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L746-.L964)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_execute')
	.sect	'.debug_frame'
	.word	88
	.word	.L1626,.L322,.L704-.L322
	.byte	4
	.word	(.L973-.L322)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L187-.L973)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L197-.L187)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L199-.L197)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L704-.L199)/2
	.byte	19,0,8,26,0,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_cmdEscapeProcess')
	.sect	'.debug_frame'
	.word	88
	.word	.L1626,.L324,.L710-.L324
	.byte	4
	.word	(.L981-.L324)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L241-.L981)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L242-.L241)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L267-.L242)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L710-.L267)/2
	.byte	19,0,8,26,0,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_enable')
	.sect	'.debug_frame'
	.word	12
	.word	.L1626,.L332,.L523-.L332
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_disable')
	.sect	'.debug_frame'
	.word	24
	.word	.L1626,.L334,.L531-.L334
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_Shell_printSyntax')
	.sect	'.debug_frame'
	.word	36
	.word	.L1626,.L336,.L688-.L336
	.byte	4
	.word	(.L1027-.L336)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L688-.L1027)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1627:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_35')
	.sect	'.debug_frame'
	.word	24
	.word	.L1627,.L292,.L495-.L292
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_37')
	.sect	'.debug_frame'
	.word	24
	.word	.L1627,.L326,.L505-.L326
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_36')
	.sect	'.debug_frame'
	.word	24
	.word	.L1627,.L328,.L500-.L328
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_34')
	.sect	'.debug_frame'
	.word	24
	.word	.L1627,.L330,.L490-.L330
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
