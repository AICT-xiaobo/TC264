	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\.IfxQspi.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc27xd -D__CPU_TC27XD__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c'

	
$TC16X
	
	.sdecl	'.text.IfxQspi.IfxQspi_calcRealBaudrate',code,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.text.IfxQspi.IfxQspi_calcRealBaudrate'
	.align	2
	
	.global	IfxQspi_calcRealBaudrate

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     2   * \file IfxQspi.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    49  #include "IfxQspi.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    50  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    51  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    52  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    53  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    54  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    55  float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId)
; Function IfxQspi_calcRealBaudrate
.L71:
IfxQspi_calcRealBaudrate:	.type	func
	sub.a	a10,#32
.L376:
	mov.aa	a12,a4
.L378:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    56  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    57      int           cs    = channelId % 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    58      float         fQspi = IfxScuCcu_getMaxFrequency();
	and	d15,d4,#7
	call	IfxScuCcu_getMaxFrequency
.L377:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    59      Ifx_QSPI_ECON econ[8];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    60      econ[cs].U = qspi->ECON[cs].U;
	addsc.a	a2,a12,d15,#2
.L512:
	addsc.a	a15,a10,d15,#2
.L513:
	ld.w	d15,[a2]32
.L379:
	st.w	[a15],d15
.L514:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    61      fQspi      = fQspi / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L515:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    62      fQspi      = fQspi / (econ[cs].B.Q + 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    63      fQspi      = fQspi / ((econ[cs].B.A + 1) + econ[cs].B.B + econ[cs].B.C);
	ld.bu	d1,[a15]
.L516:
	add	d15,#1
	ld.bu	d0,[a15]1
.L517:
	itof	d15,d15
.L518:
	div.f	d2,d2,d15
.L380:
	and	d15,d1,#63
.L519:
	add	d15,#1
	itof	d15,d15
.L520:
	extr.u	d1,d1,#6,#2
.L521:
	div.f	d2,d2,d15
.L522:
	and	d15,d0,#3
.L523:
	add	d1,d15
.L524:
	extr.u	d15,d0,#2,#2
.L525:
	add	d1,d15
.L526:
	add	d1,#1
.L527:
	itof	d15,d1
.L528:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    64      return fQspi;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    65  }
	div.f	d2,d2,d15
	ret
.L251:
	
__IfxQspi_calcRealBaudrate_function_end:
	.size	IfxQspi_calcRealBaudrate,__IfxQspi_calcRealBaudrate_function_end-IfxQspi_calcRealBaudrate
.L149:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue',code,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateBasicConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateBasicConfigurationValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    66  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    67  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    68  uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate)
; Function IfxQspi_calculateBasicConfigurationValue
.L73:
IfxQspi_calculateBasicConfigurationValue:	.type	func
	sub.a	a10,#8
.L381:
	mov	d8,d4
	mov.aa	a15,a5
.L267:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    69  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    70      IFX_UNUSED_PARAMETER(baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    71  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    72      Ifx_QSPI_BACON     bacon;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    73      IfxQspi_DelayConst delayConst[3];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    74      bacon.U = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    75  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    76      IfxQspi_calculateDelayConstants(qspi, channelId, chMode, delayConst);
	mov	d9,#0
	mov.aa	a6,a10
.L383:
	call	IfxQspi_calculateDelayConstants
.L382:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    78      bacon.B.LAST   = 0;                   /* 1-bits Last Word in a Frame, will be set via recalcBasicConfiguration before transfer */
	extr.u	d15,d9,#0,#8
.L533:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    79  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    80      bacon.B.IPRE   = delayConst[0].pre;   /* 3-bits Prescaler for the Idle Delay */
	insert	d15,d15,#0,#0,#1
	ld.bu	d0,[a10]
.L534:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    81      bacon.B.IDLE   = delayConst[0].delay; /* 3-bits Idle Delay Length */
	insert	d0,d15,d0,#1,#3
	ld.bu	d15,[a10]1
.L535:
	insert	d15,d0,d15,#4,#3
.L536:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    82      bacon.B.LPRE   = delayConst[1].pre;   /* 3-bits Prescaler for the Leading Delay */
	insert	d9,d9,d15,#0,#8
	ld.bu	d15,[a10]2
.L537:
	insert	d9,d9,d15,#7,#3
.L538:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    83      bacon.B.LEAD   = delayConst[1].delay; /* 3-bits Leading Delay Length */
	extr.u	d0,d9,#8,#8
	ld.bu	d15,[a10]3
.L539:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    84      bacon.B.TPRE   = delayConst[2].pre;   /* 3-bits Prescaler for the Trailing Delay */
	insert	d0,d0,d15,#2,#3
	ld.bu	d15,[a10]4
.L540:
	insert	d15,d0,d15,#5,#3
.L541:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    85      bacon.B.TRAIL  = delayConst[2].delay; /* 2-bits Trailing Delay Length */
	insert	d9,d9,d15,#8,#8
	ld.bu	d15,[a10]5
.L542:
	insert	d9,d9,d15,#16,#3
.L543:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    86      bacon.B.PARTYP = (chMode->parityMode == Ifx_ParityMode_even) ? 0 : 1;
	extr.u	d0,d9,#16,#8
	ld.bu	d15,[a15]1
.L544:
	ins.t	d15,d0:3,d15:6
.L545:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    87      bacon.B.UINT   = 0;                   /* 1-bits User Interrupt at the PT1 Event in the Subsequent Frames */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    88      bacon.B.MSB    = (chMode->dataHeading == SpiIf_DataHeading_lsbFirst) ? 0 : 1;
	insert	d15,d15,#0,#4,#1
	ld.bu	d0,[a15]
.L546:
	ins.t	d15,d15:5,d0:5
.L547:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    89      bacon.B.BYTE   = 0;                   /* only support bitwise selection in B.DL */
	insert	d15,d15,#0,#6,#1
.L548:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    90      bacon.B.DL     = chMode->dataWidth - 1;
	insert	d9,d9,d15,#16,#8
	ld.hu	d15,[a15]0
	extr.u	d15,d15,#6,#6
.L549:
	add	d15,#-1
.L550:
	insert	d9,d9,d15,#23,#5
.L551:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    91      bacon.B.CS     = channelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    92  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    93      return bacon.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    94  }
	insert	d2,d9,d8,#28,#4
	ret
.L259:
	
__IfxQspi_calculateBasicConfigurationValue_function_end:
	.size	IfxQspi_calculateBasicConfigurationValue,__IfxQspi_calculateBasicConfigurationValue_function_end-IfxQspi_calculateBasicConfigurationValue
.L154:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue',code,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.text.IfxQspi.IfxQspi_calculateExtendedConfigurationValue'
	.align	2
	
	.global	IfxQspi_calculateExtendedConfigurationValue

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    95  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    97  uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig)
; Function IfxQspi_calculateExtendedConfigurationValue
.L75:
IfxQspi_calculateExtendedConfigurationValue:	.type	func
	mov.aa	a12,a4
.L384:
	mov.aa	a15,a5
.L278:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    98  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	    99      IFX_UNUSED_PARAMETER(cs);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   100  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   101      Ifx_QSPI_ECON econ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   102      econ.U = 0;
	mov	d8,#0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    44   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    45   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    46   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    47   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    48   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    49   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    50   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    51   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    52   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    53   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    54   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    56  #ifndef IFXQSPI_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    57  #define IFXQSPI_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    60  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    63  #include "_Impl/IfxQspi_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    65  #include "If/SpiIf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    67  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    68  #include "_PinMap/IfxQspi_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    70  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    71  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    74  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    75   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    76   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    77  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    79  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    81  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    83  /** \brief Errors enable mask for ERRORENS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    84   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    85  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    86  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    87  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    88  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    89  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    91  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    92   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    93  /** \brief QSPI channel Number (BACON.CS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    94   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    95  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    96  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   100      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   101      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   102      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   103      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   104      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   105      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   112  } IfxQspi_ChannelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   114  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   115   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   116  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   117  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   120  } IfxQspi_DataLengthUnit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   122  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   124  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   125  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   131      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   132      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   133      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   134      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   135      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   136  } IfxQspi_Error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   138  /** \brief Frame Expect phase time out value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   139   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   140  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   141  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   142      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   143      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   144      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   155      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   156      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   157      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   158  } IfxQspi_ExpectTimeout;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   160  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   161   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   162  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   167  } IfxQspi_Mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   169  /** \brief Request between pause and Run transition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   175  } IfxQspi_PauseRunTransition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   177  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   178   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   179  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   180  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   181      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   182      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   188      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   189      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   190  } IfxQspi_Phase;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   192  /** \brief Phase Transition Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   197      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   198      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   199      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   204  } IfxQspi_PhaseTransitionEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   206  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_Reset_stateMachineAndFifo = 7,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_Reset_kernel              = 15  /**< \brief Kernel / Module Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   213  } IfxQspi_Reset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   215  /** \brief Receive Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_RxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   226   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   227   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   228  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   232  } IfxQspi_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   233  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   234  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   235   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   236  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   238      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   244      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   245      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   246      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   247      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   248      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   249      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   254      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   255      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   256      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   257      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   270  } IfxQspi_StrobeDelay;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   272  /** \brief Transmit Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   273   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   274  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   275  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   280  } IfxQspi_TxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   282  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   284  /** \brief Transmit FIFO mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   290      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   291  } IfxQspi_FifoMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   293  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   295  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   296  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   303  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   306  /** \brief Structure holding the "pre" and "delay" values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   307   * To be populated into BACON register after delay calculation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   308   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   309  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   310  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   311      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   312      uint8 delay;       /**< \brief delay multiplier */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   313  } IfxQspi_DelayConst;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   315  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   316   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   318  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   320  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   322  /** \brief Clear ALL service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   323   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   324   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   326  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   328  /** \brief Clear RX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   329   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   330   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   331   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   332  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   334  /** \brief Clear TX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   335   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   336   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   337   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   338  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   340  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   341   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   342   * \param pt1Config Phase Transition1 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Configure PT2 event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   349   * \param pt2Config Phase Transition2 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   352  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   354  /** \brief Enable/Disable Loopback mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   355   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   356   * \param enable Enable / Disable loopback
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   357   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   358   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   359  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   361  /** \brief enable Phase Transition1 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   362   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   363   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief enable Phase Transition2 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   370   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   371   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   372   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   373  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   375  /** \brief enable User Event (Event selected by PT1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   376   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   377   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   378   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   379   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   380  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   382  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   383   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   384   * \return Error Flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief Request for Module in Pause state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   389   * no interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   390   * no communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   391   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Read the oldest data from RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   398   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   399  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   400  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   401  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   402   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   403   * \param reset reset type (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   404   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   405   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   406  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   408  /** \brief Request for QSPI in Run state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   409   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   410   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   411   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   412  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   414  /** \brief Set the threshold of RXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   415   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   416   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   417   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   418   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   419  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   421  /** \brief Write Data into DATAENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   422   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   423   * \param data Data to be entered into TxFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   424   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   425   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   426  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   428  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   429   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   430   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   431   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   432   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   434  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   436  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   437   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   438   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   439   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   440   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   441   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   442  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   448  /** \brief Reads 16bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   449   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   450   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   451   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Reads 32bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   458   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   459   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   460   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   461   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   462  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   463  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   464  /** \brief Reads 8bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   465   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   466   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   467   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   468   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   469   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   470  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   472  /** \brief resets QSPI kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   473   * \param qspi pointer to QSPI registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   474   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   476  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   478  /** \brief Writes 16bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   479   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   480   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   481   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   482   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   483   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   484   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   485  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   487  /** \brief Writes 32bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   488   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   489   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   490   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   491   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   494  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   496  /** \brief Writes 8bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   497   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   498   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   499   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   500   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   505  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   507  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   508   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   510  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   511  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   512  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   514  /** \brief Gets the current mode of QSPI
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   516   * \return The current mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Specifies function to get module frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   521   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   522   * \return Module frequency in Float value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   523   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   524  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   525  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   526  /** \brief Gets actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   527   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   528   * \return Actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   530  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Gets the filling level of RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   534   * \return RxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   535   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   536  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   538  /** \brief Gets Time Quanta frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   539   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   540   * \return TQ frequency in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   541   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   542  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   543  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   544  /** \brief Gets the filling level of TXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   545   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   546   * \return TxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Specifies the Module enable or disable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   552   * \return TRUE if module is enabled otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Sets the enable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   564   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   565   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   566  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   568  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   569   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   570   * \param mode Sleep mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   571   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   572   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   573  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   575  /** \brief Set the threshold of TXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   576   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   577   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   578   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   579   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   580  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   582  /** \brief Write configuration into BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   583   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   584   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   589  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   590   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   591   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   593   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   594  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   595  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   596  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   597   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   598   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   599   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   600   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   601  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   603  /** \brief Writes channel timing configuration into ECON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   604   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   605   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   606   * \param econVal Extended configuration value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   607   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   608   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   609  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   610  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   611  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   612   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   613   * \param mixEntryVal Data and configuration in mixed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   616  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   618  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   619  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   620  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Function to calculate baudrate of specified channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   624   * \param channelId QSPI channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   625   * \return Actual baudrate in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   627  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   629  /** \brief Function to calculate BACON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   630   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   631   * \param channelId QSPI Channel Number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   632   * \param chMode Frame configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   633   * \param baudrate The desired baudrate
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   634   * \return Calculated BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   635   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   636  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   638  /** \brief Function to calculate ECON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   639   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   640   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   641   * \param chConfig SPI Channel Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Calculated ECON[CS] value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Function to calculate prescaler
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   648   * \param baudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   649   * \return Prescaler in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   650   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   651  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   652  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   653  /** \brief Specifies the function to calculate Time quantum length
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   654   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   655   * \param maxBaudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   656   * \return Time quantum length in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   657   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   658  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   660  /** \brief
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   661   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   662   * \return QSPI module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Specifies the function to get Index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   668   * \return Index in Integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   669   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   670  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   672  /** \brief Re-calculated BACON from the oldBACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   673   * \param oldBACON Old BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   674   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   675   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   676   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   677   * \return Re-calculated BACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   678   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   679  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   680  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   681  /** \brief Configures a Slave Select Output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   682   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   683   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   684   * \param outputEnable chip select output will be enabled during transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   685   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   686   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   687   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   688  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   689  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   690  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   691   * \param qspi pointer to QSPI SFR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   692   * \param channelId Channel ID no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   693   * \param chMode Pointer to Channel Mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   694   * \param delayConst Pointer to the Delay Consant Array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   695   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   696   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   697  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   699  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   701  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   702   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   705  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   706  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   707  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   708  /** \brief Gets the Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   709   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   710   * \return Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   711   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   713  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   714  /** \brief Gets the RXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   715   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   716   * \return Receive service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   717   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   718  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   719  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   720  /** \brief Gets the TXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   721   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   722   * \return Transmission service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   723   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   724  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   726  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   728  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   729   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   730  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   731  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   732  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   733  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   735  /** \brief Initializes a MRST input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   736   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   737   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   738   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   739   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   741  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   742  /** \brief Initializes a MRST output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   743   * \param mrstOut the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   744   * \param mrstOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   745   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   746   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Initializes a MTSR input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   751   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   752   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   753   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   754   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   755  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   757  /** \brief Initializes a MTSR output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   758   * \param mtsrOut the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   759   * \param mtsrOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   760   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   761   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Initializes a SCLK input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   766   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   767   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   768   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   769   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   772  /** \brief Initializes a SCLK output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   773   * \param sclkOut the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   774   * \param sclkOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   775   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   778  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   780  /** \brief Initializes a SLSI input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   781   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   782   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   783   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   784   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   785  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   786  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   787  /** \brief Initializes a SLSO output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   788   * \param slso the SLSO Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   789   * \param slsoMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   790   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   791   * \param outIndex Pin Pad driver index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   794  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   796  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   798  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   799  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   800  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   801  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   802  /** \brief Get the Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   803   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   804   * \return Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   805   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   806  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   807  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   808  /** \brief Get the Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   809   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   810   * \return Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   811   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   812  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   814  /** \brief Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   815   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   816   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   817   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   818   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   819   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   820  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   822  /** \brief Set the value of bit segment1 (A).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   823   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   824   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   825   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   826   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   827   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   828  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   830  /** \brief Set the value of bit segment2 (B).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   831   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   832   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   833   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   834   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   835   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   836  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   837  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   838  /** \brief Set the value of bit segment3 (C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   839   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   840   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   841   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   842   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   844  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   846  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   847   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   848   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   849   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   851  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   853  /** \brief Set the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   854   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   855   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   856   * \param timeQuantum specifies the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   857   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   858   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   860  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   861  /** \brief Set the transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   862   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   863   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   864   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   866  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   868  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   869   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   870   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   871   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   874  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   876  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   877   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   878   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   879   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   880   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   881   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   882  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   883  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   884  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   885   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   886   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   887   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   888   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   889   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   890  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   891  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   892  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   893   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   894   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   895   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   896   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   898  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   900  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   901  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   902  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   904  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   905  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   906      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   907  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   909  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   910  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   911  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   912      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   913  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   914  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   916  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   917  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   918      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   919  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   922  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   923  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   924      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   925  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   928  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   929  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   930      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   931  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   932  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   934  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   935  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   936      IFX_UNUSED_PARAMETER(enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   937  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   938      qspi->GLOBALCON.B.LB = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   939  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   943  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   944      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   945  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   947  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   948  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   949  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   950      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   951  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   953  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   954  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   955  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   956      qspi->GLOBALCON1.B.USREN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   957  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   960  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   961  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   962      return qspi->STATUS.B.ERRORFLAGS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   963  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   965  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   966  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   967  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   968      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   969      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   970  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   972  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   974  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   975      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   976  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   977  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   979  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   980  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   981      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
	ld.w	d15,[a12]
.L281:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   983      return IfxScuCcu_getMaxFrequency();
	call	IfxScuCcu_getMaxFrequency
.L305:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   987  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   989      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   990  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   991  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   992  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   993  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   994  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   995      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   996  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   997  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   998  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   999  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1000  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1001      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1002      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1003  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1004  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1006  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1007  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1008      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1009  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1012  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1013  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1014      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	ld.bu	d15,[a12]16
.L295:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   103      maxB   = 3;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   104      float32       tQspi  = 1.0 / IfxQspi_getTimeQuantaFrequency(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   105      float32       fBaud  = (chConfig->baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   106      int           abcMin = (2);
	ld.w	d1,[a15]4
.L300:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    44   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    45   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    46   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    47   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    48   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    49   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    50   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    51   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    52   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    53   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    54   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    56  #ifndef IFXQSPI_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    57  #define IFXQSPI_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    60  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    63  #include "_Impl/IfxQspi_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    65  #include "If/SpiIf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    67  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    68  #include "_PinMap/IfxQspi_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    70  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    71  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    74  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    75   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    76   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    77  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    79  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    81  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    83  /** \brief Errors enable mask for ERRORENS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    84   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    85  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    86  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    87  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    88  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    89  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    91  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    92   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    93  /** \brief QSPI channel Number (BACON.CS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    94   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    95  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    96  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   100      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   101      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   102      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   103      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   104      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   105      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   112  } IfxQspi_ChannelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   114  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   115   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   116  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   117  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   120  } IfxQspi_DataLengthUnit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   122  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   124  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   125  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   131      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   132      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   133      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   134      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   135      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   136  } IfxQspi_Error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   138  /** \brief Frame Expect phase time out value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   139   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   140  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   141  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   142      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   143      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   144      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   155      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   156      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   157      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   158  } IfxQspi_ExpectTimeout;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   160  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   161   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   162  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   167  } IfxQspi_Mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   169  /** \brief Request between pause and Run transition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   175  } IfxQspi_PauseRunTransition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   177  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   178   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   179  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   180  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   181      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   182      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   188      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   189      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   190  } IfxQspi_Phase;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   192  /** \brief Phase Transition Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   197      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   198      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   199      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   204  } IfxQspi_PhaseTransitionEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   206  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_Reset_stateMachineAndFifo = 7,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_Reset_kernel              = 15  /**< \brief Kernel / Module Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   213  } IfxQspi_Reset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   215  /** \brief Receive Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_RxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   226   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   227   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   228  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   232  } IfxQspi_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   233  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   234  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   235   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   236  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   238      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   244      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   245      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   246      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   247      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   248      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   249      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   254      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   255      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   256      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   257      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   270  } IfxQspi_StrobeDelay;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   272  /** \brief Transmit Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   273   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   274  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   275  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   280  } IfxQspi_TxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   282  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   284  /** \brief Transmit FIFO mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   290      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   291  } IfxQspi_FifoMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   293  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   295  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   296  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   303  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   306  /** \brief Structure holding the "pre" and "delay" values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   307   * To be populated into BACON register after delay calculation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   308   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   309  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   310  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   311      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   312      uint8 delay;       /**< \brief delay multiplier */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   313  } IfxQspi_DelayConst;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   315  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   316   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   318  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   320  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   322  /** \brief Clear ALL service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   323   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   324   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   326  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   328  /** \brief Clear RX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   329   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   330   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   331   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   332  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   334  /** \brief Clear TX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   335   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   336   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   337   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   338  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   340  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   341   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   342   * \param pt1Config Phase Transition1 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Configure PT2 event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   349   * \param pt2Config Phase Transition2 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   352  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   354  /** \brief Enable/Disable Loopback mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   355   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   356   * \param enable Enable / Disable loopback
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   357   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   358   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   359  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   361  /** \brief enable Phase Transition1 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   362   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   363   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief enable Phase Transition2 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   370   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   371   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   372   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   373  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   375  /** \brief enable User Event (Event selected by PT1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   376   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   377   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   378   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   379   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   380  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   382  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   383   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   384   * \return Error Flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief Request for Module in Pause state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   389   * no interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   390   * no communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   391   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Read the oldest data from RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   398   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   399  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   400  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   401  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   402   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   403   * \param reset reset type (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   404   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   405   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   406  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   408  /** \brief Request for QSPI in Run state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   409   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   410   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   411   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   412  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   414  /** \brief Set the threshold of RXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   415   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   416   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   417   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   418   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   419  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   421  /** \brief Write Data into DATAENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   422   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   423   * \param data Data to be entered into TxFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   424   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   425   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   426  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   428  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   429   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   430   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   431   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   432   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   434  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   436  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   437   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   438   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   439   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   440   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   441   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   442  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   448  /** \brief Reads 16bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   449   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   450   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   451   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Reads 32bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   458   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   459   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   460   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   461   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   462  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   463  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   464  /** \brief Reads 8bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   465   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   466   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   467   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   468   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   469   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   470  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   472  /** \brief resets QSPI kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   473   * \param qspi pointer to QSPI registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   474   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   476  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   478  /** \brief Writes 16bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   479   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   480   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   481   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   482   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   483   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   484   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   485  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   487  /** \brief Writes 32bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   488   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   489   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   490   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   491   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   494  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   496  /** \brief Writes 8bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   497   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   498   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   499   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   500   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   505  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   507  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   508   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   510  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   511  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   512  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   514  /** \brief Gets the current mode of QSPI
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   516   * \return The current mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Specifies function to get module frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   521   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   522   * \return Module frequency in Float value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   523   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   524  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   525  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   526  /** \brief Gets actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   527   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   528   * \return Actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   530  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Gets the filling level of RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   534   * \return RxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   535   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   536  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   538  /** \brief Gets Time Quanta frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   539   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   540   * \return TQ frequency in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   541   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   542  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   543  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   544  /** \brief Gets the filling level of TXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   545   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   546   * \return TxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Specifies the Module enable or disable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   552   * \return TRUE if module is enabled otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Sets the enable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   564   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   565   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   566  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   568  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   569   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   570   * \param mode Sleep mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   571   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   572   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   573  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   575  /** \brief Set the threshold of TXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   576   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   577   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   578   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   579   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   580  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   582  /** \brief Write configuration into BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   583   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   584   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   589  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   590   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   591   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   593   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   594  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   595  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   596  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   597   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   598   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   599   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   600   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   601  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   603  /** \brief Writes channel timing configuration into ECON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   604   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   605   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   606   * \param econVal Extended configuration value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   607   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   608   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   609  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   610  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   611  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   612   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   613   * \param mixEntryVal Data and configuration in mixed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   616  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   618  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   619  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   620  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Function to calculate baudrate of specified channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   624   * \param channelId QSPI channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   625   * \return Actual baudrate in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   627  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   629  /** \brief Function to calculate BACON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   630   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   631   * \param channelId QSPI Channel Number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   632   * \param chMode Frame configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   633   * \param baudrate The desired baudrate
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   634   * \return Calculated BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   635   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   636  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   638  /** \brief Function to calculate ECON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   639   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   640   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   641   * \param chConfig SPI Channel Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Calculated ECON[CS] value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Function to calculate prescaler
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   648   * \param baudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   649   * \return Prescaler in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   650   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   651  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   652  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   653  /** \brief Specifies the function to calculate Time quantum length
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   654   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   655   * \param maxBaudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   656   * \return Time quantum length in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   657   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   658  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   660  /** \brief
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   661   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   662   * \return QSPI module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Specifies the function to get Index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   668   * \return Index in Integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   669   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   670  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   672  /** \brief Re-calculated BACON from the oldBACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   673   * \param oldBACON Old BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   674   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   675   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   676   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   677   * \return Re-calculated BACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   678   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   679  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   680  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   681  /** \brief Configures a Slave Select Output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   682   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   683   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   684   * \param outputEnable chip select output will be enabled during transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   685   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   686   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   687   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   688  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   689  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   690  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   691   * \param qspi pointer to QSPI SFR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   692   * \param channelId Channel ID no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   693   * \param chMode Pointer to Channel Mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   694   * \param delayConst Pointer to the Delay Consant Array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   695   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   696   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   697  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   699  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   701  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   702   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   705  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   706  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   707  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   708  /** \brief Gets the Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   709   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   710   * \return Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   711   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   713  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   714  /** \brief Gets the RXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   715   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   716   * \return Receive service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   717   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   718  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   719  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   720  /** \brief Gets the TXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   721   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   722   * \return Transmission service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   723   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   724  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   726  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   728  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   729   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   730  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   731  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   732  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   733  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   735  /** \brief Initializes a MRST input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   736   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   737   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   738   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   739   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   741  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   742  /** \brief Initializes a MRST output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   743   * \param mrstOut the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   744   * \param mrstOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   745   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   746   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Initializes a MTSR input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   751   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   752   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   753   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   754   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   755  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   757  /** \brief Initializes a MTSR output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   758   * \param mtsrOut the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   759   * \param mtsrOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   760   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   761   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Initializes a SCLK input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   766   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   767   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   768   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   769   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   772  /** \brief Initializes a SCLK output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   773   * \param sclkOut the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   774   * \param sclkOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   775   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   778  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   780  /** \brief Initializes a SLSI input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   781   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   782   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   783   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   784   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   785  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   786  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   787  /** \brief Initializes a SLSO output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   788   * \param slso the SLSO Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   789   * \param slsoMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   790   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   791   * \param outIndex Pin Pad driver index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   794  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   796  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   798  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   799  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   800  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   801  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   802  /** \brief Get the Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   803   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   804   * \return Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   805   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   806  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   807  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   808  /** \brief Get the Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   809   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   810   * \return Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   811   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   812  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   814  /** \brief Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   815   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   816   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   817   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   818   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   819   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   820  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   822  /** \brief Set the value of bit segment1 (A).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   823   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   824   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   825   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   826   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   827   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   828  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   830  /** \brief Set the value of bit segment2 (B).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   831   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   832   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   833   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   834   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   835   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   836  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   837  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   838  /** \brief Set the value of bit segment3 (C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   839   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   840   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   841   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   842   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   844  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   846  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   847   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   848   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   849   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   851  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   853  /** \brief Set the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   854   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   855   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   856   * \param timeQuantum specifies the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   857   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   858   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   860  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   861  /** \brief Set the transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   862   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   863   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   864   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   866  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   868  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   869   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   870   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   871   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   874  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   876  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   877   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   878   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   879   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   880   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   881   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   882  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   883  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   884  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   885   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   886   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   887   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   888   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   889   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   890  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   891  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   892  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   893   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   894   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   895   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   896   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   898  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   900  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   901  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   902  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   904  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   905  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   906      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   907  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   909  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   910  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   911  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   912      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   913  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   914  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   916  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   917  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   918      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   919  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   922  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   923  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   924      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   925  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   928  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   929  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   930      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   931  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   932  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   934  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   935  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   936      IFX_UNUSED_PARAMETER(enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   937  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   938      qspi->GLOBALCON.B.LB = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   939  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   943  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   944      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   945  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   947  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   948  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   949  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   950      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   951  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   953  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   954  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   955  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   956      qspi->GLOBALCON1.B.USREN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   957  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   960  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   961  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   962      return qspi->STATUS.B.ERRORFLAGS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   963  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   965  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   966  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   967  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   968      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   969      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   970  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   972  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   974  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   975      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   976  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   977  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   979  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   980  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   981      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   983      return IfxScuCcu_getMaxFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   987  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   989      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   990  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   991  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   992  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   993  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   994  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   995      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   996  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   997  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   998  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   999  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1000  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1001      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1002      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1003  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1004  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1006  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1007  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1008      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1009  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1012  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1013  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1014      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	add	d15,#1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   107  int           abcMax = (4 + 0 + 4);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   108      int           q, bestQ = 1, abc, bestAbc = abcMax, halfBaud = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   109      sint8         diffB  = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   110      float32       error, bestError;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   111      float32       tTmp, tBaudTmp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   112      boolean       done = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   114      if (fBaud == 0.0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   115      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   116          IFX_ASSERT(IFX_VERBOSE_LEVEL_WARNING, FALSE);   /* chosen baud rate is 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   117          fBaud = 1.0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   118      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   119  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   120      float32 tBaud = 1.0 / fBaud;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   122      bestError = 1e6;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   123  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   124      for (abc = abcMax; abc >= abcMin; abc--)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   125      {
	mov.a	a2,#6
.L556:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    44   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    45   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    46   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    47   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    48   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    49   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    50   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    51   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    52   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    53   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    54   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    56  #ifndef IFXQSPI_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    57  #define IFXQSPI_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    60  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    63  #include "_Impl/IfxQspi_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    65  #include "If/SpiIf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    67  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    68  #include "_PinMap/IfxQspi_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    70  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    71  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    74  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    75   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    76   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    77  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    79  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    81  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    83  /** \brief Errors enable mask for ERRORENS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    84   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    85  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    86  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    87  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    88  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    89  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    91  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    92   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    93  /** \brief QSPI channel Number (BACON.CS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    94   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    95  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    96  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   100      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   101      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   102      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   103      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   104      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   105      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   112  } IfxQspi_ChannelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   114  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   115   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   116  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   117  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   120  } IfxQspi_DataLengthUnit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   122  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   124  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   125  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   131      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   132      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   133      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   134      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   135      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   136  } IfxQspi_Error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   138  /** \brief Frame Expect phase time out value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   139   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   140  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   141  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   142      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   143      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   144      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   155      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   156      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   157      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   158  } IfxQspi_ExpectTimeout;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   160  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   161   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   162  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   167  } IfxQspi_Mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   169  /** \brief Request between pause and Run transition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   175  } IfxQspi_PauseRunTransition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   177  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   178   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   179  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   180  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   181      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   182      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   188      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   189      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   190  } IfxQspi_Phase;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   192  /** \brief Phase Transition Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   197      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   198      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   199      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   204  } IfxQspi_PhaseTransitionEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   206  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_Reset_stateMachineAndFifo = 7,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_Reset_kernel              = 15  /**< \brief Kernel / Module Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   213  } IfxQspi_Reset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   215  /** \brief Receive Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_RxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   226   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   227   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   228  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   232  } IfxQspi_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   233  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   234  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   235   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   236  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   238      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   244      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   245      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   246      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   247      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   248      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   249      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   254      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   255      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   256      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   257      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   270  } IfxQspi_StrobeDelay;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   272  /** \brief Transmit Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   273   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   274  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   275  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   280  } IfxQspi_TxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   282  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   284  /** \brief Transmit FIFO mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   290      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   291  } IfxQspi_FifoMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   293  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   295  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   296  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   303  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   306  /** \brief Structure holding the "pre" and "delay" values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   307   * To be populated into BACON register after delay calculation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   308   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   309  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   310  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   311      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   312      uint8 delay;       /**< \brief delay multiplier */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   313  } IfxQspi_DelayConst;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   315  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   316   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   318  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   320  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   322  /** \brief Clear ALL service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   323   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   324   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   326  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   328  /** \brief Clear RX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   329   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   330   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   331   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   332  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   334  /** \brief Clear TX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   335   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   336   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   337   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   338  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   340  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   341   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   342   * \param pt1Config Phase Transition1 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Configure PT2 event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   349   * \param pt2Config Phase Transition2 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   352  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   354  /** \brief Enable/Disable Loopback mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   355   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   356   * \param enable Enable / Disable loopback
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   357   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   358   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   359  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   361  /** \brief enable Phase Transition1 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   362   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   363   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief enable Phase Transition2 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   370   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   371   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   372   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   373  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   375  /** \brief enable User Event (Event selected by PT1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   376   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   377   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   378   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   379   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   380  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   382  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   383   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   384   * \return Error Flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief Request for Module in Pause state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   389   * no interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   390   * no communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   391   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Read the oldest data from RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   398   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   399  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   400  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   401  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   402   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   403   * \param reset reset type (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   404   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   405   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   406  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   408  /** \brief Request for QSPI in Run state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   409   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   410   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   411   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   412  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   414  /** \brief Set the threshold of RXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   415   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   416   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   417   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   418   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   419  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   421  /** \brief Write Data into DATAENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   422   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   423   * \param data Data to be entered into TxFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   424   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   425   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   426  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   428  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   429   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   430   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   431   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   432   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   434  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   436  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   437   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   438   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   439   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   440   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   441   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   442  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   448  /** \brief Reads 16bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   449   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   450   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   451   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Reads 32bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   458   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   459   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   460   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   461   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   462  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   463  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   464  /** \brief Reads 8bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   465   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   466   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   467   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   468   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   469   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   470  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   472  /** \brief resets QSPI kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   473   * \param qspi pointer to QSPI registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   474   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   476  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   478  /** \brief Writes 16bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   479   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   480   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   481   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   482   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   483   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   484   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   485  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   487  /** \brief Writes 32bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   488   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   489   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   490   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   491   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   494  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   496  /** \brief Writes 8bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   497   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   498   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   499   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   500   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   505  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   507  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   508   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   510  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   511  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   512  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   514  /** \brief Gets the current mode of QSPI
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   516   * \return The current mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Specifies function to get module frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   521   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   522   * \return Module frequency in Float value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   523   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   524  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   525  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   526  /** \brief Gets actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   527   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   528   * \return Actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   530  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Gets the filling level of RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   534   * \return RxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   535   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   536  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   538  /** \brief Gets Time Quanta frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   539   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   540   * \return TQ frequency in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   541   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   542  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   543  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   544  /** \brief Gets the filling level of TXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   545   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   546   * \return TxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Specifies the Module enable or disable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   552   * \return TRUE if module is enabled otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Sets the enable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   564   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   565   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   566  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   568  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   569   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   570   * \param mode Sleep mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   571   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   572   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   573  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   575  /** \brief Set the threshold of TXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   576   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   577   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   578   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   579   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   580  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   582  /** \brief Write configuration into BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   583   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   584   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   589  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   590   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   591   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   593   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   594  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   595  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   596  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   597   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   598   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   599   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   600   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   601  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   603  /** \brief Writes channel timing configuration into ECON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   604   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   605   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   606   * \param econVal Extended configuration value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   607   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   608   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   609  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   610  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   611  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   612   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   613   * \param mixEntryVal Data and configuration in mixed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   616  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   618  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   619  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   620  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Function to calculate baudrate of specified channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   624   * \param channelId QSPI channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   625   * \return Actual baudrate in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   627  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   629  /** \brief Function to calculate BACON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   630   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   631   * \param channelId QSPI Channel Number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   632   * \param chMode Frame configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   633   * \param baudrate The desired baudrate
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   634   * \return Calculated BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   635   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   636  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   638  /** \brief Function to calculate ECON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   639   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   640   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   641   * \param chConfig SPI Channel Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Calculated ECON[CS] value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Function to calculate prescaler
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   648   * \param baudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   649   * \return Prescaler in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   650   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   651  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   652  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   653  /** \brief Specifies the function to calculate Time quantum length
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   654   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   655   * \param maxBaudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   656   * \return Time quantum length in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   657   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   658  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   660  /** \brief
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   661   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   662   * \return QSPI module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Specifies the function to get Index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   668   * \return Index in Integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   669   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   670  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   672  /** \brief Re-calculated BACON from the oldBACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   673   * \param oldBACON Old BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   674   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   675   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   676   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   677   * \return Re-calculated BACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   678   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   679  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   680  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   681  /** \brief Configures a Slave Select Output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   682   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   683   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   684   * \param outputEnable chip select output will be enabled during transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   685   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   686   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   687   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   688  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   689  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   690  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   691   * \param qspi pointer to QSPI SFR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   692   * \param channelId Channel ID no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   693   * \param chMode Pointer to Channel Mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   694   * \param delayConst Pointer to the Delay Consant Array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   695   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   696   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   697  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   699  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   701  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   702   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   705  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   706  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   707  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   708  /** \brief Gets the Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   709   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   710   * \return Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   711   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   713  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   714  /** \brief Gets the RXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   715   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   716   * \return Receive service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   717   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   718  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   719  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   720  /** \brief Gets the TXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   721   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   722   * \return Transmission service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   723   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   724  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   726  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   728  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   729   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   730  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   731  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   732  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   733  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   735  /** \brief Initializes a MRST input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   736   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   737   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   738   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   739   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   741  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   742  /** \brief Initializes a MRST output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   743   * \param mrstOut the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   744   * \param mrstOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   745   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   746   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Initializes a MTSR input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   751   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   752   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   753   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   754   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   755  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   757  /** \brief Initializes a MTSR output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   758   * \param mtsrOut the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   759   * \param mtsrOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   760   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   761   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Initializes a SCLK input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   766   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   767   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   768   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   769   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   772  /** \brief Initializes a SCLK output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   773   * \param sclkOut the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   774   * \param sclkOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   775   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   778  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   780  /** \brief Initializes a SLSI input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   781   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   782   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   783   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   784   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   785  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   786  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   787  /** \brief Initializes a SLSO output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   788   * \param slso the SLSO Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   789   * \param slsoMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   790   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   791   * \param outIndex Pin Pad driver index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   794  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   796  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   798  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   799  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   800  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   801  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   802  /** \brief Get the Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   803   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   804   * \return Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   805   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   806  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   807  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   808  /** \brief Get the Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   809   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   810   * \return Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   811   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   812  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   814  /** \brief Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   815   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   816   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   817   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   818   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   819   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   820  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   822  /** \brief Set the value of bit segment1 (A).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   823   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   824   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   825   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   826   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   827   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   828  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   830  /** \brief Set the value of bit segment2 (B).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   831   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   832   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   833   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   834   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   835   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   836  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   837  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   838  /** \brief Set the value of bit segment3 (C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   839   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   840   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   841   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   842   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   844  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   846  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   847   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   848   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   849   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   851  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   853  /** \brief Set the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   854   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   855   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   856   * \param timeQuantum specifies the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   857   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   858   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   860  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   861  /** \brief Set the transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   862   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   863   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   864   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   866  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   868  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   869   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   870   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   871   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   874  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   876  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   877   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   878   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   879   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   880   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   881   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   882  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   883  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   884  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   885   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   886   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   887   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   888   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   889   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   890  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   891  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   892  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   893   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   894   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   895   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   896   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   898  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   900  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   901  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   902  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   904  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   905  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   906      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   907  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   909  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   910  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   911  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   912      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   913  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   914  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   916  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   917  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   918      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   919  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   922  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   923  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   924      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   925  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   928  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   929  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   930      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   931  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   932  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   934  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   935  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   936      IFX_UNUSED_PARAMETER(enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   937  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   938      qspi->GLOBALCON.B.LB = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   939  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   943  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   944      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   945  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   947  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   948  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   949  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   950      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   951  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   953  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   954  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   955  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   956      qspi->GLOBALCON1.B.USREN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   957  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   960  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   961  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   962      return qspi->STATUS.B.ERRORFLAGS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   963  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   965  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   966  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   967  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   968      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   969      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   970  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   972  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   974  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   975      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   976  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   977  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   979  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   980  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   981      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   983      return IfxScuCcu_getMaxFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   987  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   989      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   990  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   991  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   992  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   993  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   994  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   995      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   996  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   997  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   998  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   999  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1000  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1001      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1002      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1003  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1004  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1006  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1007  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1008      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1009  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1012  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1013  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1014      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	itof	d15,d15
.L301:
	movh	d0,#16256
.L302:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    44   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    45   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    46   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    47   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    48   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    49   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    50   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    51   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    52   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    53   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    54   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    56  #ifndef IFXQSPI_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    57  #define IFXQSPI_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    60  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    63  #include "_Impl/IfxQspi_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    65  #include "If/SpiIf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    67  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    68  #include "_PinMap/IfxQspi_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    70  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    71  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    74  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    75   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    76   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    77  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    79  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    81  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    83  /** \brief Errors enable mask for ERRORENS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    84   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    85  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    86  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    87  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    88  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    89  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    91  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    92   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    93  /** \brief QSPI channel Number (BACON.CS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    94   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    95  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    96  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   100      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   101      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   102      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   103      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   104      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   105      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   112  } IfxQspi_ChannelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   114  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   115   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   116  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   117  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   120  } IfxQspi_DataLengthUnit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   122  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   124  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   125  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   131      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   132      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   133      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   134      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   135      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   136  } IfxQspi_Error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   138  /** \brief Frame Expect phase time out value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   139   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   140  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   141  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   142      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   143      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   144      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   155      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   156      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   157      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   158  } IfxQspi_ExpectTimeout;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   160  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   161   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   162  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   167  } IfxQspi_Mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   169  /** \brief Request between pause and Run transition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   175  } IfxQspi_PauseRunTransition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   177  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   178   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   179  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   180  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   181      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   182      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   188      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   189      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   190  } IfxQspi_Phase;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   192  /** \brief Phase Transition Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   197      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   198      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   199      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   204  } IfxQspi_PhaseTransitionEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   206  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_Reset_stateMachineAndFifo = 7,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_Reset_kernel              = 15  /**< \brief Kernel / Module Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   213  } IfxQspi_Reset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   215  /** \brief Receive Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_RxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   226   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   227   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   228  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   232  } IfxQspi_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   233  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   234  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   235   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   236  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   238      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   244      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   245      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   246      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   247      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   248      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   249      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   254      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   255      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   256      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   257      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   270  } IfxQspi_StrobeDelay;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   272  /** \brief Transmit Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   273   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   274  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   275  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   280  } IfxQspi_TxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   282  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   284  /** \brief Transmit FIFO mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   290      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   291  } IfxQspi_FifoMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   293  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   295  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   296  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   303  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   306  /** \brief Structure holding the "pre" and "delay" values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   307   * To be populated into BACON register after delay calculation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   308   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   309  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   310  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   311      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   312      uint8 delay;       /**< \brief delay multiplier */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   313  } IfxQspi_DelayConst;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   315  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   316   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   318  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   320  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   322  /** \brief Clear ALL service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   323   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   324   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   326  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   328  /** \brief Clear RX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   329   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   330   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   331   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   332  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   334  /** \brief Clear TX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   335   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   336   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   337   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   338  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   340  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   341   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   342   * \param pt1Config Phase Transition1 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Configure PT2 event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   349   * \param pt2Config Phase Transition2 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   352  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   354  /** \brief Enable/Disable Loopback mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   355   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   356   * \param enable Enable / Disable loopback
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   357   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   358   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   359  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   361  /** \brief enable Phase Transition1 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   362   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   363   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief enable Phase Transition2 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   370   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   371   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   372   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   373  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   375  /** \brief enable User Event (Event selected by PT1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   376   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   377   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   378   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   379   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   380  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   382  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   383   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   384   * \return Error Flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief Request for Module in Pause state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   389   * no interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   390   * no communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   391   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Read the oldest data from RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   398   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   399  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   400  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   401  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   402   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   403   * \param reset reset type (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   404   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   405   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   406  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   408  /** \brief Request for QSPI in Run state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   409   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   410   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   411   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   412  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   414  /** \brief Set the threshold of RXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   415   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   416   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   417   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   418   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   419  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   421  /** \brief Write Data into DATAENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   422   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   423   * \param data Data to be entered into TxFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   424   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   425   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   426  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   428  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   429   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   430   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   431   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   432   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   434  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   436  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   437   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   438   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   439   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   440   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   441   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   442  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   448  /** \brief Reads 16bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   449   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   450   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   451   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Reads 32bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   458   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   459   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   460   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   461   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   462  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   463  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   464  /** \brief Reads 8bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   465   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   466   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   467   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   468   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   469   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   470  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   472  /** \brief resets QSPI kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   473   * \param qspi pointer to QSPI registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   474   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   476  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   478  /** \brief Writes 16bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   479   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   480   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   481   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   482   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   483   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   484   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   485  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   487  /** \brief Writes 32bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   488   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   489   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   490   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   491   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   494  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   496  /** \brief Writes 8bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   497   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   498   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   499   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   500   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   505  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   507  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   508   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   510  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   511  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   512  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   514  /** \brief Gets the current mode of QSPI
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   516   * \return The current mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Specifies function to get module frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   521   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   522   * \return Module frequency in Float value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   523   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   524  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   525  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   526  /** \brief Gets actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   527   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   528   * \return Actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   530  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Gets the filling level of RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   534   * \return RxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   535   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   536  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   538  /** \brief Gets Time Quanta frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   539   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   540   * \return TQ frequency in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   541   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   542  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   543  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   544  /** \brief Gets the filling level of TXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   545   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   546   * \return TxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Specifies the Module enable or disable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   552   * \return TRUE if module is enabled otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Sets the enable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   564   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   565   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   566  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   568  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   569   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   570   * \param mode Sleep mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   571   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   572   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   573  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   575  /** \brief Set the threshold of TXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   576   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   577   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   578   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   579   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   580  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   582  /** \brief Write configuration into BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   583   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   584   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   589  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   590   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   591   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   593   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   594  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   595  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   596  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   597   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   598   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   599   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   600   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   601  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   603  /** \brief Writes channel timing configuration into ECON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   604   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   605   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   606   * \param econVal Extended configuration value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   607   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   608   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   609  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   610  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   611  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   612   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   613   * \param mixEntryVal Data and configuration in mixed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   616  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   618  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   619  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   620  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Function to calculate baudrate of specified channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   624   * \param channelId QSPI channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   625   * \return Actual baudrate in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   627  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   629  /** \brief Function to calculate BACON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   630   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   631   * \param channelId QSPI Channel Number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   632   * \param chMode Frame configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   633   * \param baudrate The desired baudrate
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   634   * \return Calculated BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   635   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   636  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   638  /** \brief Function to calculate ECON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   639   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   640   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   641   * \param chConfig SPI Channel Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Calculated ECON[CS] value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Function to calculate prescaler
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   648   * \param baudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   649   * \return Prescaler in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   650   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   651  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   652  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   653  /** \brief Specifies the function to calculate Time quantum length
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   654   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   655   * \param maxBaudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   656   * \return Time quantum length in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   657   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   658  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   660  /** \brief
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   661   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   662   * \return QSPI module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Specifies the function to get Index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   668   * \return Index in Integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   669   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   670  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   672  /** \brief Re-calculated BACON from the oldBACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   673   * \param oldBACON Old BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   674   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   675   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   676   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   677   * \return Re-calculated BACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   678   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   679  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   680  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   681  /** \brief Configures a Slave Select Output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   682   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   683   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   684   * \param outputEnable chip select output will be enabled during transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   685   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   686   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   687   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   688  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   689  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   690  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   691   * \param qspi pointer to QSPI SFR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   692   * \param channelId Channel ID no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   693   * \param chMode Pointer to Channel Mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   694   * \param delayConst Pointer to the Delay Consant Array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   695   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   696   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   697  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   699  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   701  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   702   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   705  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   706  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   707  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   708  /** \brief Gets the Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   709   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   710   * \return Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   711   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   713  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   714  /** \brief Gets the RXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   715   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   716   * \return Receive service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   717   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   718  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   719  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   720  /** \brief Gets the TXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   721   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   722   * \return Transmission service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   723   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   724  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   726  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   728  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   729   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   730  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   731  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   732  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   733  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   735  /** \brief Initializes a MRST input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   736   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   737   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   738   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   739   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   741  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   742  /** \brief Initializes a MRST output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   743   * \param mrstOut the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   744   * \param mrstOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   745   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   746   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Initializes a MTSR input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   751   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   752   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   753   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   754   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   755  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   757  /** \brief Initializes a MTSR output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   758   * \param mtsrOut the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   759   * \param mtsrOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   760   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   761   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Initializes a SCLK input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   766   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   767   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   768   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   769   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   772  /** \brief Initializes a SCLK output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   773   * \param sclkOut the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   774   * \param sclkOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   775   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   778  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   780  /** \brief Initializes a SLSI input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   781   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   782   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   783   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   784   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   785  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   786  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   787  /** \brief Initializes a SLSO output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   788   * \param slso the SLSO Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   789   * \param slsoMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   790   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   791   * \param outIndex Pin Pad driver index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   794  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   796  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   798  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   799  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   800  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   801  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   802  /** \brief Get the Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   803   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   804   * \return Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   805   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   806  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   807  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   808  /** \brief Get the Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   809   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   810   * \return Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   811   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   812  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   814  /** \brief Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   815   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   816   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   817   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   818   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   819   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   820  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   822  /** \brief Set the value of bit segment1 (A).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   823   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   824   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   825   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   826   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   827   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   828  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   830  /** \brief Set the value of bit segment2 (B).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   831   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   832   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   833   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   834   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   835   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   836  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   837  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   838  /** \brief Set the value of bit segment3 (C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   839   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   840   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   841   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   842   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   844  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   846  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   847   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   848   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   849   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   851  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   853  /** \brief Set the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   854   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   855   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   856   * \param timeQuantum specifies the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   857   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   858   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   860  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   861  /** \brief Set the transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   862   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   863   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   864   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   866  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   868  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   869   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   870   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   871   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   874  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   876  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   877   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   878   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   879   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   880   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   881   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   882  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   883  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   884  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   885   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   886   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   887   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   888   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   889   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   890  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   891  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   892  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   893   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   894   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   895   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   896   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   898  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   900  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   901  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   902  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   904  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   905  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   906      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   907  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   909  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   910  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   911  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   912      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   913  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   914  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   916  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   917  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   918      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   919  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   922  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   923  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   924      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   925  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   928  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   929  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   930      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   931  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   932  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   934  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   935  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   936      IFX_UNUSED_PARAMETER(enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   937  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   938      qspi->GLOBALCON.B.LB = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   939  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   943  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   944      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   945  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   947  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   948  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   949  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   950      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   951  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   953  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   954  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   955  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   956      qspi->GLOBALCON1.B.USREN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   957  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   960  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   961  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   962      return qspi->STATUS.B.ERRORFLAGS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   963  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   965  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   966  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   967  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   968      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   969      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   970  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   972  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   974  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   975      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   976  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   977  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   979  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   980  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   981      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   983      return IfxScuCcu_getMaxFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   984  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   985  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   987  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   988  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   989      return (IfxQspi_Phase)qspi->STATUS.B.PHASE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   990  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   991  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   992  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   993  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   994  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   995      return qspi->STATUS.B.RXFIFOLEVEL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   996  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   997  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   998  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   999  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1000  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1001      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1002      return &MODULE_SRC.QSPI.QSPI[index].RX;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1003  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1004  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1005  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1006  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1007  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1008      return (IfxQspi_FifoMode)qspi->GLOBALCON1.B.RXFM;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1009  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1010  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1011  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1012  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1013  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	  1014      return IfxQspi_getModuleFrequency(qspi) / (qspi->GLOBALCON.B.TQ + 1);
	div.f	d15,d2,d15
.L303:
	extr.u	d2,d1,#23,#8
.L557:
	mov	d5,#8
.L385:
	div.f	d3,d0,d15
.L386:
	eq	d15,d2,#0
.L558:
	cmov	d1,d15,d0
.L310:
	mov	d9,#9216
.L387:
	div.f	d7,d0,d1
.L388:
	addih	d9,d9,#18804
.L559:
	mov	d10,d5
.L311:
	mov	d4,#1
.L389:
	mov	d6,#0
.L5:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   126  i * abc;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   127          q    = (int)((tBaud / tTmp) + 0.5);
	itof	d0,d10
.L560:
	mul.f	d0,d3,d0
.L390:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   128  
	div.f	d1,d7,d0
.L561:
	movh	d2,#16128
.L562:
	add.f	d1,d1,d2
.L563:
	ftoiz	d1,d1
.L392:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   129          if (q > 64)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   130          {
	mov	d2,#64
.L394:
	jlt	d2,d1,.L7
.L564:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   131              q = 64;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   132          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   134          else if ((q * abc) < 4)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   135          {
	mul	d2,d1,d10
.L393:
	jge	d2,#4,.L8
.L565:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   136              q = 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   137          }
	mov	d2,#2
	j	.L9
.L8:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   139          else if (q < 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   140          {
	max	d2,d1,#1
.L9:
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   141              q = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   142          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   143  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   144          tBaudTmp = tTmp * q;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   145          error    = __absf(tBaudTmp - tBaud);
	itof	d1,d2
.L566:
	mul.f	d0,d0,d1
.L391:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   146  
	sub.f	d0,d0,d7
.L396:
	cmp.f	d15,d0,d6
	jz.t	d15:0,.L11
	insn.t	d0,d0:31,d0:31
.L11:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   147          if (__leqf(error, bestError)) /* we have a equal/better error case */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   148          {
	cmp.f	d1,d0,d9
	and	d15,d1,#4
	jne	d15,#0,.L12
.L567:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   149              /* process this case only if lesser error / or if ABC is even */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   150              if (__neqf(error, bestError) || (((uint32)bestAbc & (uint32)0x1) == 0))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   151              {
	jne	d15,#0,.L13
.L568:
	jnz.t	d1:0,.L14
.L397:
	jnz.t	d5:0,.L15
.L14:
.L13:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   152                  bestError = error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   153                  bestAbc   = abc;
	mov	d9,d0
.L569:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   154                  bestQ     = q;
	mov	e4,d10,d2
.L15:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   155              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   156  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   157              /* break out if ABC is even and error = 0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   158              if (((uint32)bestAbc & (uint32)0x1) == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   159              {
	jnz.t	d5:0,.L16
.L398:
	cmp.f	d15,d0,d6
	and	d15,#3
.L570:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   160                  done = (__neqf(error, 0.0)) ? FALSE : TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   161  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   162                  if (done != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   163                  {
	jne	d15,#0,.L17
.L16:
.L12:
	add	d10,#-1
	loop	a2,.L5

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   164                      break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   165                  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   166              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   167          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   168      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   169  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   170      /* Exchange Q and ABC, if ABC is odd and Q is even.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   171       * This is because: A+1+B+C is ideally even for
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   172       * achieving 50% duty cycle of the clock.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   173       */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   174      if ((bestQ <= abcMax)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   175          && (((uint32)bestAbc & (uint32)0x1) != 0)
.L17:
	mov	d15,#8
.L399:
	jlt	d15,d4,.L18
.L400:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   176          && (((uint32)bestQ & (uint32)0x1) == 0))
	jz.t	d5:0,.L19
.L401:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   177      {
	jnz.t	d4:0,.L20
.L571:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   178          q       = bestQ;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   179          bestQ   = bestAbc;
	mov	d15,d4
.L395:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   180          bestAbc = q;
	mov	d4,d5
.L402:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   181      }
	mov	d5,d15
.L20:
.L19:
.L18:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   183      /* NOTE: In assigning values to A,B,C:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   184       *  the "sampling point" (which is A+B) has to be as far as possible
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   185       *  from the "shifting point" (end of A+B+C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   186       * The duty cycle is calculated as the ratio of A : B+C
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   187       * Therefore, to keep 50% duty cycle: A = B+C
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   188       * Thus, we cannot influence the value of A, once A+B+C is found out
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   189       * (A+1 is always (A+B+C)/2).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   190       * However, in between B and C - we should try to maximize B (and minimize C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   191       * The goal will be to do this - keep max value of B always and keep only any remaining value for C .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   192       */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   193      halfBaud     = bestAbc / 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   194      diffB        = halfBaud - maxB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   195  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   196      econ.B.Q     = bestQ - 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   197      econ.B.A     = halfBaud + (bestAbc % 2) - 1;  /* A + 1 = Half of Baud count */
	add	d4,#-1
.L572:
	insert	d2,d8,d4,#0,#6
.L403:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   198      econ.B.C     = (diffB > 0) ? diffB : 0;
	and	d15,d5,#1
.L573:
	sha	d0,d5,#-1
.L404:
	add	d15,d0
.L574:
	add	d15,#-1
.L575:
	insert	d15,d2,d15,#6,#2
.L576:
	add	d1,d0,#-3
.L406:
	insert	d8,d8,d15,#0,#8
.L577:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   199      econ.B.B     = (diffB > 0) ? maxB : halfBaud;
	max	d15,d1,#0
.L578:
	insert	d8,d8,d15,#10,#2
.L579:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   200  
	lt	d15,d1,#1
.L580:
	cmovn	d0,d15,#3
.L405:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   201      econ.B.CPH   = (chConfig->mode.shiftClock == SpiIf_ShiftClock_shiftTransmitDataOnLeadingEdge) ? 1 : 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   202      econ.B.CPOL  = (chConfig->mode.clockPolarity == SpiIf_ClockPolarity_idleLow) ? 0 : 1;
	insert	d8,d8,d0,#8,#2
	ld.bu	d0,[a15]8
	extr.u	d15,d0,#4,#1
.L581:
	eq	d15,d15,#0
.L582:
	insert	d8,d8,d15,#12,#1
.L583:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   203      econ.B.PAREN = chConfig->mode.parityCheck;
	extr.u	d15,d0,#3,#1
	ne	d15,d15,#0
.L584:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   204  
	insert	d8,d8,d15,#13,#1
	ld.bu	d15,[a15]9
	extr.u	d15,d15,#5,#1
.L585:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   205      return econ.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   206  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   207  
	insert	d2,d8,d15,#14,#1
	ret
.L272:
	
__IfxQspi_calculateExtendedConfigurationValue_function_end:
	.size	IfxQspi_calculateExtendedConfigurationValue,__IfxQspi_calculateExtendedConfigurationValue_function_end-IfxQspi_calculateExtendedConfigurationValue
.L159:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculatePrescaler',code,cluster('IfxQspi_calculatePrescaler')
	.sect	'.text.IfxQspi.IfxQspi_calculatePrescaler'
	.align	2
	
	.global	IfxQspi_calculatePrescaler

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   209  uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   210  {
; Function IfxQspi_calculatePrescaler
.L77:
IfxQspi_calculatePrescaler:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   211      float  error, bestError;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   212      float  halfBaud = baudrate / 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   213      float  fQspiIn  = IfxQspi_getModuleFrequency(qspi);
	movh	d15,#16128
.L590:
	mul.f	d8,d4,d15

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     2   * \file IfxQspi.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     3   * \brief QSPI  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     4   * \ingroup IfxLld_Qspi
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    44   * \defgroup IfxLld_Qspi_Std_Enum Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    45   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    46   * \defgroup IfxLld_Qspi_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    47   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    48   * \defgroup IfxLld_Qspi_Std_Support Support Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    49   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    50   * \defgroup IfxLld_Qspi_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    51   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    52   * \defgroup IfxLld_Qspi_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    53   * \ingroup IfxLld_Qspi_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    54   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    55  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    56  #ifndef IFXQSPI_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    57  #define IFXQSPI_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    58  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    59  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    60  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    61  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    62  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    63  #include "_Impl/IfxQspi_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    64  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    65  #include "If/SpiIf.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    66  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    67  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    68  #include "_PinMap/IfxQspi_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    70  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    71  /*-----------------------------------Macros-----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    72  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    74  /** \brief Get Fifo size required for Long / Long continous mode interms 32-bit
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    75   * LONG MODE FIFO size (data size in bytes) = (size for Bacon) + (Datasize converted to 32-bit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    76   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    77  #define IFXQSPI_BACONSIZE(Datasize)           (((((Datasize) % 16) == 0) ? ((uint8)((Datasize) / 16)) : ((uint8)((Datasize) / 16) + 1)))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    78  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    79  #define IFXQSPI_FIFO32BITSIZE(Datasize)       ((((Datasize) % 4) == 0) ? ((uint8)((Datasize) / 4)) : ((uint8)((Datasize) / 4) + 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    81  #define IFXQSPI_GETLONGMODEFIFOSIZE(Datasize) (IFXQSPI_BACONSIZE(Datasize) + IFXQSPI_FIFO32BITSIZE(Datasize))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    82  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    83  /** \brief Errors enable mask for ERRORENS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    84   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    85  #define IFXQSPI_ERRORENABLEMASK ((uint32)0x1FF)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    86  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    87  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    88  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    89  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    91  /** \addtogroup IfxLld_Qspi_Std_Enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    92   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    93  /** \brief QSPI channel Number (BACON.CS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    94   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    95  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    96  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    97      IfxQspi_ChannelId_0,     /**< \brief Channel #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    98      IfxQspi_ChannelId_1,     /**< \brief Channel #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	    99      IfxQspi_ChannelId_2,     /**< \brief Channel #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   100      IfxQspi_ChannelId_3,     /**< \brief Channel #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   101      IfxQspi_ChannelId_4,     /**< \brief Channel #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   102      IfxQspi_ChannelId_5,     /**< \brief Channel #5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   103      IfxQspi_ChannelId_6,     /**< \brief Channel #6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   104      IfxQspi_ChannelId_7,     /**< \brief Channel #7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   105      IfxQspi_ChannelId_8,     /**< \brief Channel #8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   106      IfxQspi_ChannelId_9,     /**< \brief Channel #9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   107      IfxQspi_ChannelId_10,    /**< \brief Channel #10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   108      IfxQspi_ChannelId_11,    /**< \brief Channel #11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   109      IfxQspi_ChannelId_12,    /**< \brief Channel #12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   110      IfxQspi_ChannelId_13,    /**< \brief Channel #13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   111      IfxQspi_ChannelId_14     /**< \brief Channel #14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   112  } IfxQspi_ChannelId;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   114  /** \brief Data length unit of a frame (BACON.BYTE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   115   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   116  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   117  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   118      IfxQspi_DataLengthUnit_bit  = 0, /**< \brief Data Length in Bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   119      IfxQspi_DataLengthUnit_byte = 1  /**< \brief Data length in Bytes */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   120  } IfxQspi_DataLengthUnit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   122  /** \brief QSPI Error Flags (STATUS.ERRORFLAGS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   123   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   124  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   125  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   126      IfxQspi_Error_none                      = 0,   /**< \brief No Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   127      IfxQspi_Error_parity                    = 1,   /**< \brief Parity Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   128      IfxQspi_Error_configuration             = 2,   /**< \brief Configuration Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   129      IfxQspi_Error_baudrate                  = 4,   /**< \brief BaudRate Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   130      IfxQspi_Error_txfifoOverflow            = 8,   /**< \brief TX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   131      IfxQspi_Error_txfifoUnderflow           = 16,  /**< \brief TX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   132      IfxQspi_Error_rxfifoOverflow            = 32,  /**< \brief RX FIFO Overflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   133      IfxQspi_Error_rxfifoUnderflow           = 64,  /**< \brief RX FIFO Underflow Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   134      IfxQspi_Error_expectTimeout             = 128, /**< \brief EXPECT Timeout Error */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   135      IfxQspi_Error_slsiMisplacedInactivation = 256  /**< \brief SLSI misplaced inactivation (slave mode) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   136  } IfxQspi_Error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   137  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   138  /** \brief Frame Expect phase time out value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   139   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   140  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   141  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   142      IfxQspi_ExpectTimeout_64      = 0,   /**< \brief Expect phse time out 64 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   143      IfxQspi_ExpectTimeout_128     = 1,   /**< \brief Expect phse time out 128 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   144      IfxQspi_ExpectTimeout_256     = 2,   /**< \brief Expect phse time out 256 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   145      IfxQspi_ExpectTimeout_512     = 3,   /**< \brief Expect phse time out 512 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   146      IfxQspi_ExpectTimeout_1024    = 4,   /**< \brief Expect phse time out 1024 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   147      IfxQspi_ExpectTimeout_2048    = 5,   /**< \brief Expect phse time out 2048 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   148      IfxQspi_ExpectTimeout_4096    = 6,   /**< \brief Expect phse time out 4096 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   149      IfxQspi_ExpectTimeout_8192    = 7,   /**< \brief Expect phse time out 8192 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   150      IfxQspi_ExpectTimeout_16384   = 8,   /**< \brief Expect phse time out 16384 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   151      IfxQspi_ExpectTimeout_32768   = 9,   /**< \brief Expect phse time out 32768 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   152      IfxQspi_ExpectTimeout_65536   = 10,  /**< \brief Expect phse time out 65536 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   153      IfxQspi_ExpectTimeout_131072  = 11,  /**< \brief Expect phse time out 131072 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   154      IfxQspi_ExpectTimeout_262144  = 12,  /**< \brief Expect phse time out 262144 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   155      IfxQspi_ExpectTimeout_524288  = 13,  /**< \brief Expect phse time out 524288 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   156      IfxQspi_ExpectTimeout_1048576 = 14,  /**< \brief Expect phse time out 1048576 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   157      IfxQspi_ExpectTimeout_2097152 = 15   /**< \brief Expect phse time out 2097152 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   158  } IfxQspi_ExpectTimeout;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   160  /** \brief QSPI controller mode (GLOBALCON.MODE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   161   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   162  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   163  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   164      IfxQspi_Mode_master      = 0,  /**< \brief QSPI in "master" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   165      IfxQspi_Mode_pwmOverQspi = 1,  /**< \brief QSPI in "PWM over QSPI" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   166      IfxQspi_Mode_slave       = 2   /**< \brief QSPI in "slave" mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   167  } IfxQspi_Mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   169  /** \brief Request between pause and Run transition
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   173      IfxQspi_PauseRunTransition_pause = 0,  /**< \brief Request value for pause */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   174      IfxQspi_PauseRunTransition_run   = 1   /**< \brief Request value for Run */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   175  } IfxQspi_PauseRunTransition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   177  /** \brief QSPI frame phase (STATUS.PHASE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   178   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   179  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   180  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   181      IfxQspi_Phase_wait        = 0, /**< \brief Frame wait phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   182      IfxQspi_Phase_idleA       = 1, /**< \brief Frame idleA phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   183      IfxQspi_Phase_idleB       = 2, /**< \brief frame idleB phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   184      IfxQspi_Phase_lead        = 3, /**< \brief Frame lead phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   185      IfxQspi_Phase_data        = 4, /**< \brief Frame data phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   186      IfxQspi_Phase_trail       = 5, /**< \brief Frame trail phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   187      IfxQspi_Phase_expect      = 6, /**< \brief Frame expect phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   188      IfxQspi_Phase_leadStrobe  = 7, /**< \brief Frame leadstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   189      IfxQspi_Phase_trailStrobe = 8  /**< \brief Frame trailstrobe phase */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   190  } IfxQspi_Phase;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   192  /** \brief Phase Transition Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   196      IfxQspi_PhaseTransitionEvent_endOfWait                 = 0,  /**< \brief BUSY (end of WAIT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   197      IfxQspi_PhaseTransitionEvent_serialClockPolarityChange = 1,  /**< \brief SCLKPC (serial clock polarity change) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   198      IfxQspi_PhaseTransitionEvent_startOfFrame              = 2,  /**< \brief SOF (Start Of Frame ) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   199      IfxQspi_PhaseTransitionEvent_transmitBufferEmptied     = 3,  /**< \brief TBE (Transmit Buffer Emptied) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   200      IfxQspi_PhaseTransitionEvent_receiveBufferFilled       = 4,  /**< \brief RBF (Receive Buffer Filled) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   201      IfxQspi_PhaseTransitionEvent_endOfFrame                = 5,  /**< \brief EOF (End of Frame) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   202      IfxQspi_PhaseTransitionEvent_dataNotAvailable          = 6,  /**< \brief DNA (Data not Available = Start of Expect) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   203      IfxQspi_PhaseTransitionEvent_endOfExpect               = 7   /**< \brief CONT (End of EXPECT phase) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   204  } IfxQspi_PhaseTransitionEvent;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   206  /** \brief Reset Request (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   207   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   208  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   209  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   210      IfxQspi_Reset_none                = 0,  /**< \brief No Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   211      IfxQspi_Reset_stateMachineAndFifo = 7,  /**< \brief State Machine, TXFIFO and RXFIFO reset, registers not reseted */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   212      IfxQspi_Reset_kernel              = 15  /**< \brief Kernel / Module Reset */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   213  } IfxQspi_Reset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   215  /** \brief Receive Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   219      IfxQspi_RxFifoInt_0,     /**< \brief RxFifo Interrupt Threshold  #0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   220      IfxQspi_RxFifoInt_1,     /**< \brief RxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   221      IfxQspi_RxFifoInt_2,     /**< \brief RxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   222      IfxQspi_RxFifoInt_3      /**< \brief RxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   223  } IfxQspi_RxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   224  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   225  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   226   * Definition in Ifx_QSPI.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   227   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   228  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   230      IfxQspi_SleepMode_enable  = 0, /**< \brief Sleep Mode enabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   231      IfxQspi_SleepMode_disable = 1  /**< \brief Sleep Mode disabled */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   232  } IfxQspi_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   233  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   234  /** \brief STROBE delay for SLSO in delayed mode (GLOBALCON.STROBE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   235   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   236  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   237  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   238      IfxQspi_StrobeDelay_1,     /**< \brief SLSO delay 1 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   239      IfxQspi_StrobeDelay_2,     /**< \brief SLSO delay 2 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   240      IfxQspi_StrobeDelay_3,     /**< \brief SLSO delay 3 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   241      IfxQspi_StrobeDelay_4,     /**< \brief SLSO delay 4 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   242      IfxQspi_StrobeDelay_5,     /**< \brief SLSO delay 5 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   243      IfxQspi_StrobeDelay_6,     /**< \brief SLSO delay 6 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   244      IfxQspi_StrobeDelay_7,     /**< \brief SLSO delay 7 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   245      IfxQspi_StrobeDelay_8,     /**< \brief SLSO delay 8 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   246      IfxQspi_StrobeDelay_9,     /**< \brief SLSO delay 9 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   247      IfxQspi_StrobeDelay_10,    /**< \brief SLSO delay 10 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   248      IfxQspi_StrobeDelay_11,    /**< \brief SLSO delay 11 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   249      IfxQspi_StrobeDelay_12,    /**< \brief SLSO delay 12 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   250      IfxQspi_StrobeDelay_13,    /**< \brief SLSO delay 13 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   251      IfxQspi_StrobeDelay_14,    /**< \brief SLSO delay 14 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   252      IfxQspi_StrobeDelay_15,    /**< \brief SLSO delay 15 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   253      IfxQspi_StrobeDelay_16,    /**< \brief SLSO delay 16 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   254      IfxQspi_StrobeDelay_17,    /**< \brief SLSO delay 17 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   255      IfxQspi_StrobeDelay_18,    /**< \brief SLSO delay 18 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   256      IfxQspi_StrobeDelay_19,    /**< \brief SLSO delay 19 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   257      IfxQspi_StrobeDelay_20,    /**< \brief SLSO delay 20 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   258      IfxQspi_StrobeDelay_21,    /**< \brief SLSO delay 21 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   259      IfxQspi_StrobeDelay_22,    /**< \brief SLSO delay 22 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   260      IfxQspi_StrobeDelay_23,    /**< \brief SLSO delay 23 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   261      IfxQspi_StrobeDelay_24,    /**< \brief SLSO delay 24 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   262      IfxQspi_StrobeDelay_25,    /**< \brief SLSO delay 25 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   263      IfxQspi_StrobeDelay_26,    /**< \brief SLSO delay 26 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   264      IfxQspi_StrobeDelay_27,    /**< \brief SLSO delay 27 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   265      IfxQspi_StrobeDelay_28,    /**< \brief SLSO delay 28 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   266      IfxQspi_StrobeDelay_29,    /**< \brief SLSO delay 29 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   267      IfxQspi_StrobeDelay_30,    /**< \brief SLSO delay 30 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   268      IfxQspi_StrobeDelay_31,    /**< \brief SLSO delay 31 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   269      IfxQspi_StrobeDelay_32     /**< \brief SLSO delay 32 cycle(s)  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   270  } IfxQspi_StrobeDelay;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   271  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   272  /** \brief Transmit Fifo Interrupt Threshold
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   273   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   274  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   275  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   276      IfxQspi_TxFifoInt_1,     /**< \brief TxFifo Interrupt Threshold  #1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   277      IfxQspi_TxFifoInt_2,     /**< \brief TxFifo Interrupt Threshold  #2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   278      IfxQspi_TxFifoInt_3,     /**< \brief TxFifo Interrupt Threshold  #3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   279      IfxQspi_TxFifoInt_4      /**< \brief TxFifo Interrupt Threshold  #4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   280  } IfxQspi_TxFifoInt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   282  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   284  /** \brief Transmit FIFO mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   288      IfxQspi_FifoMode_combinedMove = 0,  /**< \brief Combined Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   289      IfxQspi_FifoMode_singleMove   = 1,  /**< \brief Single Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   290      IfxQspi_FifoMode_batchMove    = 2   /**< \brief Batch Move Mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   291  } IfxQspi_FifoMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   293  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   294   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   295  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   296  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   297      IfxQspi_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   298      IfxQspi_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   299      IfxQspi_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   300  } IfxQspi_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   301  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   302  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   303  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   304  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   305  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   306  /** \brief Structure holding the "pre" and "delay" values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   307   * To be populated into BACON register after delay calculation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   308   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   309  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   310  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   311      uint8 pre;         /**< \brief specifies the prescalar value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   312      uint8 delay;       /**< \brief delay multiplier */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   313  } IfxQspi_DelayConst;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   314  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   315  /** \addtogroup IfxLld_Qspi_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   316   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   317  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   318  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   319  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   320  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   321  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   322  /** \brief Clear ALL service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   323   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   324   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   326  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   327  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   328  /** \brief Clear RX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   329   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   330   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   331   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   332  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   333  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   334  /** \brief Clear TX service requests
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   335   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   336   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   337   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   338  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   340  /** \brief Configure PT1 event (also USR event depending if USREN=1 )
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   341   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   342   * \param pt1Config Phase Transition1 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   343   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   344   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   345  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   347  /** \brief Configure PT2 event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   348   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   349   * \param pt2Config Phase Transition2 Event Config
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   350   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   352  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   354  /** \brief Enable/Disable Loopback mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   355   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   356   * \param enable Enable / Disable loopback
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   357   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   358   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   359  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   361  /** \brief enable Phase Transition1 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   362   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   363   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   364   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   365   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   366  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   368  /** \brief enable Phase Transition2 Event
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   369   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   370   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   371   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   372   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   373  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   374  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   375  /** \brief enable User Event (Event selected by PT1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   376   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   377   * \param enable Enable (1) / Disable (0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   378   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   379   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   380  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   382  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   383   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   384   * \return Error Flags
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   385   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   386  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   388  /** \brief Request for Module in Pause state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   389   * no interrupts
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   390   * no communication
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   391   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   392   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   394  IFX_INLINE void IfxQspi_pause(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   396  /** \brief Read the oldest data from RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   397   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   398   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   399  IFX_INLINE uint32 IfxQspi_readReceiveFifo(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   400  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   401  /** \brief Request reset (State Machine & FIFO / Register / Module)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   402   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   403   * \param reset reset type (GLOBALCON.RESETS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   404   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   405   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   406  IFX_INLINE void IfxQspi_requestReset(Ifx_QSPI *qspi, IfxQspi_Reset reset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   407  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   408  /** \brief Request for QSPI in Run state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   409   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   410   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   411   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   412  IFX_INLINE void IfxQspi_run(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   414  /** \brief Set the threshold of RXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   415   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   416   * \param rxFifoInt RxFIFO Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   417   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   418   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   419  IFX_INLINE void IfxQspi_setReceiveFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_RxFifoInt rxFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   421  /** \brief Write Data into DATAENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   422   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   423   * \param data Data to be entered into TxFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   424   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   425   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   426  IFX_INLINE void IfxQspi_writeTransmitFifo(Ifx_QSPI *qspi, uint32 data);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   427  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   428  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   429   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   430   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   431   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   432   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   433   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   434  IFX_INLINE boolean IfxQspi_isModuleSuspended(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   435  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   436  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   437   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   438   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   439   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   440   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   441   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   442  IFX_INLINE void IfxQspi_setSuspendMode(Ifx_QSPI *qspi, IfxQspi_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   443  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   444  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   445  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   446  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   447  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   448  /** \brief Reads 16bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   449   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   450   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   451   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   452   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   453   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   454  IFX_EXTERN void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   455  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   456  /** \brief Reads 32bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   457   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   458   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   459   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   460   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   461   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   462  IFX_EXTERN void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   463  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   464  /** \brief Reads 8bit data from the Rx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   465   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   466   * \param data Received data will be copied into this array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   467   * \param count Number of items to be received
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   468   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   469   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   470  IFX_EXTERN void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   471  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   472  /** \brief resets QSPI kernel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   473   * \param qspi pointer to QSPI registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   474   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   476  IFX_EXTERN void IfxQspi_resetModule(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   478  /** \brief Writes 16bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   479   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   480   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   481   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   482   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   483   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   484   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   485  IFX_EXTERN void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   487  /** \brief Writes 32bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   488   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   489   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   490   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   491   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   492   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   494  IFX_EXTERN void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   496  /** \brief Writes 8bit data into the Tx FIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   497   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   498   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   499   * \param data Array of data to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   500   * \param count Number of items to be sent
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   501   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   502   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   503  IFX_EXTERN void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   504  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   505  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   506  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   507  /** \addtogroup IfxLld_Qspi_Std_Support
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   508   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   509  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   510  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   511  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   512  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   513  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   514  /** \brief Gets the current mode of QSPI
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   515   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   516   * \return The current mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   517   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   518  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   519  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   520  /** \brief Specifies function to get module frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   521   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   522   * \return Module frequency in Float value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   523   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   524  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   525  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   526  /** \brief Gets actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   527   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   528   * \return Actual transmission phase
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   530  IFX_INLINE IfxQspi_Phase IfxQspi_getPhase(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   532  /** \brief Gets the filling level of RXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   533   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   534   * \return RxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   535   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   536  IFX_INLINE uint8 IfxQspi_getReceiveFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   538  /** \brief Gets Time Quanta frequency
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   539   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   540   * \return TQ frequency in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   541   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   542  IFX_INLINE float IfxQspi_getTimeQuantaFrequency(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   543  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   544  /** \brief Gets the filling level of TXFIFO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   545   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   546   * \return TxFIFO level
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   547   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   548  IFX_INLINE uint8 IfxQspi_getTransmitFifoLevel(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   550  /** \brief Specifies the Module enable or disable status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   551   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   552   * \return TRUE if module is enabled otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   553   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   554  IFX_INLINE boolean IfxQspi_isModuleEnabled(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   556  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   557   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   558   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   559   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   560  IFX_INLINE void IfxQspi_setDisableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   562  /** \brief Sets the enable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   563   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   564   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   565   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   566  IFX_INLINE void IfxQspi_setEnableModuleRequest(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   568  /** \brief Sets the disable module request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   569   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   570   * \param mode Sleep mode selection
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   571   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   572   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   573  IFX_INLINE void IfxQspi_setSleepMode(Ifx_QSPI *qspi, IfxQspi_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   574  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   575  /** \brief Set the threshold of TXFIFO for service request generation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   576   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   577   * \param txFifoInt TxFifo Interrupt threshold to set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   578   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   579   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   580  IFX_INLINE void IfxQspi_setTransmitFifoInterrruptThreshold(Ifx_QSPI *qspi, IfxQspi_TxFifoInt txFifoInt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   581  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   582  /** \brief Write configuration into BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   583   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   584   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   587  IFX_INLINE void IfxQspi_writeBasicConfiguration(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   589  /** \brief Write configuration into BACON register with .LAST flag set to 0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   590   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   591   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   592   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   593   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   594  IFX_INLINE void IfxQspi_writeBasicConfigurationBeginStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   595  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   596  /** \brief Write configuration into BACON register with .LAST flag set to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   597   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   598   * \param baconVal baconVal Value to be entered in  BACON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   599   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   600   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   601  IFX_INLINE void IfxQspi_writeBasicConfigurationEndStream(Ifx_QSPI *qspi, uint32 baconVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   603  /** \brief Writes channel timing configuration into ECON register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   604   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   605   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   606   * \param econVal Extended configuration value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   607   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   608   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   609  IFX_INLINE void IfxQspi_writeExtendedConfiguration(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 econVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   610  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   611  /** \brief Writes Data and Configuration into MIXEDENTRY register
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   612   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   613   * \param mixEntryVal Data and configuration in mixed
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   616  IFX_INLINE void IfxQspi_writeMixedDataTransmitFifo(Ifx_QSPI *qspi, uint32 mixEntryVal);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   618  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   619  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   620  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   622  /** \brief Function to calculate baudrate of specified channel
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   623   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   624   * \param channelId QSPI channel number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   625   * \return Actual baudrate in float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   626   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   627  IFX_EXTERN float IfxQspi_calcRealBaudrate(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   628  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   629  /** \brief Function to calculate BACON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   630   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   631   * \param channelId QSPI Channel Number
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   632   * \param chMode Frame configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   633   * \param baudrate The desired baudrate
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   634   * \return Calculated BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   635   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   636  IFX_EXTERN uint32 IfxQspi_calculateBasicConfigurationValue(Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, const float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   637  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   638  /** \brief Function to calculate ECON register values
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   639   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   640   * \param cs QSPI channel Number : 8->0,9->1,.......
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   641   * \param chConfig SPI Channel Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   642   * \return Calculated ECON[CS] value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   643   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   644  IFX_EXTERN uint32 IfxQspi_calculateExtendedConfigurationValue(Ifx_QSPI *qspi, const uint8 cs, const SpiIf_ChConfig *chConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   645  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   646  /** \brief Function to calculate prescaler
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   647   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   648   * \param baudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   649   * \return Prescaler in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   650   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   651  IFX_EXTERN uint32 IfxQspi_calculatePrescaler(Ifx_QSPI *qspi, float baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   652  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   653  /** \brief Specifies the function to calculate Time quantum length
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   654   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   655   * \param maxBaudrate Maximum baudrate in Float
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   656   * \return Time quantum length in integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   657   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   658  IFX_EXTERN uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   660  /** \brief
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   661   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   662   * \return QSPI module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   663   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   664  IFX_EXTERN Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   665  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   666  /** \brief Specifies the function to get Index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   667   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   668   * \return Index in Integer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   669   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   670  IFX_EXTERN IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   672  /** \brief Re-calculated BACON from the oldBACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   673   * \param oldBACON Old BACON value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   674   * \param numOfData numOfData in LONG or CONTINUOUS mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   675   * \param shortData Specifies SHORT mode (TRUE) or other modes (FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   676   * \param lastData Specifies last data in LONG or CONTINUOUS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   677   * \return Re-calculated BACON
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   678   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   679  IFX_EXTERN uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   680  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   681  /** \brief Configures a Slave Select Output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   682   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   683   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   684   * \param outputEnable chip select output will be enabled during transaction
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   685   * \param activeLevel TRUE: active-high, FALSE: active-low
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   686   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   687   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   688  IFX_EXTERN void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   689  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   690  /** \brief Calculates the Delay constants (pre and delay) from the user specified CS delays.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   691   * \param qspi pointer to QSPI SFR
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   692   * \param channelId Channel ID no.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   693   * \param chMode Pointer to Channel Mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   694   * \param delayConst Pointer to the Delay Consant Array
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   695   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   696   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   697  IFX_EXTERN void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   698  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   699  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   700  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   701  /** \addtogroup IfxLld_Qspi_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   702   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   703  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   704  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   705  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   706  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   707  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   708  /** \brief Gets the Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   709   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   710   * \return Error request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   711   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   712  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   713  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   714  /** \brief Gets the RXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   715   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   716   * \return Receive service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   717   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   718  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getReceiveSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   719  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   720  /** \brief Gets the TXFIFO service request
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   721   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   722   * \return Transmission service request value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   723   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   724  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getTransmitSrc(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   725  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   726  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   728  /** \addtogroup IfxLld_Qspi_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   729   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   730  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   731  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   732  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   733  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   735  /** \brief Initializes a MRST input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   736   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   737   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   738   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   739   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   740  IFX_INLINE void IfxQspi_initMrstInPin(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   741  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   742  /** \brief Initializes a MRST output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   743   * \param mrstOut the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   744   * \param mrstOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   745   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   746   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   747   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   748  IFX_INLINE void IfxQspi_initMrstOutPin(const IfxQspi_Mrst_Out *mrstOut, IfxPort_OutputMode mrstOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   749  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   750  /** \brief Initializes a MTSR input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   751   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   752   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   753   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   754   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   755  IFX_INLINE void IfxQspi_initMtsrInPin(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   756  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   757  /** \brief Initializes a MTSR output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   758   * \param mtsrOut the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   759   * \param mtsrOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   760   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   761   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   762   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   763  IFX_INLINE void IfxQspi_initMtsrOutPin(const IfxQspi_Mtsr_Out *mtsrOut, IfxPort_OutputMode mtsrOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   764  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   765  /** \brief Initializes a SCLK input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   766   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   767   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   768   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   769   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   770  IFX_INLINE void IfxQspi_initSclkInPin(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   771  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   772  /** \brief Initializes a SCLK output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   773   * \param sclkOut the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   774   * \param sclkOutMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   775   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   778  IFX_INLINE void IfxQspi_initSclkOutPin(const IfxQspi_Sclk_Out *sclkOut, IfxPort_OutputMode sclkOutMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   780  /** \brief Initializes a SLSI input
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   781   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   782   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   783   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   784   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   785  IFX_INLINE void IfxQspi_initSlsi(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   786  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   787  /** \brief Initializes a SLSO output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   788   * \param slso the SLSO Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   789   * \param slsoMode the pin output mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   790   * \param padDriver the pad driver mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   791   * \param outIndex Pin Pad driver index
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   794  IFX_INLINE void IfxQspi_initSlso(const IfxQspi_Slso_Out *slso, IfxPort_OutputMode slsoMode, IfxPort_PadDriver padDriver, IfxPort_OutputIdx outIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   796  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   797  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   798  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   799  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   800  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   801  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   802  /** \brief Get the Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   803   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   804   * \return Receive FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   805   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   806  IFX_INLINE IfxQspi_FifoMode IfxQspi_getRxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   807  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   808  /** \brief Get the Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   809   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   810   * \return Transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   811   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   812  IFX_INLINE IfxQspi_FifoMode IfxQspi_getTxFifoMode(Ifx_QSPI *qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   813  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   814  /** \brief Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   815   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   816   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   817   * \param bigEndian specifies to Permutate bytes to / from Big Endian
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   818   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   819   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   820  IFX_INLINE void IfxQspi_permutateBigEndian(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bigEndian);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   821  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   822  /** \brief Set the value of bit segment1 (A).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   823   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   824   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   825   * \param bitSegment1 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   826   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   827   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   828  IFX_INLINE void IfxQspi_setBitsegment1(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   829  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   830  /** \brief Set the value of bit segment2 (B).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   831   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   832   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   833   * \param bitSegment2 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   834   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   835   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   836  IFX_INLINE void IfxQspi_setBitsegment2(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   837  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   838  /** \brief Set the value of bit segment3 (C).
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   839   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   840   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   841   * \param bitSegment3 Length expressed in time quantums of ECONz.Q.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   842   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   843   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   844  IFX_INLINE void IfxQspi_setBitsegment3(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 bitSegment3);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   845  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   846  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   847   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   848   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   849   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   850   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   851  IFX_INLINE void IfxQspi_setRxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   852  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   853  /** \brief Set the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   854   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   855   * \param channelId Channel number to which econ val belongs
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   856   * \param timeQuantum specifies the value of Time Quantum.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   857   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   858   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   859  IFX_INLINE void IfxQspi_setTimeQuantum(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 timeQuantum);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   860  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   861  /** \brief Set the transfer FIFO mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   862   * \param qspi Pointer to QSPI module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   863   * \param mode select the transfer fifo mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   864   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   865   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   866  IFX_INLINE void IfxQspi_setTxFifoMode(Ifx_QSPI *qspi, IfxQspi_FifoMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   867  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   868  /** \brief Provides functionality for both setting of MRSTIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   869   * \param mrstIn the MRST Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   870   * \param mrstInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   871   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   872   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   873   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   874  IFX_INLINE void IfxQspi_initMrstInPinWithPadLevel(const IfxQspi_Mrst_In *mrstIn, IfxPort_InputMode mrstInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   875  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   876  /** \brief Provides functionality for both setting of MTSRIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   877   * \param mtsrIn the MTSR Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   878   * \param mtsrInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   879   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   880   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   881   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   882  IFX_INLINE void IfxQspi_initMtsrInPinWithPadLevel(const IfxQspi_Mtsr_In *mtsrIn, IfxPort_InputMode mtsrInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   883  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   884  /** \brief Provides functionality for both setting of SCLKIN pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   885   * \param sclkIn the SCLK Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   886   * \param sclkInMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   887   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   888   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   889   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   890  IFX_INLINE void IfxQspi_initSclkInPinWithPadLevel(const IfxQspi_Sclk_In *sclkIn, IfxPort_InputMode sclkInMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   891  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   892  /** \brief Provides functionality for both setting of SLSI pin direction as input and configuring pad driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   893   * \param slsi the SLSI Pin which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   894   * \param slsiMode the pin input mode which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   895   * \param padDriver Pad Driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   896   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   897   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   898  IFX_INLINE void IfxQspi_initSlsiWithPadLevel(const IfxQspi_Slsi_In *slsi, IfxPort_InputMode slsiMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   899  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   900  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   901  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   902  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   904  IFX_INLINE void IfxQspi_clearAllEventFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   905  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   906      qspi->FLAGSCLEAR.U = 0xFFFFU;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   907  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   908  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   909  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   910  IFX_INLINE void IfxQspi_clearRxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   911  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   912      qspi->FLAGSCLEAR.B.RXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   913  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   914  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   915  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   916  IFX_INLINE void IfxQspi_clearTxReq(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   917  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   918      qspi->FLAGSCLEAR.B.TXC = 1U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   919  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   920  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   921  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   922  IFX_INLINE void IfxQspi_configPT1Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt1Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   923  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   924      qspi->GLOBALCON1.B.PT1 = pt1Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   925  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   926  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   928  IFX_INLINE void IfxQspi_configPT2Event(Ifx_QSPI *qspi, IfxQspi_PhaseTransitionEvent pt2Config)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   929  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   930      qspi->GLOBALCON1.B.PT2 = pt2Config;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   931  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   932  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   933  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   934  IFX_INLINE void IfxQspi_enableLoopbackMode(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   935  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   936      IFX_UNUSED_PARAMETER(enable);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   937  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   938      qspi->GLOBALCON.B.LB = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   939  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   940  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   941  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   942  IFX_INLINE void IfxQspi_enablePT1Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   943  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   944      qspi->GLOBALCON1.B.PT1EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   945  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   946  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   947  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   948  IFX_INLINE void IfxQspi_enablePT2Event(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   949  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   950      qspi->GLOBALCON1.B.PT2EN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   951  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   952  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   953  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   954  IFX_INLINE void IfxQspi_enableUsrEvent(Ifx_QSPI *qspi, boolean enable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   955  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   956      qspi->GLOBALCON1.B.USREN = enable;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   957  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   958  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   959  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   960  IFX_INLINE uint16 IfxQspi_getErrorFlags(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   961  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   962      return qspi->STATUS.B.ERRORFLAGS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   963  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   965  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   966  IFX_INLINE volatile Ifx_SRC_SRCR *IfxQspi_getErrorSrc(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   967  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   968      uint32 index = IfxQspi_getIndex(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   969      return &MODULE_SRC.QSPI.QSPI[index].ERR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   970  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   972  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   973  IFX_INLINE IfxQspi_Mode IfxQspi_getMode(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   974  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   975      return (IfxQspi_Mode)qspi->GLOBALCON.B.MS;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   976  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   977  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   979  IFX_INLINE float IfxQspi_getModuleFrequency(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   980  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   981      IFX_UNUSED_PARAMETER(qspi->CLC.U != 0);
	ld.w	d15,[a4]
.L318:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   982  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.h	   983      return IfxScuCcu_getMaxFrequency();
	call	IfxScuCcu_getMaxFrequency
.L319:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   214      float tempHalfBaud = fQspiIn / (1U << (4 * i));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   215          error = __absf(tempHalfBaud - halfBaud);
	mov.u	d0,#38528
.L407:
	addih	d0,d0,#19224
.L321:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   216  
	mov	d1,#0
.L408:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   217          if (__leqf(error, bestError))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   218          {
	mov	d3,d1
	mov.a	a15,#7
.L24:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   219              bestError = error;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   220              bestPre   = i;
	mov	d15,#1
.L591:
	sh	d4,d3,#2
.L592:
	sh	d15,d15,d4
	utof	d15,d15
.L593:
	div.f	d15,d2,d15
.L409:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   221          }
	sub.f	d15,d15,d8
.L410:
	insert	d4,d15,#0,#31,#1
.L411:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   222      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   223  
	cmp.f	d15,d4,d0
.L412:
	jnz.t	d15:2,.L25
.L594:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   224      return bestPre;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   225  }
	mov	e0,d3,d4
.L25:
	add	d3,#1
	loop	a15,.L24
.L413:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   226  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   227  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   228  uint32 IfxQspi_calculateTimeQuantumLength(Ifx_QSPI *qspi, float maxBaudrate)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   229  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   230  #define ABCQMIN (4)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   231  #define ABCQMAX (8 * 63)
	mov	d2,d1
	ret
.L313:
	
__IfxQspi_calculatePrescaler_function_end:
	.size	IfxQspi_calculatePrescaler,__IfxQspi_calculatePrescaler_function_end-IfxQspi_calculatePrescaler
.L164:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength',code,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.text.IfxQspi.IfxQspi_calculateTimeQuantumLength'
	.align	2
	
	.global	IfxQspi_calculateTimeQuantumLength

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   232  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   233      IFX_UNUSED_PARAMETER(qspi);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   234  
; Function IfxQspi_calculateTimeQuantumLength
.L79:
IfxQspi_calculateTimeQuantumLength:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   235      uint32 abcq  = ABCQMIN, tq, bestTq;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   236      float  realTQ, deltaMax, bestDelta, achievedMax;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   237      float  fQspi = IfxScuCcu_getMaxFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   239      if (__leqf(maxBaudrate, 0.0))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   240      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   241          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, FALSE); /* Max baud rate is 0!! */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   242      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   243  
	mov	d8,d4
	call	IfxScuCcu_getMaxFrequency
.L328:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   244      realTQ    = fQspi / (4.0 * maxBaudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   245      bestTq    = __max((uint32)__roundf(realTQ), 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   246      bestDelta = __absf(maxBaudrate - (fQspi / bestTq));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   247  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   248      for (abcq = ABCQMIN; abcq <= ABCQMAX; abcq++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   249      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   250          realTQ      = fQspi / (maxBaudrate * abcq);
	movh	d15,#16512
.L599:
	mul.f	d15,d8,d15
.L600:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   251          tq          = (uint32)(realTQ + 0.5);
	movh	d3,#16128
.L601:
	div.f	d0,d2,d15
.L414:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   252          achievedMax = fQspi / (tq * abcq);
	mov	d4,#0
.L602:
	ftoiz	d15,d0
	itof	d1,d15
	sub.f	d0,d0,d1
.L415:
	cmp.f	d0,d0,d3
	extr.u	d0,d0,#2,#1
	add	d15,d0
.L603:
	max	d1,d15,#1
.L416:
	utof	d15,d1
	div.f	d15,d2,d15
	sub.f	d6,d8,d15
.L418:
	cmp.f	d15,d6,d4
	jz.t	d15:0,.L28
	insn.t	d6,d6:31,d6:31
.L28:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   253          deltaMax    = __absf(maxBaudrate - achievedMax);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   254  
	mov	d7,#4
	lea	a15,500
.L29:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   255          if (__leqf(deltaMax, bestDelta) && (tq >= 1))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   256          {
	utof	d15,d7
.L604:
	mul.f	d15,d8,d15
.L605:
	div.f	d15,d2,d15
.L419:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   257              bestDelta = deltaMax;
	add.f	d15,d15,d3
.L420:
	ftouz	d0,d15
.L421:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   258              bestTq    = tq;
	mul	d15,d0,d7
	utof	d15,d15
.L606:
	div.f	d15,d2,d15
.L422:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   259          }
	sub.f	d5,d8,d15
	cmp.f	d15,d5,d4
.L423:
	jz.t	d15:0,.L31
	insn.t	d5,d5:31,d5:31
.L31:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   261          if ((bestDelta == 0) || (tq < 1))
	cmp.f	d15,d5,d6
	jnz.t	d15:2,.L32
.L607:
	jeq	d0,#0,.L33
.L608:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   262          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   263              break; //exit the for loop
	mov	d6,d5
.L609:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   264          }
	mov	d1,d0
.L33:
.L32:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   265      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   266  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   267      return __max(bestTq - 1, 0);
	extr.u	d15,d6,#23,#8
	jeq	d15,#0,.L34
.L610:
	jeq	d0,#0,.L35
.L611:
	add	d7,#1
	loop	a15,.L29

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   268  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   269  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   271  Ifx_QSPI *IfxQspi_getAddress(IfxQspi_Index qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   272  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   273      Ifx_QSPI *module;
.L35:
.L34:
	add	d1,#-1
.L417:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   274  
	max	d2,d1,#0
	ret
.L325:
	
__IfxQspi_calculateTimeQuantumLength_function_end:
	.size	IfxQspi_calculateTimeQuantumLength,__IfxQspi_calculateTimeQuantumLength_function_end-IfxQspi_calculateTimeQuantumLength
.L169:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_getAddress',code,cluster('IfxQspi_getAddress')
	.sect	'.text.IfxQspi.IfxQspi_getAddress'
	.align	2
	
	.global	IfxQspi_getAddress

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   275      if (qspi < IFXQSPI_NUM_MODULES)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   276      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   277          module = (Ifx_QSPI *)IfxQspi_cfg_indexMap[qspi].module;
; Function IfxQspi_getAddress
.L81:
IfxQspi_getAddress:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   278      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   279      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   280      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   281          module = NULL_PTR;
	jge	d4,#4,.L37
.L616:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   282      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   283  
	movh.a	a15,#@his(IfxQspi_cfg_indexMap)
	lea	a15,[a15]@los(IfxQspi_cfg_indexMap)
.L617:
	addsc.a	a15,a15,d4,#3
.L618:
	ld.a	a2,[a15]
.L424:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   284      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   285  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   286  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   287  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   288  IfxQspi_Index IfxQspi_getIndex(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   289  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   290      uint32        index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   291      IfxQspi_Index result;
	ret
.L37:
	mov.a	a2,#0
.L425:
	ret
.L336:
	
__IfxQspi_getAddress_function_end:
	.size	IfxQspi_getAddress,__IfxQspi_getAddress_function_end-IfxQspi_getAddress
.L174:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_getIndex',code,cluster('IfxQspi_getIndex')
	.sect	'.text.IfxQspi.IfxQspi_getIndex'
	.align	2
	
	.global	IfxQspi_getIndex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   292  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   293      result = IfxQspi_Index_none;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   294  
; Function IfxQspi_getIndex
.L83:
IfxQspi_getIndex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   295      for (index = 0; index < IFXQSPI_NUM_MODULES; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   296      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   297          if (IfxQspi_cfg_indexMap[index].module == qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   298          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   299              result = (IfxQspi_Index)IfxQspi_cfg_indexMap[index].index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   300              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   301          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   302      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   303  
	mov	d2,#-1
	movh.a	a15,#@his(IfxQspi_cfg_indexMap)
.L426:
	lea	a15,[a15]@los(IfxQspi_cfg_indexMap)
.L623:
	mov.a	a2,#3
.L40:
	ld.a	a5,[a15]
.L624:
	jne.a	a5,a4,.L41
.L625:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   304      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   305  }
	ld.w	d15,[a15]4
.L626:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   306  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   308  void IfxQspi_read16(Ifx_QSPI *qspi, uint16 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   309  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   310      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   311  
	extr	d2,d15,#0,#8
	ret
.L41:
	lea	a15,[a15]8
	loop	a2,.L40
.L627:
	ret
.L340:
	
__IfxQspi_getIndex_function_end:
	.size	IfxQspi_getIndex,__IfxQspi_getIndex_function_end-IfxQspi_getIndex
.L179:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read16',code,cluster('IfxQspi_read16')
	.sect	'.text.IfxQspi.IfxQspi_read16'
	.align	2
	
	.global	IfxQspi_read16

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   312      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   313      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   314          *(data++) = (uint16)rxFifo->U;
; Function IfxQspi_read16
.L85:
IfxQspi_read16:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   315          count--;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   316      }
	lea	a15,[a4]144
.L427:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   317  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   318  
	j	.L44
.L45:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   319  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   320  void IfxQspi_read32(Ifx_QSPI *qspi, uint32 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   321  {
	add	d4,#-1
	ld.w	d15,[a15]
.L464:
	st.h	[a5+],d15
.L44:
	jge	d4,#1,.L45
.L465:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   322      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   323  
	ret
.L200:
	
__IfxQspi_read16_function_end:
	.size	IfxQspi_read16,__IfxQspi_read16_function_end-IfxQspi_read16
.L114:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read32',code,cluster('IfxQspi_read32')
	.sect	'.text.IfxQspi.IfxQspi_read32'
	.align	2
	
	.global	IfxQspi_read32

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   324      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   325      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   326          *(data++) = rxFifo->U;
; Function IfxQspi_read32
.L87:
IfxQspi_read32:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   327          count--;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   328      }
	lea	a15,[a4]144
.L428:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   329  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   330  
	j	.L46
.L47:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   332  void IfxQspi_read8(Ifx_QSPI *qspi, uint8 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   333  {
	add	d4,#-1
	ld.w	d15,[a15]
.L470:
	st.w	[a5+],d15
.L46:
	jge	d4,#1,.L47
.L471:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   334      volatile Ifx_QSPI_RXEXIT *rxFifo = &qspi->RXEXIT;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   335  
	ret
.L209:
	
__IfxQspi_read32_function_end:
	.size	IfxQspi_read32,__IfxQspi_read32_function_end-IfxQspi_read32
.L119:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_read8',code,cluster('IfxQspi_read8')
	.sect	'.text.IfxQspi.IfxQspi_read8'
	.align	2
	
	.global	IfxQspi_read8

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   336      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   337      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   338          *(data++) = (uint8)rxFifo->U;
; Function IfxQspi_read8
.L89:
IfxQspi_read8:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   339          count--;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   340      }
	lea	a15,[a4]144
.L429:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   341  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   342  
	j	.L48
.L49:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   343  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   344  uint32 IfxQspi_recalcBasicConfiguration(uint32 oldBACON, Ifx_SizeT numOfData, boolean shortData, boolean lastData)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   345  {
	add	d4,#-1
	ld.w	d15,[a15]
.L476:
	st.b	[a5+],d15
.L48:
	jge	d4,#1,.L49
.L477:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   346      Ifx_QSPI_BACON bacon;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   347      bacon.U = oldBACON;
	ret
.L215:
	
__IfxQspi_read8_function_end:
	.size	IfxQspi_read8,__IfxQspi_read8_function_end-IfxQspi_read8
.L124:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration',code,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.text.IfxQspi.IfxQspi_recalcBasicConfiguration'
	.align	2
	
	.global	IfxQspi_recalcBasicConfiguration

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   348  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   349      if (shortData == FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   350      {
; Function IfxQspi_recalcBasicConfiguration
.L91:
IfxQspi_recalcBasicConfiguration:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   351          bacon.B.DL   = numOfData;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   352          bacon.B.BYTE = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   353      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   354  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   355      bacon.B.LAST = lastData;
	jne	d6,#0,.L50
.L632:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   356      return bacon.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   357  }
	insert	d4,d4,d5,#23,#5
.L633:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   358  
	insert	d4,d4,#1,#22,#1
.L50:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   360  void IfxQspi_resetModule(Ifx_QSPI *qspi)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   362      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   363      IfxScuWdt_clearCpuEndinit(passwd);
	insert	d2,d4,d7,#0,#1
	ret
.L344:
	
__IfxQspi_recalcBasicConfiguration_function_end:
	.size	IfxQspi_recalcBasicConfiguration,__IfxQspi_recalcBasicConfiguration_function_end-IfxQspi_recalcBasicConfiguration
.L184:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_resetModule',code,cluster('IfxQspi_resetModule')
	.sect	'.text.IfxQspi.IfxQspi_resetModule'
	.align	2
	
	.global	IfxQspi_resetModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   364      qspi->KRST0.B.RST = 1;          /* Only if both Kernel reset bits are set a reset is executed */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   365      qspi->KRST1.B.RST = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   366      IfxScuWdt_setCpuEndinit(passwd);
; Function IfxQspi_resetModule
.L93:
IfxQspi_resetModule:	.type	func
	mov.aa	a15,a4
.L431:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   367  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   368      while (0 == qspi->KRST0.B.RSTSTAT)  /* Wait until reset is executed */
	call	IfxScuWdt_getCpuWatchdogPassword
.L430:
	mov	d8,d2
.L433:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   369  
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L432:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   370      {}
	ld.bu	d15,[a15]244
.L482:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   372      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
.L434:
	or	d15,#1
	st.b	[a15]244,d15
.L483:
	ld.bu	d15,[a15]240
.L484:
	or	d15,#1
	st.b	[a15]240,d15
.L485:
	call	IfxScuWdt_setCpuEndinit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   373      qspi->KRSTCLR.B.CLR = 1;            /* Clear Kernel reset status bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   374      IfxScuWdt_setCpuEndinit(passwd);
.L52:
	ld.bu	d15,[a15]244
.L486:
	jz.t	d15:1,.L52
.L487:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   375  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   376  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   378  void IfxQspi_setSlaveSelectOutputControl(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, boolean outputEnable, boolean activeLevel)
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L488:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   379  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   380      uint16        mask = 1 << channelId;
	mov	d4,d8
	ld.bu	d15,[a15]236
.L435:
	or	d15,#1
	st.b	[a15]236,d15
.L489:
	j	IfxScuWdt_setCpuEndinit
.L221:
	
__IfxQspi_resetModule_function_end:
	.size	IfxQspi_resetModule,__IfxQspi_resetModule_function_end-IfxQspi_resetModule
.L129:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl',code,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.text.IfxQspi.IfxQspi_setSlaveSelectOutputControl'
	.align	2
	
	.global	IfxQspi_setSlaveSelectOutputControl

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   381  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   382      Ifx_QSPI_SSOC ssoc;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   383      ssoc.U = qspi->SSOC.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   384  
; Function IfxQspi_setSlaveSelectOutputControl
.L95:
IfxQspi_setSlaveSelectOutputControl:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   385      if (outputEnable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   386      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   387          ssoc.B.OEN |= mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   388      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   389      else
	mov	d15,#1
	ld.w	d1,[a4]72
.L436:
	sha	d15,d15,d4
	extr.u	d15,d15,#0,#16
.L437:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   390      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   391          ssoc.B.OEN &= ~mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   392      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   393  
	extr.u	d0,d1,#16,#16
.L638:
	jeq	d5,#0,.L53
.L639:
	or	d0,d15
	j	.L54
.L53:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   394      if (activeLevel)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   395      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   396          ssoc.B.AOL |= mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   397      }
	mov.u	d2,#65535
	xor	d2,d15
.L640:
	and	d0,d2
.L54:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   398      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   399      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   400          ssoc.B.AOL &= ~mask;
	insert	d1,d1,d0,#16,#16
.L641:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   401      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   402  
	extr.u	d0,d1,#0,#16
.L642:
	jeq	d6,#0,.L55
.L643:
	or	d0,d15
	j	.L56
.L55:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   403      qspi->SSOC.U = ssoc.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   404  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   405  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   406  
	mov.u	d2,#65535
	xor	d15,d2
.L438:
	and	d0,d15
.L56:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   407  void IfxQspi_write16(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint16 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   408  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   409      int                          cs        = channelId % 8;
	insert	d1,d1,d0,#0,#16
	st.w	[a4]72,d1
.L644:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   410      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L351:
	
__IfxQspi_setSlaveSelectOutputControl_function_end:
	.size	IfxQspi_setSlaveSelectOutputControl,__IfxQspi_setSlaveSelectOutputControl_function_end-IfxQspi_setSlaveSelectOutputControl
.L189:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write16',code,cluster('IfxQspi_write16')
	.sect	'.text.IfxQspi.IfxQspi_write16'
	.align	2
	
	.global	IfxQspi_write16

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   412      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   413      {
; Function IfxQspi_write16
.L97:
IfxQspi_write16:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   414          dataEntry->U = *(data++);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   415          count--;
	fcall	.cocofun_1
.L440:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   416      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   417  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   418  
	j	.L57
.L58:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   420  void IfxQspi_write32(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint32 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   421  {
	add	d5,#-1
	ld.hu	d15,[a5+]2
.L494:
	st.w	[a15],d15
.L57:
	jge	d5,#1,.L58
.L495:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   422      int                          cs        = channelId % 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   423      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L225:
	
__IfxQspi_write16_function_end:
	.size	IfxQspi_write16,__IfxQspi_write16_function_end-IfxQspi_write16
.L134:
	; End of function
	
	.sdecl	'.text.IfxQspi..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxQspi..cocofun_1'
	.align	2
; Function .cocofun_1
.L99:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	and	d15,d4,#7
.L439:
	addsc.a	a15,a4,d15,#2
	lea	a15,[a15]100
.L441:
	fret
.L199:
	; End of function
	.sdecl	'.text.IfxQspi.IfxQspi_write32',code,cluster('IfxQspi_write32')
	.sect	'.text.IfxQspi.IfxQspi_write32'
	.align	2
	
	.global	IfxQspi_write32

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   424  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   425      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   426      {
; Function IfxQspi_write32
.L101:
IfxQspi_write32:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   427          dataEntry->U = *(data++);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   428          count--;
	fcall	.cocofun_1
.L442:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   429      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   430  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   431  
	j	.L59
.L60:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   433  void IfxQspi_write8(Ifx_QSPI *qspi, IfxQspi_ChannelId channelId, uint8 *data, Ifx_SizeT count)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   434  {
	add	d5,#-1
	ld.w	d15,[a5+]
.L500:
	st.w	[a15],d15
.L59:
	jge	d5,#1,.L60
.L501:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   435      int                          cs        = channelId % 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   436      volatile Ifx_QSPI_DATAENTRY *dataEntry = &qspi->DATAENTRY[cs];
	ret
.L236:
	
__IfxQspi_write32_function_end:
	.size	IfxQspi_write32,__IfxQspi_write32_function_end-IfxQspi_write32
.L139:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_write8',code,cluster('IfxQspi_write8')
	.sect	'.text.IfxQspi.IfxQspi_write8'
	.align	2
	
	.global	IfxQspi_write8

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   437  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   438      while (count > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   439      {
; Function IfxQspi_write8
.L103:
IfxQspi_write8:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   440          dataEntry->U = *(data++);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   441          count--;
	fcall	.cocofun_1
.L443:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   442      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   443  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   444  
	j	.L61
.L62:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   445  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   446  void IfxQspi_calculateDelayConstants(const Ifx_QSPI *qspi, const IfxQspi_ChannelId channelId, const SpiIf_ChMode *chMode, IfxQspi_DelayConst *delayConst)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   447  {
	add	d5,#-1
	ld.bu	d15,[a5+]
.L506:
	st.w	[a15],d15
.L61:
	jge	d5,#1,.L62
.L507:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   448      uint32                            divFactor;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   449      const SpiIf_SlsoTiming_HalfTsclk *dlyFactorPtr;
	ret
.L243:
	
__IfxQspi_write8_function_end:
	.size	IfxQspi_write8,__IfxQspi_write8_function_end-IfxQspi_write8
.L144:
	; End of function
	
	.sdecl	'.text.IfxQspi.IfxQspi_calculateDelayConstants',code,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.text.IfxQspi.IfxQspi_calculateDelayConstants'
	.align	2
	
	.global	IfxQspi_calculateDelayConstants

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   450      float32                           scaleTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   451      uint8                             preTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   452      uint8                             preFinal   = 0U;
; Function IfxQspi_calculateDelayConstants
.L105:
IfxQspi_calculateDelayConstants:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   453      uint8                             delayTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   454      uint8                             delayFinal = 0U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   455      boolean                           matchFound;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   456      uint8                             index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   457      uint8                             cs = channelId % 8;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   459      /* obtain the peripheral frequency / sclk frequency multiplication factor */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   460      divFactor = (qspi->GLOBALCON.B.TQ + 1) * (qspi->ECON[cs].B.Q + 1) * (qspi->ECON[cs].B.A + 1 + qspi->ECON[cs].B.B + qspi->ECON[cs].B.C);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   461  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   462      /* The user defined delay factor is here - point to it */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   463      dlyFactorPtr = &(chMode->csInactiveDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   465      for (index = 0; index < 3; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   466      {
	and	d15,d4,#7
	ld.bu	d0,[a4]16
.L444:
	addsc.a	a15,a4,d15,#2
.L649:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   467          /* multiply the div_factor and delay_factor and divide by 2 - this is product of (4^pre)*(delay_mult) */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   468          scaleTemp = (dlyFactorPtr[index] * divFactor) / (float32)2.0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   469  
	add	d0,#1
	add.a	a5,#2
.L650:
	ld.bu	d15,[+a15]32
.L445:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   470          /* loop through the possible pre values to find pre and delay */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   471          matchFound = FALSE;
	mov	d8,#0
	mov.aa	a12,a5
.L446:
	and	d15,#63
	mov.a	a13,#2
.L651:
	add	d1,d15,#1
	ld.bu	d15,[a15]
.L652:
	mul	d0,d1
.L653:
	extr.u	d1,d15,#6,#2
	ld.bu	d15,[+a15]1
.L654:
	mov	d9,d8
.L447:
	and	d15,#3
.L655:
	add	d1,d15
	ld.bu	d15,[a15]
.L656:
	mov.aa	a15,a6
.L657:
	extr.u	d15,d15,#2,#2
.L658:
	add	d1,d15
.L659:
	add	d1,#1
.L660:
	mul	d10,d0,d1
.L63:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   472  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   473          for (preTemp = 0; preTemp < 8; preTemp++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   474          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   475              delayTemp = (uint8)((scaleTemp / (1 << (2 * preTemp))) + 0.5); /* divide the scale_temp by ( 4 ^ pre_temp) to find delay_temp */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   476  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   477              if (delayTemp <= 8)                                            /* if delay_temp is <= 8; we can get a good value pair */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   478              {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   479                  if ((float32)(delayTemp << (2 * preTemp)) >= scaleTemp)    /* greater delays are tolerated. less is not */
	movh	d1,#16128
	mov.a	a14,#7
.L661:
	ld.w	d15,[a12+]
.L662:
	mov	d12,#0
.L448:
	mul	d15,d10
.L663:
	mov	d13,d12
.L449:
	utof	d15,d15
	mul.f	d11,d15,d1
.L64:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   480                  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   481                      delayFinal = __max(delayTemp - 1, 0);                  /* subtract 1 to set to register */
	sha	d15,d13,#1
.L664:
	mov	d1,#1
.L665:
	sha	d1,d1,d15
	itof	d0,d1
.L666:
	div.f	d0,d11,d0
.L667:
	movh	d1,#16128
.L668:
	add.f	d4,d0,d1
	call	__f_ftouc
.L450:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   482                      preFinal   = preTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   483                      matchFound = TRUE;
	jge.u	d2,#9,.L65
.L669:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   484                      break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   485                  }
	sha	d15,d2,d15
.L451:
	itof	d15,d15
.L670:
	cmp.f	d15,d15,d11
	and	d15,#6
.L671:
	jne	d15,#0,.L66
.L452:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   486                  else if (delayTemp < (uint8)8)            /* delay is less than 8 - add 1 and finalize parameters */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   487                  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   488                      delayTemp += 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   489                      delayFinal = __max(delayTemp - 1, 0); /* subtract 1 to set to register */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   490                      preFinal   = preTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   491                      matchFound = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   492                      break;
	jge.u	d2,#8,.L67
.L672:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   493                  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   494                  else
	add	d2,#1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   495                  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   496                      /* do nothing - proceed to next pre_temp value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   497                  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   498              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   499          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   500  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   501          if (matchFound == FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   502          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   503              /* max limit reached. set max values for pre and delay and exit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   504              delayFinal = 7;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   505              preFinal   = 7;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   506          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   507  
.L66:
	add	d2,#-1
.L673:
	max	d15,d2,#0
	extr.u	d9,d15,#0,#8
.L674:
	mov	d8,d13
.L675:
	mov	d12,#1
	j	.L68
.L67:
.L65:
	add	d13,#1
	loop	a14,.L64
.L68:
	jne	d12,#0,.L69
.L676:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   508          /* write back to delay const structure before looping to next factor */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   509          delayConst[index].delay = delayFinal;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   510          delayConst[index].pre   = preFinal;
	mov	d9,#7
.L677:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   511      }
	mov	d8,d9
.L69:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Qspi\Std\IfxQspi.c	   512  }

	st.b	[a15]1,d9
.L678:


	st.b	[a15+]2,d8
	loop	a13,.L63
.L679:


	ret
.L359:
	
__IfxQspi_calculateDelayConstants_function_end:
	.size	IfxQspi_calculateDelayConstants,__IfxQspi_calculateDelayConstants_function_end-IfxQspi_calculateDelayConstants
.L194:
	; End of function
	
	.calls	'IfxQspi_calculateDelayConstants','__f_ftouc'
	.calls	'IfxQspi_calcRealBaudrate','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculateBasicConfigurationValue','IfxQspi_calculateDelayConstants'
	.calls	'IfxQspi_calculateExtendedConfigurationValue','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculatePrescaler','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_calculateTimeQuantumLength','IfxScuCcu_getMaxFrequency'
	.calls	'IfxQspi_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxQspi_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxQspi_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxQspi_write16','.cocofun_1'
	.calls	'IfxQspi_write32','.cocofun_1'
	.calls	'IfxQspi_write8','.cocofun_1'
	.calls	'IfxQspi_calcRealBaudrate','',32
	.calls	'IfxQspi_calculateBasicConfigurationValue','',8
	.calls	'IfxQspi_calculateExtendedConfigurationValue','',0
	.calls	'IfxQspi_calculatePrescaler','',0
	.calls	'IfxQspi_calculateTimeQuantumLength','',0
	.calls	'IfxQspi_getAddress','',0
	.calls	'IfxQspi_getIndex','',0
	.calls	'IfxQspi_read16','',0
	.calls	'IfxQspi_read32','',0
	.calls	'IfxQspi_read8','',0
	.calls	'IfxQspi_recalcBasicConfiguration','',0
	.calls	'IfxQspi_resetModule','',0
	.calls	'IfxQspi_setSlaveSelectOutputControl','',0
	.calls	'IfxQspi_write16','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxQspi_write32','',0
	.calls	'IfxQspi_write8','',0
	.extern	IfxQspi_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	IfxScuCcu_getMaxFrequency
	.extern	__f_ftouc
	.calls	'IfxQspi_calculateDelayConstants','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L107:
	.word	89016
	.half	3
	.word	.L108
	.byte	4
.L106:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L109
	.byte	2,1,1,3
	.word	177
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	180
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L250:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	225
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	237
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	349
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	323
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	355
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	355
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	323
	.byte	6,0,7
	.byte	'unsigned int',0,4,7
.L232:
	.byte	7
	.byte	'int',0,4,5
.L347:
	.byte	7
	.byte	'unsigned char',0,1,8,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,11
	.byte	'SRPN',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,4,70,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	481
	.byte	4,2,35,0,0,14
	.word	771
	.byte	3
	.word	810
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	815
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	863
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	863
	.byte	16,0,2,35,0,0,12,6,247,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	879
	.byte	4,2,35,0,0
.L223:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,6,255,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1037
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,137,9,16,4,11
	.byte	'AE',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,6,135,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1281
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,6,175,15,25,12,13
	.byte	'CON0',0
	.word	975
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	1241
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1472
	.byte	4,2,35,8,0,14
	.word	1512
	.byte	3
	.word	1575
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,5,181,3,17,1,1,5
	.byte	'watchdog',0,5,181,3,65
	.word	1580
	.byte	5
	.byte	'password',0,5,181,3,82
	.word	1015
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,5,140,4,17,1,1,5
	.byte	'watchdog',0,5,140,4,63
	.word	1580
	.byte	5
	.byte	'password',0,5,140,4,80
	.word	1015
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,5,227,3,19
	.word	1015
	.byte	1,1,5
	.byte	'watchdog',0,5,227,3,74
	.word	1580
	.byte	6,0,15,8,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,7,141,6,31
	.word	1810
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,7,139,5,20
	.word	464
	.byte	1,1,6,0
.L258:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,7,161,6,19
	.word	1965
	.byte	1,1,5
	.byte	'address',0,7,161,6,55
	.word	1015
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,7,190,6,20
	.word	464
	.byte	1,1,5
	.byte	'address',0,7,190,6,70
	.word	1015
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,7,172,8,17,1,1,5
	.byte	'address',0,7,172,8,56
	.word	1965
	.byte	5
	.byte	'count',0,7,172,8,72
	.word	1965
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,10,143,3,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,181,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2196
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,10,169,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,133,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2512
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,10,110,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,148,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3083
	.byte	4,2,35,0,0,18,4
	.word	464
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,10,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,164,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3211
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,10,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,180,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3426
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,10,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,188,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3641
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,10,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	464
	.byte	5,0,2,35,3,0,12,10,172,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3858
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,10,118,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,156,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4078
	.byte	4,2,35,0,0,18,24
	.word	464
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,10,205,3,16,4,11
	.byte	'PD0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,205,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,10,226,3,16,4,11
	.byte	'PD8',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,213,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4705
	.byte	4,2,35,0,0,18,8
	.word	464
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,10,88,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,140,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5030
	.byte	4,2,35,0,0,18,12
	.word	464
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,10,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,197,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5370
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,10,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	441
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,189,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5736
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,10,206,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,12,10,149,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6022
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,10,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,12,10,165,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6169
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,10,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	441
	.byte	20,0,2,35,0,0,12,10,173,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6338
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,10,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,157,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6510
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,10,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	1015
	.byte	12,0,2,35,2,0,12,10,229,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6685
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,10,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,12,10,245,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6859
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,10,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,12,10,253,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7033
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,10,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,237,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7209
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,10,249,2,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,141,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7365
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,10,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,221,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7698
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,10,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,12,10,196,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8046
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,10,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,10,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,12,10,204,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8170
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	8254
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,10,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,10,213,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8434
	.byte	4,2,35,0,0,18,76
	.word	464
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,10,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,10,132,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8687
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,10,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,10,252,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8774
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,10,229,5,25,128,2,13
	.byte	'OUT',0
	.word	2472
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	3043
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3162
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3386
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3601
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3818
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	4038
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3202
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4352
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4392
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4665
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4981
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	5021
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5321
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5361
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5696
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5982
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	5021
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6129
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6298
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6470
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6645
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6819
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6993
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7169
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7325
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7658
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	8006
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5021
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	8130
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	8379
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8638
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8678
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8734
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	9301
	.byte	4,3,35,252,1,0,14
	.word	9341
	.byte	3
	.word	9944
	.byte	15,9,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,4
	.byte	'IfxPort_setPinModeInput',0,3,9,196,4,17,1,1,5
	.byte	'port',0,9,196,4,48
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,196,4,60
	.word	464
	.byte	5
	.byte	'mode',0,9,196,4,88
	.word	9954
	.byte	6,0,15,9,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,9,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,4
	.byte	'IfxPort_setPinModeOutput',0,3,9,202,4,17,1,1,5
	.byte	'port',0,9,202,4,49
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,202,4,61
	.word	464
	.byte	5
	.byte	'mode',0,9,202,4,90
	.word	10159
	.byte	5
	.byte	'index',0,9,202,4,114
	.word	10229
	.byte	6,0,15,9,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,9,208,4,17,1,1,5
	.byte	'port',0,9,208,4,44
	.word	9949
	.byte	5
	.byte	'pinIndex',0,9,208,4,56
	.word	464
	.byte	5
	.byte	'action',0,9,208,4,80
	.word	10542
	.byte	6,0,10
	.byte	'_Ifx_QSPI_CLC_Bits',0,12,127,16,4,11
	.byte	'DISR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,12,12,239,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10723
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_PISEL_Bits',0,12,254,1,16,4,11
	.byte	'MRIS',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SRIS',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'SCIS',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'SLSIS',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	441
	.byte	17,0,2,35,0,0,12,12,207,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10880
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ID_Bits',0,12,208,1,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,159,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11103
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_GLOBALCON_Bits',0,12,189,1,16,4,11
	.byte	'TQ',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'SI',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EXPECT',0,1
	.word	464
	.byte	4,2,2,35,1,11
	.byte	'LB',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'DEL0',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'STROBE',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'SRF',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'STIP',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'MS',0,1
	.word	464
	.byte	2,5,2,35,3,11
	.byte	'AREN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'RESETS',0,1
	.word	464
	.byte	4,0,2,35,3,0,12,12,143,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11226
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_GLOBALCON1_Bits',0,12,170,1,16,4,11
	.byte	'ERRORENS',0,2
	.word	1015
	.byte	9,7,2,35,0,11
	.byte	'TXEN',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'RXEN',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PT1EN',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PT2EN',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	2,1,2,35,1,11
	.byte	'USREN',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'TXFIFOINT',0,1
	.word	464
	.byte	2,6,2,35,2,11
	.byte	'RXFIFOINT',0,1
	.word	464
	.byte	2,4,2,35,2,11
	.byte	'PT1',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'PT2',0,2
	.word	1015
	.byte	3,6,2,35,2,11
	.byte	'TXFM',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'RXFM',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0,12,12,151,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11530
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_BACON_Bits',0,12,88,16,4,11
	.byte	'LAST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'IPRE',0,1
	.word	464
	.byte	3,4,2,35,0,11
	.byte	'IDLE',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'LPRE',0,2
	.word	1015
	.byte	3,6,2,35,0,11
	.byte	'LEAD',0,1
	.word	464
	.byte	3,3,2,35,1,11
	.byte	'TPRE',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'TRAIL',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'PARTYP',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'UINT',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'MSB',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'BYTE',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'DL',0,2
	.word	1015
	.byte	5,4,2,35,2,11
	.byte	'CS',0,1
	.word	464
	.byte	4,0,2,35,3,0
.L268:
	.byte	12,12,215,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11856
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ECON_Bits',0,12,143,1,16,4,11
	.byte	'Q',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'A',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'B',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'C',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'CPH',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'CPOL',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PAREN',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	441
	.byte	15,2,2,35,0,11
	.byte	'BE',0,1
	.word	464
	.byte	2,0,2,35,3,0
.L279:
	.byte	12,12,255,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12129
	.byte	4,2,35,0,0
.L256:
	.byte	18,32
	.word	12293
	.byte	19,7,0,10
	.byte	'_Ifx_QSPI_STATUS_Bits',0,12,169,2,16,4,11
	.byte	'ERRORFLAGS',0,2
	.word	1015
	.byte	9,7,2,35,0,11
	.byte	'TXF',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'RXF',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PT1F',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PT2F',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	2,1,2,35,1,11
	.byte	'USRF',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'TXFIFOLEVEL',0,1
	.word	464
	.byte	3,5,2,35,2,11
	.byte	'RXFIFOLEVEL',0,1
	.word	464
	.byte	3,2,2,35,2,11
	.byte	'SLAVESEL',0,2
	.word	1015
	.byte	4,6,2,35,2,11
	.byte	'RPV',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'TPV',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'PHASE',0,1
	.word	464
	.byte	4,0,2,35,3,0,12,12,239,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12342
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_STATUS1_Bits',0,12,158,2,16,4,11
	.byte	'BITCOUNT',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	20,4,2,35,0,11
	.byte	'BRDEN',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BRD',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'SPDEN',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'SPD',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,247,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12647
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_SSOC_Bits',0,12,151,2,16,4,11
	.byte	'AOL',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'OEN',0,2
	.word	1015
	.byte	16,0,2,35,2,0
.L357:
	.byte	12,12,231,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12823
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_FLAGSCLEAR_Bits',0,12,157,1,16,4,11
	.byte	'ERRORCLEARS',0,2
	.word	1015
	.byte	9,7,2,35,0,11
	.byte	'TXC',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'RXC',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PT1C',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'PT2C',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	2,1,2,35,1,11
	.byte	'USRC',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,135,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12920
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_XXLCON_Bits',0,12,187,2,16,4,11
	.byte	'XDL',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'BYTECOUNT',0,2
	.word	1015
	.byte	16,0,2,35,2,0,12,12,255,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13140
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_MIXENTRY_Bits',0,12,238,1,16,4,11
	.byte	'E',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,191,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13245
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_BACONENTRY_Bits',0,12,106,16,4,11
	.byte	'E',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,223,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13329
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_DATAENTRY_Bits',0,12,137,1,16,4,11
	.byte	'E',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,247,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13414
	.byte	4,2,35,0,0,18,32
	.word	13459
	.byte	19,7,0,10
	.byte	'_Ifx_QSPI_RXEXIT_Bits',0,12,139,2,16,4,11
	.byte	'E',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,215,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13508
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_RXEXITD_Bits',0,12,145,2,16,4,11
	.byte	'E',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,223,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13590
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_CAPCON_Bits',0,12,112,16,4,11
	.byte	'CAP',0,2
	.word	1015
	.byte	15,1,2,35,0,11
	.byte	'OVF',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EDGECON',0,1
	.word	464
	.byte	2,6,2,35,2,11
	.byte	'INS',0,1
	.word	464
	.byte	2,4,2,35,2,11
	.byte	'EN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	1015
	.byte	7,4,2,35,2,11
	.byte	'CAPC',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'CAPS',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'CAPF',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'CAPSEL',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,231,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13673
	.byte	4,2,35,0,0,18,68
	.word	464
	.byte	19,67,0,10
	.byte	'_Ifx_QSPI_OCS_Bits',0,12,244,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0,12,12,199,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13917
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRSTCLR_Bits',0,12,231,1,16,4,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,12,12,183,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14078
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRST1_Bits',0,12,224,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,12,12,175,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14185
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_KRST0_Bits',0,12,216,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,12,12,167,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14290
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ACCEN1_Bits',0,12,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,12,12,207,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14414
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI_ACCEN0_Bits',0,12,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,12,12,199,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14504
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_QSPI',0,12,143,4,25,128,2,13
	.byte	'CLC',0
	.word	10840
	.byte	4,2,35,0,13
	.byte	'PISEL',0
	.word	11063
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11186
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'GLOBALCON',0
	.word	11490
	.byte	4,2,35,16,13
	.byte	'GLOBALCON1',0
	.word	11816
	.byte	4,2,35,20,13
	.byte	'BACON',0
	.word	12089
	.byte	4,2,35,24,13
	.byte	'reserved_1C',0
	.word	3202
	.byte	4,2,35,28,13
	.byte	'ECON',0
	.word	12333
	.byte	32,2,35,32,13
	.byte	'STATUS',0
	.word	12607
	.byte	4,2,35,64,13
	.byte	'STATUS1',0
	.word	12783
	.byte	4,2,35,68,13
	.byte	'SSOC',0
	.word	12880
	.byte	4,2,35,72,13
	.byte	'reserved_4C',0
	.word	5021
	.byte	8,2,35,76,13
	.byte	'FLAGSCLEAR',0
	.word	13100
	.byte	4,2,35,84,13
	.byte	'XXLCON',0
	.word	13205
	.byte	4,2,35,88,13
	.byte	'MIXENTRY',0
	.word	13289
	.byte	4,2,35,92,13
	.byte	'BACONENTRY',0
	.word	13374
	.byte	4,2,35,96,13
	.byte	'DATAENTRY',0
	.word	13499
	.byte	32,2,35,100,13
	.byte	'reserved_84',0
	.word	5361
	.byte	12,3,35,132,1,13
	.byte	'RXEXIT',0
	.word	13550
	.byte	4,3,35,144,1,13
	.byte	'RXEXITD',0
	.word	13633
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	5021
	.byte	8,3,35,152,1,13
	.byte	'CAPCON',0
	.word	13868
	.byte	4,3,35,160,1,13
	.byte	'reserved_A4',0
	.word	13908
	.byte	68,3,35,164,1,13
	.byte	'OCS',0
	.word	14038
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	14145
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	14250
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	14374
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	14464
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	15034
	.byte	4,3,35,252,1,0,14
	.word	15074
.L201:
	.byte	3
	.word	15618
.L304:
	.byte	8
	.byte	'IfxQspi_getModuleFrequency',0,3,11,211,7,18
	.word	237
	.byte	1,1
.L306:
	.byte	5
	.byte	'qspi',0,11,211,7,55
	.word	15623
.L308:
	.byte	6,0,15,11,179,1,9,1,16
	.byte	'IfxQspi_Phase_wait',0,0,16
	.byte	'IfxQspi_Phase_idleA',0,1,16
	.byte	'IfxQspi_Phase_idleB',0,2,16
	.byte	'IfxQspi_Phase_lead',0,3,16
	.byte	'IfxQspi_Phase_data',0,4,16
	.byte	'IfxQspi_Phase_trail',0,5,16
	.byte	'IfxQspi_Phase_expect',0,6,16
	.byte	'IfxQspi_Phase_leadStrobe',0,7,16
	.byte	'IfxQspi_Phase_trailStrobe',0,8,0,8
	.byte	'IfxQspi_getPhase',0,3,11,219,7,26
	.word	15683
	.byte	1,1,5
	.byte	'qspi',0,11,219,7,53
	.word	15623
	.byte	6,0
.L294:
	.byte	8
	.byte	'IfxQspi_getTimeQuantaFrequency',0,3,11,244,7,18
	.word	237
	.byte	1,1
.L296:
	.byte	5
	.byte	'qspi',0,11,244,7,59
	.word	15623
.L298:
	.byte	17,6,0,0,20
	.word	457
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	16003
	.byte	0,14
	.word	441
	.byte	3
	.word	441
	.byte	23
	.byte	'__cmpswapw',0
	.word	16045
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	16050
	.byte	24
	.byte	'value',0
	.word	441
	.byte	24
	.byte	'compare',0
	.word	441
	.byte	0,23
	.byte	'__max',0
	.word	457
	.byte	1,1,1,1,22
	.word	457
	.byte	22
	.word	457
	.byte	0,25
	.word	185
	.byte	26
	.word	211
	.byte	6,0,25
	.word	246
	.byte	26
	.word	278
	.byte	6,0,25
	.word	291
	.byte	6,0,25
	.word	360
	.byte	26
	.word	379
	.byte	6,0,25
	.word	395
	.byte	26
	.word	410
	.byte	26
	.word	424
	.byte	6,0,25
	.word	820
	.byte	26
	.word	848
	.byte	6,0,25
	.word	1585
	.byte	26
	.word	1625
	.byte	26
	.word	1643
	.byte	6,0,25
	.word	1663
	.byte	26
	.word	1701
	.byte	26
	.word	1719
	.byte	6,0,27
	.byte	'IfxScuWdt_clearCpuEndinit',0,5,217,1,17,1,1,1,1,5
	.byte	'password',0,5,217,1,50
	.word	1015
	.byte	0,27
	.byte	'IfxScuWdt_setCpuEndinit',0,5,239,1,17,1,1,1,1,5
	.byte	'password',0,5,239,1,48
	.word	1015
	.byte	0,25
	.word	1739
	.byte	26
	.word	1790
	.byte	6,0,28
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,5,129,3,19
	.word	1015
	.byte	1,1,1,1,25
	.word	1889
	.byte	6,0,25
	.word	1923
	.byte	6,0,25
	.word	1986
	.byte	26
	.word	2027
	.byte	6,0,25
	.word	2046
	.byte	26
	.word	2101
	.byte	6,0,25
	.word	2120
	.byte	26
	.word	2160
	.byte	26
	.word	2177
	.byte	17,6,0,0,25
	.word	10079
	.byte	26
	.word	10111
	.byte	26
	.word	10125
	.byte	26
	.word	10143
	.byte	6,0,25
	.word	10446
	.byte	26
	.word	10479
	.byte	26
	.word	10493
	.byte	26
	.word	10511
	.byte	26
	.word	10525
	.byte	6,0,25
	.word	10645
	.byte	26
	.word	10673
	.byte	26
	.word	10687
	.byte	26
	.word	10705
	.byte	6,0,28
	.byte	'IfxScuCcu_getMaxFrequency',0,13,253,6,20
	.word	237
	.byte	1,1,1,1
.L203:
	.byte	3
	.word	1015
.L205:
	.byte	7
	.byte	'short int',0,2,5,14
	.word	13550
.L207:
	.byte	3
	.word	16588
.L211:
	.byte	3
	.word	1965
.L217:
	.byte	3
	.word	464
.L227:
	.byte	15,11,95,9,1,16
	.byte	'IfxQspi_ChannelId_0',0,0,16
	.byte	'IfxQspi_ChannelId_1',0,1,16
	.byte	'IfxQspi_ChannelId_2',0,2,16
	.byte	'IfxQspi_ChannelId_3',0,3,16
	.byte	'IfxQspi_ChannelId_4',0,4,16
	.byte	'IfxQspi_ChannelId_5',0,5,16
	.byte	'IfxQspi_ChannelId_6',0,6,16
	.byte	'IfxQspi_ChannelId_7',0,7,16
	.byte	'IfxQspi_ChannelId_8',0,8,16
	.byte	'IfxQspi_ChannelId_9',0,9,16
	.byte	'IfxQspi_ChannelId_10',0,10,16
	.byte	'IfxQspi_ChannelId_11',0,11,16
	.byte	'IfxQspi_ChannelId_12',0,12,16
	.byte	'IfxQspi_ChannelId_13',0,13,16
	.byte	'IfxQspi_ChannelId_14',0,14,0,14
	.word	13459
.L234:
	.byte	3
	.word	16949
	.byte	25
	.word	15628
	.byte	26
	.word	15667
	.byte	6,0,25
	.word	15897
	.byte	26
	.word	15926
	.byte	6,0,25
	.word	15942
	.byte	26
	.word	15985
	.byte	17,29
	.word	15628
	.byte	26
	.word	15667
	.byte	30
	.word	15681
	.byte	0,6,0,0
.L261:
	.byte	20
	.word	16608
	.byte	31,14,189,1,9,16,11
	.byte	'enabled',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'autoCS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'loopback',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'clockPolarity',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'shiftClock',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'dataHeading',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'dataWidth',0,2
	.word	1015
	.byte	6,4,2,35,0,11
	.byte	'csActiveLevel',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'parityCheck',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'parityMode',0,1
	.word	464
	.byte	1,1,2,35,1,13
	.byte	'csInactiveDelay',0
	.word	1965
	.byte	4,2,35,2,13
	.byte	'csLeadDelay',0
	.word	1965
	.byte	4,2,35,6,13
	.byte	'csTrailDelay',0
	.word	1965
	.byte	4,2,35,10,0,20
	.word	17018
.L263:
	.byte	3
	.word	17311
.L265:
	.byte	20
	.word	237
	.byte	31,11,181,2,9,2,13
	.byte	'pre',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'delay',0
	.word	464
	.byte	1,2,35,1,0
.L270:
	.byte	18,6
	.word	17326
	.byte	19,2,0
.L274:
	.byte	20
	.word	464
	.byte	32
	.byte	'pvoid',0,15,57,28
	.word	355
	.byte	31,14,118,18,1,11
	.byte	'onTransfer',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'byteAccess',0,1
	.word	464
	.byte	1,6,2,35,0,0,14
	.word	17389
	.byte	31,14,179,1,9,4,11
	.byte	'baudrate',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'phase',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'receive',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'transmit',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved',0,4
	.word	1965
	.byte	28,0,2,35,0,0,7
	.byte	'long int',0,4,5,31,14,124,9,8,13
	.byte	'data',0
	.word	355
	.byte	4,2,35,0,13
	.byte	'remaining',0
	.word	16575
	.byte	2,2,35,4,0,33,1,1,22
	.word	355
	.byte	0,3
	.word	17598
	.byte	32
	.byte	'SpiIf_Cbk',0,14,211,1,16
	.word	17607
	.byte	3
	.word	.L453-.L107
	.byte	33,1,1,22
	.word	17631
	.byte	0,3
	.word	17636
	.byte	32
	.byte	'TxRxHandler',0,14,212,1,16
	.word	17645
.L453:
	.byte	10
	.byte	'SpiIf_Ch_',0,14,214,1,8,48,13
	.byte	'driver',0
	.word	.L454-.L107
	.byte	4,2,35,0,13
	.byte	'flags',0
	.word	17439
	.byte	1,2,35,4,13
	.byte	'errorChecks',0
	.word	17444
	.byte	4,2,35,6,13
	.byte	'baudrate',0
	.word	17547
	.byte	4,2,35,10,13
	.byte	'tx',0
	.word	17559
	.byte	8,2,35,16,13
	.byte	'rx',0
	.word	17559
	.byte	8,2,35,24,13
	.byte	'onExchangeEnd',0
	.word	17612
	.byte	4,2,35,32,13
	.byte	'callbackData',0
	.word	355
	.byte	4,2,35,36,13
	.byte	'txHandler',0
	.word	17650
	.byte	4,2,35,40,13
	.byte	'rxHandler',0
	.word	17650
	.byte	4,2,35,44,0,3
	.word	17671
	.byte	15,14,69,9,1,16
	.byte	'SpiIf_Status_ok',0,0,16
	.byte	'SpiIf_Status_busy',0,1,16
	.byte	'SpiIf_Status_unknown',0,2,0,20
	.word	349
	.byte	3
	.word	17937
	.byte	34
	.word	17870
	.byte	1,1,22
	.word	17631
	.byte	22
	.word	17942
	.byte	22
	.word	355
	.byte	22
	.word	16575
	.byte	0,3
	.word	17947
	.byte	32
	.byte	'SpiIf_Exchange',0,14,138,1,24
	.word	17975
	.byte	34
	.word	17870
	.byte	1,1,22
	.word	17631
	.byte	0,3
	.word	18004
	.byte	32
	.byte	'SpiIf_GetStatus',0,14,139,1,24
	.word	18017
	.byte	3
	.word	.L455-.L107
	.byte	33,1,1,22
	.word	18047
	.byte	0,3
	.word	18052
	.byte	32
	.byte	'SpiIf_OnEvent',0,14,140,1,24
	.word	18061
	.byte	31,14,144,1,9,20,13
	.byte	'exchange',0
	.word	17980
	.byte	4,2,35,0,13
	.byte	'getStatus',0
	.word	18022
	.byte	4,2,35,4,13
	.byte	'onTx',0
	.word	18066
	.byte	4,2,35,8,13
	.byte	'onRx',0
	.word	18066
	.byte	4,2,35,12,13
	.byte	'onError',0
	.word	18066
	.byte	4,2,35,16,0
.L455:
	.byte	10
	.byte	'SpiIf_',0,14,153,1,8,40,13
	.byte	'driver',0
	.word	17375
	.byte	4,2,35,0,13
	.byte	'sending',0
	.word	1965
	.byte	4,2,35,4,13
	.byte	'activeChannel',0
	.word	17865
	.byte	4,2,35,8,13
	.byte	'txCount',0
	.word	1965
	.byte	4,2,35,12,13
	.byte	'rxCount',0
	.word	1965
	.byte	4,2,35,16,13
	.byte	'functions',0
	.word	18089
	.byte	20,2,35,20,0
.L454:
	.byte	3
	.word	18178
	.byte	10
	.byte	'SpiIf_ChConfig_',0,14,228,1,8,28,13
	.byte	'driver',0
	.word	18301
	.byte	4,2,35,0,13
	.byte	'baudrate',0
	.word	237
	.byte	4,2,35,4,13
	.byte	'mode',0
	.word	17018
	.byte	16,2,35,8,13
	.byte	'errorChecks',0
	.word	17444
	.byte	4,2,35,24,0,20
	.word	18306
.L276:
	.byte	3
	.word	18398
	.byte	3
	.word	349
	.byte	3
	.word	17598
	.byte	3
	.word	17636
	.byte	3
	.word	17947
	.byte	3
	.word	18004
	.byte	3
	.word	18052
.L289:
	.byte	7
	.byte	'char',0,1,6
.L337:
	.byte	15,16,80,9,1,16
	.byte	'IfxQspi_Index_none',0,127,16
	.byte	'IfxQspi_Index_0',0,0,16
	.byte	'IfxQspi_Index_1',0,1,16
	.byte	'IfxQspi_Index_2',0,2,16
	.byte	'IfxQspi_Index_3',0,3,0,14
	.word	15074
	.byte	20
	.word	18545
.L360:
	.byte	3
	.word	18550
.L362:
	.byte	20
	.word	16608
.L365:
	.byte	3
	.word	17326
	.byte	32
	.byte	'__wchar_t',0,17,1,1
	.word	16575
	.byte	32
	.byte	'__size_t',0,17,1,1
	.word	441
	.byte	32
	.byte	'__ptrdiff_t',0,17,1,1
	.word	457
	.byte	35,1,3
	.word	18625
	.byte	32
	.byte	'__codeptr',0,17,1,1
	.word	18627
	.byte	32
	.byte	'boolean',0,18,101,29
	.word	464
	.byte	32
	.byte	'uint8',0,18,105,29
	.word	464
	.byte	32
	.byte	'uint16',0,18,109,29
	.word	1015
	.byte	32
	.byte	'uint32',0,18,113,29
	.word	1965
	.byte	32
	.byte	'uint64',0,18,118,29
	.word	323
	.byte	32
	.byte	'sint16',0,18,126,29
	.word	16575
	.byte	32
	.byte	'sint32',0,18,131,1,29
	.word	17547
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,18,139,1,29
	.word	18756
	.byte	32
	.byte	'float32',0,18,168,1,29
	.word	237
	.byte	32
	.byte	'Ifx_TickTime',0,15,79,28
	.word	18756
	.byte	32
	.byte	'Ifx_SizeT',0,15,92,16
	.word	16575
	.byte	32
	.byte	'Ifx_Priority',0,15,103,16
	.word	1015
	.byte	15,15,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,15,140,1,3
	.word	18866
	.byte	14
	.word	349
	.byte	3
	.word	19004
	.byte	31,15,143,1,9,8,13
	.byte	'module',0
	.word	19009
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	17547
	.byte	4,2,35,4,0,32
	.byte	'IfxModule_IndexMap',0,15,147,1,3
	.word	19014
	.byte	32
	.byte	'Ifx_QSPI_ACCEN0_Bits',0,12,79,3
	.word	14504
	.byte	32
	.byte	'Ifx_QSPI_ACCEN1_Bits',0,12,85,3
	.word	14414
	.byte	32
	.byte	'Ifx_QSPI_BACON_Bits',0,12,103,3
	.word	11856
	.byte	32
	.byte	'Ifx_QSPI_BACONENTRY_Bits',0,12,109,3
	.word	13329
	.byte	32
	.byte	'Ifx_QSPI_CAPCON_Bits',0,12,124,3
	.word	13673
	.byte	32
	.byte	'Ifx_QSPI_CLC_Bits',0,12,134,1,3
	.word	10723
	.byte	32
	.byte	'Ifx_QSPI_DATAENTRY_Bits',0,12,140,1,3
	.word	13414
	.byte	32
	.byte	'Ifx_QSPI_ECON_Bits',0,12,154,1,3
	.word	12129
	.byte	32
	.byte	'Ifx_QSPI_FLAGSCLEAR_Bits',0,12,167,1,3
	.word	12920
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON1_Bits',0,12,186,1,3
	.word	11530
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON_Bits',0,12,205,1,3
	.word	11226
	.byte	32
	.byte	'Ifx_QSPI_ID_Bits',0,12,213,1,3
	.word	11103
	.byte	32
	.byte	'Ifx_QSPI_KRST0_Bits',0,12,221,1,3
	.word	14290
	.byte	32
	.byte	'Ifx_QSPI_KRST1_Bits',0,12,228,1,3
	.word	14185
	.byte	32
	.byte	'Ifx_QSPI_KRSTCLR_Bits',0,12,235,1,3
	.word	14078
	.byte	32
	.byte	'Ifx_QSPI_MIXENTRY_Bits',0,12,241,1,3
	.word	13245
	.byte	32
	.byte	'Ifx_QSPI_OCS_Bits',0,12,251,1,3
	.word	13917
	.byte	32
	.byte	'Ifx_QSPI_PISEL_Bits',0,12,136,2,3
	.word	10880
	.byte	32
	.byte	'Ifx_QSPI_RXEXIT_Bits',0,12,142,2,3
	.word	13508
	.byte	32
	.byte	'Ifx_QSPI_RXEXITD_Bits',0,12,148,2,3
	.word	13590
	.byte	32
	.byte	'Ifx_QSPI_SSOC_Bits',0,12,155,2,3
	.word	12823
	.byte	32
	.byte	'Ifx_QSPI_STATUS1_Bits',0,12,166,2,3
	.word	12647
	.byte	32
	.byte	'Ifx_QSPI_STATUS_Bits',0,12,184,2,3
	.word	12342
	.byte	32
	.byte	'Ifx_QSPI_XXLCON_Bits',0,12,191,2,3
	.word	13140
	.byte	32
	.byte	'Ifx_QSPI_ACCEN0',0,12,204,2,3
	.word	15034
	.byte	32
	.byte	'Ifx_QSPI_ACCEN1',0,12,212,2,3
	.word	14464
	.byte	32
	.byte	'Ifx_QSPI_BACON',0,12,220,2,3
	.word	12089
	.byte	32
	.byte	'Ifx_QSPI_BACONENTRY',0,12,228,2,3
	.word	13374
	.byte	32
	.byte	'Ifx_QSPI_CAPCON',0,12,236,2,3
	.word	13868
	.byte	32
	.byte	'Ifx_QSPI_CLC',0,12,244,2,3
	.word	10840
	.byte	32
	.byte	'Ifx_QSPI_DATAENTRY',0,12,252,2,3
	.word	13459
	.byte	32
	.byte	'Ifx_QSPI_ECON',0,12,132,3,3
	.word	12293
	.byte	32
	.byte	'Ifx_QSPI_FLAGSCLEAR',0,12,140,3,3
	.word	13100
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON',0,12,148,3,3
	.word	11490
	.byte	32
	.byte	'Ifx_QSPI_GLOBALCON1',0,12,156,3,3
	.word	11816
	.byte	32
	.byte	'Ifx_QSPI_ID',0,12,164,3,3
	.word	11186
	.byte	32
	.byte	'Ifx_QSPI_KRST0',0,12,172,3,3
	.word	14374
	.byte	32
	.byte	'Ifx_QSPI_KRST1',0,12,180,3,3
	.word	14250
	.byte	32
	.byte	'Ifx_QSPI_KRSTCLR',0,12,188,3,3
	.word	14145
	.byte	32
	.byte	'Ifx_QSPI_MIXENTRY',0,12,196,3,3
	.word	13289
	.byte	32
	.byte	'Ifx_QSPI_OCS',0,12,204,3,3
	.word	14038
	.byte	32
	.byte	'Ifx_QSPI_PISEL',0,12,212,3,3
	.word	11063
	.byte	32
	.byte	'Ifx_QSPI_RXEXIT',0,12,220,3,3
	.word	13550
	.byte	32
	.byte	'Ifx_QSPI_RXEXITD',0,12,228,3,3
	.word	13633
	.byte	32
	.byte	'Ifx_QSPI_SSOC',0,12,236,3,3
	.word	12880
	.byte	32
	.byte	'Ifx_QSPI_STATUS',0,12,244,3,3
	.word	12607
	.byte	32
	.byte	'Ifx_QSPI_STATUS1',0,12,252,3,3
	.word	12783
	.byte	32
	.byte	'Ifx_QSPI_XXLCON',0,12,132,4,3
	.word	13205
	.byte	14
	.word	15074
	.byte	32
	.byte	'Ifx_QSPI',0,12,175,4,3
	.word	20405
	.byte	32
	.byte	'IfxQspi_Index',0,16,87,3
	.word	18446
	.byte	18,32
	.word	19014
	.byte	19,3,0,20
	.word	20450
	.byte	36
	.byte	'IfxQspi_cfg_indexMap',0,16,93,41
	.word	20459
	.byte	1,1,15,19,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0,32
	.byte	'IfxSrc_Tos',0,19,74,3
	.word	20495
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	481
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	771
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	20620
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	20652
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,13
	.byte	'TX',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,0,14
	.word	20678
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	20737
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,13
	.byte	'SBSRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	20765
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	20802
	.byte	18,64
	.word	771
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,13
	.byte	'INT',0
	.word	20830
	.byte	64,2,35,0,0,14
	.word	20839
	.byte	32
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	20871
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	20896
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	20968
	.byte	18,8
	.word	771
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,13
	.byte	'SR',0
	.word	20994
	.byte	8,2,35,0,0,14
	.word	21003
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	21039
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,13
	.byte	'MI',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	21069
	.byte	32
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	21142
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,13
	.byte	'SBSRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	21168
	.byte	32
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	21203
	.byte	18,192,1
	.word	771
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	5361
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	21229
	.byte	192,1,2,35,16,0,14
	.word	21239
	.byte	32
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	21306
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,13
	.byte	'SRM',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	771
	.byte	4,2,35,4,0,14
	.word	21332
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	21380
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	21408
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	21441
	.byte	18,40
	.word	464
	.byte	19,39,0,10
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,13
	.byte	'INT',0
	.word	20994
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	20994
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	20994
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	20994
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	771
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	771
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	21468
	.byte	40,2,35,40,0,14
	.word	21477
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	21604
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	21631
	.byte	32
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	21663
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	21689
	.byte	32
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	21721
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,13
	.byte	'DONE',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	771
	.byte	4,2,35,8,0,14
	.word	21747
	.byte	32
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	21807
	.byte	18,16
	.word	464
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	21833
	.byte	16,2,35,16,0,14
	.word	21842
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	21936
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,13
	.byte	'CIRQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4392
	.byte	24,2,35,24,0,14
	.word	21963
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	22080
	.byte	18,12
	.word	771
	.byte	19,2,0,18,32
	.word	771
	.byte	19,7,0,18,32
	.word	22117
	.byte	19,0,0,18,88
	.word	464
	.byte	19,87,0,18,108
	.word	771
	.byte	19,26,0,18,96
	.word	464
	.byte	19,95,0,18,96
	.word	22117
	.byte	19,2,0,18,160,3
	.word	464
	.byte	19,159,3,0,18,64
	.word	22117
	.byte	19,1,0,18,192,3
	.word	464
	.byte	19,191,3,0,18,16
	.word	771
	.byte	19,3,0,18,64
	.word	22202
	.byte	19,3,0,18,192,2
	.word	464
	.byte	19,191,2,0,18,52
	.word	464
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	22108
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	3202
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	771
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	20994
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	5021
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	22126
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	22135
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	22144
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	22153
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	771
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	5361
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	22162
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	22171
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	22162
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	22171
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	22182
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	22191
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	22211
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	22220
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	22108
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	22231
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	22108
	.byte	12,3,35,192,18,0,14
	.word	22240
	.byte	32
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	22700
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	22726
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	22759
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,13
	.byte	'COK',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	22786
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	22859
	.byte	18,56
	.word	464
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,13
	.byte	'BREQ',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	771
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	22886
	.byte	56,2,35,24,0,14
	.word	22895
	.byte	32
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	23018
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	23044
	.byte	32
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	23076
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	771
	.byte	4,2,35,16,0,14
	.word	23102
	.byte	32
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	23187
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	23213
	.byte	32
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	23245
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,13
	.byte	'SR',0
	.word	22117
	.byte	32,2,35,0,0,14
	.word	23271
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	23304
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,13
	.byte	'SR',0
	.word	22117
	.byte	32,2,35,0,0,14
	.word	23331
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	23365
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,13
	.byte	'TX',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	771
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	771
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	771
	.byte	4,2,35,20,0,14
	.word	23393
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	23486
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,13
	.byte	'SR',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	23513
	.byte	32
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	23545
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,13
	.byte	'DTS',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	22202
	.byte	16,2,35,4,0,14
	.word	23571
	.byte	32
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	23617
	.byte	18,24
	.word	771
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,13
	.byte	'SR',0
	.word	23643
	.byte	24,2,35,0,0,14
	.word	23652
	.byte	32
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	23685
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,13
	.byte	'SR',0
	.word	22108
	.byte	12,2,35,0,0,14
	.word	23712
	.byte	32
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	23744
	.byte	10
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,0,14
	.word	23770
	.byte	32
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	23816
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	23842
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	23917
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,13
	.byte	'SR0',0
	.word	771
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	771
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	771
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	771
	.byte	4,2,35,12,0,14
	.word	23946
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	24020
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,13
	.byte	'SRC',0
	.word	771
	.byte	4,2,35,0,0,14
	.word	24048
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	24082
	.byte	18,4
	.word	20620
	.byte	19,0,0,14
	.word	24109
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,13
	.byte	'AGBT',0
	.word	24118
	.byte	4,2,35,0,0,14
	.word	24123
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	24159
	.byte	18,48
	.word	20678
	.byte	19,3,0,14
	.word	24187
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	24196
	.byte	48,2,35,0,0,14
	.word	24201
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	24241
	.byte	14
	.word	20765
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,13
	.byte	'SPB',0
	.word	24271
	.byte	4,2,35,0,0,14
	.word	24276
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	24310
	.byte	18,64
	.word	20839
	.byte	19,0,0,14
	.word	24337
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,13
	.byte	'CAN',0
	.word	24346
	.byte	64,2,35,0,0,14
	.word	24351
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	24385
	.byte	18,32
	.word	20896
	.byte	19,1,0,14
	.word	24412
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,13
	.byte	'CCU6',0
	.word	24421
	.byte	32,2,35,0,0,14
	.word	24426
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	24462
	.byte	14
	.word	21003
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	24490
	.byte	8,2,35,0,0,14
	.word	24495
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	24539
	.byte	18,16
	.word	21069
	.byte	19,0,0,14
	.word	24571
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,13
	.byte	'CIF',0
	.word	24580
	.byte	16,2,35,0,0,14
	.word	24585
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	24619
	.byte	18,8
	.word	21168
	.byte	19,1,0,14
	.word	24646
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,13
	.byte	'CPU',0
	.word	24655
	.byte	8,2,35,0,0,14
	.word	24660
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	24694
	.byte	18,208,1
	.word	21239
	.byte	19,0,0,14
	.word	24721
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,13
	.byte	'DMA',0
	.word	24731
	.byte	208,1,2,35,0,0,14
	.word	24736
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	24772
	.byte	14
	.word	21332
	.byte	14
	.word	21332
	.byte	14
	.word	21332
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,13
	.byte	'DSADC0',0
	.word	24799
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	5021
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	24804
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	24809
	.byte	8,2,35,24,0,14
	.word	24814
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	24905
	.byte	18,4
	.word	21408
	.byte	19,0,0,14
	.word	24934
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,13
	.byte	'EMEM',0
	.word	24943
	.byte	4,2,35,0,0,14
	.word	24948
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	24984
	.byte	18,80
	.word	21477
	.byte	19,0,0,14
	.word	25012
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,13
	.byte	'ERAY',0
	.word	25021
	.byte	80,2,35,0,0,14
	.word	25026
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	25062
	.byte	18,4
	.word	21631
	.byte	19,0,0,14
	.word	25090
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,13
	.byte	'ETH',0
	.word	25099
	.byte	4,2,35,0,0,14
	.word	25104
	.byte	32
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	25138
	.byte	18,4
	.word	21689
	.byte	19,0,0,14
	.word	25165
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,13
	.byte	'FCE',0
	.word	25174
	.byte	4,2,35,0,0,14
	.word	25179
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	25213
	.byte	18,12
	.word	21747
	.byte	19,0,0,14
	.word	25240
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,13
	.byte	'FFT',0
	.word	25249
	.byte	12,2,35,0,0,14
	.word	25254
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	25288
	.byte	18,64
	.word	21842
	.byte	19,1,0,14
	.word	25315
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,13
	.byte	'GPSR',0
	.word	25324
	.byte	64,2,35,0,0,14
	.word	25329
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	25365
	.byte	18,48
	.word	21963
	.byte	19,0,0,14
	.word	25393
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,13
	.byte	'GPT12',0
	.word	25402
	.byte	48,2,35,0,0,14
	.word	25407
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	25445
	.byte	18,204,18
	.word	22240
	.byte	19,0,0,14
	.word	25474
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,13
	.byte	'GTM',0
	.word	25484
	.byte	204,18,2,35,0,0,14
	.word	25489
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	25525
	.byte	18,4
	.word	22726
	.byte	19,0,0,14
	.word	25552
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,13
	.byte	'HSCT',0
	.word	25561
	.byte	4,2,35,0,0,14
	.word	25566
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	25602
	.byte	18,64
	.word	22786
	.byte	19,3,0,14
	.word	25630
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,13
	.byte	'HSSL',0
	.word	25639
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	771
	.byte	4,2,35,64,0,14
	.word	25644
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	25693
	.byte	18,80
	.word	22895
	.byte	19,0,0,14
	.word	25721
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,13
	.byte	'I2C',0
	.word	25730
	.byte	80,2,35,0,0,14
	.word	25735
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	25769
	.byte	18,4
	.word	23044
	.byte	19,0,0,14
	.word	25796
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,13
	.byte	'LMU',0
	.word	25805
	.byte	4,2,35,0,0,14
	.word	25810
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	25844
	.byte	18,40
	.word	23102
	.byte	19,1,0,14
	.word	25871
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,13
	.byte	'MSC',0
	.word	25880
	.byte	40,2,35,0,0,14
	.word	25885
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	25919
	.byte	18,8
	.word	23213
	.byte	19,1,0,14
	.word	25946
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,13
	.byte	'PMU',0
	.word	25955
	.byte	8,2,35,0,0,14
	.word	25960
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	25994
	.byte	18,32
	.word	23271
	.byte	19,0,0,14
	.word	26021
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,13
	.byte	'PSI5',0
	.word	26030
	.byte	32,2,35,0,0,14
	.word	26035
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	26071
	.byte	18,32
	.word	23331
	.byte	19,0,0,14
	.word	26099
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,13
	.byte	'PSI5S',0
	.word	26108
	.byte	32,2,35,0,0,14
	.word	26113
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	26151
	.byte	18,96
	.word	23393
	.byte	19,3,0,14
	.word	26180
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,13
	.byte	'QSPI',0
	.word	26189
	.byte	96,2,35,0,0,14
	.word	26194
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	26230
	.byte	18,4
	.word	23513
	.byte	19,0,0,14
	.word	26258
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,13
	.byte	'SCR',0
	.word	26267
	.byte	4,2,35,0,0,14
	.word	26272
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	26306
	.byte	14
	.word	23571
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,13
	.byte	'SCU',0
	.word	26333
	.byte	20,2,35,0,0,14
	.word	26338
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	26372
	.byte	18,24
	.word	23652
	.byte	19,0,0,14
	.word	26399
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,13
	.byte	'SENT',0
	.word	26408
	.byte	24,2,35,0,0,14
	.word	26413
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	26449
	.byte	18,12
	.word	23712
	.byte	19,0,0,14
	.word	26477
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,13
	.byte	'SMU',0
	.word	26486
	.byte	12,2,35,0,0,14
	.word	26491
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	26525
	.byte	18,16
	.word	23770
	.byte	19,1,0,14
	.word	26552
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,13
	.byte	'STM',0
	.word	26561
	.byte	16,2,35,0,0,14
	.word	26566
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	26600
	.byte	18,64
	.word	23946
	.byte	19,3,0,14
	.word	26627
	.byte	18,224,1
	.word	464
	.byte	19,223,1,0,18,32
	.word	23842
	.byte	19,1,0,14
	.word	26652
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,13
	.byte	'G',0
	.word	26636
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	26641
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	26661
	.byte	32,3,35,160,2,0,14
	.word	26666
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	26735
	.byte	14
	.word	24048
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,13
	.byte	'XBAR',0
	.word	26763
	.byte	4,2,35,0,0,14
	.word	26768
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	26804
	.byte	32
	.byte	'SpiIf_Status',0,14,74,3
	.word	17870
	.byte	32
	.byte	'SpiIf_Ch',0,14,114,32
	.word	17671
	.byte	32
	.byte	'SpiIf_ChConfig',0,14,115,32
	.word	18306
	.byte	32
	.byte	'SpiIf',0,14,116,32
	.word	18178
	.byte	14
	.word	17389
	.byte	32
	.byte	'SpiIf_Flags',0,14,122,3
	.word	26907
	.byte	32
	.byte	'SpiIf_Job',0,14,128,1,3
	.word	17559
	.byte	15,14,131,1,9,1,16
	.byte	'SpiIf_Mode_master',0,0,16
	.byte	'SpiIf_Mode_slave',0,1,16
	.byte	'SpiIf_Mode_undefined',0,2,0,32
	.byte	'SpiIf_Mode',0,14,136,1,3
	.word	26951
	.byte	32
	.byte	'SpiIf_SlsoTiming_HalfTsclk',0,14,141,1,16
	.word	1965
	.byte	32
	.byte	'SpiIf_funcs',0,14,151,1,3
	.word	18089
	.byte	32
	.byte	'Spi_ErrorChecks',0,14,186,1,3
	.word	17444
	.byte	32
	.byte	'SpiIf_ChMode',0,14,208,1,3
	.word	17018
	.byte	15,20,236,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,20,240,10,3
	.word	27144
	.byte	15,20,250,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,20,255,10,3
	.word	27241
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,6,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,6,79,3
	.word	27363
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,6,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,6,85,3
	.word	27920
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	441
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,94,3
	.word	27997
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	464
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,111,3
	.word	28133
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,114,16,4,11
	.byte	'CANDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	464
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,126,3
	.word	28413
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,135,1,3
	.word	28651
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	464
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,150,1,3
	.word	28779
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	464
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	464
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,165,1,3
	.word	29022
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,174,1,3
	.word	29257
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,181,1,3
	.word	29385
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,188,1,3
	.word	29485
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	464
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,202,1,3
	.word	29585
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,6,205,1,16,4,11
	.byte	'PWD',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	441
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,6,213,1,3
	.word	29793
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,6,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	1015
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,6,225,1,3
	.word	29958
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,6,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,6,235,1,3
	.word	30141
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,6,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	441
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	464
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,6,129,2,3
	.word	30295
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,6,143,2,3
	.word	30659
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,146,2,16,4,11
	.byte	'POL',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	464
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,6,159,2,3
	.word	30870
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,6,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	441
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,6,167,2,3
	.word	31122
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,170,2,16,4,11
	.byte	'ARI',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,175,2,3
	.word	31240
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,6,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,6,185,2,3
	.word	31351
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,6,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,6,195,2,3
	.word	31514
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,6,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,6,205,2,3
	.word	31677
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,6,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,6,215,2,3
	.word	31835
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,6,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	464
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,6,232,2,3
	.word	32000
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,6,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	464
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	464
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	1015
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,6,245,2,3
	.word	32329
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,6,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,6,255,2,3
	.word	32550
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,6,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,6,142,3,3
	.word	32713
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,6,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,6,152,3,3
	.word	32985
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,6,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,6,162,3,3
	.word	33138
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,6,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,6,172,3,3
	.word	33294
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,6,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,6,181,3,3
	.word	33456
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,6,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,6,191,3,3
	.word	33599
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,6,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,6,200,3,3
	.word	33764
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,6,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,6,211,3,3
	.word	33909
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,6,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,6,222,3,3
	.word	34090
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,6,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,6,232,3,3
	.word	34264
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,6,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,6,241,3,3
	.word	34424
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,6,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,6,130,4,3
	.word	34568
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,6,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,6,139,4,3
	.word	34842
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,6,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,6,149,4,3
	.word	34981
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,152,4,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	464
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	1015
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	464
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	464
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,163,4,3
	.word	35144
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,6,166,4,16,4,11
	.byte	'STEP',0,2
	.word	1015
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	464
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	1015
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,6,174,4,3
	.word	35362
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,6,177,4,16,4,11
	.byte	'FS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,6,197,4,3
	.word	35525
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,6,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,6,205,4,3
	.word	35861
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	464
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,6,232,4,3
	.word	35968
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,6,235,4,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,6,240,4,3
	.word	36420
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,6,250,4,3
	.word	36519
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	1015
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,131,5,3
	.word	36669
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,134,5,16,4,11
	.byte	'SEED',0,4
	.word	441
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,141,5,3
	.word	36818
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,149,5,3
	.word	36979
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,6,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	1015
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,6,158,5,3
	.word	37109
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,166,5,3
	.word	37241
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,6,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	1015
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,6,174,5,3
	.word	37356
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,6,177,5,16,4,11
	.byte	'PS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1015
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,6,185,5,3
	.word	37467
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	464
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	464
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,209,5,3
	.word	37625
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,6,212,5,16,4,11
	.byte	'P0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,6,217,5,3
	.word	38037
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	1015
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,233,5,3
	.word	38138
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	441
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,242,5,3
	.word	38405
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,6,250,5,3
	.word	38541
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,6,253,5,16,4,11
	.byte	'PD0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	464
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,6,132,6,3
	.word	38652
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,6,146,6,3
	.word	38785
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,6,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,6,166,6,3
	.word	38988
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,6,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	464
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	464
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,6,177,6,3
	.word	39344
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,6,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	1015
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,6,184,6,3
	.word	39522
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,6,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	464
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,6,204,6,3
	.word	39622
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,6,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	464
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	464
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	464
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,6,215,6,3
	.word	39992
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,6,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,6,227,6,3
	.word	40178
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,6,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,6,241,6,3
	.word	40376
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,6,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	441
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,6,251,6,3
	.word	40609
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,6,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	464
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	464
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,6,153,7,3
	.word	40761
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	464
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	464
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	464
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,170,7,3
	.word	41328
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,6,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	464
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	464
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,6,187,7,3
	.word	41622
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,6,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	464
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	464
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	464
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,6,214,7,3
	.word	41900
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,6,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,6,230,7,3
	.word	42396
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	1015
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,243,7,3
	.word	42709
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	464
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	464
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	464
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	464
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,129,8,3
	.word	42918
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	464
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,155,8,3
	.word	43129
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,6,158,8,16,4,11
	.byte	'HBT',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,6,162,8,3
	.word	43561
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	464
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	464
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,178,8,3
	.word	43657
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,186,8,3
	.word	43917
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	441
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,198,8,3
	.word	44042
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,208,8,3
	.word	44239
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,6,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,6,218,8,3
	.word	44392
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,228,8,3
	.word	44545
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,238,8,3
	.word	44698
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,247,8,3
	.word	879
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,134,9,3
	.word	1037
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,150,9,3
	.word	1281
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	863
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,159,9,3
	.word	44953
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,175,9,3
	.word	45079
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,178,9,16,4,11
	.byte	'AE',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,191,9,3
	.word	45331
	.byte	12,6,199,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27363
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,6,204,9,3
	.word	45550
	.byte	12,6,207,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27920
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,6,212,9,3
	.word	45614
	.byte	12,6,215,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27997
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,6,220,9,3
	.word	45678
	.byte	12,6,223,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28133
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,6,228,9,3
	.word	45743
	.byte	12,6,231,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28413
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,6,236,9,3
	.word	45808
	.byte	12,6,239,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28651
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,6,244,9,3
	.word	45873
	.byte	12,6,247,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28779
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,6,252,9,3
	.word	45938
	.byte	12,6,255,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29022
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,6,132,10,3
	.word	46003
	.byte	12,6,135,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29257
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,6,140,10,3
	.word	46068
	.byte	12,6,143,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29385
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,6,148,10,3
	.word	46133
	.byte	12,6,151,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29485
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,6,156,10,3
	.word	46198
	.byte	12,6,159,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29585
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,6,164,10,3
	.word	46263
	.byte	12,6,167,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29793
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,6,172,10,3
	.word	46327
	.byte	12,6,175,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29958
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,6,180,10,3
	.word	46391
	.byte	12,6,183,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30141
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,6,188,10,3
	.word	46455
	.byte	12,6,191,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30295
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,6,196,10,3
	.word	46520
	.byte	12,6,199,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30659
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,6,204,10,3
	.word	46582
	.byte	12,6,207,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30870
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,6,212,10,3
	.word	46644
	.byte	12,6,215,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,6,220,10,3
	.word	46706
	.byte	12,6,223,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31240
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,6,228,10,3
	.word	46770
	.byte	12,6,231,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31351
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,6,236,10,3
	.word	46835
	.byte	12,6,239,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31514
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,6,244,10,3
	.word	46901
	.byte	12,6,247,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31677
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,6,252,10,3
	.word	46967
	.byte	12,6,255,10,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31835
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,6,132,11,3
	.word	47035
	.byte	12,6,135,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32000
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,6,140,11,3
	.word	47102
	.byte	12,6,143,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32329
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,6,148,11,3
	.word	47170
	.byte	12,6,151,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32550
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,6,156,11,3
	.word	47238
	.byte	12,6,159,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32713
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,6,164,11,3
	.word	47304
	.byte	12,6,167,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32985
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,6,172,11,3
	.word	47371
	.byte	12,6,175,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33138
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,6,180,11,3
	.word	47440
	.byte	12,6,183,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33294
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,6,188,11,3
	.word	47509
	.byte	12,6,191,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33456
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,6,196,11,3
	.word	47578
	.byte	12,6,199,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33599
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,6,204,11,3
	.word	47647
	.byte	12,6,207,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33764
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,6,212,11,3
	.word	47716
	.byte	12,6,215,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33909
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,6,220,11,3
	.word	47785
	.byte	12,6,223,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34090
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,6,228,11,3
	.word	47853
	.byte	12,6,231,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34264
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,6,236,11,3
	.word	47921
	.byte	12,6,239,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34424
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,6,244,11,3
	.word	47989
	.byte	12,6,247,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34568
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,6,252,11,3
	.word	48057
	.byte	12,6,255,11,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34842
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,6,132,12,3
	.word	48122
	.byte	12,6,135,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34981
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,6,140,12,3
	.word	48187
	.byte	12,6,143,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35144
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,6,148,12,3
	.word	48253
	.byte	12,6,151,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35362
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,6,156,12,3
	.word	48317
	.byte	12,6,159,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35525
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,6,164,12,3
	.word	48378
	.byte	12,6,167,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35861
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,6,172,12,3
	.word	48439
	.byte	12,6,175,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35968
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,6,180,12,3
	.word	48499
	.byte	12,6,183,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36420
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,6,188,12,3
	.word	48561
	.byte	12,6,191,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36519
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,6,196,12,3
	.word	48621
	.byte	12,6,199,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36669
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,204,12,3
	.word	48683
	.byte	12,6,207,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36818
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,212,12,3
	.word	48751
	.byte	12,6,215,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36979
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,220,12,3
	.word	48819
	.byte	12,6,223,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37109
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,6,228,12,3
	.word	48887
	.byte	12,6,231,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,6,236,12,3
	.word	48951
	.byte	12,6,239,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,6,244,12,3
	.word	49016
	.byte	12,6,247,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37467
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,6,252,12,3
	.word	49079
	.byte	12,6,255,12,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37625
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,6,132,13,3
	.word	49140
	.byte	12,6,135,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38037
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,6,140,13,3
	.word	49204
	.byte	12,6,143,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38138
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,6,148,13,3
	.word	49265
	.byte	12,6,151,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38405
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,6,156,13,3
	.word	49329
	.byte	12,6,159,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38541
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,6,164,13,3
	.word	49396
	.byte	12,6,167,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38652
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,6,172,13,3
	.word	49459
	.byte	12,6,175,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38785
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,6,180,13,3
	.word	49520
	.byte	12,6,183,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38988
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,6,188,13,3
	.word	49582
	.byte	12,6,191,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39344
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,6,196,13,3
	.word	49647
	.byte	12,6,199,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39522
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,6,204,13,3
	.word	49712
	.byte	12,6,207,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39622
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,6,212,13,3
	.word	49777
	.byte	12,6,215,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39992
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,6,220,13,3
	.word	49846
	.byte	12,6,223,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40178
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,6,228,13,3
	.word	49915
	.byte	12,6,231,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40376
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,6,236,13,3
	.word	49984
	.byte	12,6,239,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40609
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,6,244,13,3
	.word	50049
	.byte	12,6,247,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40761
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,6,252,13,3
	.word	50112
	.byte	12,6,255,13,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41328
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,6,132,14,3
	.word	50177
	.byte	12,6,135,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41622
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,6,140,14,3
	.word	50242
	.byte	12,6,143,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41900
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,6,148,14,3
	.word	50307
	.byte	12,6,151,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42396
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,6,156,14,3
	.word	50373
	.byte	12,6,159,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42918
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,6,164,14,3
	.word	50442
	.byte	12,6,167,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42709
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,6,172,14,3
	.word	50506
	.byte	12,6,175,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43129
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,6,180,14,3
	.word	50571
	.byte	12,6,183,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43561
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,6,188,14,3
	.word	50636
	.byte	12,6,191,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43657
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,6,196,14,3
	.word	50701
	.byte	12,6,199,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43917
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,6,204,14,3
	.word	50765
	.byte	12,6,207,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44042
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,6,212,14,3
	.word	50831
	.byte	12,6,215,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44239
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,6,220,14,3
	.word	50895
	.byte	12,6,223,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44392
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,6,228,14,3
	.word	50960
	.byte	12,6,231,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44545
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,6,236,14,3
	.word	51025
	.byte	12,6,239,14,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44698
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,6,244,14,3
	.word	51090
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,252,14,3
	.word	975
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,132,15,3
	.word	1241
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,140,15,3
	.word	1472
	.byte	12,6,143,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44953
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,6,148,15,3
	.word	51241
	.byte	12,6,151,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,6,156,15,3
	.word	51308
	.byte	12,6,159,15,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45331
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,6,164,15,3
	.word	51375
	.byte	14
	.word	1512
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,6,180,15,3
	.word	51440
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,6,183,15,25,12,13
	.byte	'CON0',0
	.word	51241
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	51308
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	51375
	.byte	4,2,35,8,0,14
	.word	51469
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,6,188,15,3
	.word	51530
	.byte	18,8
	.word	46706
	.byte	19,1,0,18,20
	.word	464
	.byte	19,19,0,18,8
	.word	50049
	.byte	19,1,0,14
	.word	51469
	.byte	18,24
	.word	1512
	.byte	19,1,0,14
	.word	51589
	.byte	18,28
	.word	464
	.byte	19,27,0,18,16
	.word	46520
	.byte	19,3,0,18,16
	.word	48499
	.byte	19,3,0,18,180,3
	.word	464
	.byte	19,179,3,0,10
	.byte	'_Ifx_SCU',0,6,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	5021
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	48439
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3202
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	49140
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	49984
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	49582
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	49647
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	49712
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	49915
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	49777
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	49846
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	45743
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	45808
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	48317
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	48253
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	45873
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	45938
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	46003
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	46068
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	50571
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3202
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	50442
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	45678
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	50765
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	50506
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3202
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	47304
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	51557
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	46770
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	50831
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	46133
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	46198
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	51566
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	49459
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	48621
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	49204
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	49079
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	48561
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	48057
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	47035
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	46835
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	46901
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	50701
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	3202
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	50112
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	50307
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	50373
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	51575
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	3202
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	46455
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	46327
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	50177
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	50242
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	51584
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	46644
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	51598
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	5361
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	51090
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	51025
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	50895
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	50960
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	3202
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	48887
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	48951
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	46263
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	49016
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	5021
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	50636
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	21833
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	48683
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	48751
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	48819
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	51603
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	49396
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	5021
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	48122
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	46967
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	48187
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	47238
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	47102
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	3202
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	47785
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	47853
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	47921
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	47989
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	47371
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	47440
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	47509
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	47578
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	47647
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	47716
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	47170
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	3202
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	49329
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	49265
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	21468
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	51612
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	46582
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	48378
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	49520
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	51621
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	3202
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	46391
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	51630
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	45614
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	45550
	.byte	4,3,35,252,7,0,14
	.word	51641
	.byte	32
	.byte	'Ifx_SCU',0,6,181,16,3
	.word	53631
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,21,45,16,4,11
	.byte	'ADDR',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,21,48,3
	.word	53653
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,21,51,16,4,11
	.byte	'VSS',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	863
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,21,55,3
	.word	53714
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,21,58,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	863
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,21,62,3
	.word	53793
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,21,65,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,21,69,3
	.word	53879
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,21,72,16,4,11
	.byte	'CM',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	863
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	863
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	863
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,21,80,3
	.word	53968
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,21,83,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,21,89,3
	.word	54114
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,21,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,21,96,3
	.word	54241
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,21,99,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,21,103,3
	.word	54339
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,21,106,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,21,110,3
	.word	54432
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,21,113,16,4,11
	.byte	'MODREV',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	863
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,21,118,3
	.word	54525
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,21,121,16,4,11
	.byte	'XE',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,21,125,3
	.word	54632
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,21,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,21,136,1,3
	.word	54719
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,21,139,1,16,4,11
	.byte	'CID',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,21,143,1,3
	.word	54873
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,21,146,1,16,4,11
	.byte	'DATA',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,21,149,1,3
	.word	54967
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,21,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	863
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	863
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,21,163,1,3
	.word	55030
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,21,166,1,16,4,11
	.byte	'DE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	863
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	863
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	863
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,21,177,1,3
	.word	55248
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,21,180,1,16,4,11
	.byte	'DTA',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,21,184,1,3
	.word	55463
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,21,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,21,192,1,3
	.word	55557
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,21,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,21,199,1,3
	.word	55673
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,21,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	863
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,21,206,1,3
	.word	55774
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,21,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,21,212,1,3
	.word	55867
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,21,215,1,16,4,11
	.byte	'TA',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,21,218,1,3
	.word	55947
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,21,221,1,16,4,11
	.byte	'IED',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	863
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	863
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,21,233,1,3
	.word	56016
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,21,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	863
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,21,240,1,3
	.word	56245
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,21,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,21,247,1,3
	.word	56338
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,21,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	863
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,21,254,1,3
	.word	56433
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,21,129,2,16,4,11
	.byte	'RE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,21,133,2,3
	.word	56528
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,21,136,2,16,4,11
	.byte	'WE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,21,140,2,3
	.word	56618
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,21,143,2,16,4,11
	.byte	'SRE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	863
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	863
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	863
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	863
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	863
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	863
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	863
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	863
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,21,161,2,3
	.word	56708
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,21,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,21,172,2,3
	.word	57032
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,21,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,21,180,2,3
	.word	57186
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,21,183,2,16,4,11
	.byte	'TST',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	863
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	863
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	863
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	863
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	863
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	863
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	863
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	863
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	863
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,21,202,2,3
	.word	57292
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,205,2,16,4,11
	.byte	'OPC',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	863
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,21,212,2,3
	.word	57641
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,21,215,2,16,4,11
	.byte	'PC',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,21,218,2,3
	.word	57801
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,21,224,2,3
	.word	57882
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,21,230,2,3
	.word	57969
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,21,236,2,3
	.word	58056
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,21,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,21,243,2,3
	.word	58143
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,21,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	863
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	863
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	863
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,21,253,2,3
	.word	58234
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,21,128,3,16,4,11
	.byte	'ISP',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,21,131,3,3
	.word	58377
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,21,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	863
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,21,139,3,3
	.word	58443
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,21,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,21,146,3,3
	.word	58549
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,21,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,21,153,3,3
	.word	58642
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,21,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	863
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,21,160,3,3
	.word	58735
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,21,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	863
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,21,167,3,3
	.word	58828
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,21,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,21,175,3,3
	.word	58913
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,21,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	863
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,21,183,3,3
	.word	59029
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,21,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,21,190,3,3
	.word	59140
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,21,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	863
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	863
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	863
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	863
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,21,200,3,3
	.word	59241
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,21,203,3,16,4,11
	.byte	'TA',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,21,206,3,3
	.word	59371
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,21,209,3,16,4,11
	.byte	'IED',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	863
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	863
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,21,221,3,3
	.word	59440
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,21,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	863
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,21,229,3,3
	.word	59669
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,21,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	863
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	863
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,21,237,3,3
	.word	59782
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,21,240,3,16,4,11
	.byte	'PSI',0,4
	.word	863
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	863
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,21,244,3,3
	.word	59895
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,21,247,3,16,4,11
	.byte	'FRE',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	863
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,21,129,4,3
	.word	59986
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,21,132,4,16,4,11
	.byte	'CDC',0,4
	.word	863
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	863
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	863
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	863
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	863
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	863
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,21,147,4,3
	.word	60189
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,21,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	863
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	863
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	863
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	863
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,21,156,4,3
	.word	60432
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,21,159,4,16,4,11
	.byte	'PC',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	863
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	863
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	863
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	863
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	863
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	863
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,21,171,4,3
	.word	60560
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,21,174,4,16,4,11
	.byte	'EN',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,21,177,4,3
	.word	60801
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,21,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,21,183,4,3
	.word	60884
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,186,4,16,4,11
	.byte	'EN',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,21,189,4,3
	.word	60975
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,21,195,4,3
	.word	61066
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,21,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,21,202,4,3
	.word	61165
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,21,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,21,209,4,3
	.word	61272
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,21,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,21,220,4,3
	.word	61379
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,21,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,21,231,4,3
	.word	61533
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,21,234,4,16,4,11
	.byte	'ASI',0,4
	.word	863
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	863
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,21,238,4,3
	.word	61694
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,21,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	863
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	863
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	863
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,21,249,4,3
	.word	61792
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,21,252,4,16,4,11
	.byte	'Timer',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,21,255,4,3
	.word	61964
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,21,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	863
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,21,133,5,3
	.word	62044
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,21,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	863
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	863
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	863
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	863
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	863
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	863
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	863
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	863
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	863
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	863
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	863
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,21,153,5,3
	.word	62117
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,21,156,5,16,4,11
	.byte	'T0',0,4
	.word	863
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	863
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	863
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	863
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	863
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	863
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	863
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	863
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	863
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,21,167,5,3
	.word	62435
	.byte	12,21,175,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53653
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,21,180,5,3
	.word	62630
	.byte	12,21,183,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53714
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,21,188,5,3
	.word	62689
	.byte	12,21,191,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53793
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,21,196,5,3
	.word	62750
	.byte	12,21,199,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53879
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,21,204,5,3
	.word	62811
	.byte	12,21,207,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53968
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,21,212,5,3
	.word	62873
	.byte	12,21,215,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54114
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,21,220,5,3
	.word	62936
	.byte	12,21,223,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,21,228,5,3
	.word	63000
	.byte	12,21,231,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54339
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,21,236,5,3
	.word	63065
	.byte	12,21,239,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54432
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,21,244,5,3
	.word	63128
	.byte	12,21,247,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54525
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,21,252,5,3
	.word	63191
	.byte	12,21,255,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54632
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,21,132,6,3
	.word	63255
	.byte	12,21,135,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54719
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,21,140,6,3
	.word	63317
	.byte	12,21,143,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,21,148,6,3
	.word	63380
	.byte	12,21,151,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54967
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,21,156,6,3
	.word	63444
	.byte	12,21,159,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55030
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,21,164,6,3
	.word	63503
	.byte	12,21,167,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55248
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,21,172,6,3
	.word	63565
	.byte	12,21,175,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55463
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,21,180,6,3
	.word	63628
	.byte	12,21,183,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55557
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,21,188,6,3
	.word	63692
	.byte	12,21,191,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55673
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,21,196,6,3
	.word	63755
	.byte	12,21,199,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55774
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,21,204,6,3
	.word	63818
	.byte	12,21,207,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55867
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,21,212,6,3
	.word	63879
	.byte	12,21,215,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55947
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,21,220,6,3
	.word	63942
	.byte	12,21,223,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56016
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,21,228,6,3
	.word	64005
	.byte	12,21,231,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56245
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,21,236,6,3
	.word	64068
	.byte	12,21,239,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56338
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,21,244,6,3
	.word	64129
	.byte	12,21,247,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56433
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,21,252,6,3
	.word	64192
	.byte	12,21,255,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56528
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,21,132,7,3
	.word	64255
	.byte	12,21,135,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56618
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,21,140,7,3
	.word	64317
	.byte	12,21,143,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56708
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,21,148,7,3
	.word	64379
	.byte	12,21,151,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57032
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,21,156,7,3
	.word	64441
	.byte	12,21,159,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57186
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,21,164,7,3
	.word	64504
	.byte	12,21,167,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57292
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,21,172,7,3
	.word	64565
	.byte	12,21,175,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57641
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,21,180,7,3
	.word	64635
	.byte	12,21,183,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57801
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,21,188,7,3
	.word	64705
	.byte	12,21,191,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57882
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,21,196,7,3
	.word	64774
	.byte	12,21,199,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57969
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,21,204,7,3
	.word	64845
	.byte	12,21,207,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58056
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,21,212,7,3
	.word	64916
	.byte	12,21,215,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58143
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,21,220,7,3
	.word	64987
	.byte	12,21,223,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58234
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,21,228,7,3
	.word	65049
	.byte	12,21,231,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58377
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,21,236,7,3
	.word	65110
	.byte	12,21,239,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58443
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,21,244,7,3
	.word	65171
	.byte	12,21,247,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58549
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,21,252,7,3
	.word	65232
	.byte	12,21,255,7,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58642
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,21,132,8,3
	.word	65295
	.byte	12,21,135,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58735
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,21,140,8,3
	.word	65358
	.byte	12,21,143,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58828
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,21,148,8,3
	.word	65421
	.byte	12,21,151,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58913
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,21,156,8,3
	.word	65481
	.byte	12,21,159,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59029
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,21,164,8,3
	.word	65544
	.byte	12,21,167,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59140
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,21,172,8,3
	.word	65607
	.byte	12,21,175,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,21,180,8,3
	.word	65670
	.byte	12,21,183,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59371
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,21,188,8,3
	.word	65732
	.byte	12,21,191,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59440
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,21,196,8,3
	.word	65795
	.byte	12,21,199,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59669
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,21,204,8,3
	.word	65858
	.byte	12,21,207,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59782
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,21,212,8,3
	.word	65920
	.byte	12,21,215,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59895
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,21,220,8,3
	.word	65982
	.byte	12,21,223,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59986
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,21,228,8,3
	.word	66044
	.byte	12,21,231,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,21,236,8,3
	.word	66106
	.byte	12,21,239,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60432
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,21,244,8,3
	.word	66167
	.byte	12,21,247,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60560
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,21,252,8,3
	.word	66230
	.byte	12,21,255,8,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60801
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,21,132,9,3
	.word	66294
	.byte	12,21,135,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60884
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,21,140,9,3
	.word	66364
	.byte	12,21,143,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60975
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,21,148,9,3
	.word	66434
	.byte	12,21,151,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61066
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,21,156,9,3
	.word	66508
	.byte	12,21,159,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61165
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,21,164,9,3
	.word	66582
	.byte	12,21,167,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61272
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,21,172,9,3
	.word	66652
	.byte	12,21,175,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61379
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,21,180,9,3
	.word	66722
	.byte	12,21,183,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61533
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,21,188,9,3
	.word	66785
	.byte	12,21,191,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61694
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,21,196,9,3
	.word	66849
	.byte	12,21,199,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61792
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,21,204,9,3
	.word	66915
	.byte	12,21,207,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61964
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,21,212,9,3
	.word	66980
	.byte	12,21,215,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62044
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,21,220,9,3
	.word	67047
	.byte	12,21,223,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62117
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,21,228,9,3
	.word	67111
	.byte	12,21,231,9,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62435
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,21,236,9,3
	.word	67175
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,21,247,9,25,8,13
	.byte	'L',0
	.word	63065
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	63128
	.byte	4,2,35,4,0,14
	.word	67241
	.byte	32
	.byte	'Ifx_CPU_CPR',0,21,251,9,3
	.word	67283
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,21,254,9,25,8,13
	.byte	'L',0
	.word	64129
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	64192
	.byte	4,2,35,4,0,14
	.word	67309
	.byte	32
	.byte	'Ifx_CPU_DPR',0,21,130,10,3
	.word	67351
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,21,133,10,25,16,13
	.byte	'LA',0
	.word	66582
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	66652
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	66434
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	66508
	.byte	4,2,35,12,0,14
	.word	67377
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,21,139,10,3
	.word	67459
	.byte	18,12
	.word	66980
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,21,142,10,25,16,13
	.byte	'CON',0
	.word	66915
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	67491
	.byte	12,2,35,4,0,14
	.word	67500
	.byte	32
	.byte	'Ifx_CPU_TPS',0,21,146,10,3
	.word	67548
	.byte	10
	.byte	'_Ifx_CPU_TR',0,21,149,10,25,8,13
	.byte	'EVT',0
	.word	67111
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	67047
	.byte	4,2,35,4,0,14
	.word	67574
	.byte	32
	.byte	'Ifx_CPU_TR',0,21,153,10,3
	.word	67619
	.byte	18,176,32
	.word	464
	.byte	19,175,32,0,18,208,223,1
	.word	464
	.byte	19,207,223,1,0,18,248,1
	.word	464
	.byte	19,247,1,0,18,244,29
	.word	464
	.byte	19,243,29,0,18,188,3
	.word	464
	.byte	19,187,3,0,18,232,3
	.word	464
	.byte	19,231,3,0,18,252,23
	.word	464
	.byte	19,251,23,0,18,228,63
	.word	464
	.byte	19,227,63,0,18,128,1
	.word	67309
	.byte	19,15,0,14
	.word	67734
	.byte	18,128,31
	.word	464
	.byte	19,255,30,0,18,64
	.word	67241
	.byte	19,7,0,14
	.word	67760
	.byte	18,192,31
	.word	464
	.byte	19,191,31,0,18,16
	.word	63255
	.byte	19,3,0,18,16
	.word	64255
	.byte	19,3,0,18,16
	.word	64317
	.byte	19,3,0,18,208,7
	.word	464
	.byte	19,207,7,0,14
	.word	67500
	.byte	18,240,23
	.word	464
	.byte	19,239,23,0,18,64
	.word	67574
	.byte	19,7,0,14
	.word	67839
	.byte	18,192,23
	.word	464
	.byte	19,191,23,0,18,232,1
	.word	464
	.byte	19,231,1,0,18,180,1
	.word	464
	.byte	19,179,1,0,18,172,1
	.word	464
	.byte	19,171,1,0,18,64
	.word	63444
	.byte	19,15,0,18,64
	.word	464
	.byte	19,63,0,18,64
	.word	62630
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,21,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	67644
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	66167
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	67655
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	66849
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	67668
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	65858
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	65920
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	65982
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	67679
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	63755
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	5021
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	66230
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	64379
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	3202
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	63503
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	63879
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	63942
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	64005
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	4392
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	63692
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	67690
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	66044
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	65544
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	65607
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	65481
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	65732
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	65795
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	67701
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	62936
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	67712
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	64565
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	64705
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	64635
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	3202
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	64774
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	64845
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	64916
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	67723
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	67744
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	67749
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	67769
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	67774
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	67785
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	67794
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	67803
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	67812
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	67823
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	67828
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	67848
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	67853
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	62873
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	62811
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	64987
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	65232
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	65295
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	65358
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	67864
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	63565
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	3202
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	64441
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	63317
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	66722
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	51603
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	67175
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	5361
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	64068
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	63818
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	63628
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	67875
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	65670
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	66106
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	65421
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	5021
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	66785
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	63191
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	63000
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	62689
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	62750
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	65110
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	65049
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	5021
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	64504
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	65171
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	21833
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	63380
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	67886
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	67897
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	67906
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	67915
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	67906
	.byte	64,4,35,192,255,3,0,14
	.word	67924
	.byte	32
	.byte	'Ifx_CPU',0,21,130,11,3
	.word	69715
	.byte	15,8,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,32
	.byte	'IfxCpu_Id',0,8,132,1,3
	.word	69737
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,8,161,1,3
	.word	1810
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,22,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,22,79,3
	.word	69835
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,22,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,22,85,3
	.word	70392
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,22,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,22,91,3
	.word	70469
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,22,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,22,97,3
	.word	70541
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,22,100,16,4,11
	.byte	'DISR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,22,107,3
	.word	70617
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,22,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	464
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	464
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	464
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	464
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,22,120,3
	.word	70758
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,22,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,22,126,3
	.word	70976
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,22,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	441
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,22,139,1,3
	.word	71043
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,22,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,22,147,1,3
	.word	71246
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,22,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,22,157,1,3
	.word	71353
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,22,160,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	441
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,22,165,1,3
	.word	71504
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,22,168,1,16,4,11
	.byte	'RST',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,22,172,1,3
	.word	71615
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,22,175,1,16,4,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,22,179,1,3
	.word	71707
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,22,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	464
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	464
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,22,189,1,3
	.word	71803
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,22,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,22,195,1,3
	.word	71949
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,22,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,22,201,1,3
	.word	72021
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,22,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,22,207,1,3
	.word	72097
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,22,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,22,213,1,3
	.word	72169
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,22,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,22,219,1,3
	.word	72241
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,22,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,22,225,1,3
	.word	72314
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,22,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,22,231,1,3
	.word	72387
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,22,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,22,237,1,3
	.word	72460
	.byte	12,22,245,1,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69835
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,22,250,1,3
	.word	72533
	.byte	12,22,253,1,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70392
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,22,130,2,3
	.word	72597
	.byte	12,22,133,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70469
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,22,138,2,3
	.word	72661
	.byte	12,22,141,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70541
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,22,146,2,3
	.word	72722
	.byte	12,22,149,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70617
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,22,154,2,3
	.word	72785
	.byte	12,22,157,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70758
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,22,162,2,3
	.word	72846
	.byte	12,22,165,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70976
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,22,170,2,3
	.word	72909
	.byte	12,22,173,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71043
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,22,178,2,3
	.word	72970
	.byte	12,22,181,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71246
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,22,186,2,3
	.word	73031
	.byte	12,22,189,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71353
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,22,194,2,3
	.word	73091
	.byte	12,22,197,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71504
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,22,202,2,3
	.word	73153
	.byte	12,22,205,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,22,210,2,3
	.word	73216
	.byte	12,22,213,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71707
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,22,218,2,3
	.word	73279
	.byte	12,22,221,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71803
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,22,226,2,3
	.word	73344
	.byte	12,22,229,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71949
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,22,234,2,3
	.word	73405
	.byte	12,22,237,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72021
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,22,242,2,3
	.word	73467
	.byte	12,22,245,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72097
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,22,250,2,3
	.word	73531
	.byte	12,22,253,2,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72169
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,22,130,3,3
	.word	73593
	.byte	12,22,133,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72241
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,22,138,3,3
	.word	73655
	.byte	12,22,141,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72314
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,22,146,3,3
	.word	73717
	.byte	12,22,149,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72387
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,22,154,3,3
	.word	73779
	.byte	12,22,157,3,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72460
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,22,162,3,3
	.word	73841
	.byte	15,7,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,7,148,1,3
	.word	73903
	.byte	31,7,160,1,9,6,13
	.byte	'counter',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	464
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,7,164,1,3
	.word	73992
	.byte	31,7,172,1,9,32,13
	.byte	'instruction',0
	.word	73992
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	73992
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	73992
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	73992
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	73992
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,7,179,1,3
	.word	74058
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,23,45,16,4,11
	.byte	'EN0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,23,79,3
	.word	74176
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,23,82,16,4,11
	.byte	'reserved_0',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,23,85,3
	.word	74737
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,23,88,16,4,11
	.byte	'SEL',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,23,95,3
	.word	74818
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,23,98,16,4,11
	.byte	'VLD0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,23,111,3
	.word	74971
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,23,114,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,23,121,3
	.word	75219
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,23,124,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	441
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,23,128,1,3
	.word	75365
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,23,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,23,136,1,3
	.word	75463
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,23,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,23,144,1,3
	.word	75579
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,23,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,23,153,1,3
	.word	75695
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,23,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,23,162,1,3
	.word	75835
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,23,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	441
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	1015
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,23,171,1,3
	.word	75975
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,23,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	464
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	464
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	1015
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	464
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	464
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,23,193,1,3
	.word	76114
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,23,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	464
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	464
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	464
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,23,218,1,3
	.word	76476
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,23,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	1015
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	464
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	464
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	464
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,23,254,1,3
	.word	76917
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,23,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	464
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	464
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,23,134,2,3
	.word	77523
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,23,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	1015
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,23,147,2,3
	.word	77634
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,23,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	1015
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,23,159,2,3
	.word	77848
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,23,162,2,16,4,11
	.byte	'L',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	464
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	464
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	1015
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	464
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,23,179,2,3
	.word	78035
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,23,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	464
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	441
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,23,188,2,3
	.word	78359
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,23,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	1015
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,23,199,2,3
	.word	78502
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	1015
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	464
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	464
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	464
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	1015
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,23,219,2,3
	.word	78691
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,23,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	464
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,23,254,2,3
	.word	79054
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,23,129,3,16,4,11
	.byte	'S0L',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,23,160,3,3
	.word	79649
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,23,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	464
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	464
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	464
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	464
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	464
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	464
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	464
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	464
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	464
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	464
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	464
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	464
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	464
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	464
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	464
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	464
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	464
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	464
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	464
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	464
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	464
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,23,194,3,3
	.word	80173
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,23,197,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,23,201,3,3
	.word	80755
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,23,204,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,23,208,3,3
	.word	80857
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,23,211,3,16,4,11
	.byte	'TAG',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	441
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,23,215,3,3
	.word	80959
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,23,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	441
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,23,222,3,3
	.word	81061
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,23,225,3,16,4,11
	.byte	'STRT',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	464
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	464
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	464
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	464
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	464
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	1015
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,23,236,3,3
	.word	81155
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,23,239,3,16,4,11
	.byte	'DATA',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,23,242,3,3
	.word	81365
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,23,245,3,16,4,11
	.byte	'DATA',0,4
	.word	441
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,23,248,3,3
	.word	81438
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,23,251,3,16,4,11
	.byte	'SEL',0,1
	.word	464
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	464
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	464
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	441
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,23,130,4,3
	.word	81511
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,23,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	464
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	441
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,23,137,4,3
	.word	81666
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,23,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	464
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	441
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	464
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	464
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	464
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,23,147,4,3
	.word	81771
	.byte	12,23,155,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74176
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,23,160,4,3
	.word	81919
	.byte	12,23,163,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74737
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,23,168,4,3
	.word	81985
	.byte	12,23,171,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74818
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,23,176,4,3
	.word	82051
	.byte	12,23,179,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74971
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,23,184,4,3
	.word	82119
	.byte	12,23,187,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75219
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,23,192,4,3
	.word	82188
	.byte	12,23,195,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75365
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,23,200,4,3
	.word	82256
	.byte	12,23,203,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75463
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,23,208,4,3
	.word	82321
	.byte	12,23,211,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75579
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,23,216,4,3
	.word	82386
	.byte	12,23,219,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75695
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,23,224,4,3
	.word	82451
	.byte	12,23,227,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75835
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,23,232,4,3
	.word	82516
	.byte	12,23,235,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75975
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,23,240,4,3
	.word	82581
	.byte	12,23,243,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76114
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,23,248,4,3
	.word	82645
	.byte	12,23,251,4,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76476
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,23,128,5,3
	.word	82709
	.byte	12,23,131,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	76917
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,23,136,5,3
	.word	82773
	.byte	12,23,139,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77523
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,23,144,5,3
	.word	82836
	.byte	12,23,147,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77634
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,23,152,5,3
	.word	82898
	.byte	12,23,155,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	77848
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,23,160,5,3
	.word	82962
	.byte	12,23,163,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78035
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,23,168,5,3
	.word	83026
	.byte	12,23,171,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78359
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,23,176,5,3
	.word	83093
	.byte	12,23,179,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78502
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,23,184,5,3
	.word	83162
	.byte	12,23,187,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	78691
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,23,192,5,3
	.word	83231
	.byte	12,23,195,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79054
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,23,200,5,3
	.word	83304
	.byte	12,23,203,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	79649
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,23,208,5,3
	.word	83373
	.byte	12,23,211,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80173
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,23,216,5,3
	.word	83440
	.byte	12,23,219,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80755
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,23,224,5,3
	.word	83509
	.byte	12,23,227,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80857
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,23,232,5,3
	.word	83577
	.byte	12,23,235,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	80959
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,23,240,5,3
	.word	83645
	.byte	12,23,243,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81061
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,23,248,5,3
	.word	83713
	.byte	12,23,251,5,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81155
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,23,128,6,3
	.word	83777
	.byte	12,23,131,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81365
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,23,136,6,3
	.word	83841
	.byte	12,23,139,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81438
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,23,144,6,3
	.word	83905
	.byte	12,23,147,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81511
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,23,152,6,3
	.word	83969
	.byte	12,23,155,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81666
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,23,160,6,3
	.word	84037
	.byte	12,23,163,6,9,4,13
	.byte	'U',0
	.word	441
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	457
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	81771
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,23,168,6,3
	.word	84106
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,23,179,6,25,12,13
	.byte	'CFG',0
	.word	82051
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	82119
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	82188
	.byte	4,2,35,8,0,14
	.word	84174
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,23,184,6,3
	.word	84237
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,23,187,6,25,12,13
	.byte	'CFG0',0
	.word	83509
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	83577
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	83645
	.byte	4,2,35,8,0,14
	.word	84266
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,23,192,6,3
	.word	84330
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,23,195,6,25,12,13
	.byte	'CFG',0
	.word	83969
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	84037
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	84106
	.byte	4,2,35,8,0,14
	.word	84358
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,23,200,6,3
	.word	84421
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,10,79,3
	.word	8774
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,10,85,3
	.word	8687
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,10,107,3
	.word	5030
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,10,115,3
	.word	3083
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,10,137,1,3
	.word	4078
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,10,150,1,3
	.word	3211
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,10,163,1,3
	.word	3858
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,10,176,1,3
	.word	3426
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,10,189,1,3
	.word	3641
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,10,197,1,3
	.word	8046
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,10,205,1,3
	.word	8170
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,10,215,1,3
	.word	8254
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,10,229,1,3
	.word	8434
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,10,240,1,3
	.word	6685
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,10,250,1,3
	.word	7209
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,10,133,2,3
	.word	6859
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,10,144,2,3
	.word	7033
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,10,166,2,3
	.word	7698
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,10,203,2,3
	.word	2512
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,10,213,2,3
	.word	6022
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,10,224,2,3
	.word	6510
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,10,235,2,3
	.word	6169
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,10,246,2,3
	.word	6338
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,10,140,3,3
	.word	7365
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,10,162,3,3
	.word	2196
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,10,180,3,3
	.word	5736
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,10,202,3,3
	.word	5370
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,10,223,3,3
	.word	4401
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,10,244,3,3
	.word	4705
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,10,129,4,3
	.word	9301
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,10,137,4,3
	.word	8734
	.byte	32
	.byte	'Ifx_P_ESR',0,10,145,4,3
	.word	5321
	.byte	32
	.byte	'Ifx_P_ID',0,10,153,4,3
	.word	3162
	.byte	32
	.byte	'Ifx_P_IN',0,10,161,4,3
	.word	4352
	.byte	32
	.byte	'Ifx_P_IOCR0',0,10,169,4,3
	.word	3386
	.byte	32
	.byte	'Ifx_P_IOCR12',0,10,177,4,3
	.word	4038
	.byte	32
	.byte	'Ifx_P_IOCR4',0,10,185,4,3
	.word	3601
	.byte	32
	.byte	'Ifx_P_IOCR8',0,10,193,4,3
	.word	3818
	.byte	32
	.byte	'Ifx_P_LPCR0',0,10,201,4,3
	.word	8130
	.byte	32
	.byte	'Ifx_P_LPCR1',0,10,210,4,3
	.word	8379
	.byte	32
	.byte	'Ifx_P_LPCR2',0,10,218,4,3
	.word	8638
	.byte	32
	.byte	'Ifx_P_OMCR',0,10,226,4,3
	.word	8006
	.byte	32
	.byte	'Ifx_P_OMCR0',0,10,234,4,3
	.word	6819
	.byte	32
	.byte	'Ifx_P_OMCR12',0,10,242,4,3
	.word	7325
	.byte	32
	.byte	'Ifx_P_OMCR4',0,10,250,4,3
	.word	6993
	.byte	32
	.byte	'Ifx_P_OMCR8',0,10,130,5,3
	.word	7169
	.byte	32
	.byte	'Ifx_P_OMR',0,10,138,5,3
	.word	3043
	.byte	32
	.byte	'Ifx_P_OMSR',0,10,146,5,3
	.word	7658
	.byte	32
	.byte	'Ifx_P_OMSR0',0,10,154,5,3
	.word	6129
	.byte	32
	.byte	'Ifx_P_OMSR12',0,10,162,5,3
	.word	6645
	.byte	32
	.byte	'Ifx_P_OMSR4',0,10,170,5,3
	.word	6298
	.byte	32
	.byte	'Ifx_P_OMSR8',0,10,178,5,3
	.word	6470
	.byte	32
	.byte	'Ifx_P_OUT',0,10,186,5,3
	.word	2472
	.byte	32
	.byte	'Ifx_P_PCSR',0,10,194,5,3
	.word	5982
	.byte	32
	.byte	'Ifx_P_PDISC',0,10,202,5,3
	.word	5696
	.byte	32
	.byte	'Ifx_P_PDR0',0,10,210,5,3
	.word	4665
	.byte	32
	.byte	'Ifx_P_PDR1',0,10,218,5,3
	.word	4981
	.byte	14
	.word	9341
	.byte	32
	.byte	'Ifx_P',0,10,139,6,3
	.word	85768
	.byte	32
	.byte	'IfxPort_InputMode',0,9,89,3
	.word	9954
	.byte	32
	.byte	'IfxPort_OutputIdx',0,9,130,1,3
	.word	10229
	.byte	32
	.byte	'IfxPort_OutputMode',0,9,138,1,3
	.word	10159
	.byte	15,9,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxPort_PadDriver',0,9,158,1,3
	.word	85869
	.byte	32
	.byte	'IfxPort_State',0,9,178,1,3
	.word	10542
	.byte	31,9,190,1,9,8,13
	.byte	'port',0
	.word	9949
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	464
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,9,194,1,3
	.word	86334
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,13,148,1,16
	.word	180
	.byte	31,13,212,5,9,8,13
	.byte	'value',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1965
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,13,216,5,3
	.word	86434
	.byte	31,13,221,5,9,8,13
	.byte	'pDivider',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	464
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	464
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	237
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,13,227,5,3
	.word	86505
	.byte	31,13,231,5,9,12,13
	.byte	'k2Step',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	237
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	86394
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,13,236,5,3
	.word	86622
	.byte	3
	.word	177
	.byte	31,13,244,5,9,48,13
	.byte	'ccucon0',0
	.word	86434
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	86434
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	86434
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	86434
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	86434
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	86434
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,13,252,5,3
	.word	86724
	.byte	31,13,128,6,9,8,13
	.byte	'value',0
	.word	1965
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1965
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,13,132,6,3
	.word	86876
	.byte	3
	.word	86622
	.byte	31,13,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	464
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	86952
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	86505
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,13,142,6,3
	.word	86957
	.byte	31,24,59,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	18866
	.byte	1,2,35,12,0,20
	.word	87074
	.byte	32
	.byte	'IfxQspi_Mrst_In',0,24,64,3
	.word	87125
	.byte	31,24,67,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	18866
	.byte	1,2,35,12,0,20
	.word	87154
	.byte	32
	.byte	'IfxQspi_Mtsr_In',0,24,72,3
	.word	87205
	.byte	31,24,75,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	18866
	.byte	1,2,35,12,0,20
	.word	87234
	.byte	32
	.byte	'IfxQspi_Sclk_In',0,24,80,3
	.word	87285
	.byte	31,24,83,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	18866
	.byte	1,2,35,12,0,20
	.word	87314
	.byte	32
	.byte	'IfxQspi_Slsi_In',0,24,88,3
	.word	87365
	.byte	31,24,99,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,12,0,20
	.word	87394
	.byte	32
	.byte	'IfxQspi_Mrst_Out',0,24,104,3
	.word	87445
	.byte	31,24,107,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,12,0,20
	.word	87475
	.byte	32
	.byte	'IfxQspi_Mtsr_Out',0,24,112,3
	.word	87526
	.byte	31,24,115,15,16,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,12,0,20
	.word	87556
	.byte	32
	.byte	'IfxQspi_Sclk_Out',0,24,120,3
	.word	87607
	.byte	31,24,123,15,20,13
	.byte	'module',0
	.word	15623
	.byte	4,2,35,0,13
	.byte	'slsoNr',0
	.word	17547
	.byte	4,2,35,4,13
	.byte	'pin',0
	.word	86334
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	10229
	.byte	1,2,35,16,0,20
	.word	87637
	.byte	32
	.byte	'IfxQspi_Slso_Out',0,24,129,1,3
	.word	87704
	.byte	32
	.byte	'IfxQspi_ChannelId',0,11,112,3
	.word	16608
	.byte	15,11,162,1,9,1,16
	.byte	'IfxQspi_Mode_master',0,0,16
	.byte	'IfxQspi_Mode_pwmOverQspi',0,1,16
	.byte	'IfxQspi_Mode_slave',0,2,0,32
	.byte	'IfxQspi_Mode',0,11,167,1,3
	.word	87761
	.byte	32
	.byte	'IfxQspi_Phase',0,11,190,1,3
	.word	15683
	.byte	15,11,194,1,9,1,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfWait',0,0,16
	.byte	'IfxQspi_PhaseTransitionEvent_serialClockPolarityChange',0,1,16
	.byte	'IfxQspi_PhaseTransitionEvent_startOfFrame',0,2,16
	.byte	'IfxQspi_PhaseTransitionEvent_transmitBufferEmptied',0,3,16
	.byte	'IfxQspi_PhaseTransitionEvent_receiveBufferFilled',0,4,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfFrame',0,5,16
	.byte	'IfxQspi_PhaseTransitionEvent_dataNotAvailable',0,6,16
	.byte	'IfxQspi_PhaseTransitionEvent_endOfExpect',0,7,0,32
	.byte	'IfxQspi_PhaseTransitionEvent',0,11,204,1,3
	.word	87883
	.byte	15,11,208,1,9,1,16
	.byte	'IfxQspi_Reset_none',0,0,16
	.byte	'IfxQspi_Reset_stateMachineAndFifo',0,7,16
	.byte	'IfxQspi_Reset_kernel',0,15,0,32
	.byte	'IfxQspi_Reset',0,11,213,1,3
	.word	88307
	.byte	15,11,217,1,9,1,16
	.byte	'IfxQspi_RxFifoInt_0',0,0,16
	.byte	'IfxQspi_RxFifoInt_1',0,1,16
	.byte	'IfxQspi_RxFifoInt_2',0,2,16
	.byte	'IfxQspi_RxFifoInt_3',0,3,0,32
	.byte	'IfxQspi_RxFifoInt',0,11,223,1,3
	.word	88417
	.byte	15,11,228,1,9,1,16
	.byte	'IfxQspi_SleepMode_enable',0,0,16
	.byte	'IfxQspi_SleepMode_disable',0,1,0,32
	.byte	'IfxQspi_SleepMode',0,11,232,1,3
	.word	88539
	.byte	15,11,146,2,9,1,16
	.byte	'IfxQspi_TxFifoInt_1',0,0,16
	.byte	'IfxQspi_TxFifoInt_2',0,1,16
	.byte	'IfxQspi_TxFifoInt_3',0,2,16
	.byte	'IfxQspi_TxFifoInt_4',0,3,0,32
	.byte	'IfxQspi_TxFifoInt',0,11,152,2,3
	.word	88628
	.byte	15,11,158,2,9,1,16
	.byte	'IfxQspi_FifoMode_combinedMove',0,0,16
	.byte	'IfxQspi_FifoMode_singleMove',0,1,16
	.byte	'IfxQspi_FifoMode_batchMove',0,2,0,32
	.byte	'IfxQspi_FifoMode',0,11,163,2,3
	.word	88750
	.byte	15,11,167,2,9,1,16
	.byte	'IfxQspi_SuspendMode_none',0,0,16
	.byte	'IfxQspi_SuspendMode_hard',0,1,16
	.byte	'IfxQspi_SuspendMode_soft',0,2,0,32
	.byte	'IfxQspi_SuspendMode',0,11,172,2,3
	.word	88874
	.byte	32
	.byte	'IfxQspi_DelayConst',0,11,185,2,3
	.word	17326
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46,0,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,29,1,49,19,0,0,30,11,0,49,19,0,0,31,19,1,58,15,59,15,57
	.byte	15,11,15,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,1,54,15,39,12,0,0,34,21,1,73,19,54,15,39,12
	.byte	0,0,35,21,0,54,15,0,0,36,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L109:
	.word	.L457-.L456
.L456:
	.half	3
	.word	.L459-.L458
.L458:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,5,0,0
	.byte	'IfxPort.h',0,6,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0
	.byte	'IfxQspi_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,4,0,0
	.byte	'SpiIf.h',0,7,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxQspi_cfg.h',0,5,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,5,0,0
	.byte	'IfxScu_cfg.h',0,5,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0
	.byte	'IfxQspi_PinMap.h',0,8,0,0,0
.L459:
.L457:
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read16')
	.sect	'.debug_info'
.L110:
	.word	304
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read16',0,1,186,2,6,1,1,1
	.word	.L85,.L200,.L84
	.byte	4
	.byte	'qspi',0,1,186,2,31
	.word	.L201,.L202
	.byte	4
	.byte	'data',0,1,186,2,45
	.word	.L203,.L204
	.byte	4
	.byte	'count',0,1,186,2,61
	.word	.L205,.L206
	.byte	5
	.word	.L85,.L200
	.byte	6
	.byte	'rxFifo',0,1,188,2,31
	.word	.L207,.L208
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read16')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read16')
	.sect	'.debug_line'
.L112:
	.word	.L461-.L460
.L460:
	.half	3
	.word	.L463-.L462
.L462:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L463:
	.byte	5,45,7,0,5,2
	.word	.L85
	.byte	3,187,2,1,5,21,9
	.half	.L427-.L85
	.byte	3,2,1,5,14,9
	.half	.L45-.L427
	.byte	3,3,1,5,35,3,127,1,5,19,9
	.half	.L464-.L45
	.byte	1,5,21,9
	.half	.L44-.L464
	.byte	3,126,1,5,1,7,9
	.half	.L465-.L44
	.byte	3,5,1,7,9
	.half	.L114-.L465
	.byte	0,1,1
.L461:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read16')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L85,0,.L114-.L85,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read32')
	.sect	'.debug_info'
.L115:
	.word	304
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L118,.L117
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read32',0,1,198,2,6,1,1,1
	.word	.L87,.L209,.L86
	.byte	4
	.byte	'qspi',0,1,198,2,31
	.word	.L201,.L210
	.byte	4
	.byte	'data',0,1,198,2,45
	.word	.L211,.L212
	.byte	4
	.byte	'count',0,1,198,2,61
	.word	.L205,.L213
	.byte	5
	.word	.L87,.L209
	.byte	6
	.byte	'rxFifo',0,1,200,2,31
	.word	.L207,.L214
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read32')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read32')
	.sect	'.debug_line'
.L117:
	.word	.L467-.L466
.L466:
	.half	3
	.word	.L469-.L468
.L468:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L469:
	.byte	5,45,7,0,5,2
	.word	.L87
	.byte	3,199,2,1,5,21,9
	.half	.L428-.L87
	.byte	3,2,1,5,14,9
	.half	.L47-.L428
	.byte	3,3,1,5,27,3,127,1,5,19,9
	.half	.L470-.L47
	.byte	1,5,21,9
	.half	.L46-.L470
	.byte	3,126,1,5,1,7,9
	.half	.L471-.L46
	.byte	3,5,1,7,9
	.half	.L119-.L471
	.byte	0,1,1
.L467:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read32')
	.sect	'.debug_ranges'
.L118:
	.word	-1,.L87,0,.L119-.L87,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_read8')
	.sect	'.debug_info'
.L120:
	.word	303
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_read8',0,1,210,2,6,1,1,1
	.word	.L89,.L215,.L88
	.byte	4
	.byte	'qspi',0,1,210,2,30
	.word	.L201,.L216
	.byte	4
	.byte	'data',0,1,210,2,43
	.word	.L217,.L218
	.byte	4
	.byte	'count',0,1,210,2,59
	.word	.L205,.L219
	.byte	5
	.word	.L89,.L215
	.byte	6
	.byte	'rxFifo',0,1,212,2,31
	.word	.L207,.L220
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_read8')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_read8')
	.sect	'.debug_line'
.L122:
	.word	.L473-.L472
.L472:
	.half	3
	.word	.L475-.L474
.L474:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L475:
	.byte	5,45,7,0,5,2
	.word	.L89
	.byte	3,211,2,1,5,21,9
	.half	.L429-.L89
	.byte	3,2,1,5,14,9
	.half	.L49-.L429
	.byte	3,3,1,5,34,3,127,1,5,19,9
	.half	.L476-.L49
	.byte	1,5,21,9
	.half	.L48-.L476
	.byte	3,126,1,5,1,7,9
	.half	.L477-.L48
	.byte	3,5,1,7,9
	.half	.L124-.L477
	.byte	0,1,1
.L473:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_read8')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L89,0,.L124-.L89,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_info'
.L125:
	.word	272
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_resetModule',0,1,238,2,6,1,1,1
	.word	.L93,.L221,.L92
	.byte	4
	.byte	'qspi',0,1,238,2,36
	.word	.L201,.L222
	.byte	5
	.word	.L93,.L221
	.byte	6
	.byte	'passwd',0,1,240,2,12
	.word	.L223,.L224
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_line'
.L127:
	.word	.L479-.L478
.L478:
	.half	3
	.word	.L481-.L480
.L480:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L481:
	.byte	5,6,7,0,5,2
	.word	.L93
	.byte	3,237,2,1,5,53,9
	.half	.L431-.L93
	.byte	3,2,1,5,19,9
	.half	.L430-.L431
	.byte	1,5,31,9
	.half	.L433-.L430
	.byte	3,1,1,5,18,9
	.half	.L432-.L433
	.byte	3,1,1,5,29,9
	.half	.L482-.L432
	.byte	3,2,1,5,23,9
	.half	.L434-.L482
	.byte	3,126,1,5,18,9
	.half	.L483-.L434
	.byte	3,1,1,5,23,9
	.half	.L484-.L483
	.byte	1,5,29,9
	.half	.L485-.L484
	.byte	3,1,1,5,30,9
	.half	.L52-.L485
	.byte	3,2,1,5,38,9
	.half	.L486-.L52
	.byte	1,5,31,7,9
	.half	.L487-.L486
	.byte	3,4,1,5,29,9
	.half	.L488-.L487
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L435-.L488
	.byte	1,5,29,9
	.half	.L489-.L435
	.byte	3,1,1,5,1,7,9
	.half	.L129-.L489
	.byte	3,1,0,1,1
.L479:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L93,0,.L129-.L93,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write16')
	.sect	'.debug_info'
.L130:
	.word	343
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write16',0,1,157,3,6,1,1,1
	.word	.L97,.L225,.L96
	.byte	4
	.byte	'qspi',0,1,157,3,32
	.word	.L201,.L226
	.byte	4
	.byte	'channelId',0,1,157,3,56
	.word	.L227,.L228
	.byte	4
	.byte	'data',0,1,157,3,75
	.word	.L203,.L229
	.byte	4
	.byte	'count',0,1,157,3,91
	.word	.L205,.L230
	.byte	5
	.word	.L231
	.byte	6
	.byte	'cs',0,1,159,3,34
	.word	.L232,.L233
	.byte	6
	.byte	'dataEntry',0,1,160,3,34
	.word	.L234,.L235
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write16')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write16')
	.sect	'.debug_line'
.L132:
	.word	.L491-.L490
.L490:
	.half	3
	.word	.L493-.L492
.L492:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L493:
	.byte	5,46,7,0,5,2
	.word	.L97
	.byte	3,158,3,1,5,21,9
	.half	.L440-.L97
	.byte	3,3,1,5,14,9
	.half	.L58-.L440
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L494-.L58
	.byte	1,5,21,9
	.half	.L57-.L494
	.byte	3,126,1,5,1,7,9
	.half	.L495-.L57
	.byte	3,5,1,7,9
	.half	.L134-.L495
	.byte	0,1,1
.L491:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write16')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L97,0,.L134-.L97,0,0
.L231:
	.word	-1,.L97,0,.L225-.L97,-1,.L99,0,.L199-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write32')
	.sect	'.debug_info'
.L135:
	.word	347
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write32',0,1,170,3,6,1,1,1
	.word	.L101,.L236,.L100
	.byte	4
	.byte	'qspi',0,1,170,3,32
	.word	.L201,.L237
	.byte	4
	.byte	'channelId',0,1,170,3,56
	.word	.L227,.L238
	.byte	4
	.byte	'data',0,1,170,3,75
	.word	.L211,.L239
	.byte	4
	.byte	'count',0,1,170,3,91
	.word	.L205,.L240
	.byte	5
	.word	.L101,.L236
	.byte	6
	.byte	'cs',0,1,172,3,34
	.word	.L232,.L241
	.byte	6
	.byte	'dataEntry',0,1,173,3,34
	.word	.L234,.L242
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write32')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write32')
	.sect	'.debug_line'
.L137:
	.word	.L497-.L496
.L496:
	.half	3
	.word	.L499-.L498
.L498:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L499:
	.byte	5,46,7,0,5,2
	.word	.L101
	.byte	3,171,3,1,5,21,9
	.half	.L442-.L101
	.byte	3,3,1,5,14,9
	.half	.L60-.L442
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L500-.L60
	.byte	1,5,21,9
	.half	.L59-.L500
	.byte	3,126,1,5,1,7,9
	.half	.L501-.L59
	.byte	3,5,1,7,9
	.half	.L139-.L501
	.byte	0,1,1
.L497:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write32')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L101,0,.L139-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_write8')
	.sect	'.debug_info'
.L140:
	.word	346
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L143,.L142
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_write8',0,1,183,3,6,1,1,1
	.word	.L103,.L243,.L102
	.byte	4
	.byte	'qspi',0,1,183,3,31
	.word	.L201,.L244
	.byte	4
	.byte	'channelId',0,1,183,3,55
	.word	.L227,.L245
	.byte	4
	.byte	'data',0,1,183,3,73
	.word	.L217,.L246
	.byte	4
	.byte	'count',0,1,183,3,89
	.word	.L205,.L247
	.byte	5
	.word	.L103,.L243
	.byte	6
	.byte	'cs',0,1,185,3,34
	.word	.L232,.L248
	.byte	6
	.byte	'dataEntry',0,1,186,3,34
	.word	.L234,.L249
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_write8')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_write8')
	.sect	'.debug_line'
.L142:
	.word	.L503-.L502
.L502:
	.half	3
	.word	.L505-.L504
.L504:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L505:
	.byte	5,46,7,0,5,2
	.word	.L103
	.byte	3,184,3,1,5,21,9
	.half	.L443-.L103
	.byte	3,3,1,5,14,9
	.half	.L62-.L443
	.byte	3,3,1,5,24,3,127,1,5,22,9
	.half	.L506-.L62
	.byte	1,5,21,9
	.half	.L61-.L506
	.byte	3,126,1,5,1,7,9
	.half	.L507-.L61
	.byte	3,5,1,7,9
	.half	.L144-.L507
	.byte	0,1,1
.L503:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_write8')
	.sect	'.debug_ranges'
.L143:
	.word	-1,.L103,0,.L144-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_info'
.L145:
	.word	331
	.half	3
	.word	.L146
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L148,.L147
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calcRealBaudrate',0,1,55,7
	.word	.L250
	.byte	1,1,1
	.word	.L71,.L251,.L70
	.byte	4
	.byte	'qspi',0,1,55,42
	.word	.L201,.L252
	.byte	4
	.byte	'channelId',0,1,55,66
	.word	.L227,.L253
	.byte	5
	.word	.L71,.L251
	.byte	6
	.byte	'cs',0,1,57,19
	.word	.L232,.L254
	.byte	6
	.byte	'fQspi',0,1,58,19
	.word	.L250,.L255
	.byte	6
	.byte	'econ',0,1,59,19
	.word	.L256,.L257
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_abbrev'
.L146:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_line'
.L147:
	.word	.L509-.L508
.L508:
	.half	3
	.word	.L511-.L510
.L510:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L511:
	.byte	5,7,7,0,5,2
	.word	.L71
	.byte	3,54,1,5,27,9
	.half	.L378-.L71
	.byte	3,2,1,5,52,3,1,1,5,28,9
	.half	.L377-.L378
	.byte	3,2,1,5,9,9
	.half	.L512-.L377
	.byte	1,5,32,9
	.half	.L513-.L512
	.byte	1,5,16,9
	.half	.L379-.L513
	.byte	1,5,44,9
	.half	.L514-.L379
	.byte	3,1,1,5,38,9
	.half	.L515-.L514
	.byte	3,2,1,5,48,9
	.half	.L516-.L515
	.byte	3,126,1,5,73,3,2,1,5,48,9
	.half	.L517-.L516
	.byte	3,126,1,5,24,9
	.half	.L518-.L517
	.byte	1,5,37,9
	.half	.L380-.L518
	.byte	3,1,1,5,40,9
	.half	.L519-.L380
	.byte	1,5,38,9
	.half	.L520-.L519
	.byte	3,1,1,5,24,9
	.half	.L521-.L520
	.byte	3,127,1,5,58,9
	.half	.L522-.L521
	.byte	3,1,1,5,46,9
	.half	.L523-.L522
	.byte	1,5,73,9
	.half	.L524-.L523
	.byte	1,5,61,9
	.half	.L525-.L524
	.byte	1,5,41,9
	.half	.L526-.L525
	.byte	1,5,61,9
	.half	.L527-.L526
	.byte	1,5,24,9
	.half	.L528-.L527
	.byte	1,5,1,3,2,1,7,9
	.half	.L149-.L528
	.byte	0,1,1
.L509:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_ranges'
.L148:
	.word	-1,.L71,0,.L149-.L71,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_info'
.L150:
	.word	389
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L153,.L152
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateBasicConfigurationValue',0,1,68,8
	.word	.L258
	.byte	1,1,1
	.word	.L73,.L259,.L72
	.byte	4
	.byte	'qspi',0,1,68,59
	.word	.L201,.L260
	.byte	4
	.byte	'channelId',0,1,68,89
	.word	.L261,.L262
	.byte	4
	.byte	'chMode',0,1,68,120
	.word	.L263,.L264
	.byte	4
	.byte	'baudrate',0,1,68,140,1
	.word	.L265,.L266
	.byte	5
	.word	.L73,.L259
	.byte	5
	.word	.L267,.L259
	.byte	6
	.byte	'bacon',0,1,72,24
	.word	.L268,.L269
	.byte	6
	.byte	'delayConst',0,1,73,24
	.word	.L270,.L271
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_line'
.L152:
	.word	.L530-.L529
.L529:
	.half	3
	.word	.L532-.L531
.L531:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L532:
	.byte	5,8,7,0,5,2
	.word	.L73
	.byte	3,195,0,1,5,13,9
	.half	.L267-.L73
	.byte	3,6,1,5,62,3,2,1,5,12,9
	.half	.L382-.L267
	.byte	3,2,1,5,20,9
	.half	.L533-.L382
	.byte	1,5,35,3,2,1,5,20,9
	.half	.L534-.L533
	.byte	1,5,35,3,1,1,5,20,9
	.half	.L535-.L534
	.byte	1,5,35,9
	.half	.L536-.L535
	.byte	3,1,1,5,20,9
	.half	.L537-.L536
	.byte	1,5,12,9
	.half	.L538-.L537
	.byte	3,1,1,5,35,1,5,20,9
	.half	.L539-.L538
	.byte	1,5,35,3,1,1,5,20,9
	.half	.L540-.L539
	.byte	1,5,35,9
	.half	.L541-.L540
	.byte	3,1,1,5,20,9
	.half	.L542-.L541
	.byte	1,5,12,9
	.half	.L543-.L542
	.byte	3,1,1,5,29,1,5,20,9
	.half	.L544-.L543
	.byte	1,9
	.half	.L545-.L544
	.byte	3,1,1,5,29,3,1,1,5,20,9
	.half	.L546-.L545
	.byte	1,9
	.half	.L547-.L546
	.byte	3,1,1,5,28,9
	.half	.L548-.L547
	.byte	3,1,1,5,40,9
	.half	.L549-.L548
	.byte	1,5,20,9
	.half	.L550-.L549
	.byte	1,9
	.half	.L551-.L550
	.byte	3,1,1,5,1,3,3,1,7,9
	.half	.L154-.L551
	.byte	0,1,1
.L530:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_ranges'
.L153:
	.word	-1,.L73,0,.L154-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_info'
.L155:
	.word	693
	.half	3
	.word	.L156
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L158,.L157
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateExtendedConfigurationValue',0,1,97,8
	.word	.L258
	.byte	1,1,1
	.word	.L75,.L272,.L74
	.byte	4
	.byte	'qspi',0,1,97,62
	.word	.L201,.L273
	.byte	4
	.byte	'cs',0,1,97,80
	.word	.L274,.L275
	.byte	4
	.byte	'chConfig',0,1,97,106
	.word	.L276,.L277
	.byte	5
	.word	.L75,.L272
	.byte	5
	.word	.L278,.L272
	.byte	6
	.byte	'econ',0,1,101,19
	.word	.L279,.L280
	.byte	5
	.word	.L281,.L272
	.byte	6
	.byte	'tQspi',0,1,105,19
	.word	.L250,.L282
	.byte	6
	.byte	'fBaud',0,1,106,19
	.word	.L250,.L283
	.byte	6
	.byte	'q',0,1,109,19
	.word	.L232,.L284
	.byte	6
	.byte	'bestQ',0,1,109,22
	.word	.L232,.L285
	.byte	6
	.byte	'abc',0,1,109,33
	.word	.L232,.L286
	.byte	6
	.byte	'bestAbc',0,1,109,38
	.word	.L232,.L287
	.byte	6
	.byte	'halfBaud',0,1,109,56
	.word	.L232,.L288
	.byte	6
	.byte	'diffB',0,1,110,19
	.word	.L289,.L290
	.byte	6
	.byte	'bestError',0,1,111,26
	.word	.L250,.L291
	.byte	6
	.byte	'tTmp',0,1,112,19
	.word	.L250,.L292
	.byte	6
	.byte	'tBaudTmp',0,1,112,25
	.word	.L250,.L293
	.byte	7
	.word	.L294,.L281,.L295
	.byte	8
	.word	.L296,.L297
	.byte	9
	.word	.L298,.L299
	.byte	7
	.word	.L304,.L281,.L305
	.byte	8
	.word	.L306,.L307
	.byte	10
	.word	.L308,.L281,.L305
	.byte	0,0,0,7
	.word	.L294,.L300,.L301
	.byte	8
	.word	.L296,.L297
	.byte	0,7
	.word	.L294,.L302,.L303
	.byte	8
	.word	.L296,.L297
	.byte	0,11
	.word	.L309
	.byte	6
	.byte	'tBaud',0,1,121,13
	.word	.L250,.L312
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_abbrev'
.L156:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_line'
.L157:
	.word	.L553-.L552
.L552:
	.half	3
	.word	.L555-.L554
.L554:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L555:
	.byte	5,8,7,0,5,2
	.word	.L75
	.byte	3,224,0,1,5,12,9
	.half	.L278-.L75
	.byte	3,5,1,4,2,5,5,3,239,6,1,5,37,9
	.half	.L281-.L278
	.byte	3,2,1,5,65,9
	.half	.L305-.L281
	.byte	3,31,1,4,1,5,37,9
	.half	.L295-.L305
	.byte	3,244,120,1,4,2,5,69,9
	.half	.L300-.L295
	.byte	3,140,7,1,4,1,5,37,3,135,121,1,4,2,5,69,9
	.half	.L556-.L300
	.byte	3,249,6,1,4,1,5,28,9
	.half	.L301-.L556
	.byte	3,243,120,1,4,2,5,45,9
	.half	.L302-.L301
	.byte	3,141,7,1,4,1,5,15,9
	.half	.L303-.L302
	.byte	3,253,120,1,5,46,9
	.half	.L557-.L303
	.byte	3,122,1,5,32,9
	.half	.L385-.L557
	.byte	3,124,1,5,15,9
	.half	.L386-.L385
	.byte	3,10,1,9
	.half	.L558-.L386
	.byte	3,3,1,5,17,9
	.half	.L310-.L558
	.byte	3,5,1,5,25,9
	.half	.L387-.L310
	.byte	3,126,1,5,17,9
	.half	.L388-.L387
	.byte	3,2,1,5,14,9
	.half	.L559-.L388
	.byte	3,2,1,5,28,9
	.half	.L311-.L559
	.byte	3,112,1,5,18,9
	.half	.L389-.L311
	.byte	3,6,1,5,24,9
	.half	.L5-.L389
	.byte	3,12,1,5,22,9
	.half	.L560-.L5
	.byte	1,5,29,9
	.half	.L390-.L560
	.byte	3,1,1,5,39,9
	.half	.L561-.L390
	.byte	1,5,37,9
	.half	.L562-.L561
	.byte	1,5,16,9
	.half	.L563-.L562
	.byte	1,5,17,9
	.half	.L392-.L563
	.byte	3,2,1,5,9,9
	.half	.L394-.L392
	.byte	1,5,21,7,9
	.half	.L564-.L394
	.byte	3,5,1,5,14,9
	.half	.L393-.L564
	.byte	1,5,15,7,9
	.half	.L565-.L393
	.byte	3,2,1,5,18,1,5,20,9
	.half	.L8-.L565
	.byte	3,3,1,5,27,9
	.half	.L7-.L8
	.byte	3,5,1,5,25,9
	.half	.L566-.L7
	.byte	1,5,20,9
	.half	.L391-.L566
	.byte	3,1,1,5,13,9
	.half	.L11-.L391
	.byte	3,2,1,5,17,9
	.half	.L567-.L11
	.byte	3,3,1,7,9
	.half	.L568-.L567
	.byte	1,5,78,7,9
	.half	.L397-.L568
	.byte	1,5,27,7,9
	.half	.L13-.L397
	.byte	3,2,1,9
	.half	.L569-.L13
	.byte	3,1,1,5,13,9
	.half	.L15-.L569
	.byte	3,5,1,5,20,7,9
	.half	.L398-.L15
	.byte	3,115,1,5,17,9
	.half	.L570-.L398
	.byte	3,17,1,5,42,7,9
	.half	.L12-.L570
	.byte	3,90,1,5,37,1,5,19,7,9
	.half	.L17-.L12
	.byte	3,50,1,5,9,9
	.half	.L399-.L17
	.byte	1,5,45,7,9
	.half	.L400-.L399
	.byte	3,1,1,5,43,7,9
	.half	.L401-.L400
	.byte	3,1,1,5,17,7,9
	.half	.L571-.L401
	.byte	3,2,1,9
	.half	.L395-.L571
	.byte	3,1,1,9
	.half	.L402-.L395
	.byte	3,1,1,5,26,9
	.half	.L18-.L402
	.byte	3,16,1,5,18,9
	.half	.L572-.L18
	.byte	1,5,32,9
	.half	.L403-.L572
	.byte	3,1,1,5,20,9
	.half	.L573-.L403
	.byte	3,124,1,5,29,9
	.half	.L404-.L573
	.byte	3,4,1,5,45,9
	.half	.L574-.L404
	.byte	1,5,18,9
	.half	.L575-.L574
	.byte	1,5,29,9
	.half	.L576-.L575
	.byte	3,125,1,5,18,9
	.half	.L406-.L576
	.byte	3,3,1,5,27,9
	.half	.L577-.L406
	.byte	3,1,1,5,18,9
	.half	.L578-.L577
	.byte	1,5,20,9
	.half	.L579-.L578
	.byte	3,1,1,5,32,9
	.half	.L580-.L579
	.byte	1,5,18,9
	.half	.L405-.L580
	.byte	1,5,35,3,2,1,5,47,9
	.half	.L581-.L405
	.byte	1,5,18,9
	.half	.L582-.L581
	.byte	1,5,35,9
	.half	.L583-.L582
	.byte	3,1,1,5,18,9
	.half	.L584-.L583
	.byte	1,5,34,3,1,1,5,18,9
	.half	.L585-.L584
	.byte	1,5,1,3,3,1,7,9
	.half	.L159-.L585
	.byte	0,1,1
.L553:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_ranges'
.L158:
	.word	-1,.L75,0,.L159-.L75,0,0
.L299:
	.word	-1,.L75,.L281-.L75,.L295-.L75,.L300-.L75,.L301-.L75,.L302-.L75,.L303-.L75,0,0
.L309:
	.word	-1,.L75,.L310-.L75,.L311-.L75,.L5-.L75,.L272-.L75,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_info'
.L160:
	.word	448
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L163,.L162
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculatePrescaler',0,1,210,1,8
	.word	.L258
	.byte	1,1,1
	.word	.L77,.L313,.L76
	.byte	4
	.byte	'qspi',0,1,210,1,45
	.word	.L201,.L314
	.byte	4
	.byte	'baudrate',0,1,210,1,57
	.word	.L250,.L315
	.byte	5
	.word	.L77,.L313
	.byte	6
	.byte	'bestError',0,1,212,1,19
	.word	.L250,.L316
	.byte	6
	.byte	'halfBaud',0,1,213,1,12
	.word	.L250,.L317
	.byte	7
	.word	.L304,.L318,.L319
	.byte	8
	.word	.L306,.L320
	.byte	9
	.word	.L308,.L318,.L319
	.byte	0,5
	.word	.L321,.L313
	.byte	6
	.byte	'i',0,1,216,1,12
	.word	.L258,.L322
	.byte	6
	.byte	'bestPre',0,1,216,1,15
	.word	.L258,.L323
	.byte	5
	.word	.L24,.L25
	.byte	6
	.byte	'tempHalfBaud',0,1,220,1,15
	.word	.L250,.L324
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_line'
.L162:
	.word	.L587-.L586
.L586:
	.half	3
	.word	.L589-.L588
.L588:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.h',0,0,0,0,0
.L589:
	.byte	5,34,7,0,5,2
	.word	.L77
	.byte	3,212,1,1,5,23,9
	.half	.L590-.L77
	.byte	1,4,2,5,5,3,128,6,1,5,37,9
	.half	.L318-.L590
	.byte	3,2,1,4,1,5,17,9
	.half	.L319-.L318
	.byte	3,128,122,1,5,23,9
	.half	.L321-.L319
	.byte	3,1,1,5,12,9
	.half	.L408-.L321
	.byte	3,2,1,5,22,1,5,41,9
	.half	.L24-.L408
	.byte	3,2,1,5,52,9
	.half	.L591-.L24
	.byte	1,5,44,9
	.half	.L592-.L591
	.byte	1,5,38,9
	.half	.L593-.L592
	.byte	1,5,17,9
	.half	.L409-.L593
	.byte	3,1,1,5,13,9
	.half	.L411-.L409
	.byte	3,2,1,5,23,9
	.half	.L594-.L411
	.byte	3,2,1,5,25,9
	.half	.L25-.L594
	.byte	3,121,1,5,22,1,5,5,7,9
	.half	.L413-.L25
	.byte	3,12,1,5,1,3,1,1,7,9
	.half	.L164-.L413
	.byte	0,1,1
.L587:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_ranges'
.L163:
	.word	-1,.L77,0,.L164-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_info'
.L165:
	.word	447
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateTimeQuantumLength',0,1,234,1,8
	.word	.L258
	.byte	1,1,1
	.word	.L79,.L325,.L78
	.byte	4
	.byte	'qspi',0,1,234,1,53
	.word	.L201,.L326
	.byte	4
	.byte	'maxBaudrate',0,1,234,1,65
	.word	.L250,.L327
	.byte	5
	.word	.L79,.L325
	.byte	5
	.word	.L328,.L325
	.byte	6
	.byte	'abcq',0,1,241,1,12
	.word	.L258,.L329
	.byte	6
	.byte	'tq',0,1,241,1,29
	.word	.L258,.L330
	.byte	6
	.byte	'bestTq',0,1,241,1,33
	.word	.L258,.L331
	.byte	6
	.byte	'realTQ',0,1,242,1,12
	.word	.L250,.L332
	.byte	6
	.byte	'bestDelta',0,1,242,1,30
	.word	.L250,.L333
	.byte	6
	.byte	'achievedMax',0,1,242,1,41
	.word	.L250,.L334
	.byte	6
	.byte	'fQspi',0,1,243,1,12
	.word	.L250,.L335
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_line'
.L167:
	.word	.L596-.L595
.L595:
	.half	3
	.word	.L598-.L597
.L597:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L598:
	.byte	5,8,7,0,5,2
	.word	.L79
	.byte	3,233,1,1,5,45,3,9,1,5,26,9
	.half	.L328-.L79
	.byte	3,7,1,5,30,9
	.half	.L599-.L328
	.byte	1,5,31,9
	.half	.L600-.L599
	.byte	3,1,1,5,23,9
	.half	.L601-.L600
	.byte	3,127,1,5,17,9
	.half	.L414-.L601
	.byte	3,2,1,5,31,9
	.half	.L602-.L414
	.byte	3,127,1,5,22,9
	.half	.L603-.L602
	.byte	1,5,17,9
	.half	.L416-.L603
	.byte	3,1,1,5,15,9
	.half	.L28-.L416
	.byte	3,2,1,5,41,1,5,46,9
	.half	.L29-.L28
	.byte	3,2,1,5,44,9
	.half	.L604-.L29
	.byte	1,5,29,9
	.half	.L605-.L604
	.byte	1,5,39,9
	.half	.L419-.L605
	.byte	3,1,1,5,23,9
	.half	.L420-.L419
	.byte	1,5,35,9
	.half	.L421-.L420
	.byte	3,1,1,5,29,9
	.half	.L606-.L421
	.byte	1,5,23,9
	.half	.L422-.L606
	.byte	3,1,1,5,13,9
	.half	.L31-.L422
	.byte	3,2,1,5,48,9
	.half	.L607-.L31
	.byte	1,5,23,7,9
	.half	.L608-.L607
	.byte	3,2,1,9
	.half	.L609-.L608
	.byte	3,1,1,5,13,9
	.half	.L32-.L609
	.byte	3,3,1,5,37,9
	.half	.L610-.L32
	.byte	1,5,47,7,9
	.half	.L611-.L610
	.byte	3,115,1,5,41,1,5,25,7,9
	.half	.L34-.L611
	.byte	3,19,1,5,17,9
	.half	.L417-.L34
	.byte	1,5,1,3,1,1,7,9
	.half	.L169-.L417
	.byte	0,1,1
.L596:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L79,0,.L169-.L79,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_info'
.L170:
	.word	275
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_getAddress',0,1,149,2,11
	.word	.L201
	.byte	1,1,1
	.word	.L81,.L336,.L80
	.byte	4
	.byte	'qspi',0,1,149,2,44
	.word	.L337,.L338
	.byte	5
	.word	.L81,.L336
	.byte	6
	.byte	'module',0,1,151,2,15
	.word	.L201,.L339
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_line'
.L172:
	.word	.L613-.L612
.L612:
	.half	3
	.word	.L615-.L614
.L614:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L615:
	.byte	5,5,7,0,5,2
	.word	.L81
	.byte	3,152,2,1,5,30,7,9
	.half	.L616-.L81
	.byte	3,2,1,5,50,9
	.half	.L617-.L616
	.byte	1,5,56,9
	.half	.L618-.L617
	.byte	1,5,1,9
	.half	.L424-.L618
	.byte	3,8,1,5,16,7,9
	.half	.L37-.L424
	.byte	3,124,1,5,1,9
	.half	.L425-.L37
	.byte	3,4,1,7,9
	.half	.L174-.L425
	.byte	0,1,1
.L613:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L81,0,.L174-.L81,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_info'
.L175:
	.word	292
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_getIndex',0,1,166,2,15
	.word	.L337
	.byte	1,1,1
	.word	.L83,.L340,.L82
	.byte	4
	.byte	'qspi',0,1,166,2,42
	.word	.L201,.L341
	.byte	5
	.word	.L83,.L340
	.byte	6
	.byte	'index',0,1,168,2,19
	.word	.L258,.L342
	.byte	6
	.byte	'result',0,1,169,2,19
	.word	.L337,.L343
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_line'
.L177:
	.word	.L620-.L619
.L619:
	.half	3
	.word	.L622-.L621
.L621:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L622:
	.byte	5,12,7,0,5,2
	.word	.L83
	.byte	3,170,2,1,5,13,3,4,1,5,48,9
	.half	.L623-.L83
	.byte	3,126,1,5,40,9
	.half	.L40-.L623
	.byte	3,2,1,5,9,9
	.half	.L624-.L40
	.byte	1,5,64,7,9
	.half	.L625-.L624
	.byte	3,2,1,5,22,9
	.half	.L626-.L625
	.byte	1,5,1,3,6,1,5,55,7,9
	.half	.L41-.L626
	.byte	3,118,1,5,48,1,5,1,7,9
	.half	.L627-.L41
	.byte	3,10,1,7,9
	.half	.L179-.L627
	.byte	0,1,1
.L620:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L83,0,.L179-.L83,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_info'
.L180:
	.word	360
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_recalcBasicConfiguration',0,1,222,2,8
	.word	.L258
	.byte	1,1,1
	.word	.L91,.L344,.L90
	.byte	4
	.byte	'oldBACON',0,1,222,2,48
	.word	.L258,.L345
	.byte	4
	.byte	'numOfData',0,1,222,2,68
	.word	.L205,.L346
	.byte	4
	.byte	'shortData',0,1,222,2,87
	.word	.L347,.L348
	.byte	4
	.byte	'lastData',0,1,222,2,106
	.word	.L347,.L349
	.byte	5
	.word	.L91,.L344
	.byte	6
	.byte	'bacon',0,1,224,2,20
	.word	.L268,.L350
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_line'
.L182:
	.word	.L629-.L628
.L628:
	.half	3
	.word	.L631-.L630
.L630:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L631:
	.byte	5,5,7,0,5,2
	.word	.L91
	.byte	3,226,2,1,5,22,7,9
	.half	.L632-.L91
	.byte	3,2,1,9
	.half	.L633-.L632
	.byte	3,1,1,5,18,9
	.half	.L50-.L633
	.byte	3,3,1,5,1,3,2,1,7,9
	.half	.L184-.L50
	.byte	0,1,1
.L629:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L91,0,.L184-.L91,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_info'
.L185:
	.word	378
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_setSlaveSelectOutputControl',0,1,128,3,6,1,1,1
	.word	.L95,.L351,.L94
	.byte	4
	.byte	'qspi',0,1,128,3,52
	.word	.L201,.L352
	.byte	4
	.byte	'channelId',0,1,128,3,76
	.word	.L227,.L353
	.byte	4
	.byte	'outputEnable',0,1,128,3,95
	.word	.L347,.L354
	.byte	4
	.byte	'activeLevel',0,1,128,3,117
	.word	.L347,.L355
	.byte	5
	.word	.L95,.L351
	.byte	6
	.byte	'mask',0,1,130,3,19
	.word	.L223,.L356
	.byte	6
	.byte	'ssoc',0,1,132,3,19
	.word	.L357,.L358
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_line'
.L187:
	.word	.L635-.L634
.L634:
	.half	3
	.word	.L637-.L636
.L636:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L637:
	.byte	5,26,7,0,5,2
	.word	.L95
	.byte	3,129,3,1,5,24,3,3,1,5,28,9
	.half	.L436-.L95
	.byte	3,125,1,5,15,9
	.half	.L437-.L436
	.byte	3,7,1,5,5,9
	.half	.L638-.L437
	.byte	3,126,1,5,20,7,9
	.half	.L639-.L638
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L53-.L639
	.byte	3,4,1,5,20,9
	.half	.L640-.L53
	.byte	1,5,5,9
	.half	.L54-.L640
	.byte	3,3,1,5,15,9
	.half	.L641-.L54
	.byte	3,2,1,5,5,9
	.half	.L642-.L641
	.byte	3,126,1,5,20,7,9
	.half	.L643-.L642
	.byte	3,2,1,5,27,1,5,23,9
	.half	.L55-.L643
	.byte	3,4,1,5,20,9
	.half	.L438-.L55
	.byte	1,5,26,9
	.half	.L56-.L438
	.byte	3,3,1,5,18,1,5,1,9
	.half	.L644-.L56
	.byte	3,1,1,7,9
	.half	.L189-.L644
	.byte	0,1,1
.L635:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L95,0,.L189-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_info'
.L190:
	.word	527
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L106
	.byte	3
	.byte	'IfxQspi_calculateDelayConstants',0,1,196,3,6,1,1,1
	.word	.L105,.L359,.L104
	.byte	4
	.byte	'qspi',0,1,196,3,54
	.word	.L360,.L361
	.byte	4
	.byte	'channelId',0,1,196,3,84
	.word	.L362,.L363
	.byte	4
	.byte	'chMode',0,1,196,3,115
	.word	.L263,.L364
	.byte	4
	.byte	'delayConst',0,1,196,3,143,1
	.word	.L365,.L366
	.byte	5
	.word	.L105,.L359
	.byte	6
	.byte	'divFactor',0,1,198,3,39
	.word	.L258,.L367
	.byte	6
	.byte	'scaleTemp',0,1,200,3,39
	.word	.L250,.L368
	.byte	6
	.byte	'preTemp',0,1,201,3,39
	.word	.L347,.L369
	.byte	6
	.byte	'preFinal',0,1,202,3,39
	.word	.L347,.L370
	.byte	6
	.byte	'delayTemp',0,1,203,3,39
	.word	.L347,.L371
	.byte	6
	.byte	'delayFinal',0,1,204,3,39
	.word	.L347,.L372
	.byte	6
	.byte	'matchFound',0,1,205,3,39
	.word	.L347,.L373
	.byte	6
	.byte	'index',0,1,206,3,39
	.word	.L347,.L374
	.byte	6
	.byte	'cs',0,1,207,3,39
	.word	.L347,.L375
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_line'
.L192:
	.word	.L646-.L645
.L645:
	.half	3
	.word	.L648-.L647
.L647:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L648:
	.byte	5,44,7,0,5,2
	.word	.L105
	.byte	3,206,3,1,5,35,3,3,1,5,130,1,9
	.half	.L444-.L105
	.byte	1,5,39,9
	.half	.L649-.L444
	.byte	1,5,28,3,3,1,5,63,9
	.half	.L650-.L649
	.byte	3,125,1,5,50,9
	.half	.L445-.L650
	.byte	3,120,1,5,39,3,13,1,5,63,9
	.half	.L446-.L445
	.byte	3,123,1,5,30,3,5,1,5,66,9
	.half	.L651-.L446
	.byte	3,123,1,5,90,1,5,44,9
	.half	.L652-.L651
	.byte	1,5,90,9
	.half	.L653-.L652
	.byte	1,5,115,1,5,50,9
	.half	.L654-.L653
	.byte	3,122,1,5,115,9
	.half	.L447-.L654
	.byte	3,6,1,5,97,9
	.half	.L655-.L447
	.byte	1,5,136,1,1,5,39,9
	.half	.L656-.L655
	.byte	3,5,1,5,136,1,9
	.half	.L657-.L656
	.byte	3,123,1,5,118,9
	.half	.L658-.L657
	.byte	1,5,93,9
	.half	.L659-.L658
	.byte	1,5,71,9
	.half	.L660-.L659
	.byte	1,5,66,9
	.half	.L63-.L660
	.byte	3,8,1,5,38,3,5,1,5,34,9
	.half	.L661-.L63
	.byte	3,123,1,5,20,9
	.half	.L662-.L661
	.byte	3,3,1,5,42,9
	.half	.L448-.L662
	.byte	3,125,1,5,22,9
	.half	.L663-.L448
	.byte	3,5,1,5,42,9
	.half	.L449-.L663
	.byte	3,123,1,5,57,9
	.half	.L64-.L449
	.byte	3,7,1,5,47,9
	.half	.L664-.L64
	.byte	1,5,49,9
	.half	.L665-.L664
	.byte	1,5,44,9
	.half	.L666-.L665
	.byte	1,5,70,9
	.half	.L667-.L666
	.byte	1,5,68,9
	.half	.L668-.L667
	.byte	1,5,25,1,5,13,9
	.half	.L450-.L668
	.byte	3,2,1,5,41,7,9
	.half	.L669-.L450
	.byte	3,2,1,5,21,9
	.half	.L451-.L669
	.byte	1,5,59,9
	.half	.L670-.L451
	.byte	1,5,17,9
	.half	.L671-.L670
	.byte	1,5,22,7,9
	.half	.L452-.L671
	.byte	3,7,1,5,31,7,9
	.half	.L672-.L452
	.byte	3,2,1,5,50,9
	.half	.L66-.L672
	.byte	3,1,1,5,39,9
	.half	.L673-.L66
	.byte	1,5,32,9
	.half	.L674-.L673
	.byte	3,1,1,9
	.half	.L675-.L674
	.byte	3,1,1,5,21,3,1,1,5,47,9
	.half	.L65-.L675
	.byte	3,109,1,5,38,1,5,9,7,9
	.half	.L68-.L65
	.byte	3,28,1,5,24,7,9
	.half	.L676-.L68
	.byte	3,3,1,9
	.half	.L677-.L676
	.byte	3,1,1,5,33,9
	.half	.L69-.L677
	.byte	3,4,1,9
	.half	.L678-.L69
	.byte	3,1,1,5,30,3,83,1,5,1,7,9
	.half	.L679-.L678
	.byte	3,47,1,7,9
	.half	.L194-.L679
	.byte	0,1,1
.L646:
	.sdecl	'.debug_ranges',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L105,0,.L194-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L195:
	.word	212
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L106
	.byte	3
	.byte	'.cocofun_1',0,1,157,3,6,1
	.word	.L99,.L199,.L98
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L197:
	.word	.L681-.L680
.L680:
	.half	3
	.word	.L683-.L682
.L682:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std\\IfxQspi.c',0,0,0,0,0
.L683:
	.byte	5,46,7,0,5,2
	.word	.L99
	.byte	3,158,3,1,5,62,9
	.half	.L439-.L99
	.byte	3,1,1,9
	.half	.L199-.L439
	.byte	0,1,1,5,46,0,5,2
	.word	.L99
	.byte	3,171,3,1,5,62,9
	.half	.L439-.L99
	.byte	3,1,1,9
	.half	.L441-.L439
	.byte	3,115,1,7,9
	.half	.L199-.L441
	.byte	0,1,1,5,46,0,5,2
	.word	.L99
	.byte	3,184,3,1,5,62,9
	.half	.L439-.L99
	.byte	3,1,1,9
	.half	.L441-.L439
	.byte	3,102,1,7,9
	.half	.L199-.L441
	.byte	0,1,1
.L681:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L99,0,.L199-.L99,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L199-.L99
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_loc'
.L70:
	.word	-1,.L71,0,.L376-.L71
	.half	2
	.byte	138,0
	.word	.L376-.L71,.L251-.L71
	.half	2
	.byte	138,32
	.word	.L251-.L71,.L251-.L71
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L71,0,.L377-.L71
	.half	1
	.byte	84
	.word	0,0
.L254:
	.word	-1,.L71,.L377-.L71,.L379-.L71
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	-1,.L71,0,.L251-.L71
	.half	2
	.byte	145,96
	.word	0,0
.L255:
	.word	-1,.L71,.L377-.L71,.L380-.L71
	.half	1
	.byte	82
	.word	0,0
.L252:
	.word	-1,.L71,0,.L377-.L71
	.half	1
	.byte	100
	.word	.L378-.L71,.L251-.L71
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_loc'
.L72:
	.word	-1,.L73,0,.L381-.L73
	.half	2
	.byte	138,0
	.word	.L381-.L73,.L259-.L73
	.half	2
	.byte	138,8
	.word	.L259-.L73,.L259-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	-1,.L73,.L383-.L73,.L259-.L73
	.half	1
	.byte	89
	.word	0,0
.L266:
	.word	-1,.L73,0,.L382-.L73
	.half	1
	.byte	85
	.word	0,0
.L264:
	.word	-1,.L73,0,.L382-.L73
	.half	1
	.byte	101
	.word	.L267-.L73,.L259-.L73
	.half	1
	.byte	111
	.word	0,0
.L262:
	.word	-1,.L73,0,.L382-.L73
	.half	1
	.byte	84
	.word	.L267-.L73,.L259-.L73
	.half	1
	.byte	88
	.word	0,0
.L271:
	.word	-1,.L73,0,.L259-.L73
	.half	2
	.byte	145,120
	.word	0,0
.L260:
	.word	-1,.L73,0,.L382-.L73
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L359-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L364:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	101
	.word	0,0
.L363:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	84
	.word	0,0
.L375:
	.word	-1,.L105,.L444-.L105,.L445-.L105
	.half	1
	.byte	95
	.word	0,0
.L366:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	102
	.word	0,0
.L372:
	.word	-1,.L105,.L447-.L105,.L359-.L105
	.half	1
	.byte	89
	.word	0,0
.L371:
	.word	-1,.L105,.L450-.L105,.L451-.L105
	.half	1
	.byte	82
	.word	.L452-.L105,.L66-.L105
	.half	1
	.byte	82
	.word	0,0
.L367:
	.word	-1,.L105,.L63-.L105,.L359-.L105
	.half	1
	.byte	90
	.word	0,0
.L374:
	.word	0,0
.L373:
	.word	-1,.L105,.L448-.L105,.L359-.L105
	.half	1
	.byte	92
	.word	0,0
.L370:
	.word	-1,.L105,.L446-.L105,.L359-.L105
	.half	1
	.byte	88
	.word	0,0
.L369:
	.word	-1,.L105,.L449-.L105,.L359-.L105
	.half	1
	.byte	93
	.word	0,0
.L361:
	.word	-1,.L105,0,.L63-.L105
	.half	1
	.byte	100
	.word	0,0
.L368:
	.word	-1,.L105,.L64-.L105,.L359-.L105
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L75,0,.L272-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L286:
	.word	-1,.L75,.L311-.L75,.L272-.L75
	.half	1
	.byte	90
	.word	0,0
.L287:
	.word	-1,.L75,.L385-.L75,.L5-.L75
	.half	1
	.byte	85
	.word	.L397-.L75,.L13-.L75
	.half	1
	.byte	85
	.word	.L15-.L75,.L398-.L75
	.half	1
	.byte	85
	.word	.L400-.L75,.L401-.L75
	.half	1
	.byte	85
	.word	.L395-.L75,.L402-.L75
	.half	1
	.byte	85
	.word	.L403-.L75,.L404-.L75
	.half	1
	.byte	85
	.word	0,0
.L291:
	.word	-1,.L75,.L387-.L75,.L272-.L75
	.half	1
	.byte	89
	.word	0,0
.L285:
	.word	-1,.L75,.L389-.L75,.L5-.L75
	.half	1
	.byte	84
	.word	.L399-.L75,.L400-.L75
	.half	1
	.byte	84
	.word	.L401-.L75,.L395-.L75
	.half	1
	.byte	84
	.word	.L402-.L75,.L18-.L75
	.half	1
	.byte	84
	.word	0,0
.L277:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	101
	.word	.L278-.L75,.L272-.L75
	.half	1
	.byte	111
	.word	0,0
.L275:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	84
	.word	0,0
.L290:
	.word	-1,.L75,.L406-.L75,.L272-.L75
	.half	1
	.byte	81
	.word	0,0
.L280:
	.word	-1,.L75,.L281-.L75,.L272-.L75
	.half	1
	.byte	88
	.word	0,0
.L283:
	.word	-1,.L75,.L300-.L75,.L5-.L75
	.half	1
	.byte	81
	.word	0,0
.L288:
	.word	-1,.L75,.L404-.L75,.L405-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L284:
	.word	-1,.L75,.L392-.L75,.L393-.L75
	.half	1
	.byte	81
	.word	.L394-.L75,.L393-.L75
	.half	1
	.byte	82
	.word	.L8-.L75,.L7-.L75
	.half	1
	.byte	81
	.word	.L7-.L75,.L395-.L75
	.half	1
	.byte	82
	.word	.L395-.L75,.L18-.L75
	.half	1
	.byte	95
	.word	0,0
.L273:
	.word	-1,.L75,0,.L305-.L75
	.half	1
	.byte	100
	.word	.L384-.L75,.L272-.L75
	.half	1
	.byte	108
	.word	0,0
.L307:
	.word	0,0
.L297:
	.word	0,0
.L312:
	.word	-1,.L75,.L388-.L75,.L272-.L75
	.half	1
	.byte	87
	.word	0,0
.L293:
	.word	-1,.L75,.L391-.L75,.L396-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L282:
	.word	-1,.L75,.L386-.L75,.L272-.L75
	.half	1
	.byte	83
	.word	0,0
.L292:
	.word	-1,.L75,.L390-.L75,.L391-.L75
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_loc'
.L76:
	.word	-1,.L77,0,.L313-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L315:
	.word	-1,.L77,0,.L319-.L77
	.half	1
	.byte	84
	.word	0,0
.L316:
	.word	-1,.L77,.L407-.L77,.L24-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	.L411-.L77,.L412-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L323:
	.word	-1,.L77,.L408-.L77,.L24-.L77
	.half	1
	.byte	81
	.word	.L413-.L77,.L313-.L77
	.half	1
	.byte	81
	.word	0,0
.L317:
	.word	-1,.L77,.L318-.L77,.L313-.L77
	.half	1
	.byte	88
	.word	0,0
.L322:
	.word	-1,.L77,.L24-.L77,.L313-.L77
	.half	1
	.byte	83
	.word	0,0
.L314:
	.word	-1,.L77,0,.L319-.L77
	.half	1
	.byte	100
	.word	0,0
.L320:
	.word	0,0
.L324:
	.word	-1,.L77,.L409-.L77,.L410-.L77
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_loc'
.L78:
	.word	-1,.L79,0,.L325-.L79
	.half	2
	.byte	138,0
	.word	0,0
.L329:
	.word	-1,.L79,.L29-.L79,.L325-.L79
	.half	1
	.byte	87
	.word	0,0
.L334:
	.word	-1,.L79,.L422-.L79,.L423-.L79
	.half	1
	.byte	95
	.word	0,0
.L333:
	.word	-1,.L79,.L418-.L79,.L325-.L79
	.half	1
	.byte	86
	.word	0,0
.L331:
	.word	-1,.L79,.L416-.L79,.L417-.L79
	.half	1
	.byte	81
	.word	0,0
.L335:
	.word	-1,.L79,.L328-.L79,.L325-.L79
	.half	1
	.byte	82
	.word	0,0
.L327:
	.word	-1,.L79,0,.L328-.L79
	.half	1
	.byte	84
	.word	.L328-.L79,.L325-.L79
	.half	1
	.byte	88
	.word	0,0
.L326:
	.word	-1,.L79,0,.L328-.L79
	.half	1
	.byte	100
	.word	0,0
.L332:
	.word	-1,.L79,.L414-.L79,.L415-.L79
	.half	5
	.byte	144,32,157,32,0
	.word	.L419-.L79,.L420-.L79
	.half	1
	.byte	95
	.word	0,0
.L330:
	.word	-1,.L79,.L421-.L79,.L325-.L79
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_loc'
.L80:
	.word	-1,.L81,0,.L336-.L81
	.half	2
	.byte	138,0
	.word	0,0
.L339:
	.word	-1,.L81,.L424-.L81,.L37-.L81
	.half	1
	.byte	98
	.word	.L425-.L81,.L336-.L81
	.half	1
	.byte	98
	.word	0,0
.L338:
	.word	-1,.L81,0,.L336-.L81
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L83,0,.L340-.L83
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	0,0
.L341:
	.word	-1,.L83,0,.L340-.L83
	.half	1
	.byte	100
	.word	0,0
.L343:
	.word	-1,.L83,.L426-.L83,.L340-.L83
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read16')
	.sect	'.debug_loc'
.L84:
	.word	-1,.L85,0,.L200-.L85
	.half	2
	.byte	138,0
	.word	0,0
.L206:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	84
	.word	0,0
.L204:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	101
	.word	0,0
.L202:
	.word	-1,.L85,0,.L200-.L85
	.half	1
	.byte	100
	.word	0,0
.L208:
	.word	-1,.L85,.L427-.L85,.L200-.L85
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read32')
	.sect	'.debug_loc'
.L86:
	.word	-1,.L87,0,.L209-.L87
	.half	2
	.byte	138,0
	.word	0,0
.L213:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	84
	.word	0,0
.L212:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	101
	.word	0,0
.L210:
	.word	-1,.L87,0,.L209-.L87
	.half	1
	.byte	100
	.word	0,0
.L214:
	.word	-1,.L87,.L428-.L87,.L209-.L87
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_read8')
	.sect	'.debug_loc'
.L88:
	.word	-1,.L89,0,.L215-.L89
	.half	2
	.byte	138,0
	.word	0,0
.L219:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	84
	.word	0,0
.L218:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	101
	.word	0,0
.L216:
	.word	-1,.L89,0,.L215-.L89
	.half	1
	.byte	100
	.word	0,0
.L220:
	.word	-1,.L89,.L429-.L89,.L215-.L89
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_loc'
.L90:
	.word	-1,.L91,0,.L344-.L91
	.half	2
	.byte	138,0
	.word	0,0
.L350:
	.word	-1,.L91,0,.L344-.L91
	.half	1
	.byte	84
	.word	0,0
.L349:
	.word	-1,.L91,0,.L344-.L91
	.half	1
	.byte	87
	.word	0,0
.L346:
	.word	-1,.L91,0,.L344-.L91
	.half	1
	.byte	85
	.word	0,0
.L345:
	.word	-1,.L91,0,.L344-.L91
	.half	1
	.byte	84
	.word	0,0
.L348:
	.word	-1,.L91,0,.L344-.L91
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L221-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L224:
	.word	-1,.L93,.L430-.L93,.L432-.L93
	.half	1
	.byte	82
	.word	.L433-.L93,.L221-.L93
	.half	1
	.byte	88
	.word	.L434-.L93,.L52-.L93
	.half	1
	.byte	84
	.word	.L435-.L93,.L221-.L93
	.half	1
	.byte	84
	.word	0,0
.L222:
	.word	-1,.L93,0,.L430-.L93
	.half	1
	.byte	100
	.word	.L431-.L93,.L221-.L93
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L351-.L95
	.half	2
	.byte	138,0
	.word	0,0
.L355:
	.word	-1,.L95,0,.L351-.L95
	.half	1
	.byte	86
	.word	0,0
.L353:
	.word	-1,.L95,0,.L351-.L95
	.half	1
	.byte	84
	.word	0,0
.L356:
	.word	-1,.L95,.L437-.L95,.L438-.L95
	.half	1
	.byte	95
	.word	0,0
.L354:
	.word	-1,.L95,0,.L351-.L95
	.half	1
	.byte	85
	.word	0,0
.L352:
	.word	-1,.L95,0,.L351-.L95
	.half	1
	.byte	100
	.word	0,0
.L358:
	.word	-1,.L95,.L436-.L95,.L351-.L95
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write16')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L225-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L228:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	84
	.word	.L440-.L97,.L225-.L97
	.half	1
	.byte	84
	.word	0,0
.L230:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	85
	.word	.L440-.L97,.L225-.L97
	.half	1
	.byte	85
	.word	0,0
.L233:
	.word	-1,.L97,.L439-.L97,.L199-.L97
	.half	1
	.byte	95
	.word	.L440-.L97,.L58-.L97
	.half	1
	.byte	95
	.word	0,0
.L229:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	101
	.word	.L440-.L97,.L225-.L97
	.half	1
	.byte	101
	.word	0,0
.L235:
	.word	-1,.L97,.L441-.L97,.L199-.L97
	.half	1
	.byte	111
	.word	.L440-.L97,.L225-.L97
	.half	1
	.byte	111
	.word	0,0
.L226:
	.word	-1,.L97,.L99-.L97,.L199-.L97
	.half	1
	.byte	100
	.word	.L440-.L97,.L225-.L97
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write32')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L236-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	84
	.word	.L442-.L101,.L236-.L101
	.half	1
	.byte	84
	.word	0,0
.L240:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	85
	.word	.L442-.L101,.L236-.L101
	.half	1
	.byte	85
	.word	0,0
.L241:
	.word	-1,.L101,.L439-.L101,.L199-.L101
	.half	1
	.byte	95
	.word	.L442-.L101,.L60-.L101
	.half	1
	.byte	95
	.word	0,0
.L239:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	101
	.word	.L442-.L101,.L236-.L101
	.half	1
	.byte	101
	.word	0,0
.L242:
	.word	-1,.L101,.L441-.L101,.L199-.L101
	.half	1
	.byte	111
	.word	.L442-.L101,.L236-.L101
	.half	1
	.byte	111
	.word	0,0
.L237:
	.word	-1,.L101,.L99-.L101,.L199-.L101
	.half	1
	.byte	100
	.word	.L442-.L101,.L236-.L101
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxQspi_write8')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L243-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L245:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	84
	.word	.L443-.L103,.L243-.L103
	.half	1
	.byte	84
	.word	0,0
.L247:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	85
	.word	.L443-.L103,.L243-.L103
	.half	1
	.byte	85
	.word	0,0
.L248:
	.word	-1,.L103,.L439-.L103,.L199-.L103
	.half	1
	.byte	95
	.word	.L443-.L103,.L62-.L103
	.half	1
	.byte	95
	.word	0,0
.L246:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	101
	.word	.L443-.L103,.L243-.L103
	.half	1
	.byte	101
	.word	0,0
.L249:
	.word	-1,.L103,.L441-.L103,.L199-.L103
	.half	1
	.byte	111
	.word	.L443-.L103,.L243-.L103
	.half	1
	.byte	111
	.word	0,0
.L244:
	.word	-1,.L103,.L99-.L103,.L199-.L103
	.half	1
	.byte	100
	.word	.L443-.L103,.L243-.L103
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L684:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calcRealBaudrate')
	.sect	'.debug_frame'
	.word	36
	.word	.L684,.L71,.L251-.L71
	.byte	4
	.word	(.L376-.L71)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L251-.L376)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateBasicConfigurationValue')
	.sect	'.debug_frame'
	.word	36
	.word	.L684,.L73,.L259-.L73
	.byte	4
	.word	(.L381-.L73)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L259-.L381)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateExtendedConfigurationValue')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L75,.L272-.L75
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculatePrescaler')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L77,.L313-.L77
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateTimeQuantumLength')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L79,.L325-.L79
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L684,.L81,.L336-.L81
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L83,.L340-.L83
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read16')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L85,.L200-.L85
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read32')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L87,.L209-.L87
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_read8')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L89,.L215-.L89
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_recalcBasicConfiguration')
	.sect	'.debug_frame'
	.word	24
	.word	.L684,.L91,.L344-.L91
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L93,.L221-.L93
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_setSlaveSelectOutputControl')
	.sect	'.debug_frame'
	.word	24
	.word	.L684,.L95,.L351-.L95
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write16')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L97,.L225-.L97
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write32')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L101,.L236-.L101
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_write8')
	.sect	'.debug_frame'
	.word	20
	.word	.L684,.L103,.L243-.L103
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxQspi_calculateDelayConstants')
	.sect	'.debug_frame'
	.word	12
	.word	.L684,.L105,.L359-.L105
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L685:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L685,.L99,.L199-.L99
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
