	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\.IfxEray.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc27xd -D__CPU_TC27XD__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c'

	
$TC16X
	
	.sdecl	'.text.IfxEray.IfxEray_calcHeaderCrc',code,cluster('IfxEray_calcHeaderCrc')
	.sect	'.text.IfxEray.IfxEray_calcHeaderCrc'
	.align	2
	
	.global	IfxEray_calcHeaderCrc

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     2   * \file IfxEray.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    49  #include "IfxEray.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    50  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    51  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    52  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    53  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    54  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    55  uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator)
; Function IfxEray_calcHeaderCrc
.L31:
IfxEray_calcHeaderCrc:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    56  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    57      uint32 headerValue = ((syncFrameIndicator & 0x1) << 19) | ((startupFrameIndicator & 0x1) << 18) | ((frameId & 0x7FF) << 7) | (payloadLength &
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    58                                                                                                                                    0x7F);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    60      uint32 crcInit = 0x1A;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    61      uint32 length  = 20;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    62      uint32 crcNext;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    63      uint32 crcPoly = 0x385;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    64      uint32 crcRegX = crcInit;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    65      uint32 headerTemp, regTemp;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    66  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    67      headerValue <<= 11;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    68      crcRegX     <<= 21;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    69      crcPoly     <<= 21;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    70  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    71      while (length)
	and	d15,d7,#1
	lea	a15,19
.L372:
	sha	d0,d15,#19
.L373:
	and	d15,d6,#1
.L374:
	sha	d15,d15,#18
.L375:
	or	d0,d15
.L376:
	insert	d15,d5,#0,#11,#21
.L377:
	movh	d1,#832
.L243:
	sha	d15,#7
.L378:
	or	d0,d15
.L379:
	and	d15,d4,#127
.L380:
	or	d0,d15
.L381:
	sh	d0,d0,#11
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    72      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    73          headerValue <<= 1;
	sh	d0,#1
.L382:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    74          headerTemp    = headerValue & 0x80000000;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    75          regTemp       = crcRegX & 0x80000000;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    76  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    77          if (headerTemp ^ regTemp) // Step 1
	xor	d15,d0,d1
.L383:
	insert	d15,d15,#0,#0,#31
.L384:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    78          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    79              crcNext = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    80          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    81          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    82          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    83              crcNext = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    84          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    85  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    86          crcRegX <<= 1;          // Step 2
	sh	d1,#1
.L385:
	ne	d15,d15,#0
.L244:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    87  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    88          if (crcNext)
	jeq	d15,#0,.L3
.L386:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    89          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    90              crcRegX ^= crcPoly; // Step 3
	movh	d15,#28832
.L245:
	xor	d1,d15
.L3:
	loop	a15,.L2
.L387:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    91          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    92  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    93          length--;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    94      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    95  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    96      crcRegX >>= 21;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    97  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    98      return (uint16)crcRegX;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	    99  }
	sh	d2,d1,#-21
	ret
.L178:
	
__IfxEray_calcHeaderCrc_function_end:
	.size	IfxEray_calcHeaderCrc,__IfxEray_calcHeaderCrc_function_end-IfxEray_calcHeaderCrc
.L111:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_changePocState',code,cluster('IfxEray_changePocState')
	.sect	'.text.IfxEray.IfxEray_changePocState'
	.align	2
	
	.global	IfxEray_changePocState

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   100  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   101  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   102  boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand)
; Function IfxEray_changePocState
IfxEray_changePocState:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   103  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   104      boolean result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   105  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   106      // wait if Communication controller is busy
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   107      while (eray->SUCC1.B.PBSY == 1)
.L5:
	ld.bu	d15,[a4]128
.L353:
	jnz.t	d15:7,.L5
.L354:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   108      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   109  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   110      eray->SUCC1.B.CMD = pocCommand;
	ld.bu	d15,[a4]128
.L355:
	insert	d15,d15,d4,#0,#4
	st.b	[a4]128,d15
.L356:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   112      // if command not accepted, return FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   113      if (eray->SUCC1.B.CMD == 0)
	ld.bu	d15,[a4]128
	and	d15,#15
.L357:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   114      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   115          result = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   116      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   117      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   118      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   119          result = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   120      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   121  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   122      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   123  }
	ne	d2,d15,#0
	ret
.L172:
	
__IfxEray_changePocState_function_end:
	.size	IfxEray_changePocState,__IfxEray_changePocState_function_end-IfxEray_changePocState
.L101:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_clearAllFlags',code,cluster('IfxEray_clearAllFlags')
	.sect	'.text.IfxEray.IfxEray_clearAllFlags'
	.align	2
	
	.global	IfxEray_clearAllFlags

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   124  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   125  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   126  void IfxEray_clearAllFlags(Ifx_ERAY *eray)
; Function IfxEray_clearAllFlags
.L34:
IfxEray_clearAllFlags:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   127  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   128      eray->EIR.U  = 0xFFFFFFFFU;   /* Clear Error Int.                        */
	mov	d15,#-1
	st.w	[a4]32,d15
.L292:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   129      eray->SIR.U  = 0xFFFFFFFFU;   /* Clear Status Int.                       */
	st.w	[a4]36,d15
.L293:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   130      eray->EIER.U = 0xFFFFFFFFU;   /* Disable all Error Int.                  */
	st.w	[a4]52,d15
.L294:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   131      eray->SIER.U = 0xFFFFFFFFU;   /* Disable all Status Int.                 */
	st.w	[a4]60,d15
.L295:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   132      eray->MHDS.U = 0x7F7F7FFFU;   /* Clear Error Int.                        */
	mov	d15,#32767
.L296:
	addih	d15,d15,#32639
	st.w	[a4]784,d15
.L297:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   133  }
	ret
.L137:
	
__IfxEray_clearAllFlags_function_end:
	.size	IfxEray_clearAllFlags,__IfxEray_clearAllFlags_function_end-IfxEray_clearAllFlags
.L66:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_enableInterruptLines',code,cluster('IfxEray_enableInterruptLines')
	.sect	'.text.IfxEray.IfxEray_enableInterruptLines'
	.align	2
	
	.global	IfxEray_enableInterruptLines

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   135  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   136  void IfxEray_enableInterruptLines(Ifx_ERAY *eray)
; Function IfxEray_enableInterruptLines
.L36:
IfxEray_enableInterruptLines:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   137  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   138      eray->ILE.U   = 0x00000003U; //enable both the interrupt lines
	mov	d15,#3
	st.w	[a4]64,d15
.L302:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   139      eray->EILS.U  = 0x00000000U; // all interrupt lines to INT0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   140      eray->SILS.U  = 0x00000800U; // TOBC interrupt line to INT1SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   141      eray->SIES.U  = 0x0303FFFFU; // all status interrupts are enabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   142      eray->EIES.U  = 0x07070FFFU; // all error interrupts are enabled
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   143      eray->NDIC1.U = 0x00000000U; // all interrupt lines to NADT0SRC
	mov	d0,#0
	lea	a15,[a4]936
.L303:
	mov	d15,#2048
	st.w	[a4]40,d0
.L304:
	st.w	[a4]44,d15
.L305:
	mov.u	d15,#65535
	lea	a2,7
.L306:
	addih	d15,d15,#771
	st.w	[a4]56,d15
.L307:
	mov	d15,#4095
.L308:
	addih	d15,d15,#1799
	st.w	[a4]48,d15
.L29:
	st.w	[a15+],d0
	loop	a2,.L29
.L309:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   144      eray->NDIC2.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   145      eray->NDIC3.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   146      eray->NDIC4.U = 0x00000000U; // all interrupt lines to NADT0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   147      eray->MSIC1.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   148      eray->MSIC2.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   149      eray->MSIC3.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   150      eray->MSIC4.U = 0x00000000U; // all interrupt lines to MBSC0SRC
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   151  }
	ret
.L140:
	
__IfxEray_enableInterruptLines_function_end:
	.size	IfxEray_enableInterruptLines,__IfxEray_enableInterruptLines_function_end-IfxEray_enableInterruptLines
.L71:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_getAddress',code,cluster('IfxEray_getAddress')
	.sect	'.text.IfxEray.IfxEray_getAddress'
	.align	2
	
	.global	IfxEray_getAddress

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   152  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   153  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   154  Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray)
; Function IfxEray_getAddress
.L38:
IfxEray_getAddress:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   155  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   156      Ifx_ERAY *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   157  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   158      if (eray < IFXERAY_NUM_MODULES)
	jge	d4,#1,.L7
.L326:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   159      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   160          module = (Ifx_ERAY *)IfxEray_cfg_indexMap[eray].module;
	movh.a	a15,#@his(IfxEray_cfg_indexMap)
	lea	a15,[a15]@los(IfxEray_cfg_indexMap)
.L327:
	addsc.a	a15,a15,d4,#3
.L328:
	ld.a	a2,[a15]
.L246:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   161      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   162      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   163      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   164          module = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   165      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   166  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   167      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   168  }
	ret
.L7:
	mov.a	a2,#0
.L247:
	ret
.L161:
	
__IfxEray_getAddress_function_end:
	.size	IfxEray_getAddress,__IfxEray_getAddress_function_end-IfxEray_getAddress
.L86:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_getIndex',code,cluster('IfxEray_getIndex')
	.sect	'.text.IfxEray.IfxEray_getIndex'
	.align	2
	
	.global	IfxEray_getIndex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   169  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   170  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   171  IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray)
; Function IfxEray_getIndex
.L40:
IfxEray_getIndex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   173      uint32        index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   174      IfxEray_Index result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   175  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   176      result = IfxEray_Index_none;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   178      for (index = 0; index < IFXERAY_NUM_MODULES; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   179      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   180          if (IfxEray_cfg_indexMap[index].module == eray)
	movh.a	a15,#@his(IfxEray_cfg_indexMap)
	lea	a15,[a15]@los(IfxEray_cfg_indexMap)
.L333:
	ld.a	a2,[a15]
.L334:
	mov	d2,#-1
.L248:
	jne.a	a2,a4,.L10
.L335:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   181          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   182              result = (IfxEray_Index)IfxEray_cfg_indexMap[index].index;
	ld.w	d15,[a15]4
.L336:
	extr	d2,d15,#0,#8
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   183              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   184          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   185      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   186  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   187      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   188  }
	ret
.L165:
	
__IfxEray_getIndex_function_end:
	.size	IfxEray_getIndex,__IfxEray_getIndex_function_end-IfxEray_getIndex
.L91:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_readData',code,cluster('IfxEray_readData')
	.sect	'.text.IfxEray.IfxEray_readData'
	.align	2
	
	.global	IfxEray_readData

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   189  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   190  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   191  void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength)
; Function IfxEray_readData
.L42:
IfxEray_readData:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   192  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   193      if (data != NULL_PTR)
	jz.a	a5,.L12
.L192:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   194      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   195          uint16 length = (payloadLength + 1) / 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   196          uint8  index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   197  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   198          for (index = 0; index < length; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   199          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   200              *data++ = eray->RDDS_1S[index].U;
	add	d4,#1
	lea	a15,[a4]1536
.L249:
	sha	d4,#-1
.L392:
	mov	d15,#0
	j	.L13
.L14:
	add	d15,#1
	ld.w	d0,[a15+]
.L250:
	extr.u	d15,d15,#0,#8
	st.w	[a5+],d0
.L13:
	jlt.u	d15,d4,.L14
.L12:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   201          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   202      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   203  }
	ret
.L187:
	
__IfxEray_readData_function_end:
	.size	IfxEray_readData,__IfxEray_readData_function_end-IfxEray_readData
.L116:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_readFrame',code,cluster('IfxEray_readFrame')
	.sect	'.text.IfxEray.IfxEray_readFrame'
	.align	2
	
	.global	IfxEray_readFrame

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   206  void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength)
; Function IfxEray_readFrame
.L44:
IfxEray_readFrame:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   207  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   208      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   209          Ifx_ERAY_RDHS1 rdhs1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   210          rdhs1.U                          = eray->RDHS1.U;
	ld.w	d15,[a4]1792
.L205:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   211          Ifx_ERAY_RDHS2 rdhs2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   212          rdhs2.U                          = eray->RDHS2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   213          Ifx_ERAY_RDHS3 rdhs3;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   214          rdhs3.U                          = eray->RDHS3.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   215  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   216          header->frameId                  = rdhs1.B.FID;
	ld.hu	d1,[a5]0
.L397:
	extr.u	d15,d15,#0,#11
	ld.w	d0,[a4]1796
.L253:
	ld.w	d2,[a4]1800
.L255:
	insert	d15,d1,d15,#0,#11
	st.h	[a5],d15
.L398:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   217          header->payloadLength            = rdhs2.B.PLR;
	extr.u	d1,d0,#24,#7
.L399:
	ld.bu	d15,[a5]2
.L400:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   218          header->headerCrc                = rdhs2.B.CRC;
	extr.u	d0,d0,#0,#11
.L254:
	insert	d6,d15,d1,#0,#7
	st.b	[a5]2,d6
.L401:
	ld.hu	d1,[a5]4
.L402:
	insert	d15,d1,d0,#0,#11
	st.h	[a5]4,d15
.L403:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   219          header->payloadPreambleIndicator = rdhs3.B.PPI;
	extr.u	d0,d2,#24,#8
.L404:
	ld.bu	d15,[a5]6
.L405:
	extr.u	d1,d0,#4,#1
.L406:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   220          header->nullFrameIndicator       = rdhs3.B.NFI;
	extr.u	d3,d0,#3,#1
.L407:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   221          header->syncFrame                = rdhs3.B.SYN;
	extr.u	d5,d0,#2,#1
.L408:
	insert	d1,d15,d1,#7,#1
	st.b	[a5]6,d1
.L409:
	ld.bu	d15,[a5]5
.L410:
	insert	d3,d15,d3,#3,#1
.L411:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   222          header->startupFrame             = rdhs3.B.SFI;
	extr.u	d15,d0,#1,#1
.L412:
	insert	d3,d3,d5,#4,#1
.L413:
	insert	d15,d3,d15,#5,#1
	st.b	[a5]5,d15
.L414:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   223          header->cycleNumber              = rdhs3.B.RCC;
	extr.u	d15,d2,#16,#6
.L415:
	insert	d15,d1,d15,#0,#7
	st.b	[a5]6,d15
.L202:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   224      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   226      IfxEray_readData(eray, data, (header->payloadLength > maxPayloadLength) ? maxPayloadLength : header->payloadLength);
	mov	d15,d6
	mov.aa	a5,a6
.L251:
	and	d15,#127
.L416:
	min	d15,d15,d4
.L417:
	extr.u	d4,d15,#0,#8
.L252:
	j	IfxEray_readData
.L195:
	
__IfxEray_readFrame_function_end:
	.size	IfxEray_readFrame,__IfxEray_readFrame_function_end-IfxEray_readFrame
.L121:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_resetModule',code,cluster('IfxEray_resetModule')
	.sect	'.text.IfxEray.IfxEray_resetModule'
	.align	2
	
	.global	IfxEray_resetModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   227  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   228  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   230  void IfxEray_resetModule(Ifx_ERAY *eray)
; Function IfxEray_resetModule
.L46:
IfxEray_resetModule:	.type	func
	mov.aa	a15,a4
.L257:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   231  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   232      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L256:
	mov	d8,d2
.L259:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   233      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L258:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   234      eray->KRST1.B.RST = 1;      /* Only if both Kernel reset bits are set a reset is executed */
	ld.bu	d15,[a15]2288
.L341:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   235      eray->KRST0.B.RST = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   236  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   237      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
.L260:
	or	d15,#1
	st.b	[a15]2288,d15
.L342:
	ld.bu	d15,[a15]2292
.L343:
	or	d15,#1
	st.b	[a15]2292,d15
.L344:
	call	IfxScuWdt_setCpuEndinit
.L261:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   239      while (eray->KRST0.B.RSTSTAT == 0)
	lea	a2,[a15]2292
.L15:
	ld.bu	d15,[a2]
.L345:
	jz.t	d15:1,.L15
.L346:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   240      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   241          /* Wait until reset is executed */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   242      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   243  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   244      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L347:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   245      eray->KRSTCLR.B.CLR = 1;     /* Clear Kernel reset status bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   246      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]2284
.L262:
	or	d15,#1
	st.b	[a15]2284,d15
.L348:
	j	IfxScuWdt_setCpuEndinit
.L168:
	
__IfxEray_resetModule_function_end:
	.size	IfxEray_resetModule,__IfxEray_resetModule_function_end-IfxEray_resetModule
.L96:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setMessageBufferInterruptDestination',code,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.text.IfxEray.IfxEray_setMessageBufferInterruptDestination'
	.align	2
	
	.global	IfxEray_setMessageBufferInterruptDestination

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   247  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   248  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   250  void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination)
; Function IfxEray_setMessageBufferInterruptDestination
.L48:
IfxEray_setMessageBufferInterruptDestination:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   251  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   252      uint8           ix      = messageBuffer / 32;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   253      uint32          mask    = 1 << (messageBuffer % 32);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   254      Ifx_ERAY_MSIC1 *msicSFR = (Ifx_ERAY_MSIC1 *)((uint32)&eray->MSIC1 + 4 * ix);
	mov	d1,#1
	lea	a15,[a4]952
.L314:
	and	d15,d4,#31
.L315:
	sha	d0,d4,#-5
.L263:
	sha	d1,d1,d15
	fcall	.cocofun_1
.L264:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   255  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   256      if (messageBufferDestination == FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   257      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   258          msicSFR->U &= ~mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   259      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   260      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   261      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   262          msicSFR->U |= mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   263      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   264  }
	ret
.L142:
	
__IfxEray_setMessageBufferInterruptDestination_function_end:
	.size	IfxEray_setMessageBufferInterruptDestination,__IfxEray_setMessageBufferInterruptDestination_function_end-IfxEray_setMessageBufferInterruptDestination
.L76:
	; End of function
	
	.sdecl	'.text.IfxEray..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.IfxEray..cocofun_1'
	.align	2
; Function .cocofun_1
.L50:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	mov.d	d15,a15
.L265:
	sh	d0,#2
.L266:
	add	d15,d0
.L459:
	mov.a	a15,d15
.L269:
	ld.w	d15,[a15]
.L268:
	jne	d5,#0,.L16
.L460:
	mov	d0,#-1
	xor	d1,d0
.L267:
	and	d15,d1
	j	.L17
.L16:
	or	d15,d1
.L17:
	st.w	[a15],d15
.L461:
	fret
.L136:
	; End of function
	.sdecl	'.text.IfxEray.IfxEray_setNewDataInterruptDestination',code,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.text.IfxEray.IfxEray_setNewDataInterruptDestination'
	.align	2
	
	.global	IfxEray_setNewDataInterruptDestination

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   265  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   266  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   267  void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination)
; Function IfxEray_setNewDataInterruptDestination
.L52:
IfxEray_setNewDataInterruptDestination:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   269      IFX_UNUSED_PARAMETER(ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   270      uint8           ix      = ndatDestination / 32;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   271      uint32          mask    = 1 << (ndatDestination % 32);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   272      Ifx_ERAY_NDIC1 *ndicSFR = (Ifx_ERAY_NDIC1 *)((uint32)&eray->NDIC1 + 4 * ix);
	mov	d1,#1
	lea	a15,[a4]936
.L320:
	and	d15,d5,#31
.L321:
	sha	d1,d1,d15
.L270:
	sha	d0,d5,#-5
	fcall	.cocofun_1
.L271:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   274      if (ndatDestination == FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   275      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   276          ndicSFR->U &= ~mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   277      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   278      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   279      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   280          ndicSFR->U |= mask;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   281      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   282  }
	ret
.L153:
	
__IfxEray_setNewDataInterruptDestination_function_end:
	.size	IfxEray_setNewDataInterruptDestination,__IfxEray_setNewDataInterruptDestination_function_end-IfxEray_setNewDataInterruptDestination
.L81:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setPocReady',code,cluster('IfxEray_setPocReady')
	.sect	'.text.IfxEray.IfxEray_setPocReady'
	.align	2
	
	.global	IfxEray_setPocReady

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   285  void IfxEray_setPocReady(Ifx_ERAY *eray)
; Function IfxEray_setPocReady
IfxEray_setPocReady:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   286  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   287      // wait CC is busy
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   288      while (eray->SUCC1.B.PBSY == 1)
.L20:
	ld.bu	d15,[a4]128
.L362:
	jnz.t	d15:7,.L20
.L363:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   289      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   290  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   291      // Ready unlock sequence
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   292      eray->LCK.B.CLK   = 0xCE;
	mov	d15,#206
	st.b	[a4]28,d15
.L364:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   293      eray->LCK.B.CLK   = 0x31;
	mov	d15,#49
	st.b	[a4]28,d15
.L365:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   294      eray->SUCC1.B.CMD = IfxEray_PocCommand_ready;
	ld.bu	d15,[a4]128
.L366:
	insert	d15,d15,#2,#0,#4
	st.b	[a4]128,d15
.L367:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   295  }
	ret
.L176:
	
__IfxEray_setPocReady_function_end:
	.size	IfxEray_setPocReady,__IfxEray_setPocReady_function_end-IfxEray_setPocReady
.L106:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_setSlot',code,cluster('IfxEray_setSlot')
	.sect	'.text.IfxEray.IfxEray_setSlot'
	.align	2
	
	.global	IfxEray_setSlot

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   296  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   297  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   298  void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig)
; Function IfxEray_setSlot
.L55:
IfxEray_setSlot:	.type	func
	mov.aa	a12,a4
.L273:
	mov.aa	a15,a5
.L274:
	mov.aa	a13,a6
.L275:
	mov.aa	a14,a7
.L276:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    44   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    45   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    46   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    47   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    48   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    49   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    50   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    51   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    52   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    53   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    54   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    55   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    56   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    57   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    58   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    59   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    60   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    62  #ifndef IFXERAY_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    63  #define IFXERAY_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    65  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    66  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    67  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    68  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    69  #include "_Impl/IfxEray_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    70  #include "_PinMap/IfxEray_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    71  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    72  #include "IfxEray_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    75  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    76  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    78  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    79   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    80  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    81   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    82  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    83  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    84      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    85      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    86      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    87  } IfxEray_Baudrate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    89  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    90   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    91  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    93      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    94      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    95  } IfxEray_BufferDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    97  /** \brief Channel Id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    98   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    99  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   100  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   101      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   102      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   103  } IfxEray_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   105  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   106   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   107  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   108  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   109      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   110      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   111      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   112      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   113      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   114      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   115      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   116      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   117      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   118      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   119      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   120      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   121      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   122      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   123      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   124      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   125      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   126      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   127  } IfxEray_ClearErrorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   129  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   131  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   132  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   133      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   134      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   135      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   136      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   137      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   138      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   139      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   140      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   141      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   142      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   143      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   144      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   145      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   146      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   147      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   148      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   149      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   150      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   151      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   152      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   153  } IfxEray_ClearStatusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   155  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   156   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   157  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   158  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   159      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   160      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   161      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   162      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   163      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   164      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   165      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   166      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   167  } IfxEray_ClockDivider;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   169  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   173      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   174      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   175      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   176  } IfxEray_ExternalOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   178  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   179   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   180  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   182      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   183      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   184      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   185      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   186      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   187      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   188      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   189      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   190  } IfxEray_ExternalOffsetCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   192  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   196      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   197      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   198      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   199  } IfxEray_ExternalRate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   200  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   201  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   203  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   205      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   206      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   207      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   208      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   209      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   210      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   211      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   212      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   213  } IfxEray_ExternalRateCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   215  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   219      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   220      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   221      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   222  } IfxEray_IdleDynamicSlots;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   224  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   225   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   226  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   227  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   228      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   229      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   230      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   231      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   232      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   233      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   234      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   235      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   236      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   237      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   238      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   239      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   240      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   241      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   242      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   243  } IfxEray_ListenTimeOutNoise;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   245  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   246   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   247  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   249      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   250      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   251      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   252      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   253      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   254      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   255      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   256      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   257      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   258      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   259      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   260      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   261      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   262      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   263  } IfxEray_MaxSynchFrames;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   265  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   266   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   267  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   269      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   270      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   271      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   272      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   273      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   274      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   275      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   276      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   277      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   278      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   279      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   280      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   281      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   282  } IfxEray_PocCommand;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   284  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   288      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   289      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   290      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   291      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   292      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   293      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   294      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   295      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   296      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   297      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   298      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   299      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   300      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   301      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   302      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   303      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   304      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   305      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   306      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   307      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   308      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   309      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   310      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   311  } IfxEray_PocState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   312  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   313  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   315  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   316  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   317      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   318      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   319      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   320      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   321  } IfxEray_ReceiveChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   322  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   323  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   324   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   326  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   327  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   328      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   329      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   330  } IfxEray_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   332  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   333   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   334  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   335  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   336      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   337      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   338      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   339  } IfxEray_StrobePosition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   341  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   343  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   344  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   345      IfxEray_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   346      IfxEray_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   347      IfxEray_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   348  } IfxEray_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   350  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   352  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   353  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   354      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   355      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   356  } IfxEray_TransmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   358  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   362      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   364  } IfxEray_TransmissionSlotMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   366  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   368  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   369  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   370      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   371      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   372  } IfxEray_WakeupChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   373  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   374  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   376  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   377  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   378  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   380  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   381   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   382  /** \brief Header section in  a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   384  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   386      uint16                   frameId;                         /**< \brief slot ID of the selected Message Buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   387      uint8                    cycleCode;                       /**< \brief the cycle set used for cycle counter filtering. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   388      boolean                  channelAFiltered;                /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   389      boolean                  channelBFiltered;                /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   390      IfxEray_BufferDirection  bufferDirection;                 /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   391      boolean                  transmitPayloadIndicatior;       /**< \brief weather payload indicator is set or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   392      IfxEray_TransmissionMode transmissionMode;                /**< \brief transmission mode of Header. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   393      boolean                  bufferServiceEnabled;            /**< \brief wether buffer service request is enabled or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   394      uint8                    payloadLength;                   /**< \brief length of data section. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   395      uint16                   dataPointer;                     /**< \brief pointer to the data section of message buffer in RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   396      boolean                  startupFrameIndicator;           /**< \brief whether startup frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   397      boolean                  syncFrameIndicator;              /**< \brief whether sync frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   398  } IfxEray_Header;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   400  /** \brief Received header in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   401   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   402  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   403  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   404      uint16 frameId : 11;                     /**< \brief received frame id. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   405      uint8  payloadLength : 7;                /**< \brief received payload length. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   406      uint16 headerCrc : 11;                   /**< \brief received header crc. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   407      uint8  nullFrameIndicator : 1;           /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   408      uint8  syncFrame : 1;                    /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   409      uint8  startupFrame : 1;                 /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   410      uint8  cycleNumber : 7;                  /**< \brief cycle number in which frame is received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   411      uint8  payloadPreambleIndicator : 1;     /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   412  } IfxEray_ReceivedHeader;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   414  /** \brief Transmit control structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   415   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   416  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   417  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   418      boolean headerTransfered;        /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   419      boolean dataTransfered;          /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   420      boolean transferRequested;       /**< \brief transmit buffer released for transmission or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   421      uint8   bufferIndex;             /**< \brief buffer index in the Message RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   422  } IfxEray_SlotConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   423  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   424  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   426  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   427   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   429  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   430  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   431  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   433  /** \brief Clears the error flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   434   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   435   * \param errorFlag error flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   436   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   437   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   438  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   440  /** \brief Clears the status flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   441   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   442   * \param statusFlag status flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   443   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   444   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   445  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   446  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   447  /** \brief Gets the error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   448   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   449   * \return error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   450   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   451  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   453  /** \brief Gets the IBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   454   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   455   * \return address of IBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   456   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   457  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   459  /** \brief Gets the INT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   460   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   461   * \return address of INT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   463  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   465  /** \brief Gets the INT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   466   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   467   * \return address of INT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   469  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   470  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   471  /** \brief Gets the message buffers interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   472   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   473   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   474   * \return message buffer interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   476  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   478  /** \brief Gets the MBSC0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   479   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   480   * \return address of MBSC0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   481   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   482  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   483  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   484  /** \brief Gets the MBSC1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   485   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   486   * \return address of MBSC1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   488  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   490  /** \brief Gets the NDAT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   491   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   492   * \return address of NDAT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   494  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   496  /** \brief Gets the NDAT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   497   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   498   * \return address of NDAT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   500  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   502  /** \brief Gets the new data interrupt buffers status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   503   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   504   * \param ndat message buffer number configured to which ndat occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   505   * \return ndat interrupt buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   507  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   509  /** \brief Gets the OBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   511   * \return address of OBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   512   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   513  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   515  /** \brief Gets the status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   517   * \return status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   518   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   519  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   521  /** \brief Gets the TINT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   523   * \return address of TINT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   524   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   525  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   527  /** \brief Gets the TINT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   528   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   529   * \return address of TINT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   531  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   533  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   534  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   535  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   537  /** \brief Clears all the error flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   538   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   539   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   541  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   543  /** \brief Enables all the Interrupt lines.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   544   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   545   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   546   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   547  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   548  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   549  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   550   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   551   * \param messageBuffer message buffer interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   552   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   553   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   554   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   555  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   557  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   558   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   559   * \param ndat NDAT interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   560   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   561   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   562   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   563  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   564  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   565  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   566  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   567  /** \addtogroup IfxLld_Eray_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   568   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   570  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   571  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   572  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   574  /** \brief Initialises a RX pin.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   575   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   576   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   577   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   578   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   579  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   581  /** \brief Initializes a TX Enable output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   582   * \param txEn the TX Enable Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   583   * \param txEnMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   584   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   587  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   589  /** \brief Initializes a TX output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   590   * \param tx the TX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   591   * \param txMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   592   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   593   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   594   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   595  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   597  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   599  /** \addtogroup IfxLld_Eray_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   600   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   601  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   602  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   603  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   606  /** \brief Disables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   607   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   608   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   609   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   610  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   611  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   612  /** \brief Enables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   613   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   616  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   618  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   619   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   620   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   621   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   622   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   623   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   624  IFX_INLINE boolean IfxEray_isModuleSuspended(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   625  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   626  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   627   * \param eray pointer to ERAY registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   628   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   629   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   630   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   631  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   632  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   633  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   634  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   635  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   636  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   637  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   638   * \param eray Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   639   * \return ERAY module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   641  IFX_EXTERN Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   643  /** \brief API to get the resource index of the ERAY specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   644   * \param eray Pointer to the ERAY HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   645   * \return Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   646   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   647  IFX_EXTERN IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   649  /** \brief Resets the ERAY kernel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   650   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   651   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   652   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   653  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   654  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   655  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   657  /** \addtogroup IfxLld_Eray_Std_Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   658   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   660  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   661  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   662  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   663  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   664  /** \brief Gets the FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   665   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   666   * \return FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   667   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   668  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   669  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   670  /** \brief Gets the Input Buffer Host Busy status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   672   * \return TRUE if Host is Busy otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   674  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   676  /** \brief Gets the Input Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   677   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   678   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   680  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   682  /** \brief Gets the output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   683   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   684   * \return output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   685   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   686  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   687  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   688  /** \brief Gets the Output Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   689   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   690   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   692  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   694  /** \brief Gets the current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   695   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   696   * \return current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   697   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   698  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   700  /** \brief Gets the received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   701   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   702   * \return received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   703   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   704  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   706  /** \brief Waits until the controller enters required POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   708   * \param pocState POC state upto which controller waits.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   709   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   710   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   711  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   713  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   714  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   715  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   717  /** \brief Changes the Commmunication Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   718   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   719   * \param pocCommand POC command which triggers the Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   720   * \return TRUE if command accepted otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   721   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   722  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   724  /** \brief Sets the POC state to Ready state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   725   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   726   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   727   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   728  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   729  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   730  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   732  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   733   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   735  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   736  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   737  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   739  /** \brief request to receive header section from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   740   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   741   * \param headerReceived whether header is received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   742   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   743   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   744  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   745  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   746  /** \brief sets the bit to send header in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   747   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   748   * \param headerTransfered whether header transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   749   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   750   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   751  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   752  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   753  /** \brief Sets number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   754   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   755   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   756   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   757   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   758  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   760  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   761   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   762   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   764  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   766  /** \brief Sets baudrate on Flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   767   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   768   * \param baudrate baudrate on flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   773  /** \brief Sets secured buffers in message RAM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   775   * \param secureValue secure value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   780  /** \brief Sets channel A initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   782   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   783   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   784   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   785   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   786  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   787  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   788  /** \brief Sets channel B initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   789   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   790   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   791   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   794  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   796  /** \brief Sets receive delays on channels.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   797   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   798   * \param channelAReceptionDelay reception delay on channel A.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   799   * \param channelBReceptionDelay reception delay on channel B.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   800   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   801   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   802  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   803  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   804  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   805   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   806   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   807   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   808   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   810  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   812  /** \brief lead to halt state in clock synch error.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   813   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   814   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   815   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   816   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   817  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   818  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   819  /** \brief Sets cluster drift values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   820   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   821   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   822   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   823   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   825  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   827  /** \brief Sets cluster startup deviation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   828   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   829   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   830   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   832  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   834  /** \brief Sets CAS symbol window duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   835   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   836   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   837   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   838   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   839  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   840  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   841  /** \brief sets duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   842   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   843   * \param macroticks duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   844   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   845   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   846  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   847  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   848  /** \brief sets duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   849   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   850   * \param microticks duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   851   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   852   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   853  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   854  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   855  /** \brief Sets decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   856   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   857   * \param decodingCorrection decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   858   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   859   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   860  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   861  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   862  /** \brief Sets dynamic slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   863   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   864   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   865   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   866   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   867   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   868   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   869  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   871  /** \brief Sets external correction controls.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   872   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   873   * \param externalOffset External offset correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   874   * \param externalRate External rate correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   875   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   876   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   877  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   879  /** \brief Sets external correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   880   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   881   * \param externalOffsetCorrection external clock offset correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   882   * \param externalRateCorrection external clock rate correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   883   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   884   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   885  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   887  /** \brief Sets FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   888   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   889   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   890   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   891   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   892  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   894  /** \brief Sets FIFO filter configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   895   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   896   * \param rejectedFrameId rejected frameId by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   897   * \param filteredCycleNumber filtered cycle number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   898   * \param fifoNullFramesRejected null frames rejection selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   899   * \param frameIdFilter filtered frameid by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   900   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   901   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   902  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   904  /** \brief Sets FIFO configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   905   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   906   * \param receiveChannel FIFO receive channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   907   * \param staticFifoDisabled static FIFO selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   908   * \param fifoDepth FIFO depth.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   909   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   911  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   913  /** \brief Sets first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   914   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   915   * \param firstDynamicBuffer first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   916   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   918  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   920  /** \brief Sets startup or wakeup listen timeouts.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   921   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   922   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   923   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   924   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   925   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   926  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   928  /** \brief Sets the maximum cold start attempts for active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   929   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   930   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   933  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   935  /** \brief Sets max limit correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   936   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   937   * \param maxOffsetCorrection maximum offset correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   938   * \param maxRateCorrection maximum rate correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   939   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   940   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   941  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   942  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   943  /** \brief Sets maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   944   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   945   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   946   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   947   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   948  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   949  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   950  /** \brief Sets number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   951   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   952   * \param numberOfMessageBuffers number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   953   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   954   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   955  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   956  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   957  /** \brief Sets Message Handler configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   958   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   959   * \param staticFramepayload payload length of static frames in double bytes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   960   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   961   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   962   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   963  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   965  /** \brief Sets network start Idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   966   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   967   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   968   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   969   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   970  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   972  /** \brief Sets network management vector length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   973   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   974   * \param networkVectorLength length of network management vector.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   975   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   976   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   979  /** \brief Sets channels connected to node.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   981   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   982   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   983   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   984   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   985  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   987  /** \brief Sets offset correction starting point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   988   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   989   * \param correctionOffset offset correction start point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   990   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   991   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   994  /** \brief requests to receive the frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   996   * \param receiveRequested whether frame to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   997   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   998   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1000  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1001  /** \brief Sets receive wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1003   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1004   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1005   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1008  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint16 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1010  /** \brief sets buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1011   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1012   * \param bufferIndex buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1015  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1017  /** \brief Sets slots action points.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1018   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1019   * \param staticActionPoint static slots and symbol window action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1020   * \param dynamicActionPoint dynamic slots action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1023  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1025  /** \brief Sets static slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1026   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1027   * \param staticSlotLength duration of static slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1028   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1029   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1030   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1031  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1032  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1033  /** \brief Sets sample point for strobing.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1034   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1035   * \param strobePosition strobing sample count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1036   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1037   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1038  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1039  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1040  /** \brief Sets channels which transmits symbols.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1041   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1042   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1043   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1044   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1045   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1046  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1047  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1048  /** \brief Sets the transmit slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1049   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1050   * \param transmissionSlotMode transmission slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1051   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1052   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1053  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1054  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1055  /** \brief Sets transmission start time duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1056   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1057   * \param transmissionStartTime transmission start time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1058   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1059   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1060  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint8 transmissionStartTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1062  /** \brief Sets transfer request to send frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1064   * \param transferRequested whether transfer requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1069  /** \brief Sets transmit wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1071   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1072   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1073   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1074   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1075   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1076  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1077  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1078  /** \brief Configures transmitted frames for startup and synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1079   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1080   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1081   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1082   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1083   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1084  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1085  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1086  /** \brief Sets the transmit buffer number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1087   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1088   * \param bufferIndex buffer number in which frame is sent.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1089   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1090   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1091  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1093  /** \brief Swaps the shadow and Host output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1094   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1095   * \param swapRequested whether swap is requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1096   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1097   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1098  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1100  /** \brief Sets the cluster wakeup channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1101   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1102   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1105  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1107  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1108  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1109  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1110   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1112  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1113  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1114  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1116  /** \brief requests to receive data from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1117   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1118   * \param dataReceived whether data to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1121  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1123  /** \brief sets the bit to send data in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1124   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1125   * \param dataTransfered whether data transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1126   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1127   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1128  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1130  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1131  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1132  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1134  /** \brief Calculate and returns the CRC for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1135   * \param payloadLength payload length configured for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1136   * \param frameId slot id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1137   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1138   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1139   * \return calculated CRC value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1140   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1141  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1143  /** \brief Reads the received data from output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1144   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1145   * \param data pointer to received data buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1146   * \param payloadLength payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1147   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1148   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1149  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1151  /** \brief Reads header and data from output buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1152   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1153   * \param header header received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1154   * \param data data received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1155   * \param maxPayloadLength maximum payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1156   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1157   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1158  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1160  /** \brief Writes header and data to Input buffers and set the slots.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1161   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1162   * \param header Header section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1163   * \param data data section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1164   * \param slotConfig pointer slot allocation configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1165   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1167  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1169  /** \brief Writes data section of a frame to input data registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1170   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1171   * \param data data segment in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1172   * \param payloadLength payload length configured for slot buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1173   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1174   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1175  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1177  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1180  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1181  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1183  /** \brief Gets the FIFO index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1184   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1185   * \return FIFO buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1186   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1187  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1189  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1190   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1191   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1192   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1193   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1194   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1195  IFX_INLINE void IfxEray_setSuspendMode(Ifx_ERAY *eray, IfxEray_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1197  /** \brief Provides functionality for both setting of pin direction as input and configuring pad driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1198   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1199   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1200   * \param padDriver Pad Driver Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1201   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1203  IFX_INLINE void IfxEray_initRxPinWithPadLevel(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1205  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1206  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1207  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1209  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1210  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1211      eray->EIR.U = errorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1212  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1213  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1215  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1216  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1217      eray->SIR.U = statusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1218  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1220  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1221  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1222  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1224      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1225      //disable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1226      eray->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1227      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1228  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1231  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1232  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1233      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1234      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1235      // Run Mode Clock divider to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1236      //enable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1237      eray->CLC.U = 0x00000100;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1239      // ensure that write access finished before leaving this function
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1240      if (eray->CLC.U)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1241      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1243      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1244  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1247  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1249      Ifx_ERAY_EIR interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1250      interruptFlags.U = eray->EIR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1251      return interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1255  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1256  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1257      return eray->MRC.B.FFB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1258  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1261  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1263      Ifx_ERAY_FSR fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1264      fifoStatus.U = eray->FSR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1265      return fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1266  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1269  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1271      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	lea	a2,[a12]1301

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   299  eader, const uint32 *data, const IfxEray_SlotConfig *slotConfig)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   300  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   301      // wait if Host is busy with another transfer
.L21:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    44   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    45   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    46   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    47   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    48   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    49   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    50   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    51   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    52   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    53   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    54   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    55   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    56   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    57   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    58   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    59   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    60   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    62  #ifndef IFXERAY_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    63  #define IFXERAY_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    65  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    66  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    67  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    68  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    69  #include "_Impl/IfxEray_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    70  #include "_PinMap/IfxEray_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    71  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    72  #include "IfxEray_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    75  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    76  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    78  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    79   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    80  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    81   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    82  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    83  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    84      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    85      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    86      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    87  } IfxEray_Baudrate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    89  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    90   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    91  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    93      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    94      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    95  } IfxEray_BufferDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    97  /** \brief Channel Id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    98   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    99  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   100  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   101      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   102      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   103  } IfxEray_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   105  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   106   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   107  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   108  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   109      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   110      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   111      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   112      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   113      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   114      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   115      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   116      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   117      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   118      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   119      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   120      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   121      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   122      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   123      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   124      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   125      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   126      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   127  } IfxEray_ClearErrorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   129  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   131  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   132  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   133      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   134      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   135      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   136      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   137      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   138      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   139      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   140      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   141      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   142      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   143      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   144      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   145      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   146      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   147      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   148      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   149      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   150      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   151      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   152      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   153  } IfxEray_ClearStatusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   155  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   156   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   157  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   158  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   159      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   160      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   161      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   162      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   163      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   164      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   165      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   166      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   167  } IfxEray_ClockDivider;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   169  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   173      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   174      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   175      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   176  } IfxEray_ExternalOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   178  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   179   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   180  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   182      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   183      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   184      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   185      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   186      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   187      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   188      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   189      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   190  } IfxEray_ExternalOffsetCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   192  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   196      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   197      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   198      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   199  } IfxEray_ExternalRate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   200  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   201  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   203  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   205      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   206      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   207      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   208      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   209      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   210      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   211      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   212      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   213  } IfxEray_ExternalRateCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   215  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   219      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   220      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   221      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   222  } IfxEray_IdleDynamicSlots;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   224  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   225   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   226  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   227  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   228      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   229      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   230      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   231      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   232      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   233      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   234      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   235      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   236      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   237      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   238      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   239      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   240      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   241      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   242      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   243  } IfxEray_ListenTimeOutNoise;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   245  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   246   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   247  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   249      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   250      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   251      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   252      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   253      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   254      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   255      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   256      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   257      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   258      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   259      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   260      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   261      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   262      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   263  } IfxEray_MaxSynchFrames;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   265  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   266   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   267  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   269      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   270      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   271      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   272      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   273      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   274      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   275      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   276      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   277      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   278      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   279      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   280      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   281      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   282  } IfxEray_PocCommand;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   284  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   288      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   289      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   290      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   291      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   292      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   293      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   294      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   295      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   296      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   297      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   298      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   299      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   300      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   301      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   302      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   303      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   304      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   305      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   306      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   307      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   308      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   309      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   310      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   311  } IfxEray_PocState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   312  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   313  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   315  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   316  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   317      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   318      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   319      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   320      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   321  } IfxEray_ReceiveChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   322  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   323  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   324   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   326  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   327  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   328      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   329      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   330  } IfxEray_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   332  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   333   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   334  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   335  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   336      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   337      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   338      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   339  } IfxEray_StrobePosition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   341  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   343  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   344  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   345      IfxEray_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   346      IfxEray_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   347      IfxEray_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   348  } IfxEray_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   350  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   352  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   353  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   354      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   355      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   356  } IfxEray_TransmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   358  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   362      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   364  } IfxEray_TransmissionSlotMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   366  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   368  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   369  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   370      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   371      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   372  } IfxEray_WakeupChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   373  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   374  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   376  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   377  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   378  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   380  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   381   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   382  /** \brief Header section in  a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   384  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   386      uint16                   frameId;                         /**< \brief slot ID of the selected Message Buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   387      uint8                    cycleCode;                       /**< \brief the cycle set used for cycle counter filtering. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   388      boolean                  channelAFiltered;                /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   389      boolean                  channelBFiltered;                /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   390      IfxEray_BufferDirection  bufferDirection;                 /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   391      boolean                  transmitPayloadIndicatior;       /**< \brief weather payload indicator is set or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   392      IfxEray_TransmissionMode transmissionMode;                /**< \brief transmission mode of Header. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   393      boolean                  bufferServiceEnabled;            /**< \brief wether buffer service request is enabled or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   394      uint8                    payloadLength;                   /**< \brief length of data section. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   395      uint16                   dataPointer;                     /**< \brief pointer to the data section of message buffer in RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   396      boolean                  startupFrameIndicator;           /**< \brief whether startup frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   397      boolean                  syncFrameIndicator;              /**< \brief whether sync frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   398  } IfxEray_Header;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   400  /** \brief Received header in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   401   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   402  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   403  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   404      uint16 frameId : 11;                     /**< \brief received frame id. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   405      uint8  payloadLength : 7;                /**< \brief received payload length. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   406      uint16 headerCrc : 11;                   /**< \brief received header crc. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   407      uint8  nullFrameIndicator : 1;           /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   408      uint8  syncFrame : 1;                    /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   409      uint8  startupFrame : 1;                 /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   410      uint8  cycleNumber : 7;                  /**< \brief cycle number in which frame is received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   411      uint8  payloadPreambleIndicator : 1;     /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   412  } IfxEray_ReceivedHeader;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   414  /** \brief Transmit control structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   415   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   416  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   417  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   418      boolean headerTransfered;        /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   419      boolean dataTransfered;          /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   420      boolean transferRequested;       /**< \brief transmit buffer released for transmission or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   421      uint8   bufferIndex;             /**< \brief buffer index in the Message RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   422  } IfxEray_SlotConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   423  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   424  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   426  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   427   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   429  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   430  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   431  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   433  /** \brief Clears the error flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   434   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   435   * \param errorFlag error flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   436   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   437   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   438  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   440  /** \brief Clears the status flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   441   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   442   * \param statusFlag status flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   443   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   444   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   445  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   446  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   447  /** \brief Gets the error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   448   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   449   * \return error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   450   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   451  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   453  /** \brief Gets the IBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   454   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   455   * \return address of IBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   456   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   457  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   459  /** \brief Gets the INT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   460   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   461   * \return address of INT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   463  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   465  /** \brief Gets the INT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   466   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   467   * \return address of INT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   469  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   470  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   471  /** \brief Gets the message buffers interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   472   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   473   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   474   * \return message buffer interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   476  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   478  /** \brief Gets the MBSC0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   479   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   480   * \return address of MBSC0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   481   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   482  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   483  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   484  /** \brief Gets the MBSC1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   485   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   486   * \return address of MBSC1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   488  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   490  /** \brief Gets the NDAT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   491   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   492   * \return address of NDAT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   494  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   496  /** \brief Gets the NDAT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   497   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   498   * \return address of NDAT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   500  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   502  /** \brief Gets the new data interrupt buffers status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   503   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   504   * \param ndat message buffer number configured to which ndat occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   505   * \return ndat interrupt buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   507  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   509  /** \brief Gets the OBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   511   * \return address of OBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   512   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   513  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   515  /** \brief Gets the status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   517   * \return status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   518   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   519  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   521  /** \brief Gets the TINT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   523   * \return address of TINT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   524   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   525  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   527  /** \brief Gets the TINT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   528   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   529   * \return address of TINT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   531  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   533  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   534  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   535  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   537  /** \brief Clears all the error flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   538   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   539   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   541  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   543  /** \brief Enables all the Interrupt lines.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   544   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   545   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   546   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   547  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   548  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   549  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   550   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   551   * \param messageBuffer message buffer interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   552   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   553   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   554   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   555  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   557  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   558   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   559   * \param ndat NDAT interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   560   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   561   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   562   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   563  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   564  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   565  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   566  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   567  /** \addtogroup IfxLld_Eray_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   568   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   570  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   571  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   572  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   574  /** \brief Initialises a RX pin.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   575   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   576   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   577   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   578   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   579  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   581  /** \brief Initializes a TX Enable output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   582   * \param txEn the TX Enable Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   583   * \param txEnMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   584   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   587  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   589  /** \brief Initializes a TX output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   590   * \param tx the TX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   591   * \param txMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   592   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   593   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   594   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   595  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   597  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   599  /** \addtogroup IfxLld_Eray_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   600   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   601  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   602  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   603  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   606  /** \brief Disables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   607   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   608   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   609   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   610  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   611  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   612  /** \brief Enables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   613   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   616  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   618  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   619   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   620   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   621   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   622   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   623   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   624  IFX_INLINE boolean IfxEray_isModuleSuspended(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   625  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   626  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   627   * \param eray pointer to ERAY registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   628   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   629   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   630   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   631  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   632  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   633  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   634  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   635  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   636  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   637  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   638   * \param eray Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   639   * \return ERAY module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   641  IFX_EXTERN Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   643  /** \brief API to get the resource index of the ERAY specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   644   * \param eray Pointer to the ERAY HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   645   * \return Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   646   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   647  IFX_EXTERN IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   649  /** \brief Resets the ERAY kernel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   650   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   651   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   652   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   653  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   654  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   655  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   657  /** \addtogroup IfxLld_Eray_Std_Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   658   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   660  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   661  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   662  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   663  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   664  /** \brief Gets the FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   665   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   666   * \return FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   667   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   668  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   669  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   670  /** \brief Gets the Input Buffer Host Busy status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   672   * \return TRUE if Host is Busy otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   674  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   676  /** \brief Gets the Input Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   677   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   678   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   680  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   682  /** \brief Gets the output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   683   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   684   * \return output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   685   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   686  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   687  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   688  /** \brief Gets the Output Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   689   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   690   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   692  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   694  /** \brief Gets the current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   695   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   696   * \return current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   697   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   698  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   700  /** \brief Gets the received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   701   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   702   * \return received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   703   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   704  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   706  /** \brief Waits until the controller enters required POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   708   * \param pocState POC state upto which controller waits.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   709   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   710   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   711  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   713  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   714  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   715  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   717  /** \brief Changes the Commmunication Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   718   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   719   * \param pocCommand POC command which triggers the Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   720   * \return TRUE if command accepted otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   721   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   722  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   724  /** \brief Sets the POC state to Ready state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   725   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   726   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   727   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   728  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   729  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   730  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   732  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   733   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   735  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   736  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   737  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   739  /** \brief request to receive header section from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   740   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   741   * \param headerReceived whether header is received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   742   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   743   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   744  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   745  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   746  /** \brief sets the bit to send header in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   747   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   748   * \param headerTransfered whether header transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   749   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   750   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   751  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   752  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   753  /** \brief Sets number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   754   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   755   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   756   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   757   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   758  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   760  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   761   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   762   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   764  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   766  /** \brief Sets baudrate on Flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   767   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   768   * \param baudrate baudrate on flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   773  /** \brief Sets secured buffers in message RAM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   775   * \param secureValue secure value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   780  /** \brief Sets channel A initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   782   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   783   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   784   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   785   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   786  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   787  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   788  /** \brief Sets channel B initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   789   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   790   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   791   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   794  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   796  /** \brief Sets receive delays on channels.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   797   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   798   * \param channelAReceptionDelay reception delay on channel A.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   799   * \param channelBReceptionDelay reception delay on channel B.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   800   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   801   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   802  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   803  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   804  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   805   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   806   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   807   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   808   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   810  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   812  /** \brief lead to halt state in clock synch error.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   813   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   814   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   815   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   816   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   817  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   818  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   819  /** \brief Sets cluster drift values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   820   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   821   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   822   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   823   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   825  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   827  /** \brief Sets cluster startup deviation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   828   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   829   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   830   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   832  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   834  /** \brief Sets CAS symbol window duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   835   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   836   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   837   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   838   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   839  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   840  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   841  /** \brief sets duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   842   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   843   * \param macroticks duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   844   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   845   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   846  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   847  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   848  /** \brief sets duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   849   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   850   * \param microticks duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   851   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   852   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   853  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   854  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   855  /** \brief Sets decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   856   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   857   * \param decodingCorrection decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   858   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   859   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   860  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   861  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   862  /** \brief Sets dynamic slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   863   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   864   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   865   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   866   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   867   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   868   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   869  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   871  /** \brief Sets external correction controls.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   872   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   873   * \param externalOffset External offset correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   874   * \param externalRate External rate correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   875   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   876   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   877  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   879  /** \brief Sets external correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   880   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   881   * \param externalOffsetCorrection external clock offset correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   882   * \param externalRateCorrection external clock rate correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   883   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   884   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   885  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   887  /** \brief Sets FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   888   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   889   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   890   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   891   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   892  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   894  /** \brief Sets FIFO filter configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   895   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   896   * \param rejectedFrameId rejected frameId by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   897   * \param filteredCycleNumber filtered cycle number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   898   * \param fifoNullFramesRejected null frames rejection selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   899   * \param frameIdFilter filtered frameid by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   900   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   901   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   902  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   904  /** \brief Sets FIFO configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   905   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   906   * \param receiveChannel FIFO receive channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   907   * \param staticFifoDisabled static FIFO selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   908   * \param fifoDepth FIFO depth.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   909   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   911  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   913  /** \brief Sets first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   914   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   915   * \param firstDynamicBuffer first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   916   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   918  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   920  /** \brief Sets startup or wakeup listen timeouts.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   921   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   922   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   923   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   924   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   925   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   926  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   928  /** \brief Sets the maximum cold start attempts for active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   929   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   930   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   933  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   935  /** \brief Sets max limit correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   936   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   937   * \param maxOffsetCorrection maximum offset correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   938   * \param maxRateCorrection maximum rate correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   939   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   940   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   941  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   942  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   943  /** \brief Sets maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   944   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   945   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   946   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   947   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   948  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   949  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   950  /** \brief Sets number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   951   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   952   * \param numberOfMessageBuffers number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   953   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   954   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   955  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   956  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   957  /** \brief Sets Message Handler configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   958   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   959   * \param staticFramepayload payload length of static frames in double bytes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   960   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   961   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   962   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   963  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   965  /** \brief Sets network start Idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   966   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   967   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   968   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   969   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   970  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   972  /** \brief Sets network management vector length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   973   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   974   * \param networkVectorLength length of network management vector.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   975   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   976   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   979  /** \brief Sets channels connected to node.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   981   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   982   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   983   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   984   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   985  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   987  /** \brief Sets offset correction starting point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   988   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   989   * \param correctionOffset offset correction start point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   990   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   991   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   994  /** \brief requests to receive the frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   996   * \param receiveRequested whether frame to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   997   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   998   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1000  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1001  /** \brief Sets receive wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1003   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1004   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1005   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1008  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint16 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1010  /** \brief sets buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1011   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1012   * \param bufferIndex buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1015  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1017  /** \brief Sets slots action points.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1018   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1019   * \param staticActionPoint static slots and symbol window action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1020   * \param dynamicActionPoint dynamic slots action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1023  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1025  /** \brief Sets static slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1026   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1027   * \param staticSlotLength duration of static slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1028   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1029   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1030   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1031  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1032  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1033  /** \brief Sets sample point for strobing.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1034   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1035   * \param strobePosition strobing sample count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1036   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1037   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1038  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1039  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1040  /** \brief Sets channels which transmits symbols.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1041   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1042   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1043   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1044   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1045   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1046  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1047  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1048  /** \brief Sets the transmit slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1049   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1050   * \param transmissionSlotMode transmission slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1051   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1052   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1053  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1054  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1055  /** \brief Sets transmission start time duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1056   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1057   * \param transmissionStartTime transmission start time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1058   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1059   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1060  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint8 transmissionStartTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1062  /** \brief Sets transfer request to send frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1064   * \param transferRequested whether transfer requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1069  /** \brief Sets transmit wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1071   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1072   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1073   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1074   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1075   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1076  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1077  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1078  /** \brief Configures transmitted frames for startup and synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1079   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1080   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1081   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1082   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1083   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1084  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1085  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1086  /** \brief Sets the transmit buffer number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1087   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1088   * \param bufferIndex buffer number in which frame is sent.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1089   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1090   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1091  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1093  /** \brief Swaps the shadow and Host output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1094   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1095   * \param swapRequested whether swap is requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1096   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1097   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1098  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1100  /** \brief Sets the cluster wakeup channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1101   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1102   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1105  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1107  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1108  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1109  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1110   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1112  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1113  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1114  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1116  /** \brief requests to receive data from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1117   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1118   * \param dataReceived whether data to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1121  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1123  /** \brief sets the bit to send data in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1124   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1125   * \param dataTransfered whether data transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1126   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1127   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1128  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1130  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1131  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1132  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1134  /** \brief Calculate and returns the CRC for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1135   * \param payloadLength payload length configured for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1136   * \param frameId slot id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1137   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1138   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1139   * \return calculated CRC value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1140   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1141  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1143  /** \brief Reads the received data from output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1144   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1145   * \param data pointer to received data buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1146   * \param payloadLength payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1147   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1148   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1149  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1151  /** \brief Reads header and data from output buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1152   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1153   * \param header header received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1154   * \param data data received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1155   * \param maxPayloadLength maximum payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1156   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1157   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1158  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1160  /** \brief Writes header and data to Input buffers and set the slots.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1161   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1162   * \param header Header section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1163   * \param data data section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1164   * \param slotConfig pointer slot allocation configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1165   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1167  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1169  /** \brief Writes data section of a frame to input data registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1170   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1171   * \param data data segment in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1172   * \param payloadLength payload length configured for slot buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1173   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1174   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1175  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1177  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1180  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1181  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1183  /** \brief Gets the FIFO index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1184   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1185   * \return FIFO buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1186   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1187  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1189  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1190   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1191   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1192   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1193   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1194   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1195  IFX_INLINE void IfxEray_setSuspendMode(Ifx_ERAY *eray, IfxEray_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1197  /** \brief Provides functionality for both setting of pin direction as input and configuring pad driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1198   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1199   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1200   * \param padDriver Pad Driver Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1201   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1203  IFX_INLINE void IfxEray_initRxPinWithPadLevel(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1205  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1206  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1207  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1209  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1210  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1211      eray->EIR.U = errorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1212  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1213  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1215  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1216  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1217      eray->SIR.U = statusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1218  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1220  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1221  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1222  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1224      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1225      //disable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1226      eray->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1227      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1228  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1231  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1232  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1233      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1234      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1235      // Run Mode Clock divider to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1236      //enable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1237      eray->CLC.U = 0x00000100;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1239      // ensure that write access finished before leaving this function
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1240      if (eray->CLC.U)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1241      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1243      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1244  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1247  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1249      Ifx_ERAY_EIR interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1250      interruptFlags.U = eray->EIR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1251      return interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1255  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1256  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1257      return eray->MRC.B.FFB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1258  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1261  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1263      Ifx_ERAY_FSR fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1264      fifoStatus.U = eray->FSR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1265      return fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1266  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1269  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1271      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	ld.bu	d15,[a2]
.L219:
	jnz.t	d15:7,.L21
.L422:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   302  lotConfig)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   303  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   304      // wait if Host is busy with another transfer
	jz.a	a15,.L22
.L223:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   305      while (IfxEray_getInputBufferBusyHostStatus(eray) == TRUE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   306      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   307  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   308      if (header != NULL_PTR)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   309      {
	mov	d0,#0
	ld.hu	d15,[a15]0
.L277:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   310          {
	insert	d0,d0,d15,#0,#11
	ld.bu	d15,[a15]2
.L423:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   311              Ifx_ERAY_WRHS1 wrhs1;
	insert	d0,d0,d15,#16,#7
	ld.bu	d15,[a15]3
.L424:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   312              wrhs1.U       = 0;
	insert	d0,d0,d15,#24,#1
	ld.bu	d15,[a15]4
.L425:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   313              wrhs1.B.FID   = header->frameId;
	insert	d0,d0,d15,#25,#1
	ld.bu	d15,[a15]5
.L426:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   314              wrhs1.B.CYC   = header->cycleCode;
	insert	d0,d0,d15,#26,#1
	ld.bu	d15,[a15]6
.L427:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   315              wrhs1.B.CHA   = header->channelAFiltered;
	insert	d0,d0,d15,#27,#1
	ld.bu	d15,[a15]7
.L428:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   316              wrhs1.B.CHB   = header->channelBFiltered;
	insert	d0,d0,d15,#28,#1
	ld.bu	d15,[a15]8
.L429:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   317              wrhs1.B.CFG   = header->bufferDirection;
	insert	d0,d0,d15,#29,#1
	st.w	[a12]1280,d0
.L224:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   318              wrhs1.B.PPIT  = header->transmitPayloadIndicatior;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   319              wrhs1.B.TXM   = header->transmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   320              wrhs1.B.MBI   = header->bufferServiceEnabled;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   321              eray->WRHS1.U = wrhs1.U;
	mov	d8,#0
.L278:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   322          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   323          {
	ld.bu	d15,[a15]5
.L430:
	jne	d15,#1,.L23
.L431:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   324              Ifx_ERAY_WRHS2 wrhs2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   325              wrhs2.U = 0;
	ld.bu	d4,[a15]9
.L432:
	ld.hu	d5,[a15]0
.L433:
	ld.bu	d6,[a15]12
.L434:
	ld.bu	d7,[a15]13
	call	IfxEray_calcHeaderCrc
.L272:
	insert	d8,d8,d2,#0,#11
.L23:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   326  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   327              if (header->bufferDirection == IfxEray_BufferDirection_transmit)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   328              {
	ld.bu	d15,[a15]9
.L435:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   329                  wrhs2.B.CRC = IfxEray_calcHeaderCrc(header->payloadLength, header->frameId, header->startupFrameIndicator, header->syncFrameIndicator);
	insert	d8,d8,d15,#16,#7
	st.w	[a12]1284,d8
.L227:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   330              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   332              wrhs2.B.PLC   = header->payloadLength;
	ld.hu	d15,[a15]10
.L436:
	st.w	[a12]1288,d15
.L22:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   333              eray->WRHS2.U = wrhs2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   334          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   335  
	ld.bu	d4,[a15]9
	mov.aa	a4,a12
.L279:
	mov.aa	a5,a13
.L281:
	call	IfxEray_writeData
.L280:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   336          eray->WRHS3.U = header->dataPointer;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   337      }
	ld.bu	d15,[a12]1296
.L437:
	ld.bu	d0,[a14]
.L438:
	insert	d15,d15,d0,#0,#1
	st.b	[a12]1296,d15
.L439:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   338  
	ld.bu	d0,[a12]1296
.L440:
	ld.bu	d15,[a14]1
.L441:
	insert	d15,d0,d15,#1,#1
	st.b	[a12]1296,d15
.L442:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   339      IfxEray_writeData(eray, data, header->payloadLength);
	ld.bu	d0,[a12]1296
.L443:
	ld.bu	d15,[a14]2
.L444:
	insert	d15,d0,d15,#2,#1
	st.b	[a12]1296,d15
.L445:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   340  
	ld.bu	d0,[a12]1300
.L446:
	ld.bu	d15,[a14]3
.L447:
	insert	d15,d0,d15,#0,#7
	st.b	[a12]1300,d15

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   341      eray->IBCM.B.LHSH  = slotConfig->headerTransfered;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   342      eray->IBCM.B.LDSH  = slotConfig->dataTransfered;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   343      eray->IBCM.B.STXRH = slotConfig->transferRequested;
.L24:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    44   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    45   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    46   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    47   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    48   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    49   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    50   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    51   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    52   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    53   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    54   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    55   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    56   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    57   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    58   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    59   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    60   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    62  #ifndef IFXERAY_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    63  #define IFXERAY_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    65  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    66  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    67  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    68  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    69  #include "_Impl/IfxEray_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    70  #include "_PinMap/IfxEray_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    71  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    72  #include "IfxEray_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    75  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    76  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    78  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    79   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    80  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    81   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    82  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    83  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    84      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    85      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    86      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    87  } IfxEray_Baudrate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    89  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    90   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    91  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    93      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    94      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    95  } IfxEray_BufferDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    97  /** \brief Channel Id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    98   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    99  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   100  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   101      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   102      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   103  } IfxEray_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   105  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   106   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   107  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   108  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   109      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   110      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   111      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   112      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   113      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   114      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   115      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   116      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   117      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   118      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   119      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   120      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   121      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   122      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   123      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   124      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   125      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   126      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   127  } IfxEray_ClearErrorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   129  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   131  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   132  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   133      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   134      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   135      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   136      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   137      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   138      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   139      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   140      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   141      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   142      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   143      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   144      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   145      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   146      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   147      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   148      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   149      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   150      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   151      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   152      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   153  } IfxEray_ClearStatusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   155  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   156   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   157  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   158  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   159      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   160      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   161      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   162      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   163      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   164      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   165      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   166      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   167  } IfxEray_ClockDivider;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   169  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   173      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   174      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   175      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   176  } IfxEray_ExternalOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   178  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   179   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   180  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   182      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   183      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   184      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   185      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   186      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   187      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   188      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   189      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   190  } IfxEray_ExternalOffsetCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   192  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   196      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   197      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   198      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   199  } IfxEray_ExternalRate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   200  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   201  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   203  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   205      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   206      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   207      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   208      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   209      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   210      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   211      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   212      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   213  } IfxEray_ExternalRateCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   215  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   219      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   220      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   221      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   222  } IfxEray_IdleDynamicSlots;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   224  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   225   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   226  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   227  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   228      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   229      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   230      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   231      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   232      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   233      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   234      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   235      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   236      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   237      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   238      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   239      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   240      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   241      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   242      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   243  } IfxEray_ListenTimeOutNoise;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   245  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   246   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   247  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   249      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   250      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   251      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   252      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   253      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   254      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   255      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   256      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   257      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   258      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   259      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   260      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   261      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   262      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   263  } IfxEray_MaxSynchFrames;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   265  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   266   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   267  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   269      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   270      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   271      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   272      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   273      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   274      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   275      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   276      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   277      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   278      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   279      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   280      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   281      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   282  } IfxEray_PocCommand;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   284  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   288      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   289      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   290      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   291      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   292      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   293      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   294      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   295      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   296      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   297      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   298      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   299      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   300      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   301      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   302      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   303      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   304      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   305      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   306      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   307      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   308      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   309      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   310      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   311  } IfxEray_PocState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   312  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   313  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   315  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   316  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   317      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   318      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   319      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   320      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   321  } IfxEray_ReceiveChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   322  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   323  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   324   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   326  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   327  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   328      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   329      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   330  } IfxEray_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   332  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   333   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   334  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   335  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   336      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   337      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   338      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   339  } IfxEray_StrobePosition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   341  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   343  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   344  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   345      IfxEray_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   346      IfxEray_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   347      IfxEray_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   348  } IfxEray_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   350  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   352  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   353  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   354      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   355      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   356  } IfxEray_TransmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   358  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   362      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   364  } IfxEray_TransmissionSlotMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   366  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   368  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   369  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   370      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   371      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   372  } IfxEray_WakeupChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   373  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   374  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   376  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   377  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   378  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   380  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   381   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   382  /** \brief Header section in  a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   384  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   386      uint16                   frameId;                         /**< \brief slot ID of the selected Message Buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   387      uint8                    cycleCode;                       /**< \brief the cycle set used for cycle counter filtering. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   388      boolean                  channelAFiltered;                /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   389      boolean                  channelBFiltered;                /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   390      IfxEray_BufferDirection  bufferDirection;                 /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   391      boolean                  transmitPayloadIndicatior;       /**< \brief weather payload indicator is set or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   392      IfxEray_TransmissionMode transmissionMode;                /**< \brief transmission mode of Header. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   393      boolean                  bufferServiceEnabled;            /**< \brief wether buffer service request is enabled or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   394      uint8                    payloadLength;                   /**< \brief length of data section. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   395      uint16                   dataPointer;                     /**< \brief pointer to the data section of message buffer in RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   396      boolean                  startupFrameIndicator;           /**< \brief whether startup frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   397      boolean                  syncFrameIndicator;              /**< \brief whether sync frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   398  } IfxEray_Header;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   400  /** \brief Received header in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   401   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   402  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   403  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   404      uint16 frameId : 11;                     /**< \brief received frame id. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   405      uint8  payloadLength : 7;                /**< \brief received payload length. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   406      uint16 headerCrc : 11;                   /**< \brief received header crc. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   407      uint8  nullFrameIndicator : 1;           /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   408      uint8  syncFrame : 1;                    /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   409      uint8  startupFrame : 1;                 /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   410      uint8  cycleNumber : 7;                  /**< \brief cycle number in which frame is received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   411      uint8  payloadPreambleIndicator : 1;     /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   412  } IfxEray_ReceivedHeader;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   414  /** \brief Transmit control structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   415   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   416  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   417  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   418      boolean headerTransfered;        /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   419      boolean dataTransfered;          /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   420      boolean transferRequested;       /**< \brief transmit buffer released for transmission or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   421      uint8   bufferIndex;             /**< \brief buffer index in the Message RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   422  } IfxEray_SlotConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   423  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   424  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   426  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   427   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   429  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   430  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   431  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   433  /** \brief Clears the error flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   434   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   435   * \param errorFlag error flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   436   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   437   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   438  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   440  /** \brief Clears the status flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   441   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   442   * \param statusFlag status flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   443   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   444   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   445  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   446  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   447  /** \brief Gets the error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   448   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   449   * \return error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   450   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   451  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   453  /** \brief Gets the IBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   454   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   455   * \return address of IBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   456   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   457  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   459  /** \brief Gets the INT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   460   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   461   * \return address of INT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   463  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   465  /** \brief Gets the INT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   466   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   467   * \return address of INT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   469  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   470  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   471  /** \brief Gets the message buffers interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   472   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   473   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   474   * \return message buffer interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   476  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   478  /** \brief Gets the MBSC0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   479   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   480   * \return address of MBSC0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   481   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   482  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   483  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   484  /** \brief Gets the MBSC1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   485   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   486   * \return address of MBSC1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   488  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   490  /** \brief Gets the NDAT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   491   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   492   * \return address of NDAT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   494  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   496  /** \brief Gets the NDAT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   497   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   498   * \return address of NDAT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   500  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   502  /** \brief Gets the new data interrupt buffers status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   503   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   504   * \param ndat message buffer number configured to which ndat occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   505   * \return ndat interrupt buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   507  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   509  /** \brief Gets the OBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   511   * \return address of OBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   512   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   513  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   515  /** \brief Gets the status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   517   * \return status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   518   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   519  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   521  /** \brief Gets the TINT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   523   * \return address of TINT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   524   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   525  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   527  /** \brief Gets the TINT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   528   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   529   * \return address of TINT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   531  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   533  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   534  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   535  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   537  /** \brief Clears all the error flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   538   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   539   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   541  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   543  /** \brief Enables all the Interrupt lines.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   544   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   545   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   546   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   547  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   548  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   549  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   550   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   551   * \param messageBuffer message buffer interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   552   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   553   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   554   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   555  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   557  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   558   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   559   * \param ndat NDAT interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   560   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   561   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   562   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   563  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   564  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   565  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   566  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   567  /** \addtogroup IfxLld_Eray_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   568   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   570  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   571  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   572  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   574  /** \brief Initialises a RX pin.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   575   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   576   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   577   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   578   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   579  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   581  /** \brief Initializes a TX Enable output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   582   * \param txEn the TX Enable Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   583   * \param txEnMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   584   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   587  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   589  /** \brief Initializes a TX output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   590   * \param tx the TX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   591   * \param txMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   592   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   593   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   594   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   595  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   597  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   599  /** \addtogroup IfxLld_Eray_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   600   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   601  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   602  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   603  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   606  /** \brief Disables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   607   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   608   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   609   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   610  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   611  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   612  /** \brief Enables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   613   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   616  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   618  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   619   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   620   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   621   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   622   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   623   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   624  IFX_INLINE boolean IfxEray_isModuleSuspended(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   625  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   626  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   627   * \param eray pointer to ERAY registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   628   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   629   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   630   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   631  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   632  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   633  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   634  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   635  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   636  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   637  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   638   * \param eray Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   639   * \return ERAY module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   641  IFX_EXTERN Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   643  /** \brief API to get the resource index of the ERAY specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   644   * \param eray Pointer to the ERAY HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   645   * \return Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   646   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   647  IFX_EXTERN IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   649  /** \brief Resets the ERAY kernel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   650   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   651   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   652   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   653  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   654  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   655  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   657  /** \addtogroup IfxLld_Eray_Std_Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   658   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   660  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   661  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   662  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   663  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   664  /** \brief Gets the FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   665   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   666   * \return FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   667   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   668  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   669  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   670  /** \brief Gets the Input Buffer Host Busy status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   672   * \return TRUE if Host is Busy otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   674  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   676  /** \brief Gets the Input Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   677   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   678   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   680  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   682  /** \brief Gets the output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   683   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   684   * \return output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   685   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   686  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   687  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   688  /** \brief Gets the Output Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   689   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   690   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   692  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   694  /** \brief Gets the current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   695   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   696   * \return current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   697   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   698  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   700  /** \brief Gets the received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   701   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   702   * \return received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   703   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   704  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   706  /** \brief Waits until the controller enters required POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   708   * \param pocState POC state upto which controller waits.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   709   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   710   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   711  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   713  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   714  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   715  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   717  /** \brief Changes the Commmunication Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   718   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   719   * \param pocCommand POC command which triggers the Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   720   * \return TRUE if command accepted otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   721   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   722  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   724  /** \brief Sets the POC state to Ready state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   725   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   726   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   727   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   728  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   729  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   730  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   732  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   733   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   735  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   736  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   737  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   739  /** \brief request to receive header section from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   740   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   741   * \param headerReceived whether header is received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   742   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   743   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   744  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   745  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   746  /** \brief sets the bit to send header in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   747   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   748   * \param headerTransfered whether header transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   749   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   750   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   751  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   752  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   753  /** \brief Sets number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   754   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   755   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   756   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   757   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   758  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   760  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   761   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   762   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   764  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   766  /** \brief Sets baudrate on Flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   767   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   768   * \param baudrate baudrate on flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   773  /** \brief Sets secured buffers in message RAM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   775   * \param secureValue secure value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   780  /** \brief Sets channel A initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   782   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   783   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   784   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   785   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   786  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   787  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   788  /** \brief Sets channel B initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   789   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   790   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   791   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   794  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   796  /** \brief Sets receive delays on channels.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   797   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   798   * \param channelAReceptionDelay reception delay on channel A.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   799   * \param channelBReceptionDelay reception delay on channel B.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   800   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   801   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   802  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   803  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   804  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   805   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   806   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   807   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   808   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   810  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   812  /** \brief lead to halt state in clock synch error.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   813   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   814   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   815   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   816   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   817  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   818  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   819  /** \brief Sets cluster drift values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   820   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   821   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   822   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   823   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   825  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   827  /** \brief Sets cluster startup deviation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   828   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   829   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   830   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   832  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   834  /** \brief Sets CAS symbol window duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   835   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   836   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   837   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   838   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   839  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   840  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   841  /** \brief sets duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   842   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   843   * \param macroticks duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   844   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   845   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   846  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   847  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   848  /** \brief sets duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   849   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   850   * \param microticks duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   851   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   852   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   853  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   854  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   855  /** \brief Sets decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   856   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   857   * \param decodingCorrection decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   858   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   859   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   860  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   861  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   862  /** \brief Sets dynamic slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   863   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   864   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   865   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   866   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   867   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   868   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   869  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   871  /** \brief Sets external correction controls.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   872   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   873   * \param externalOffset External offset correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   874   * \param externalRate External rate correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   875   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   876   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   877  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   879  /** \brief Sets external correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   880   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   881   * \param externalOffsetCorrection external clock offset correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   882   * \param externalRateCorrection external clock rate correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   883   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   884   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   885  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   887  /** \brief Sets FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   888   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   889   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   890   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   891   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   892  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   894  /** \brief Sets FIFO filter configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   895   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   896   * \param rejectedFrameId rejected frameId by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   897   * \param filteredCycleNumber filtered cycle number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   898   * \param fifoNullFramesRejected null frames rejection selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   899   * \param frameIdFilter filtered frameid by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   900   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   901   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   902  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   904  /** \brief Sets FIFO configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   905   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   906   * \param receiveChannel FIFO receive channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   907   * \param staticFifoDisabled static FIFO selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   908   * \param fifoDepth FIFO depth.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   909   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   911  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   913  /** \brief Sets first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   914   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   915   * \param firstDynamicBuffer first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   916   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   918  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   920  /** \brief Sets startup or wakeup listen timeouts.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   921   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   922   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   923   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   924   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   925   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   926  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   928  /** \brief Sets the maximum cold start attempts for active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   929   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   930   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   933  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   935  /** \brief Sets max limit correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   936   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   937   * \param maxOffsetCorrection maximum offset correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   938   * \param maxRateCorrection maximum rate correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   939   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   940   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   941  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   942  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   943  /** \brief Sets maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   944   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   945   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   946   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   947   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   948  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   949  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   950  /** \brief Sets number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   951   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   952   * \param numberOfMessageBuffers number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   953   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   954   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   955  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   956  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   957  /** \brief Sets Message Handler configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   958   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   959   * \param staticFramepayload payload length of static frames in double bytes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   960   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   961   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   962   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   963  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   965  /** \brief Sets network start Idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   966   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   967   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   968   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   969   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   970  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   972  /** \brief Sets network management vector length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   973   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   974   * \param networkVectorLength length of network management vector.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   975   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   976   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   979  /** \brief Sets channels connected to node.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   981   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   982   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   983   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   984   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   985  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   987  /** \brief Sets offset correction starting point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   988   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   989   * \param correctionOffset offset correction start point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   990   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   991   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   994  /** \brief requests to receive the frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   996   * \param receiveRequested whether frame to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   997   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   998   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1000  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1001  /** \brief Sets receive wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1003   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1004   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1005   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1008  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint16 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1010  /** \brief sets buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1011   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1012   * \param bufferIndex buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1015  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1017  /** \brief Sets slots action points.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1018   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1019   * \param staticActionPoint static slots and symbol window action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1020   * \param dynamicActionPoint dynamic slots action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1023  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1025  /** \brief Sets static slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1026   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1027   * \param staticSlotLength duration of static slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1028   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1029   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1030   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1031  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1032  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1033  /** \brief Sets sample point for strobing.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1034   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1035   * \param strobePosition strobing sample count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1036   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1037   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1038  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1039  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1040  /** \brief Sets channels which transmits symbols.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1041   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1042   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1043   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1044   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1045   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1046  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1047  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1048  /** \brief Sets the transmit slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1049   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1050   * \param transmissionSlotMode transmission slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1051   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1052   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1053  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1054  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1055  /** \brief Sets transmission start time duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1056   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1057   * \param transmissionStartTime transmission start time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1058   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1059   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1060  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint8 transmissionStartTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1062  /** \brief Sets transfer request to send frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1064   * \param transferRequested whether transfer requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1069  /** \brief Sets transmit wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1071   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1072   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1073   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1074   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1075   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1076  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1077  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1078  /** \brief Configures transmitted frames for startup and synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1079   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1080   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1081   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1082   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1083   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1084  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1085  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1086  /** \brief Sets the transmit buffer number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1087   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1088   * \param bufferIndex buffer number in which frame is sent.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1089   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1090   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1091  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1093  /** \brief Swaps the shadow and Host output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1094   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1095   * \param swapRequested whether swap is requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1096   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1097   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1098  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1100  /** \brief Sets the cluster wakeup channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1101   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1102   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1105  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1107  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1108  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1109  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1110   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1112  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1113  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1114  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1116  /** \brief requests to receive data from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1117   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1118   * \param dataReceived whether data to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1121  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1123  /** \brief sets the bit to send data in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1124   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1125   * \param dataTransfered whether data transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1126   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1127   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1128  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1130  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1131  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1132  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1134  /** \brief Calculate and returns the CRC for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1135   * \param payloadLength payload length configured for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1136   * \param frameId slot id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1137   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1138   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1139   * \return calculated CRC value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1140   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1141  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1143  /** \brief Reads the received data from output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1144   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1145   * \param data pointer to received data buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1146   * \param payloadLength payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1147   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1148   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1149  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1151  /** \brief Reads header and data from output buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1152   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1153   * \param header header received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1154   * \param data data received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1155   * \param maxPayloadLength maximum payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1156   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1157   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1158  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1160  /** \brief Writes header and data to Input buffers and set the slots.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1161   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1162   * \param header Header section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1163   * \param data data section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1164   * \param slotConfig pointer slot allocation configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1165   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1167  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1169  /** \brief Writes data section of a frame to input data registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1170   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1171   * \param data data segment in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1172   * \param payloadLength payload length configured for slot buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1173   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1174   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1175  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1177  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1180  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1181  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1183  /** \brief Gets the FIFO index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1184   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1185   * \return FIFO buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1186   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1187  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1189  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1190   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1191   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1192   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1193   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1194   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1195  IFX_INLINE void IfxEray_setSuspendMode(Ifx_ERAY *eray, IfxEray_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1197  /** \brief Provides functionality for both setting of pin direction as input and configuring pad driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1198   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1199   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1200   * \param padDriver Pad Driver Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1201   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1203  IFX_INLINE void IfxEray_initRxPinWithPadLevel(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1205  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1206  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1207  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1209  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1210  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1211      eray->EIR.U = errorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1212  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1213  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1215  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1216  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1217      eray->SIR.U = statusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1218  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1220  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1221  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1222  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1224      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1225      //disable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1226      eray->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1227      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1228  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1231  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1232  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1233      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1234      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1235      // Run Mode Clock divider to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1236      //enable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1237      eray->CLC.U = 0x00000100;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1239      // ensure that write access finished before leaving this function
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1240      if (eray->CLC.U)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1241      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1243      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1244  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1247  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1249      Ifx_ERAY_EIR interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1250      interruptFlags.U = eray->EIR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1251      return interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1255  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1256  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1257      return eray->MRC.B.FFB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1258  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1261  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1263      Ifx_ERAY_FSR fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1264      fifoStatus.U = eray->FSR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1265      return fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1266  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1269  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1271      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1272  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1273  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1274  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1275  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1276  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1277      return (eray->IBCR.B.IBSYS == 1) ? TRUE : FALSE;
	ld.bu	d15,[a12]1303
.L231:
	jnz.t	d15:7,.L24
.L448:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    44   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    45   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    46   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    47   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    48   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    49   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    50   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    51   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    52   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    53   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    54   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    55   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    56   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    57   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    58   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    59   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    60   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    62  #ifndef IFXERAY_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    63  #define IFXERAY_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    65  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    66  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    67  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    68  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    69  #include "_Impl/IfxEray_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    70  #include "_PinMap/IfxEray_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    71  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    72  #include "IfxEray_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    75  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    76  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    78  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    79   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    80  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    81   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    82  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    83  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    84      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    85      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    86      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    87  } IfxEray_Baudrate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    89  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    90   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    91  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    93      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    94      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    95  } IfxEray_BufferDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    97  /** \brief Channel Id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    98   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    99  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   100  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   101      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   102      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   103  } IfxEray_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   105  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   106   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   107  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   108  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   109      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   110      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   111      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   112      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   113      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   114      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   115      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   116      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   117      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   118      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   119      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   120      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   121      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   122      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   123      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   124      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   125      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   126      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   127  } IfxEray_ClearErrorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   129  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   131  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   132  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   133      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   134      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   135      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   136      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   137      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   138      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   139      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   140      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   141      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   142      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   143      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   144      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   145      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   146      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   147      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   148      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   149      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   150      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   151      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   152      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   153  } IfxEray_ClearStatusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   155  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   156   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   157  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   158  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   159      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   160      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   161      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   162      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   163      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   164      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   165      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   166      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   167  } IfxEray_ClockDivider;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   169  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   173      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   174      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   175      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   176  } IfxEray_ExternalOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   178  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   179   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   180  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   182      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   183      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   184      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   185      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   186      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   187      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   188      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   189      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   190  } IfxEray_ExternalOffsetCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   192  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   196      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   197      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   198      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   199  } IfxEray_ExternalRate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   200  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   201  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   203  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   205      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   206      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   207      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   208      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   209      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   210      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   211      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   212      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   213  } IfxEray_ExternalRateCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   215  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   219      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   220      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   221      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   222  } IfxEray_IdleDynamicSlots;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   224  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   225   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   226  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   227  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   228      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   229      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   230      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   231      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   232      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   233      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   234      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   235      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   236      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   237      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   238      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   239      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   240      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   241      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   242      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   243  } IfxEray_ListenTimeOutNoise;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   245  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   246   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   247  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   249      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   250      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   251      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   252      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   253      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   254      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   255      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   256      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   257      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   258      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   259      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   260      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   261      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   262      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   263  } IfxEray_MaxSynchFrames;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   265  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   266   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   267  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   269      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   270      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   271      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   272      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   273      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   274      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   275      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   276      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   277      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   278      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   279      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   280      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   281      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   282  } IfxEray_PocCommand;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   284  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   288      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   289      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   290      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   291      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   292      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   293      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   294      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   295      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   296      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   297      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   298      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   299      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   300      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   301      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   302      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   303      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   304      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   305      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   306      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   307      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   308      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   309      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   310      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   311  } IfxEray_PocState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   312  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   313  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   315  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   316  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   317      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   318      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   319      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   320      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   321  } IfxEray_ReceiveChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   322  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   323  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   324   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   326  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   327  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   328      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   329      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   330  } IfxEray_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   332  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   333   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   334  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   335  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   336      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   337      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   338      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   339  } IfxEray_StrobePosition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   341  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   343  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   344  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   345      IfxEray_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   346      IfxEray_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   347      IfxEray_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   348  } IfxEray_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   350  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   352  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   353  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   354      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   355      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   356  } IfxEray_TransmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   358  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   362      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   364  } IfxEray_TransmissionSlotMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   366  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   368  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   369  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   370      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   371      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   372  } IfxEray_WakeupChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   373  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   374  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   376  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   377  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   378  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   380  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   381   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   382  /** \brief Header section in  a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   384  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   386      uint16                   frameId;                         /**< \brief slot ID of the selected Message Buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   387      uint8                    cycleCode;                       /**< \brief the cycle set used for cycle counter filtering. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   388      boolean                  channelAFiltered;                /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   389      boolean                  channelBFiltered;                /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   390      IfxEray_BufferDirection  bufferDirection;                 /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   391      boolean                  transmitPayloadIndicatior;       /**< \brief weather payload indicator is set or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   392      IfxEray_TransmissionMode transmissionMode;                /**< \brief transmission mode of Header. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   393      boolean                  bufferServiceEnabled;            /**< \brief wether buffer service request is enabled or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   394      uint8                    payloadLength;                   /**< \brief length of data section. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   395      uint16                   dataPointer;                     /**< \brief pointer to the data section of message buffer in RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   396      boolean                  startupFrameIndicator;           /**< \brief whether startup frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   397      boolean                  syncFrameIndicator;              /**< \brief whether sync frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   398  } IfxEray_Header;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   400  /** \brief Received header in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   401   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   402  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   403  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   404      uint16 frameId : 11;                     /**< \brief received frame id. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   405      uint8  payloadLength : 7;                /**< \brief received payload length. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   406      uint16 headerCrc : 11;                   /**< \brief received header crc. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   407      uint8  nullFrameIndicator : 1;           /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   408      uint8  syncFrame : 1;                    /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   409      uint8  startupFrame : 1;                 /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   410      uint8  cycleNumber : 7;                  /**< \brief cycle number in which frame is received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   411      uint8  payloadPreambleIndicator : 1;     /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   412  } IfxEray_ReceivedHeader;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   414  /** \brief Transmit control structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   415   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   416  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   417  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   418      boolean headerTransfered;        /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   419      boolean dataTransfered;          /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   420      boolean transferRequested;       /**< \brief transmit buffer released for transmission or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   421      uint8   bufferIndex;             /**< \brief buffer index in the Message RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   422  } IfxEray_SlotConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   423  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   424  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   426  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   427   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   429  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   430  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   431  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   433  /** \brief Clears the error flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   434   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   435   * \param errorFlag error flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   436   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   437   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   438  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   440  /** \brief Clears the status flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   441   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   442   * \param statusFlag status flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   443   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   444   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   445  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   446  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   447  /** \brief Gets the error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   448   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   449   * \return error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   450   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   451  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   453  /** \brief Gets the IBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   454   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   455   * \return address of IBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   456   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   457  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   459  /** \brief Gets the INT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   460   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   461   * \return address of INT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   463  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   465  /** \brief Gets the INT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   466   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   467   * \return address of INT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   469  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   470  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   471  /** \brief Gets the message buffers interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   472   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   473   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   474   * \return message buffer interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   476  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   478  /** \brief Gets the MBSC0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   479   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   480   * \return address of MBSC0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   481   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   482  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   483  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   484  /** \brief Gets the MBSC1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   485   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   486   * \return address of MBSC1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   488  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   490  /** \brief Gets the NDAT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   491   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   492   * \return address of NDAT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   494  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   496  /** \brief Gets the NDAT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   497   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   498   * \return address of NDAT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   500  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   502  /** \brief Gets the new data interrupt buffers status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   503   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   504   * \param ndat message buffer number configured to which ndat occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   505   * \return ndat interrupt buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   507  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   509  /** \brief Gets the OBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   511   * \return address of OBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   512   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   513  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   515  /** \brief Gets the status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   517   * \return status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   518   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   519  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   521  /** \brief Gets the TINT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   523   * \return address of TINT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   524   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   525  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   527  /** \brief Gets the TINT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   528   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   529   * \return address of TINT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   531  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   533  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   534  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   535  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   537  /** \brief Clears all the error flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   538   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   539   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   541  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   543  /** \brief Enables all the Interrupt lines.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   544   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   545   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   546   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   547  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   548  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   549  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   550   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   551   * \param messageBuffer message buffer interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   552   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   553   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   554   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   555  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   557  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   558   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   559   * \param ndat NDAT interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   560   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   561   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   562   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   563  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   564  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   565  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   566  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   567  /** \addtogroup IfxLld_Eray_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   568   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   570  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   571  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   572  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   574  /** \brief Initialises a RX pin.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   575   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   576   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   577   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   578   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   579  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   581  /** \brief Initializes a TX Enable output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   582   * \param txEn the TX Enable Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   583   * \param txEnMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   584   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   587  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   589  /** \brief Initializes a TX output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   590   * \param tx the TX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   591   * \param txMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   592   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   593   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   594   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   595  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   597  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   599  /** \addtogroup IfxLld_Eray_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   600   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   601  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   602  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   603  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   606  /** \brief Disables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   607   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   608   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   609   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   610  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   611  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   612  /** \brief Enables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   613   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   616  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   618  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   619   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   620   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   621   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   622   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   623   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   624  IFX_INLINE boolean IfxEray_isModuleSuspended(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   625  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   626  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   627   * \param eray pointer to ERAY registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   628   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   629   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   630   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   631  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   632  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   633  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   634  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   635  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   636  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   637  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   638   * \param eray Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   639   * \return ERAY module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   641  IFX_EXTERN Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   643  /** \brief API to get the resource index of the ERAY specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   644   * \param eray Pointer to the ERAY HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   645   * \return Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   646   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   647  IFX_EXTERN IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   649  /** \brief Resets the ERAY kernel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   650   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   651   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   652   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   653  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   654  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   655  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   657  /** \addtogroup IfxLld_Eray_Std_Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   658   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   660  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   661  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   662  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   663  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   664  /** \brief Gets the FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   665   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   666   * \return FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   667   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   668  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   669  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   670  /** \brief Gets the Input Buffer Host Busy status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   672   * \return TRUE if Host is Busy otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   674  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   676  /** \brief Gets the Input Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   677   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   678   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   680  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   682  /** \brief Gets the output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   683   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   684   * \return output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   685   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   686  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   687  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   688  /** \brief Gets the Output Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   689   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   690   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   692  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   694  /** \brief Gets the current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   695   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   696   * \return current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   697   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   698  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   700  /** \brief Gets the received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   701   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   702   * \return received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   703   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   704  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   706  /** \brief Waits until the controller enters required POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   708   * \param pocState POC state upto which controller waits.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   709   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   710   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   711  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   713  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   714  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   715  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   717  /** \brief Changes the Commmunication Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   718   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   719   * \param pocCommand POC command which triggers the Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   720   * \return TRUE if command accepted otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   721   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   722  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   724  /** \brief Sets the POC state to Ready state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   725   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   726   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   727   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   728  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   729  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   730  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   732  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   733   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   735  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   736  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   737  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   739  /** \brief request to receive header section from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   740   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   741   * \param headerReceived whether header is received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   742   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   743   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   744  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   745  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   746  /** \brief sets the bit to send header in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   747   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   748   * \param headerTransfered whether header transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   749   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   750   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   751  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   752  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   753  /** \brief Sets number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   754   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   755   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   756   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   757   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   758  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   760  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   761   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   762   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   764  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   766  /** \brief Sets baudrate on Flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   767   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   768   * \param baudrate baudrate on flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   773  /** \brief Sets secured buffers in message RAM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   775   * \param secureValue secure value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   780  /** \brief Sets channel A initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   782   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   783   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   784   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   785   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   786  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   787  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   788  /** \brief Sets channel B initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   789   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   790   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   791   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   794  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   796  /** \brief Sets receive delays on channels.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   797   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   798   * \param channelAReceptionDelay reception delay on channel A.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   799   * \param channelBReceptionDelay reception delay on channel B.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   800   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   801   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   802  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   803  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   804  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   805   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   806   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   807   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   808   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   810  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   812  /** \brief lead to halt state in clock synch error.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   813   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   814   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   815   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   816   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   817  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   818  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   819  /** \brief Sets cluster drift values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   820   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   821   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   822   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   823   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   825  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   827  /** \brief Sets cluster startup deviation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   828   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   829   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   830   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   832  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   834  /** \brief Sets CAS symbol window duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   835   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   836   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   837   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   838   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   839  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   840  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   841  /** \brief sets duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   842   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   843   * \param macroticks duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   844   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   845   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   846  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   847  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   848  /** \brief sets duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   849   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   850   * \param microticks duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   851   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   852   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   853  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   854  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   855  /** \brief Sets decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   856   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   857   * \param decodingCorrection decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   858   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   859   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   860  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   861  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   862  /** \brief Sets dynamic slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   863   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   864   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   865   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   866   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   867   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   868   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   869  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   871  /** \brief Sets external correction controls.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   872   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   873   * \param externalOffset External offset correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   874   * \param externalRate External rate correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   875   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   876   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   877  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   879  /** \brief Sets external correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   880   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   881   * \param externalOffsetCorrection external clock offset correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   882   * \param externalRateCorrection external clock rate correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   883   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   884   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   885  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   887  /** \brief Sets FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   888   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   889   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   890   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   891   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   892  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   894  /** \brief Sets FIFO filter configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   895   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   896   * \param rejectedFrameId rejected frameId by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   897   * \param filteredCycleNumber filtered cycle number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   898   * \param fifoNullFramesRejected null frames rejection selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   899   * \param frameIdFilter filtered frameid by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   900   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   901   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   902  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   904  /** \brief Sets FIFO configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   905   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   906   * \param receiveChannel FIFO receive channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   907   * \param staticFifoDisabled static FIFO selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   908   * \param fifoDepth FIFO depth.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   909   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   911  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   913  /** \brief Sets first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   914   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   915   * \param firstDynamicBuffer first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   916   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   918  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   920  /** \brief Sets startup or wakeup listen timeouts.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   921   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   922   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   923   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   924   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   925   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   926  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   928  /** \brief Sets the maximum cold start attempts for active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   929   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   930   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   933  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   935  /** \brief Sets max limit correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   936   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   937   * \param maxOffsetCorrection maximum offset correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   938   * \param maxRateCorrection maximum rate correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   939   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   940   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   941  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   942  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   943  /** \brief Sets maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   944   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   945   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   946   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   947   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   948  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   949  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   950  /** \brief Sets number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   951   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   952   * \param numberOfMessageBuffers number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   953   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   954   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   955  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   956  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   957  /** \brief Sets Message Handler configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   958   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   959   * \param staticFramepayload payload length of static frames in double bytes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   960   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   961   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   962   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   963  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   965  /** \brief Sets network start Idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   966   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   967   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   968   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   969   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   970  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   972  /** \brief Sets network management vector length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   973   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   974   * \param networkVectorLength length of network management vector.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   975   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   976   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   979  /** \brief Sets channels connected to node.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   981   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   982   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   983   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   984   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   985  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   987  /** \brief Sets offset correction starting point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   988   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   989   * \param correctionOffset offset correction start point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   990   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   991   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   994  /** \brief requests to receive the frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   996   * \param receiveRequested whether frame to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   997   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   998   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1000  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1001  /** \brief Sets receive wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1003   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1004   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1005   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1008  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint16 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1010  /** \brief sets buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1011   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1012   * \param bufferIndex buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1015  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1017  /** \brief Sets slots action points.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1018   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1019   * \param staticActionPoint static slots and symbol window action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1020   * \param dynamicActionPoint dynamic slots action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1023  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1025  /** \brief Sets static slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1026   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1027   * \param staticSlotLength duration of static slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1028   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1029   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1030   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1031  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1032  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1033  /** \brief Sets sample point for strobing.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1034   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1035   * \param strobePosition strobing sample count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1036   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1037   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1038  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1039  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1040  /** \brief Sets channels which transmits symbols.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1041   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1042   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1043   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1044   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1045   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1046  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1047  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1048  /** \brief Sets the transmit slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1049   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1050   * \param transmissionSlotMode transmission slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1051   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1052   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1053  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1054  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1055  /** \brief Sets transmission start time duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1056   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1057   * \param transmissionStartTime transmission start time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1058   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1059   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1060  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint8 transmissionStartTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1062  /** \brief Sets transfer request to send frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1064   * \param transferRequested whether transfer requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1069  /** \brief Sets transmit wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1071   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1072   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1073   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1074   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1075   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1076  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1077  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1078  /** \brief Configures transmitted frames for startup and synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1079   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1080   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1081   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1082   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1083   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1084  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1085  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1086  /** \brief Sets the transmit buffer number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1087   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1088   * \param bufferIndex buffer number in which frame is sent.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1089   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1090   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1091  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1093  /** \brief Swaps the shadow and Host output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1094   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1095   * \param swapRequested whether swap is requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1096   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1097   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1098  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1100  /** \brief Sets the cluster wakeup channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1101   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1102   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1105  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1107  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1108  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1109  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1110   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1112  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1113  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1114  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1116  /** \brief requests to receive data from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1117   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1118   * \param dataReceived whether data to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1121  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1123  /** \brief sets the bit to send data in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1124   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1125   * \param dataTransfered whether data transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1126   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1127   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1128  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1130  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1131  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1132  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1134  /** \brief Calculate and returns the CRC for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1135   * \param payloadLength payload length configured for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1136   * \param frameId slot id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1137   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1138   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1139   * \return calculated CRC value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1140   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1141  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1143  /** \brief Reads the received data from output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1144   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1145   * \param data pointer to received data buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1146   * \param payloadLength payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1147   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1148   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1149  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1151  /** \brief Reads header and data from output buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1152   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1153   * \param header header received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1154   * \param data data received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1155   * \param maxPayloadLength maximum payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1156   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1157   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1158  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1160  /** \brief Writes header and data to Input buffers and set the slots.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1161   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1162   * \param header Header section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1163   * \param data data section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1164   * \param slotConfig pointer slot allocation configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1165   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1167  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1169  /** \brief Writes data section of a frame to input data registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1170   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1171   * \param data data segment in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1172   * \param payloadLength payload length configured for slot buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1173   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1174   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1175  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1177  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1180  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1181  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1183  /** \brief Gets the FIFO index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1184   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1185   * \return FIFO buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1186   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1187  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1189  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1190   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1191   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1192   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1193   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1194   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1195  IFX_INLINE void IfxEray_setSuspendMode(Ifx_ERAY *eray, IfxEray_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1197  /** \brief Provides functionality for both setting of pin direction as input and configuring pad driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1198   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1199   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1200   * \param padDriver Pad Driver Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1201   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1203  IFX_INLINE void IfxEray_initRxPinWithPadLevel(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1205  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1206  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1207  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1209  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1210  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1211      eray->EIR.U = errorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1212  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1213  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1215  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1216  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1217      eray->SIR.U = statusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1218  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1220  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1221  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1222  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1224      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1225      //disable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1226      eray->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1227      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1228  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1231  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1232  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1233      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1234      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1235      // Run Mode Clock divider to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1236      //enable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1237      eray->CLC.U = 0x00000100;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1239      // ensure that write access finished before leaving this function
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1240      if (eray->CLC.U)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1241      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1243      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1244  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1247  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1249      Ifx_ERAY_EIR interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1250      interruptFlags.U = eray->EIR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1251      return interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1255  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1256  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1257      return eray->MRC.B.FFB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1258  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1261  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1263      Ifx_ERAY_FSR fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1264      fifoStatus.U = eray->FSR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1265      return fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1266  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1269  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1271      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	lea	a15,[a12]1301

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   344  fig->transferRequested;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   345      eray->IBCR.B.IBRH  = slotConfig->bufferIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   346  
.L25:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     2   * \file IfxEray.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     3   * \brief ERAY  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     4   * \ingroup IfxLld_Eray
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    44   * \defgroup IfxLld_Eray_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    45   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    46   * \defgroup IfxLld_Eray_Std_Interrupt Interrupt Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    47   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    48   * \defgroup IfxLld_Eray_Std_IO IO Pin Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    49   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    50   * \defgroup IfxLld_Eray_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    51   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    52   * \defgroup IfxLld_Eray_Std_Status Status Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    53   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    54   * \defgroup IfxLld_Eray_Std_Configuration Configuration Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    55   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    56   * \defgroup IfxLld_Eray_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    57   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    58   * \defgroup IfxLld_Eray_Std_Operative Operative Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    59   * \ingroup IfxLld_Eray_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    60   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    61  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    62  #ifndef IFXERAY_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    63  #define IFXERAY_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    64  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    65  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    66  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    67  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    68  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    69  #include "_Impl/IfxEray_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    70  #include "_PinMap/IfxEray_PinMap.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    71  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    72  #include "IfxEray_reg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    73  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    74  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    75  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    76  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    78  /** \addtogroup IfxLld_Eray_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    79   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    80  /** \brief Baudrate on the flexray bus, defined in MODULE_ERAY0.PRTC1.B.BRP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    81   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    82  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    83  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    84      IfxEray_Baudrate_10  = 0, /**< \brief baudrate is 10MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    85      IfxEray_Baudrate_5   = 1, /**< \brief baudrate is 5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    86      IfxEray_Baudrate_2_5 = 2  /**< \brief baudrate is 2.5MBits/Sec */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    87  } IfxEray_Baudrate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    88  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    89  /** \brief wheather transmit buffer or receive buffer, defined in MODULE_ERAY0.WRHS1.B.CFG.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    90   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    91  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    93      IfxEray_BufferDirection_receive  = 0, /**< \brief buffer is configured as receive buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    94      IfxEray_BufferDirection_transmit = 1  /**< \brief buffer is configured as transmit buffer */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    95  } IfxEray_BufferDirection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    96  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    97  /** \brief Channel Id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    98   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	    99  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   100  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   101      IfxEray_Channel_a = 0,  /**< \brief channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   102      IfxEray_Channel_b = 1   /**< \brief channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   103  } IfxEray_Channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   104  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   105  /** \brief Selection of error flag to clear defined in MODULE_ERAY.EIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   106   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   107  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   108  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   109      IfxEray_ClearErrorFlag_pemc = 1,         /**< \brief POC error mode change bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   110      IfxEray_ClearErrorFlag_cna  = 2,         /**< \brief command not accepted event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   111      IfxEray_ClearErrorFlag_sfbm = 4,         /**< \brief sync frame below minimum bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   112      IfxEray_ClearErrorFlag_sfo  = 8,         /**< \brief sync frame overflow event bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   113      IfxEray_ClearErrorFlag_ccf  = 16,        /**< \brief clock correction failure event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   114      IfxEray_ClearErrorFlag_ccl  = 32,        /**< \brief CHI command locked event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   115      IfxEray_ClearErrorFlag_eerr = 64,        /**< \brief ECC error event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   116      IfxEray_ClearErrorFlag_rfo  = 128,       /**< \brief RxFIFO overrun event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   117      IfxEray_ClearErrorFlag_efa  = 256,       /**< \brief empty FIFO access event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   118      IfxEray_ClearErrorFlag_iiba = 512,       /**< \brief illegal input buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   119      IfxEray_ClearErrorFlag_ioba = 1024,      /**< \brief illegal output buffer access event. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   120      IfxEray_ClearErrorFlag_mhf  = 2048,      /**< \brief message handler constraint flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   121      IfxEray_ClearErrorFlag_eda  = 65536,     /**< \brief error event on channel A. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   122      IfxEray_ClearErrorFlag_ltva = 131072,    /**< \brief latest transmit violation flag on channel A . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   123      IfxEray_ClearErrorFlag_taba = 262144,    /**< \brief transmission across channel A boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   124      IfxEray_ClearErrorFlag_edb  = 16777216,  /**< \brief error event on channel B. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   125      IfxEray_ClearErrorFlag_ltvb = 33554432,  /**< \brief latest transmit violation flag on channel B . */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   126      IfxEray_ClearErrorFlag_tabb = 67108864   /**< \brief transmission across channel B boundary flag. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   127  } IfxEray_ClearErrorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   129  /** \brief Selection of status flag to clear defined in MODULE_ERAY.SIR.U
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   131  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   132  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   133      IfxEray_ClearStatusFlag_wst  = 1,         /**< \brief wakeup status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   134      IfxEray_ClearStatusFlag_cas  = 2,         /**< \brief collision avoidance bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   135      IfxEray_ClearStatusFlag_cycs = 4,         /**< \brief cycle start service bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   136      IfxEray_ClearStatusFlag_txi  = 8,         /**< \brief transmit service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   137      IfxEray_ClearStatusFlag_rxi  = 16,        /**< \brief receive service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   138      IfxEray_ClearStatusFlag_rfne = 32,        /**< \brief receive fifo not empty bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   139      IfxEray_ClearStatusFlag_rfcl = 64,        /**< \brief RxFIFO critical level reached bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   140      IfxEray_ClearStatusFlag_nmvc = 128,       /**< \brief network management vector bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   141      IfxEray_ClearStatusFlag_ti0  = 256,       /**< \brief timer0 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   142      IfxEray_ClearStatusFlag_ti1  = 512,       /**< \brief timer1 service request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   143      IfxEray_ClearStatusFlag_tibc = 1024,      /**< \brief transfer input buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   144      IfxEray_ClearStatusFlag_tobc = 2048,      /**< \brief transfer output buffer completion request bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   145      IfxEray_ClearStatusFlag_swe  = 4096,      /**< \brief stop watch event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   146      IfxEray_ClearStatusFlag_sucs = 8192,      /**< \brief startup success event bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   147      IfxEray_ClearStatusFlag_mbsi = 16384,     /**< \brief message buffer service status bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   148      IfxEray_ClearStatusFlag_sds  = 32768,     /**< \brief dynamic segment start bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   149      IfxEray_ClearStatusFlag_wupa = 65536,     /**< \brief wakeup pattern channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   150      IfxEray_ClearStatusFlag_mtsa = 131072,    /**< \brief MTS receive channel A bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   151      IfxEray_ClearStatusFlag_wupb = 16777216,  /**< \brief wakeup pattern channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   152      IfxEray_ClearStatusFlag_mtsb = 33554432   /**< \brief MTS receive channel B bit. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   153  } IfxEray_ClearStatusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   154  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   155  /** \brief Clock divider in RUN mode, defined in MODULE_ERAY0.B.RMC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   156   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   157  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   158  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   159      IfxEray_ClockDivider_none = 0,  /**< \brief no clock signal */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   160      IfxEray_ClockDivider_1    = 1,  /**< \brief run mode clock divider 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   161      IfxEray_ClockDivider_2,         /**< \brief run mode clock divider 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   162      IfxEray_ClockDivider_3,         /**< \brief run mode clock divider 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   163      IfxEray_ClockDivider_4,         /**< \brief run mode clock divider 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   164      IfxEray_ClockDivider_5,         /**< \brief run mode clock divider 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   165      IfxEray_ClockDivider_6,         /**< \brief run mode clock divider 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   166      IfxEray_ClockDivider_7          /**< \brief run mode clock divider 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   167  } IfxEray_ClockDivider;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   169  /** \brief External offset correction control defined in MODULE_ERAY0.GTU11.B.EOCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   170   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   171  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   172  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   173      IfxEray_ExternalOffset_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   174      IfxEray_ExternalOffset_correctionSubtracted = 2,  /**< \brief External offset correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   175      IfxEray_ExternalOffset_correctionAdded      = 3   /**< \brief External offset correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   176  } IfxEray_ExternalOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   177  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   178  /** \brief External clock offset correction value defined in MODULE_ERAY0.GTU11.B.EOC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   179   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   180  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   181  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   182      IfxEray_ExternalOffsetCorrection_0 = 0,      /**< \brief external clock offset correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   183      IfxEray_ExternalOffsetCorrection_1,          /**< \brief external clock offset correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   184      IfxEray_ExternalOffsetCorrection_2,          /**< \brief external clock offset correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   185      IfxEray_ExternalOffsetCorrection_3,          /**< \brief external clock offset correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   186      IfxEray_ExternalOffsetCorrection_4,          /**< \brief external clock offset correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   187      IfxEray_ExternalOffsetCorrection_5,          /**< \brief external clock offset correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   188      IfxEray_ExternalOffsetCorrection_6,          /**< \brief external clock offset correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   189      IfxEray_ExternalOffsetCorrection_7           /**< \brief external clock offset correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   190  } IfxEray_ExternalOffsetCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   191  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   192  /** \brief External rate correction control MODULE_ERAY0.GTU11.B.ERCC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   193   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   194  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   195  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   196      IfxEray_ExternalRate_noCorrection         = 1,  /**< \brief No external correction control. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   197      IfxEray_ExternalRate_correctionSubtracted = 2,  /**< \brief External rate correction subtracted from calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   198      IfxEray_ExternalRate_correctionAdded      = 3   /**< \brief External rate correction added to calculated correction. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   199  } IfxEray_ExternalRate;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   200  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   201  /** \brief External clock rate correction value defined in MODULE_ERAY0.GTU11.B.ERC.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   203  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   204  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   205      IfxEray_ExternalRateCorrection_0 = 0,      /**< \brief external clock rate correction value 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   206      IfxEray_ExternalRateCorrection_1,          /**< \brief external clock rate correction value 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   207      IfxEray_ExternalRateCorrection_2,          /**< \brief external clock rate correction value 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   208      IfxEray_ExternalRateCorrection_3,          /**< \brief external clock rate correction value 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   209      IfxEray_ExternalRateCorrection_4,          /**< \brief external clock rate correction value 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   210      IfxEray_ExternalRateCorrection_5,          /**< \brief external clock rate correction value 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   211      IfxEray_ExternalRateCorrection_6,          /**< \brief external clock rate correction value 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   212      IfxEray_ExternalRateCorrection_7           /**< \brief external clock rate correction value 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   213  } IfxEray_ExternalRateCorrection;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   215  /** \brief Duration of dynamic slot idle phase, defined in MODULE_ERAY0.B.DSI.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   216   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   217  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   218  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   219      IfxEray_IdleDynamicSlots_0 = 0,      /**< \brief duration of dynamic slot idle phase is 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   220      IfxEray_IdleDynamicSlots_1,          /**< \brief duration of dynamic slot idle phase is 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   221      IfxEray_IdleDynamicSlots_2           /**< \brief duration of dynamic slot idle phase is 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   222  } IfxEray_IdleDynamicSlots;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   223  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   224  /** \brief Wakeup or Startup listen timeout in presence of noise, defined in MODULE_ERAY0.SUCC2.B.LTN.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   225   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   226  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   227  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   228      IfxEray_ListenTimeOutNoise_2 = 1,      /**< \brief listen Time-out noise 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   229      IfxEray_ListenTimeOutNoise_3,          /**< \brief listen Time-out noise 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   230      IfxEray_ListenTimeOutNoise_4,          /**< \brief listen Time-out noise 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   231      IfxEray_ListenTimeOutNoise_5,          /**< \brief listen Time-out noise 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   232      IfxEray_ListenTimeOutNoise_6,          /**< \brief listen Time-out noise 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   233      IfxEray_ListenTimeOutNoise_7,          /**< \brief listen Time-out noise 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   234      IfxEray_ListenTimeOutNoise_8,          /**< \brief listen Time-out noise 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   235      IfxEray_ListenTimeOutNoise_9,          /**< \brief listen Time-out noise 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   236      IfxEray_ListenTimeOutNoise_10,         /**< \brief listen Time-out noise 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   237      IfxEray_ListenTimeOutNoise_11,         /**< \brief listen Time-out noise 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   238      IfxEray_ListenTimeOutNoise_12,         /**< \brief listen Time-out noise 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   239      IfxEray_ListenTimeOutNoise_13,         /**< \brief listen Time-out noise 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   240      IfxEray_ListenTimeOutNoise_14,         /**< \brief listen Time-out noise 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   241      IfxEray_ListenTimeOutNoise_15,         /**< \brief listen Time-out noise 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   242      IfxEray_ListenTimeOutNoise_16          /**< \brief listen Time-out noise 16  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   243  } IfxEray_ListenTimeOutNoise;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   245  /** \brief Maximum number of sync frames in a cluster defined in MODULE_ERAY0.GTU02.B.SNM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   246   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   247  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   249      IfxEray_MaxSynchFrames_2 = 2,      /**< \brief Maximum number of sync frames in a cluster are 2  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   250      IfxEray_MaxSynchFrames_3,          /**< \brief Maximum number of sync frames in a cluster are 3  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   251      IfxEray_MaxSynchFrames_4,          /**< \brief Maximum number of sync frames in a cluster are 4  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   252      IfxEray_MaxSynchFrames_5,          /**< \brief Maximum number of sync frames in a cluster are 5  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   253      IfxEray_MaxSynchFrames_6,          /**< \brief Maximum number of sync frames in a cluster are 6  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   254      IfxEray_MaxSynchFrames_7,          /**< \brief Maximum number of sync frames in a cluster are 7  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   255      IfxEray_MaxSynchFrames_8,          /**< \brief Maximum number of sync frames in a cluster are 8  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   256      IfxEray_MaxSynchFrames_9,          /**< \brief Maximum number of sync frames in a cluster are 9  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   257      IfxEray_MaxSynchFrames_10,         /**< \brief Maximum number of sync frames in a cluster are 10  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   258      IfxEray_MaxSynchFrames_11,         /**< \brief Maximum number of sync frames in a cluster are 11  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   259      IfxEray_MaxSynchFrames_12,         /**< \brief Maximum number of sync frames in a cluster are 12  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   260      IfxEray_MaxSynchFrames_13,         /**< \brief Maximum number of sync frames in a cluster are 13  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   261      IfxEray_MaxSynchFrames_14,         /**< \brief Maximum number of sync frames in a cluster are 14  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   262      IfxEray_MaxSynchFrames_15          /**< \brief Maximum number of sync frames in a cluster are 15  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   263  } IfxEray_MaxSynchFrames;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   265  /** \brief Commmand to control the Communication, defined in MODULE_ERAY0.SUCC1.B.CMD.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   266   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   267  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   268  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   269      IfxEray_PocCommand_notAccepted = 0,  /**< \brief command not accepted. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   270      IfxEray_PocCommand_config      = 1,  /**< \brief command to controller to enter CONFIG */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   271      IfxEray_PocCommand_ready       = 2,  /**< \brief command to controller to enter READY. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   272      IfxEray_PocCommand_wakeup      = 3,  /**< \brief command to controller to enter WAKEUP */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   273      IfxEray_PocCommand_run         = 4,  /**< \brief command to controller to enter RUN */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   274      IfxEray_PocCommand_allSlots    = 5,  /**< \brief command to controller to enter ALL_SLOTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   275      IfxEray_PocCommand_halt        = 6,  /**< \brief command to controller to enter HALT */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   276      IfxEray_PocCommand_freeze      = 7,  /**< \brief command to controller to enter FREEZE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   277      IfxEray_PocCommand_sendMts     = 8,  /**< \brief command to controller to enter SEND_MTS */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   278      IfxEray_PocCommand_coldStart   = 9,  /**< \brief command to controller to enter COLD_START */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   279      IfxEray_PocCommand_reset       = 10, /**< \brief command to controller to enter RESET */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   280      IfxEray_PocCommand_monitor     = 11, /**< \brief command to controller to enter MONITOR */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   281      IfxEray_PocCommand_clearRam    = 12  /**< \brief command to controller to enter CLEAR_RAM */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   282  } IfxEray_PocCommand;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   283  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   284  /** \brief State of Communication Controller Protocol operation control, defined in MODULE_ERAY0.CCSV.B.POCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   285   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   286  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   287  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   288      IfxEray_PocState_defaultConfig               = 0,   /**< \brief controller entered default config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   289      IfxEray_PocState_ready                       = 1,   /**< \brief controller entered ready state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   290      IfxEray_PocState_normalActive                = 2,   /**< \brief controller entered normal-active state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   291      IfxEray_PocState_normalPassive               = 3,   /**< \brief controller entered normal-passive state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   292      IfxEray_PocState_halt                        = 4,   /**< \brief controller entered halt state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   293      IfxEray_PocState_monitor                     = 5,   /**< \brief controller entered monitor state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   294      IfxEray_PocState_config                      = 15,  /**< \brief controller entered config state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   295      IfxEray_PocState_wakeupStandby               = 16,  /**< \brief controller entered wakeup standby state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   296      IfxEray_PocState_wakeupListen                = 17,  /**< \brief controller entered wakeup-listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   297      IfxEray_PocState_wakeupSend                  = 18,  /**< \brief controller entered wakeup-send state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   298      IfxEray_PocState_wakeupDetect                = 19,  /**< \brief controller entered wakeup-detection state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   299      IfxEray_PocState_startup                     = 32,  /**< \brief controller entered startup state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   300      IfxEray_PocState_coldStartListen             = 33,  /**< \brief controller entered clod-start listen state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   301      IfxEray_PocState_collisionResolution         = 34,  /**< \brief controller entered collission-resolution state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   302      IfxEray_PocState_consistencyCheck            = 35,  /**< \brief controller entered consistency-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   303      IfxEray_PocState_gap                         = 36,  /**< \brief controller entered gap state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   304      IfxEray_PocState_join                        = 37,  /**< \brief controller entered join state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   305      IfxEray_PocState_integrationCheck            = 38,  /**< \brief controller entered integration-check. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   306      IfxEray_PocState_integrationListen           = 39,  /**< \brief controller entered integration-listen state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   307      IfxEray_PocState_integrationConsistencyCheck = 40,  /**< \brief controller entered integration consistency check state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   308      IfxEray_PocState_initializeSchedule          = 41,  /**< \brief controller entered initialise schedule state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   309      IfxEray_PocState_staruAborted                = 42,  /**< \brief controller entered startup-abort state */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   310      IfxEray_PocState_startupSucced               = 43   /**< \brief controller entered startup succeed state. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   311  } IfxEray_PocState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   312  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   313  /** \brief Receiving channel, defined in MODULE_ERAY0.FRF.B.CH.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   315  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   316  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   317      IfxEray_ReceiveChannel_both = 0,  /**< \brief both channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   318      IfxEray_ReceiveChannel_b    = 1,  /**< \brief channel A for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   319      IfxEray_ReceiveChannel_a    = 2,  /**< \brief channel B for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   320      IfxEray_ReceiveChannel_none = 3   /**< \brief none channels for reception */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   321  } IfxEray_ReceiveChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   322  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   323  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   324   * Definition in Ifx_ERAY.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   325   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   326  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   327  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   328      IfxEray_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   329      IfxEray_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   330  } IfxEray_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   331  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   332  /** \brief Sample count value for strobing, defined in MODULE_ERAY0.PRTC1.B.SPP.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   333   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   334  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   335  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   336      IfxEray_StrobePosition_5 = 0,  /**< \brief Sample count 5 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   337      IfxEray_StrobePosition_4 = 1,  /**< \brief Sample count 4 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   338      IfxEray_StrobePosition_6 = 2   /**< \brief Sample count 6 for strobing */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   339  } IfxEray_StrobePosition;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   340  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   341  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   343  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   344  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   345      IfxEray_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   346      IfxEray_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   347      IfxEray_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   348  } IfxEray_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   350  /** \brief Transmission mode of Header, defined in MODULE_ERAY0.WRHS1.B.TXM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   351   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   352  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   353  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   354      IfxEray_TransmissionMode_continuous = 0,  /**< \brief continuos transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   355      IfxEray_TransmissionMode_singleShot = 1   /**< \brief single transmission mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   356  } IfxEray_TransmissionMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   358  /** \brief Initial transmission mode, defined in MODULE_ERAY0.SUCC1.B.TSM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   359   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   360  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   361  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   362      IfxEray_TransmissionSlotMode_all    = 0, /**< \brief transmission in all slots. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   363      IfxEray_TransmissionSlotMode_single = 1  /**< \brief transmission in key slot. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   364  } IfxEray_TransmissionSlotMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   366  /** \brief Wakeup pattern carry channel, defined in MODULE_ERAY0.SUCC1.B.WUCS.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   367   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   368  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   369  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   370      IfxEray_WakeupChannel_a = 0,  /**< \brief send wakeup channel pattern on channel A */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   371      IfxEray_WakeupChannel_b = 1   /**< \brief send wakeup channel pattern on channel B */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   372  } IfxEray_WakeupChannel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   373  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   374  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   375  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   376  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   377  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   378  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   379  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   380  /** \addtogroup IfxLld_Eray_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   381   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   382  /** \brief Header section in  a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   383   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   384  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   385  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   386      uint16                   frameId;                         /**< \brief slot ID of the selected Message Buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   387      uint8                    cycleCode;                       /**< \brief the cycle set used for cycle counter filtering. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   388      boolean                  channelAFiltered;                /**< \brief channel A serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   389      boolean                  channelBFiltered;                /**< \brief channel B serves as a control for transmit and filter for receive buffers. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   390      IfxEray_BufferDirection  bufferDirection;                 /**< \brief selects buffer as a transmit buffer or as a receive buffer. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   391      boolean                  transmitPayloadIndicatior;       /**< \brief weather payload indicator is set or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   392      IfxEray_TransmissionMode transmissionMode;                /**< \brief transmission mode of Header. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   393      boolean                  bufferServiceEnabled;            /**< \brief wether buffer service request is enabled or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   394      uint8                    payloadLength;                   /**< \brief length of data section. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   395      uint16                   dataPointer;                     /**< \brief pointer to the data section of message buffer in RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   396      boolean                  startupFrameIndicator;           /**< \brief whether startup frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   397      boolean                  syncFrameIndicator;              /**< \brief whether sync frame is indicated or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   398  } IfxEray_Header;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   399  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   400  /** \brief Received header in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   401   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   402  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   403  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   404      uint16 frameId : 11;                     /**< \brief received frame id. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   405      uint8  payloadLength : 7;                /**< \brief received payload length. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   406      uint16 headerCrc : 11;                   /**< \brief received header crc. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   407      uint8  nullFrameIndicator : 1;           /**< \brief 0 : no data frame received; 1: atleast one data frame received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   408      uint8  syncFrame : 1;                    /**< \brief 0 : received frame is not a synch frame ; 1 : receive frame is a synch frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   409      uint8  startupFrame : 1;                 /**< \brief 0 : received frame is not a startup frame ; 1 : receive frame is a startup frame. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   410      uint8  cycleNumber : 7;                  /**< \brief cycle number in which frame is received. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   411      uint8  payloadPreambleIndicator : 1;     /**< \brief 1 : received payload segment has network management and message id or not; 0 : It hasn't. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   412  } IfxEray_ReceivedHeader;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   413  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   414  /** \brief Transmit control structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   415   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   416  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   417  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   418      boolean headerTransfered;        /**< \brief whether header is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   419      boolean dataTransfered;          /**< \brief whether data is transfered from input buffers to Message RAM or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   420      boolean transferRequested;       /**< \brief transmit buffer released for transmission or not. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   421      uint8   bufferIndex;             /**< \brief buffer index in the Message RAM. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   422  } IfxEray_SlotConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   423  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   424  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   425  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   426  /** \addtogroup IfxLld_Eray_Std_Interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   427   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   429  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   430  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   431  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   432  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   433  /** \brief Clears the error flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   434   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   435   * \param errorFlag error flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   436   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   437   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   438  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   439  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   440  /** \brief Clears the status flag requested.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   441   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   442   * \param statusFlag status flag to be cleared.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   443   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   444   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   445  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   446  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   447  /** \brief Gets the error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   448   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   449   * \return error interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   450   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   451  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   452  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   453  /** \brief Gets the IBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   454   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   455   * \return address of IBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   456   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   457  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   458  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   459  /** \brief Gets the INT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   460   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   461   * \return address of INT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   462   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   463  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   464  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   465  /** \brief Gets the INT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   466   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   467   * \return address of INT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   468   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   469  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getInterruptLine1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   470  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   471  /** \brief Gets the message buffers interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   472   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   473   * \param messageBuffer message buffer to which interrupt status be checked.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   474   * \return message buffer interrupt status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   475   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   476  IFX_INLINE boolean IfxEray_getMessageBufferInterruptStatus(Ifx_ERAY *eray, uint8 messageBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   477  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   478  /** \brief Gets the MBSC0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   479   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   480   * \return address of MBSC0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   481   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   482  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   483  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   484  /** \brief Gets the MBSC1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   485   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   486   * \return address of MBSC1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   487   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   488  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getMessageBufferStatus1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   489  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   490  /** \brief Gets the NDAT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   491   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   492   * \return address of NDAT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   494  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   496  /** \brief Gets the NDAT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   497   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   498   * \return address of NDAT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   500  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getNewDataInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   502  /** \brief Gets the new data interrupt buffers status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   503   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   504   * \param ndat message buffer number configured to which ndat occurs.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   505   * \return ndat interrupt buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   507  IFX_INLINE boolean IfxEray_getNewDataInterruptStatus(Ifx_ERAY *eray, uint8 ndat);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   509  /** \brief Gets the OBUSY service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   510   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   511   * \return address of OBUSY service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   512   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   513  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getOutputBufferBusySrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   514  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   515  /** \brief Gets the status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   516   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   517   * \return status interrupt flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   518   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   519  IFX_INLINE Ifx_ERAY_SIR IfxEray_getStatusInterrupts(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   521  /** \brief Gets the TINT0 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   522   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   523   * \return address of TINT0 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   524   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   525  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt0SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   526  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   527  /** \brief Gets the TINT1 service request.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   528   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   529   * \return address of TINT1 service request value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   530   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   531  IFX_INLINE volatile Ifx_SRC_SRCR *IfxEray_getTimerInterrupt1SrcPtr(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   532  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   533  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   534  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   535  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   536  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   537  /** \brief Clears all the error flags.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   538   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   539   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   540   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   541  IFX_EXTERN void IfxEray_clearAllFlags(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   542  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   543  /** \brief Enables all the Interrupt lines.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   544   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   545   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   546   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   547  IFX_EXTERN void IfxEray_enableInterruptLines(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   548  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   549  /** \brief Selects between MBSC0 and MBSC1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   550   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   551   * \param messageBuffer message buffer interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   552   * \param messageBufferDestination selects MBSC0 or MBSC1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   553   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   554   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   555  IFX_EXTERN void IfxEray_setMessageBufferInterruptDestination(Ifx_ERAY *eray, uint8 messageBuffer, uint8 messageBufferDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   557  /** \brief Selects between NDAT0 and NDAT1 interrupt destination
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   558   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   559   * \param ndat NDAT interrupt which should be configured
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   560   * \param ndatDestination selects NDAT0 or NDAT1 interrupt output
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   561   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   562   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   563  IFX_EXTERN void IfxEray_setNewDataInterruptDestination(Ifx_ERAY *eray, uint8 ndat, uint8 ndatDestination);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   564  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   565  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   566  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   567  /** \addtogroup IfxLld_Eray_Std_IO
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   568   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   570  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   571  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   572  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   574  /** \brief Initialises a RX pin.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   575   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   576   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   577   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   578   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   579  IFX_INLINE void IfxEray_initRxPin(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   580  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   581  /** \brief Initializes a TX Enable output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   582   * \param txEn the TX Enable Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   583   * \param txEnMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   584   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   585   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   586   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   587  IFX_INLINE void IfxEray_initTxEnPin(const IfxEray_Txen_Out *txEn, IfxPort_OutputMode txEnMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   588  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   589  /** \brief Initializes a TX output.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   590   * \param tx the TX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   591   * \param txMode the pin output mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   592   * \param padDriver the pad driver mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   593   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   594   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   595  IFX_INLINE void IfxEray_initTxPin(const IfxEray_Txd_Out *tx, IfxPort_OutputMode txMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   597  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   598  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   599  /** \addtogroup IfxLld_Eray_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   600   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   601  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   602  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   603  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   604  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   605  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   606  /** \brief Disables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   607   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   608   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   609   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   610  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   611  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   612  /** \brief Enables the ERAY module.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   613   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   614   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   615   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   616  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   617  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   618  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   619   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   620   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   621   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   622   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   623   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   624  IFX_INLINE boolean IfxEray_isModuleSuspended(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   625  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   626  /** \brief Sets the sensitivity of the module to sleep signal
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   627   * \param eray pointer to ERAY registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   628   * \param mode mode selection (enable/disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   629   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   630   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   631  IFX_INLINE void IfxEray_setSleepMode(Ifx_ERAY *eray, IfxEray_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   632  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   633  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   634  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   635  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   636  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   637  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   638   * \param eray Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   639   * \return ERAY module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   640   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   641  IFX_EXTERN Ifx_ERAY *IfxEray_getAddress(IfxEray_Index eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   642  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   643  /** \brief API to get the resource index of the ERAY specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   644   * \param eray Pointer to the ERAY HW module (register memory map)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   645   * \return Resource index of the ERAY
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   646   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   647  IFX_EXTERN IfxEray_Index IfxEray_getIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   648  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   649  /** \brief Resets the ERAY kernel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   650   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   651   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   652   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   653  IFX_EXTERN void IfxEray_resetModule(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   654  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   655  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   656  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   657  /** \addtogroup IfxLld_Eray_Std_Status
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   658   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   659  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   660  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   661  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   662  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   663  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   664  /** \brief Gets the FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   665   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   666   * \return FIFO status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   667   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   668  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   669  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   670  /** \brief Gets the Input Buffer Host Busy status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   671   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   672   * \return TRUE if Host is Busy otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   673   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   674  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   675  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   676  /** \brief Gets the Input Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   677   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   678   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   679   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   680  IFX_INLINE uint8 IfxEray_getInputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   681  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   682  /** \brief Gets the output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   683   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   684   * \return output buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   685   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   686  IFX_INLINE uint8 IfxEray_getOutputBuffer(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   687  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   688  /** \brief Gets the Output Buffer Shadow status.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   689   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   690   * \return TRUE if busy otherwise FALSE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   691   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   692  IFX_INLINE boolean IfxEray_getOutputBufferBusyShadowStatus(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   694  /** \brief Gets the current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   695   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   696   * \return current POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   697   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   698  IFX_INLINE IfxEray_PocState IfxEray_getPocState(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   699  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   700  /** \brief Gets the received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   701   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   702   * \return received wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   703   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   704  IFX_INLINE IfxEray_WakeupChannel IfxEray_getWakeupPatternReceivedChannel(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   705  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   706  /** \brief Waits until the controller enters required POC state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   707   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   708   * \param pocState POC state upto which controller waits.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   709   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   710   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   711  IFX_INLINE void IfxEray_waitForPocState(Ifx_ERAY *eray, IfxEray_PocState pocState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   712  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   713  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   714  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   715  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   716  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   717  /** \brief Changes the Commmunication Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   718   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   719   * \param pocCommand POC command which triggers the Controller state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   720   * \return TRUE if command accepted otherwise FALSE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   721   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   722  IFX_EXTERN boolean IfxEray_changePocState(Ifx_ERAY *eray, IfxEray_PocCommand pocCommand);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   723  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   724  /** \brief Sets the POC state to Ready state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   725   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   726   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   727   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   728  IFX_EXTERN void IfxEray_setPocReady(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   729  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   730  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   731  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   732  /** \addtogroup IfxLld_Eray_Std_Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   733   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   734  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   735  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   736  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   737  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   738  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   739  /** \brief request to receive header section from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   740   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   741   * \param headerReceived whether header is received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   742   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   743   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   744  IFX_INLINE void IfxEray_receiveHeader(Ifx_ERAY *eray, boolean headerReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   745  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   746  /** \brief sets the bit to send header in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   747   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   748   * \param headerTransfered whether header transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   749   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   750   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   751  IFX_INLINE void IfxEray_sendHeader(Ifx_ERAY *eray, boolean headerTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   752  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   753  /** \brief Sets number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   754   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   755   * \param numberOfCyclePairsForActive number of cycle pairs for Active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   756   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   757   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   758  IFX_INLINE void IfxEray_setActiveCyclePairs(Ifx_ERAY *eray, uint8 numberOfCyclePairsForActive);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   759  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   760  /** \brief Sets auto delays between input, output buffers and message RAM
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   761   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   762   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   763   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   764  IFX_INLINE void IfxEray_setAutoDelayBuffers(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   765  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   766  /** \brief Sets baudrate on Flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   767   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   768   * \param baudrate baudrate on flexray bus.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   769   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   770   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   771  IFX_INLINE void IfxEray_setBaudrate(Ifx_ERAY *eray, IfxEray_Baudrate baudrate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   772  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   773  /** \brief Sets secured buffers in message RAM.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   774   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   775   * \param secureValue secure value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   776   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   777   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   778  IFX_INLINE void IfxEray_setBufferReconfigSecure(Ifx_ERAY *eray, uint8 secureValue);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   779  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   780  /** \brief Sets channel A initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   781   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   782   * \param channelAMicrotickInitialOffset difference between reference points on channel A in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   783   * \param channelAMacrotickInitialOffset difference between reference points on channel A in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   784   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   785   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   786  IFX_INLINE void IfxEray_setChannelAInitialOffsets(Ifx_ERAY *eray, uint8 channelAMicrotickInitialOffset, uint8 channelAMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   787  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   788  /** \brief Sets channel B initial offstes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   789   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   790   * \param channelBMicrotickInitialOffset difference between reference points on channel B in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   791   * \param channelBMacrotickInitialOffset difference between reference points on channel B in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   792   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   793   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   794  IFX_INLINE void IfxEray_setChannelBInitialOffsets(Ifx_ERAY *eray, uint8 channelBMicrotickInitialOffset, uint8 channelBMacrotickInitialOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   795  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   796  /** \brief Sets receive delays on channels.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   797   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   798   * \param channelAReceptionDelay reception delay on channel A.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   799   * \param channelBReceptionDelay reception delay on channel B.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   800   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   801   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   802  IFX_INLINE void IfxEray_setChannelsReceiveDelay(Ifx_ERAY *eray, uint8 channelAReceptionDelay, uint8 channelBReceptionDelay);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   803  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   804  /** \brief Sets clock correction cycles for Passive and Halt.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   805   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   806   * \param clockCorrectionCyclesPassive maximum number of cycles missing clock correction leading for passive state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   807   * \param clockCorrectionCyclesHalt maximum number of cycles missing clock correction leading for halt state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   808   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   809   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   810  IFX_INLINE void IfxEray_setClockCorrectionCycles(Ifx_ERAY *eray, uint8 clockCorrectionCyclesPassive, uint8 clockCorrectionCyclesHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   811  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   812  /** \brief lead to halt state in clock synch error.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   813   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   814   * \param clockSyncErrorHalt whether to enter halt in clock synch error or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   815   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   816   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   817  IFX_INLINE void IfxEray_setClockSynchErrorHalt(Ifx_ERAY *eray, boolean clockSyncErrorHalt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   818  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   819  /** \brief Sets cluster drift values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   820   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   821   * \param clusterDrift cluster drift damping value used in clock synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   822   * \param maxDriftOffset maximum drift offset between two nodes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   823   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   824   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   825  IFX_INLINE void IfxEray_setClusterDriftValues(Ifx_ERAY *eray, uint8 clusterDrift, uint16 maxDriftOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   826  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   827  /** \brief Sets cluster startup deviation.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   828   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   829   * \param acceptedStartupDeviation deviation for startup Frames during integration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   830   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   831   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   832  IFX_INLINE void IfxEray_setClusterStartupDeviation(Ifx_ERAY *eray, uint16 acceptedStartupDeviation);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   833  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   834  /** \brief Sets CAS symbol window duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   835   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   836   * \param collisionAvoidanceDuration accepted duration of CAS symbol.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   837   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   838   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   839  IFX_INLINE void IfxEray_setCollisionAvoidanceDuration(Ifx_ERAY *eray, uint8 collisionAvoidanceDuration);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   840  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   841  /** \brief sets duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   842   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   843   * \param macroticks duration of the communication cycle in Macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   844   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   845   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   846  IFX_INLINE void IfxEray_setCycleDurationMacroticks(Ifx_ERAY *eray, uint16 macroticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   847  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   848  /** \brief sets duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   849   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   850   * \param microticks duration of the communication cycle in Microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   851   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   852   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   853  IFX_INLINE void IfxEray_setCycleDurationMicroticks(Ifx_ERAY *eray, uint32 microticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   854  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   855  /** \brief Sets decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   856   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   857   * \param decodingCorrection decoding correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   858   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   859   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   860  IFX_INLINE void IfxEray_setDecodingCorrectionValue(Ifx_ERAY *eray, uint8 decodingCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   861  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   862  /** \brief Sets dynamic slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   863   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   864   * \param dynamicSlotLength duration of dynamic slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   865   * \param dynamicSlotCount number of dynamic slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   866   * \param idleDynamicSlots duration of dynamic slot idle phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   867   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   868   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   869  IFX_INLINE void IfxEray_setDynamicSlots(Ifx_ERAY *eray, uint8 dynamicSlotLength, uint16 dynamicSlotCount, IfxEray_IdleDynamicSlots idleDynamicSlots);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   870  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   871  /** \brief Sets external correction controls.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   872   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   873   * \param externalOffset External offset correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   874   * \param externalRate External rate correction control.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   875   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   876   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   877  IFX_INLINE void IfxEray_setExternalCorrectionControl(Ifx_ERAY *eray, IfxEray_ExternalOffset externalOffset, IfxEray_ExternalRate externalRate);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   878  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   879  /** \brief Sets external correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   880   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   881   * \param externalOffsetCorrection external clock offset correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   882   * \param externalRateCorrection external clock rate correction value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   883   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   884   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   885  IFX_INLINE void IfxEray_setExternalCorrectionValues(Ifx_ERAY *eray, IfxEray_ExternalOffsetCorrection externalOffsetCorrection, IfxEray_ExternalRateCorrection externalRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   886  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   887  /** \brief Sets FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   888   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   889   * \param fifoBufferStartIndex FIFO buffer start idex.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   890   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   891   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   892  IFX_INLINE void IfxEray_setFifoBufferStartIndex(Ifx_ERAY *eray, uint8 fifoBufferStartIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   893  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   894  /** \brief Sets FIFO filter configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   895   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   896   * \param rejectedFrameId rejected frameId by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   897   * \param filteredCycleNumber filtered cycle number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   898   * \param fifoNullFramesRejected null frames rejection selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   899   * \param frameIdFilter filtered frameid by FIFO.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   900   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   901   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   902  IFX_INLINE void IfxEray_setFifoFilterConfigurations(Ifx_ERAY *eray, uint16 rejectedFrameId, uint8 filteredCycleNumber, boolean fifoNullFramesRejected, uint16 frameIdFilter);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   903  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   904  /** \brief Sets FIFO configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   905   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   906   * \param receiveChannel FIFO receive channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   907   * \param staticFifoDisabled static FIFO selection.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   908   * \param fifoDepth FIFO depth.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   909   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   910   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   911  IFX_INLINE void IfxEray_setFifoMessageBufferConfigurations(Ifx_ERAY *eray, IfxEray_ReceiveChannel receiveChannel, boolean staticFifoDisabled, uint8 fifoDepth);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   912  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   913  /** \brief Sets first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   914   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   915   * \param firstDynamicBuffer first dynamic buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   916   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   917   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   918  IFX_INLINE void IfxEray_setFirstDynamicBuffer(Ifx_ERAY *eray, uint8 firstDynamicBuffer);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   919  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   920  /** \brief Sets startup or wakeup listen timeouts.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   921   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   922   * \param listenTimeOut wakeup or startup listen timeout in microticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   923   * \param listenTimeOutNoise upper limit for startup or wakeup listen timeout in presence of noise.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   924   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   925   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   926  IFX_INLINE void IfxEray_setListenTimeOuts(Ifx_ERAY *eray, uint32 listenTimeOut, IfxEray_ListenTimeOutNoise listenTimeOutNoise);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   927  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   928  /** \brief Sets the maximum cold start attempts for active state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   929   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   930   * \param maxColdStartAttempts maximum number of attempts that a cold start node allows.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   931   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   932   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   933  IFX_INLINE void IfxEray_setMaxColdStartAttempts(Ifx_ERAY *eray, uint8 maxColdStartAttempts);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   934  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   935  /** \brief Sets max limit correction values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   936   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   937   * \param maxOffsetCorrection maximum offset correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   938   * \param maxRateCorrection maximum rate correction.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   939   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   940   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   941  IFX_INLINE void IfxEray_setMaxCorrectionValues(Ifx_ERAY *eray, uint16 maxOffsetCorrection, uint16 maxRateCorrection);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   942  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   943  /** \brief Sets maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   944   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   945   * \param maxSyncFrames maximum synch frames in a cluster.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   946   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   947   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   948  IFX_INLINE void IfxEray_setMaxSynchFrames(Ifx_ERAY *eray, IfxEray_MaxSynchFrames maxSyncFrames);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   949  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   950  /** \brief Sets number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   951   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   952   * \param numberOfMessageBuffers number of message buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   953   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   954   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   955  IFX_INLINE void IfxEray_setMessageBufferCount(Ifx_ERAY *eray, uint8 numberOfMessageBuffers);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   956  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   957  /** \brief Sets Message Handler configurations.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   958   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   959   * \param staticFramepayload payload length of static frames in double bytes.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   960   * \param latestTransmissionStart dynamic slots befor transmission of inhibit frame in dynamic segment.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   961   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   962   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   963  IFX_INLINE void IfxEray_setMessageHandlerConfigurations(Ifx_ERAY *eray, uint8 staticFramepayload, uint8 latestTransmissionStart);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   964  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   965  /** \brief Sets network start Idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   966   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   967   * \param networkStartIdleTime starting point of Network Idle Time Phase.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   968   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   969   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   970  IFX_INLINE void IfxEray_setNetworkStartIdleTime(Ifx_ERAY *eray, uint16 networkStartIdleTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   971  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   972  /** \brief Sets network management vector length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   973   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   974   * \param networkVectorLength length of network management vector.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   975   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   976   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   977  IFX_INLINE void IfxEray_setNetworkVectorLength(Ifx_ERAY *eray, uint32 networkVectorLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   978  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   979  /** \brief Sets channels connected to node.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   980   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   981   * \param channelAConnectedNode whether node connected to channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   982   * \param channelBConnectedNode whether node connected to channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   983   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   984   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   985  IFX_INLINE void IfxEray_setNodeChannels(Ifx_ERAY *eray, boolean channelAConnectedNode, boolean channelBConnectedNode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   986  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   987  /** \brief Sets offset correction starting point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   988   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   989   * \param correctionOffset offset correction start point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   990   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   991   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   992  IFX_INLINE void IfxEray_setOffsetCorrection(Ifx_ERAY *eray, uint16 correctionOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   993  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   994  /** \brief requests to receive the frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   995   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   996   * \param receiveRequested whether frame to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   997   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   998   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	   999  IFX_INLINE void IfxEray_setReceiveRequest(Ifx_ERAY *eray, boolean receiveRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1000  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1001  /** \brief Sets receive wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1002   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1003   * \param receiveWakeupTestDuration duration of receive wakeup pattern.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1004   * \param receiveWakeupIdleTime duration of receive wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1005   * \param receiveWakeupLowTime duration of receive wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1006   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1007   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1008  IFX_INLINE void IfxEray_setReceiveWakeupTimes(Ifx_ERAY *eray, uint16 receiveWakeupTestDuration, uint8 receiveWakeupIdleTime, uint8 receiveWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1009  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1010  /** \brief sets buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1011   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1012   * \param bufferIndex buffer number in which frame is received.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1013   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1014   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1015  IFX_INLINE void IfxEray_setRxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1016  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1017  /** \brief Sets slots action points.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1018   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1019   * \param staticActionPoint static slots and symbol window action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1020   * \param dynamicActionPoint dynamic slots action point.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1021   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1022   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1023  IFX_INLINE void IfxEray_setSlotActionPoints(Ifx_ERAY *eray, uint8 staticActionPoint, uint8 dynamicActionPoint);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1024  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1025  /** \brief Sets static slots count and length.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1026   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1027   * \param staticSlotLength duration of static slot in macroticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1028   * \param staticSlotsCount number of static slots in a communication cycle.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1029   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1030   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1031  IFX_INLINE void IfxEray_setStaticSlots(Ifx_ERAY *eray, uint16 staticSlotLength, uint16 staticSlotsCount);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1032  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1033  /** \brief Sets sample point for strobing.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1034   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1035   * \param strobePosition strobing sample count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1036   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1037   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1038  IFX_INLINE void IfxEray_setStrobePosition(Ifx_ERAY *eray, IfxEray_StrobePosition strobePosition);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1039  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1040  /** \brief Sets channels which transmits symbols.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1041   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1042   * \param channelASymbolTransmitted whether symbol is transmitted in Channel A or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1043   * \param channelBSymbolTransmitted whether symbol is transmitted in Channel B or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1044   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1045   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1046  IFX_INLINE void IfxEray_setSymbolChannels(Ifx_ERAY *eray, boolean channelASymbolTransmitted, boolean channelBSymbolTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1047  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1048  /** \brief Sets the transmit slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1049   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1050   * \param transmissionSlotMode transmission slot mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1051   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1052   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1053  IFX_INLINE void IfxEray_setTransmissionSlotMode(Ifx_ERAY *eray, IfxEray_TransmissionSlotMode transmissionSlotMode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1054  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1055  /** \brief Sets transmission start time duration.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1056   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1057   * \param transmissionStartTime transmission start time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1058   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1059   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1060  IFX_INLINE void IfxEray_setTransmissionStartTime(Ifx_ERAY *eray, uint8 transmissionStartTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1061  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1062  /** \brief Sets transfer request to send frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1063   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1064   * \param transferRequested whether transfer requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1065   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1066   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1067  IFX_INLINE void IfxEray_setTransmitRequest(Ifx_ERAY *eray, boolean transferRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1068  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1069  /** \brief Sets transmit wakeup times.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1070   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1071   * \param transmitWakeupRepetitions transmission wakeup repetitions.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1072   * \param transmitWakeupIdleTime duration of transmit wakeup idle time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1073   * \param transmitWakeupLowTime duration of transmit wakeup low time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1074   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1075   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1076  IFX_INLINE void IfxEray_setTransmitWakeupTimes(Ifx_ERAY *eray, uint8 transmitWakeupRepetitions, uint8 transmitWakeupIdleTime, uint8 transmitWakeupLowTime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1077  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1078  /** \brief Configures transmitted frames for startup and synchronization.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1079   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1080   * \param startupFrameTransmitted whether startup Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1081   * \param synchFrameTransmitted whether synch Frame transmitted or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1082   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1083   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1084  IFX_INLINE void IfxEray_setTransmittedFrames(Ifx_ERAY *eray, boolean startupFrameTransmitted, boolean synchFrameTransmitted);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1085  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1086  /** \brief Sets the transmit buffer number.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1087   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1088   * \param bufferIndex buffer number in which frame is sent.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1089   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1090   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1091  IFX_INLINE void IfxEray_setTxBufferNumber(Ifx_ERAY *eray, uint8 bufferIndex);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1092  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1093  /** \brief Swaps the shadow and Host output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1094   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1095   * \param swapRequested whether swap is requested or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1096   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1097   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1098  IFX_INLINE void IfxEray_setViewData(Ifx_ERAY *eray, boolean swapRequested);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1099  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1100  /** \brief Sets the cluster wakeup channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1101   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1102   * \param wakeupPatternChannel cluster wakeup pattern channel.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1105  IFX_INLINE void IfxEray_setWakeupPatternChannel(Ifx_ERAY *eray, IfxEray_WakeupChannel wakeupPatternChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1107  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1108  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1109  /** \addtogroup IfxLld_Eray_Std_Operative
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1110   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1111  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1112  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1113  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1114  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1115  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1116  /** \brief requests to receive data from message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1117   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1118   * \param dataReceived whether data to be received or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1121  IFX_INLINE void IfxEray_receiveData(Ifx_ERAY *eray, boolean dataReceived);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1123  /** \brief sets the bit to send data in  frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1124   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1125   * \param dataTransfered whether data transfered or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1126   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1127   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1128  IFX_INLINE void IfxEray_sendData(Ifx_ERAY *eray, boolean dataTransfered);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1129  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1130  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1131  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1132  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1133  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1134  /** \brief Calculate and returns the CRC for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1135   * \param payloadLength payload length configured for frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1136   * \param frameId slot id
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1137   * \param startupFrameIndicator whether startup frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1138   * \param syncFrameIndicator whether sync frame is indicated or not.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1139   * \return calculated CRC value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1140   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1141  IFX_EXTERN uint16 IfxEray_calcHeaderCrc(uint8 payloadLength, uint16 frameId, boolean startupFrameIndicator, boolean syncFrameIndicator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1143  /** \brief Reads the received data from output registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1144   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1145   * \param data pointer to received data buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1146   * \param payloadLength payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1147   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1148   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1149  IFX_EXTERN void IfxEray_readData(Ifx_ERAY *eray, uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1151  /** \brief Reads header and data from output buffers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1152   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1153   * \param header header received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1154   * \param data data received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1155   * \param maxPayloadLength maximum payload length received in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1156   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1157   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1158  IFX_EXTERN void IfxEray_readFrame(Ifx_ERAY *eray, IfxEray_ReceivedHeader *header, uint32 *data, Ifx_SizeT maxPayloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1160  /** \brief Writes header and data to Input buffers and set the slots.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1161   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1162   * \param header Header section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1163   * \param data data section of message buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1164   * \param slotConfig pointer slot allocation configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1165   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1167  IFX_EXTERN void IfxEray_setSlot(Ifx_ERAY *eray, const IfxEray_Header *header, const uint32 *data, const IfxEray_SlotConfig *slotConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1168  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1169  /** \brief Writes data section of a frame to input data registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1170   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1171   * \param data data segment in a frame.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1172   * \param payloadLength payload length configured for slot buffer.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1173   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1174   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1175  IFX_EXTERN void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1176  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1177  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1178  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1179  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1180  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1181  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1182  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1183  /** \brief Gets the FIFO index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1184   * \param eray pointer to ERAY module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1185   * \return FIFO buffer index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1186   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1187  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1188  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1189  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1190   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1191   * \param eray Pointer to ERAY module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1192   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1193   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1194   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1195  IFX_INLINE void IfxEray_setSuspendMode(Ifx_ERAY *eray, IfxEray_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1197  /** \brief Provides functionality for both setting of pin direction as input and configuring pad driver.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1198   * \param rx the RX Pin which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1199   * \param rxMode the pin input mode which should be configured.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1200   * \param padDriver Pad Driver Configuration
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1201   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1202   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1203  IFX_INLINE void IfxEray_initRxPinWithPadLevel(const IfxEray_Rxd_In *rx, IfxPort_InputMode rxMode, IfxPort_PadDriver padDriver);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1204  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1205  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1206  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1207  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1208  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1209  IFX_INLINE void IfxEray_clearErrorFlag(Ifx_ERAY *eray, IfxEray_ClearErrorFlag errorFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1210  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1211      eray->EIR.U = errorFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1212  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1213  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1214  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1215  IFX_INLINE void IfxEray_clearStatusFlag(Ifx_ERAY *eray, IfxEray_ClearStatusFlag statusFlag)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1216  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1217      eray->SIR.U = statusFlag;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1218  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1220  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1221  IFX_INLINE void IfxEray_disableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1222  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1223      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1224      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1225      //disable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1226      eray->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1227      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1228  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1229  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1230  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1231  IFX_INLINE void IfxEray_enableModule(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1232  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1233      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1234      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1235      // Run Mode Clock divider to 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1236      //enable the module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1237      eray->CLC.U = 0x00000100;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1238  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1239      // ensure that write access finished before leaving this function
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1240      if (eray->CLC.U)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1241      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1242  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1243      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1244  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1245  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1246  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1247  IFX_INLINE Ifx_ERAY_EIR IfxEray_getErrorInterrupts(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1248  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1249      Ifx_ERAY_EIR interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1250      interruptFlags.U = eray->EIR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1251      return interruptFlags;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1253  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1255  IFX_INLINE uint8 IfxEray_getFifoIndex(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1256  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1257      return eray->MRC.B.FFB;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1258  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1259  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1261  IFX_INLINE Ifx_ERAY_FSR IfxEray_getFifoStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1262  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1263      Ifx_ERAY_FSR fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1264      fifoStatus.U = eray->FSR.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1265      return fifoStatus;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1266  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1267  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1268  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1269  IFX_INLINE boolean IfxEray_getInputBufferBusyHostStatus(Ifx_ERAY *eray)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.h	  1271      return (eray->IBCR.B.IBSYH == 1) ? TRUE : FALSE;
	ld.bu	d15,[a15]
.L235:
	jnz.t	d15:7,.L25
.L449:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   347  Config->bufferIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   348  
	ret
.L210:
	
__IfxEray_setSlot_function_end:
	.size	IfxEray_setSlot,__IfxEray_setSlot_function_end-IfxEray_setSlot
.L126:
	; End of function
	
	.sdecl	'.text.IfxEray.IfxEray_writeData',code,cluster('IfxEray_writeData')
	.sect	'.text.IfxEray.IfxEray_writeData'
	.align	2
	
	.global	IfxEray_writeData

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   349      // wait if Shadow is busy with another transfer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   350      while (IfxEray_getInputBufferBusyShadowStatus(eray) == TRUE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   351      {}
; Function IfxEray_writeData
.L57:
IfxEray_writeData:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   352  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   353      while (IfxEray_getInputBufferBusyHostStatus(eray) == TRUE)
	jz.a	a5,.L26
.L240:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   354      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   355  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   356  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   357  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   358  void IfxEray_writeData(Ifx_ERAY *eray, const uint32 *data, uint8 payloadLength)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   359  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   360      if (data != NULL_PTR)
	add	d4,#1
	lea	a15,[a4]1024
.L282:
	sha	d4,#-1
.L454:
	mov	d15,#0
	j	.L27
.L28:
	add	d15,#1
	ld.w	d0,[a5+]
.L283:
	extr.u	d15,d15,#0,#8
	st.w	[a15+],d0
.L27:
	jlt.u	d15,d4,.L28
.L26:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   361      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   362          uint16 length = (payloadLength + 1) / 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   363          uint8  index;
	ret
.L236:
	
__IfxEray_writeData_function_end:
	.size	IfxEray_writeData,__IfxEray_writeData_function_end-IfxEray_writeData
.L131:
	; End of function
	
	.calls	'IfxEray_readFrame','IfxEray_readData'
	.calls	'IfxEray_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxEray_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxEray_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxEray_setSlot','IfxEray_calcHeaderCrc'
	.calls	'IfxEray_setSlot','IfxEray_writeData'
	.calls	'IfxEray_setMessageBufferInterruptDestination','.cocofun_1'
	.calls	'IfxEray_setNewDataInterruptDestination','.cocofun_1'
	.calls	'IfxEray_calcHeaderCrc','',0
	.calls	'IfxEray_changePocState','',0
	.calls	'IfxEray_clearAllFlags','',0
	.calls	'IfxEray_enableInterruptLines','',0
	.calls	'IfxEray_getAddress','',0
	.calls	'IfxEray_getIndex','',0
	.calls	'IfxEray_readData','',0
	.calls	'IfxEray_readFrame','',0
	.calls	'IfxEray_resetModule','',0
	.calls	'IfxEray_setMessageBufferInterruptDestination','',0
	.calls	'.cocofun_1','',0
	.calls	'IfxEray_setNewDataInterruptDestination','',0
	.calls	'IfxEray_setPocReady','',0
	.calls	'IfxEray_setSlot','',0
	.extern	IfxEray_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.calls	'IfxEray_writeData','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L59:
	.word	86849
	.half	3
	.word	.L60
	.byte	4
.L58:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L61
	.byte	2,1,1,3
	.word	177
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	180
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	225
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	237
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	317
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	291
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	323
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	323
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	291
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5
.L144:
	.byte	7
	.byte	'unsigned char',0,1,8
.L170:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_P_OUT_Bits',0,4,143,3,16,4,11
	.byte	'P0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,181,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	471
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,4,169,2,16,4,11
	.byte	'PS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,133,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	787
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,4,110,16,4,11
	.byte	'MODREV',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,148,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1358
	.byte	4,2,35,0,0,14,4
	.word	432
	.byte	15,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,4,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,4,164,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1486
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,4,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,4,180,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1701
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,4,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,4,188,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1916
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,4,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,4,172,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2133
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,4,118,16,4,11
	.byte	'P0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,156,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2353
	.byte	4,2,35,0,0,14,24
	.word	432
	.byte	15,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,4,205,3,16,4,11
	.byte	'PD0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	432
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	432
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	432
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,205,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2676
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,4,226,3,16,4,11
	.byte	'PD8',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	432
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	432
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	432
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,213,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2980
	.byte	4,2,35,0,0,14,8
	.word	432
	.byte	15,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,4,88,16,4,11
	.byte	'EN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,140,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3305
	.byte	4,2,35,0,0,14,12
	.word	432
	.byte	15,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,4,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,197,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3645
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,4,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	409
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,189,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4011
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,4,206,2,16,4,11
	.byte	'PS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,12,4,149,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4297
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,4,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,12,4,165,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4444
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,4,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	409
	.byte	20,0,2,35,0,0,12,4,173,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4613
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,4,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	449
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,157,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4785
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,4,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	449
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	449
	.byte	12,0,2,35,2,0,12,4,229,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4960
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,4,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	8,0,2,35,3,0,12,4,245,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5134
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,4,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,12,4,253,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5308
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,4,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,237,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5484
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,4,249,2,16,4,11
	.byte	'PS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,141,5,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5640
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,4,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	449
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,221,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5973
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,4,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,12,4,196,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6321
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,4,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,4,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,12,4,204,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6445
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	6529
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,4,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,4,213,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6709
	.byte	4,2,35,0,0,14,76
	.word	432
	.byte	15,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	32,0,2,35,0,0,12,4,132,4,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6962
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,4,252,3,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7049
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,4,229,5,25,128,2,13
	.byte	'OUT',0
	.word	747
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	1318
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	1437
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	1477
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	1661
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	1876
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	2093
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	2313
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	1477
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	2627
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	2667
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	2940
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	3256
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	3296
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	3596
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3636
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	3971
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	4257
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	3296
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	4404
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	4573
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	4745
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	4920
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	5094
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	5268
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	5444
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	5600
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	5933
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	6281
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3296
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	6405
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	6654
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	6913
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	6953
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	7009
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	7576
	.byte	4,3,35,252,1,0,16
	.word	7616
	.byte	3
	.word	8219
	.byte	17,3,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,4
	.byte	'IfxPort_setPinModeInput',0,3,3,196,4,17,1,1,5
	.byte	'port',0,3,196,4,48
	.word	8224
	.byte	5
	.byte	'pinIndex',0,3,196,4,60
	.word	432
	.byte	5
	.byte	'mode',0,3,196,4,88
	.word	8229
	.byte	6,0,17,3,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,3,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,4
	.byte	'IfxPort_setPinModeOutput',0,3,3,202,4,17,1,1,5
	.byte	'port',0,3,202,4,49
	.word	8224
	.byte	5
	.byte	'pinIndex',0,3,202,4,61
	.word	432
	.byte	5
	.byte	'mode',0,3,202,4,90
	.word	8434
	.byte	5
	.byte	'index',0,3,202,4,114
	.word	8504
	.byte	6,0,17,3,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,3,208,4,17,1,1,5
	.byte	'port',0,3,208,4,44
	.word	8224
	.byte	5
	.byte	'pinIndex',0,3,208,4,56
	.word	432
	.byte	5
	.byte	'action',0,3,208,4,80
	.word	8817
	.byte	6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,6,45,16,4,11
	.byte	'SRPN',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	432
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	432
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,6,70,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8998
	.byte	4,2,35,0,0,16
	.word	9288
	.byte	3
	.word	9327
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,5,250,1,17,1,1,5
	.byte	'src',0,5,250,1,60
	.word	9332
	.byte	6,0,10
	.byte	'_Ifx_ERAY_CLC_Bits',0,8,133,1,16,4,11
	.byte	'DISR',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'RMC',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	409
	.byte	21,0,2,35,0,0,12,8,204,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9380
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_CUST1_Bits',0,8,156,1,16,4,11
	.byte	'INT0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'OEN',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'IEN',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'IBFS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'IBF1PAG',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	432
	.byte	2,1,2,35,0,11
	.byte	'IBF2PAG',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'RISA',0,1
	.word	432
	.byte	2,4,2,35,1,11
	.byte	'RISB',0,1
	.word	432
	.byte	2,2,2,35,1,11
	.byte	'STPWTS',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,220,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9576
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ID_Bits',0,8,211,3,16,4,11
	.byte	'MODREV',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,164,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9861
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_CUST3_Bits',0,8,173,1,16,4,11
	.byte	'TO',0,4
	.word	409
	.byte	32,0,2,35,0,0,12,8,228,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9984
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TEST1_Bits',0,8,193,12,16,4,11
	.byte	'WRTEN',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ELBE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'TMC',0,1
	.word	432
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'AOA',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'AOB',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	6,0,2,35,1,11
	.byte	'RXA',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'RXB',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TXA',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TXB',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'TXENA',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TXENB',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'CERA',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'CERB',0,1
	.word	432
	.byte	4,0,2,35,3,0,12,8,244,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10066
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TEST2_Bits',0,8,215,12,16,4,11
	.byte	'RS',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SSEL',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	449
	.byte	7,2,2,35,0,11
	.byte	'WRECC',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	409
	.byte	17,0,2,35,0,0,12,8,252,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10428
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_LCK_Bits',0,8,249,3,16,4,11
	.byte	'CLK',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'TMK',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,204,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10610
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_EIR_Bits',0,8,129,2,16,4,11
	.byte	'PEMC',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CNA',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SFBM',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SFO',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'CCF',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CCL',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EERR',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'RFO',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EFA',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'IIBA',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'IOBA',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MHF',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'EDA',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LTVA',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TABA',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'EDB',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'LTVB',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TABB',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,132,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10729
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SIR_Bits',0,8,190,11,16,4,11
	.byte	'WST',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CAS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CYCS',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXI',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'RXI',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'RFNE',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'RFCL',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NMVC',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TI0',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TI1',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TIBC',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TOBC',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SWE',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'SUCS',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBSI',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'SDS',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'WUPA',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MTSA',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	6,0,2,35,2,11
	.byte	'WUPB',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MTSB',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,172,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11143
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_EILS_Bits',0,8,231,1,16,4,11
	.byte	'PEMCL',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CNAL',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SFBML',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SFOL',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'CCFL',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CCLL',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EERRL',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'RFOL',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EFAL',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'IIBAL',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'IOBAL',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MHFL',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'EDAL',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LTVAL',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TABAL',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'EDBL',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'LTVBL',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TABBL',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,252,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11567
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SILS_Bits',0,8,163,11,16,4,11
	.byte	'WSTL',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CASL',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CYCSL',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXIL',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'RXIL',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'RFNEL',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'RFCLL',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NMVCL',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TI0L',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TI1L',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TIBCL',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TOBCL',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SWEL',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'SUCSL',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBSIL',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'SDSL',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'WUPAL',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MTSAL',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	6,0,2,35,2,11
	.byte	'WUPBL',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MTSBL',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,164,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12000
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_EIES_Bits',0,8,205,1,16,4,11
	.byte	'PEMCE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CNAE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SFBME',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SFOE',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'CCFE',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CCLE',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EERRE',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'RFOE',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EFAE',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'IIBAE',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'IOBAE',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MHFE',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'EDAE',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LTVAE',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TABAE',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'EDBE',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'LTVBE',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TABBE',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,244,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12445
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_EIER_Bits',0,8,179,1,16,4,11
	.byte	'PEMCE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CNAE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SFBME',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SFOE',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'CCFE',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CCLE',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EERRE',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'RFOE',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EFAE',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'IIBAE',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'IOBAE',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MHFE',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'EDAE',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LTVAE',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TABAE',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'EDBE',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'LTVBE',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TABBE',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,236,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12878
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SIES_Bits',0,8,136,11,16,4,11
	.byte	'WSTE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CASE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CYCSE',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXIE',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'RXIE',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'RFNEE',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'RFCLE',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NMVCE',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TI0E',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TI1E',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TIBCE',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TOBCE',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SWEE',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'SUCSE',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBSIE',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'SDSE',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'WUPAE',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MTSAE',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	6,0,2,35,2,11
	.byte	'WUPBE',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MTSBE',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,156,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13311
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SIER_Bits',0,8,237,10,16,4,11
	.byte	'WSTE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CASE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CYCSE',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXIE',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'RXIE',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'RFNEE',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'RFCLE',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NMVCE',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TI0E',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TI1E',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TIBCE',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TOBCE',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SWEE',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'SUCSE',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBSIE',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'SDSE',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'WUPAE',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MTSAE',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	6,0,2,35,2,11
	.byte	'WUPBE',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MTSBE',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,148,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13756
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ILE_Bits',0,8,219,3,16,4,11
	.byte	'EINT0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EINT1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,12,8,172,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14201
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_T0C_Bits',0,8,171,12,16,4,11
	.byte	'T0RC',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'T0MS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	6,0,2,35,0,11
	.byte	'T0CC',0,1
	.word	432
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'T0MO',0,2
	.word	449
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,228,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14323
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_T1C_Bits',0,8,183,12,16,4,11
	.byte	'T1RC',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'T1MS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	449
	.byte	14,0,2,35,0,11
	.byte	'T1MC',0,2
	.word	449
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,236,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14521
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_STPW1_Bits',0,8,217,11,16,4,11
	.byte	'ESWT',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SWMS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EDGE',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SSWT',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'EETP',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'EINT0',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EINT1',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'SCCV',0,1
	.word	432
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'SMTV',0,2
	.word	449
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,180,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14680
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_STPW2_Bits',0,8,234,11,16,4,11
	.byte	'SSCVA',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'SSCVB',0,2
	.word	449
	.byte	11,5,2,35,2,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,188,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14962
	.byte	4,2,35,0,0,14,44
	.word	432
	.byte	15,43,0,10
	.byte	'_Ifx_ERAY_SUCC1_Bits',0,8,243,11,16,4,11
	.byte	'CMD',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'PBSY',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TXST',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TXSY',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'CSA',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'PTA',0,1
	.word	432
	.byte	5,3,2,35,2,11
	.byte	'WUCS',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TSM',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'HCSE',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MTSA',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MTSB',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'CCHA',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'CCHB',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,12,8,196,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15119
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SUCC2_Bits',0,8,136,12,16,4,11
	.byte	'LT',0,4
	.word	409
	.byte	21,11,2,35,0,11
	.byte	'reserved_21',0,1
	.word	432
	.byte	3,0,2,35,2,11
	.byte	'LTN',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,12,8,204,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15459
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SUCC3_Bits',0,8,145,12,16,4,11
	.byte	'WCP',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'WCF',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,12,8,212,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15602
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NEMC_Bits',0,8,183,9,16,4,11
	.byte	'NML',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,12,8,140,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15722
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_PRTC1_Bits',0,8,130,10,16,4,11
	.byte	'TSST',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'CASM',0,2
	.word	449
	.byte	7,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SPP',0,1
	.word	432
	.byte	2,2,2,35,1,11
	.byte	'BRP',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'RXW',0,2
	.word	449
	.byte	9,7,2,35,2,11
	.byte	'reserved_25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'RWP',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,204,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15826
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_PRTC2_Bits',0,8,143,10,16,4,11
	.byte	'RXI',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'RXL',0,1
	.word	432
	.byte	6,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'TXI',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'TXL',0,1
	.word	432
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,212,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16032
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MHDC_Bits',0,8,188,5,16,4,11
	.byte	'SFDL',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	449
	.byte	9,0,2,35,0,11
	.byte	'SLT',0,2
	.word	449
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	432
	.byte	3,0,2,35,3,0,12,8,132,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16228
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC01_Bits',0,8,209,2,16,4,11
	.byte	'UT',0,4
	.word	409
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	449
	.byte	12,0,2,35,2,0,12,8,188,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16371
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC02_Bits',0,8,216,2,16,4,11
	.byte	'MPC',0,2
	.word	449
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'SNM',0,1
	.word	432
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	449
	.byte	12,0,2,35,2,0,12,8,196,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16477
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC03_Bits',0,8,225,2,16,4,11
	.byte	'UIOA',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'UIOB',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MIOA',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MIOB',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,204,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16622
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC04_Bits',0,8,236,2,16,4,11
	.byte	'NIT',0,2
	.word	449
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'OCS',0,2
	.word	449
	.byte	14,2,2,35,2,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,212,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16801
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC05_Bits',0,8,245,2,16,4,11
	.byte	'DCA',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'DCB',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'CDD',0,1
	.word	432
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	432
	.byte	3,0,2,35,2,11
	.byte	'DEC',0,1
	.word	432
	.byte	8,0,2,35,3,0,12,8,220,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16946
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC06_Bits',0,8,255,2,16,4,11
	.byte	'ASR',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'MOD',0,2
	.word	449
	.byte	11,5,2,35,2,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,228,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17098
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC07_Bits',0,8,136,3,16,4,11
	.byte	'SSL',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	6,0,2,35,1,11
	.byte	'NSS',0,2
	.word	449
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,12,8,236,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17243
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC08_Bits',0,8,145,3,16,4,11
	.byte	'MSL',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	449
	.byte	10,0,2,35,0,11
	.byte	'NMS',0,2
	.word	449
	.byte	13,3,2,35,2,11
	.byte	'reserved_29',0,1
	.word	432
	.byte	3,0,2,35,3,0,12,8,244,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17388
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC09_Bits',0,8,154,3,16,4,11
	.byte	'APO',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'MAPO',0,1
	.word	432
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	432
	.byte	3,0,2,35,1,11
	.byte	'DSI',0,1
	.word	432
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	449
	.byte	14,0,2,35,2,0,12,8,252,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17532
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC10_Bits',0,8,165,3,16,4,11
	.byte	'MOC',0,2
	.word	449
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'MRC',0,2
	.word	449
	.byte	11,5,2,35,2,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,132,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17715
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_GTUC11_Bits',0,8,174,3,16,4,11
	.byte	'EOCC',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	6,0,2,35,0,11
	.byte	'ERCC',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	6,0,2,35,1,11
	.byte	'EOC',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'ERC',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,140,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17860
	.byte	4,2,35,0,0,14,52
	.word	432
	.byte	15,51,0,10
	.byte	'_Ifx_ERAY_CCSV_Bits',0,8,115,16,4,11
	.byte	'POCS',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'FSI',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'HRQ',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'SLM',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	2,4,2,35,1,11
	.byte	'CSNI',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'CSAI',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'CSI',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'WSV',0,1
	.word	432
	.byte	3,5,2,35,2,11
	.byte	'RCA',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'PSL',0,1
	.word	432
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,196,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18091
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_CCEV_Bits',0,8,105,16,4,11
	.byte	'CCFC',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	2,2,2,35,0,11
	.byte	'ERRM',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'PTAC',0,1
	.word	432
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	409
	.byte	19,0,2,35,0,0,12,8,188,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18379
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SCV_Bits',0,8,214,10,16,4,11
	.byte	'SCCA',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'SCCB',0,2
	.word	449
	.byte	11,5,2,35,2,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,132,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18538
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MTCCV_Bits',0,8,134,7,16,4,11
	.byte	'MTV',0,2
	.word	449
	.byte	14,2,2,35,0,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'CCV',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	449
	.byte	10,0,2,35,2,0,12,8,196,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18682
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_RCV_Bits',0,8,155,10,16,4,11
	.byte	'RCV',0,2
	.word	449
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	409
	.byte	20,0,2,35,0,0,12,8,220,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18826
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_OCV_Bits',0,8,230,9,16,4,11
	.byte	'OCV',0,4
	.word	409
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,2
	.word	449
	.byte	13,0,2,35,2,0,12,8,180,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18930
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SFS_Bits',0,8,223,10,16,4,11
	.byte	'VSAE',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'VSAO',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'VSBE',0,1
	.word	432
	.byte	4,4,2,35,1,11
	.byte	'VSBO',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'MOCS',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'OCLR',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MRCS',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'RCLR',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	449
	.byte	12,0,2,35,2,0,12,8,140,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19034
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_SWNIT_Bits',0,8,153,12,16,4,11
	.byte	'SESA',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SBSA',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TCSA',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SESB',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SBSB',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TCSB',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MTSA',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MTSB',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'SENA',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'SBNA',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'SENB',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'SBNB',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	409
	.byte	20,0,2,35,0,0,12,8,220,19,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19251
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ACS_Bits',0,8,88,16,4,11
	.byte	'VFRA',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SEDA',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CEDA',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'CIA',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SBVA',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	432
	.byte	3,0,2,35,0,11
	.byte	'VFRB',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'SEDB',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'CEDB',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'CIB',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'SBVB',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	409
	.byte	19,0,2,35,0,0,12,8,180,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19534
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ESID_Bits',0,8,161,2,16,4,11
	.byte	'EID',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	4,2,2,35,1,11
	.byte	'RXEA',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'RXEB',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,148,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19802
	.byte	4,2,35,0,0,14,60
	.word	19922
	.byte	15,14,0,10
	.byte	'_Ifx_ERAY_OSID_Bits',0,8,237,9,16,4,11
	.byte	'OID',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	4,2,2,35,1,11
	.byte	'RXOA',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'RXOB',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,188,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19971
	.byte	4,2,35,0,0,14,60
	.word	20091
	.byte	15,14,0,10
	.byte	'_Ifx_ERAY_NMV_Bits',0,8,190,9,16,4,11
	.byte	'NM',0,4
	.word	409
	.byte	32,0,2,35,0,0,12,8,148,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20140
	.byte	4,2,35,0,0,14,12
	.word	20180
	.byte	15,2,0,14,196,2
	.word	432
	.byte	15,195,2,0,10
	.byte	'_Ifx_ERAY_MRC_Bits',0,8,231,5,16,4,11
	.byte	'FDB',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'FFB',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'LCB',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'SEC',0,1
	.word	432
	.byte	2,6,2,35,3,11
	.byte	'SPLM',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,156,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20240
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_FRF_Bits',0,8,178,2,16,4,11
	.byte	'CH',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'FID',0,2
	.word	449
	.byte	11,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	432
	.byte	3,0,2,35,1,11
	.byte	'CYF',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'RSS',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'RNF',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	432
	.byte	7,0,2,35,3,0,12,8,164,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20405
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_FRFM_Bits',0,8,190,2,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'MFID',0,2
	.word	449
	.byte	11,3,2,35,0,11
	.byte	'reserved_13',0,4
	.word	409
	.byte	19,0,2,35,0,0,12,8,172,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20591
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_FCL_Bits',0,8,171,2,16,4,11
	.byte	'CL',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,12,8,156,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20719
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MHDS_Bits',0,8,212,5,16,4,11
	.byte	'EIBF',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EOBF',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EMR',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ETBF1',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ETBF2',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'FMBD',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MFMB',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'CRAM',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'FMB',0,1
	.word	432
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MBT',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MBU',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,148,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20821
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_LDTS_Bits',0,8,129,4,16,4,11
	.byte	'LDTA',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'LDTB',0,2
	.word	449
	.byte	11,5,2,35,2,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	5,0,2,35,3,0,12,8,212,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21131
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_FSR_Bits',0,8,198,2,16,4,11
	.byte	'RFNE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'RFCL',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'RFO',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'RFFL',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,12,8,180,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21276
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MHDF_Bits',0,8,197,5,16,4,11
	.byte	'SNUA',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SNUB',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'FNFA',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'FNFB',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TBFA',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TBFB',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'TNSA',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'TNSB',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'WAHP',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	409
	.byte	23,0,2,35,0,0,12,8,140,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21450
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TXRQ1_Bits',0,8,226,12,16,4,11
	.byte	'TXR0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'TXR1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TXR2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXR3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TXR4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TXR5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'TXR6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'TXR7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TXR8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TXR9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TXR10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TXR11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'TXR12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'TXR13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'TXR14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'TXR15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'TXR16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'TXR17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TXR18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TXR19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'TXR20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TXR21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TXR22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'TXR23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'TXR24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'TXR25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TXR26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'TXR27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXR28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'TXR29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'TXR30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'TXR31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,132,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21683
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TXRQ2_Bits',0,8,135,13,16,4,11
	.byte	'TXR32',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'TXR33',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TXR34',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXR35',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TXR36',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TXR37',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'TXR38',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'TXR39',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TXR40',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TXR41',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TXR42',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TXR43',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'TXR44',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'TXR45',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'TXR46',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'TXR47',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'TXR48',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'TXR49',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TXR50',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TXR51',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'TXR52',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TXR53',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TXR54',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'TXR55',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'TXR56',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'TXR57',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TXR58',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'TXR59',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXR60',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'TXR61',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'TXR62',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'TXR63',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,140,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22285
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TXRQ3_Bits',0,8,172,13,16,4,11
	.byte	'TXR64',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'TXR65',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TXR66',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXR67',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TXR68',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TXR69',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'TXR70',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'TXR71',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TXR72',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TXR73',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TXR74',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TXR75',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'TXR76',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'TXR77',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'TXR78',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'TXR79',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'TXR80',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'TXR81',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TXR82',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TXR83',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'TXR84',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TXR85',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TXR86',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'TXR87',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'TXR88',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'TXR89',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TXR90',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'TXR91',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXR92',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'TXR93',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'TXR94',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'TXR95',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,148,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22897
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_TXRQ4_Bits',0,8,209,13,16,4,11
	.byte	'TXR96',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'TXR97',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'TXR98',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'TXR99',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TXR100',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'TXR101',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'TXR102',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'TXR103',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TXR104',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TXR105',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'TXR106',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'TXR107',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'TXR108',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'TXR109',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'TXR110',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'TXR111',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'TXR112',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'TXR113',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'TXR114',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TXR115',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'TXR116',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TXR117',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TXR118',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'TXR119',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'TXR120',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'TXR121',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'TXR122',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'TXR123',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXR124',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'TXR125',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'TXR126',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'TXR127',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,156,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23509
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDAT1_Bits',0,8,143,7,16,4,11
	.byte	'ND0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ND1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'ND2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ND3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ND4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'ND5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'ND6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'ND7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'ND8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'ND9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'ND10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'ND11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'ND12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'ND13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'ND14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'ND15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'ND16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'ND17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'ND18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'ND19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'ND20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'ND21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'ND22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'ND23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'ND24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'ND25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'ND26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'ND27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'ND28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'ND29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'ND30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'ND31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,204,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24149
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDAT2_Bits',0,8,180,7,16,4,11
	.byte	'ND32',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ND33',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'ND34',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ND35',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ND36',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'ND37',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'ND38',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'ND39',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'ND40',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'ND41',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'ND42',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'ND43',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'ND44',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'ND45',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'ND46',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'ND47',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'ND48',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'ND49',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'ND50',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'ND51',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'ND52',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'ND53',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'ND54',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'ND55',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'ND56',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'ND57',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'ND58',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'ND59',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'ND60',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'ND61',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'ND62',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'ND63',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,212,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24719
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDAT3_Bits',0,8,217,7,16,4,11
	.byte	'ND64',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ND65',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'ND66',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ND67',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ND68',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'ND69',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'ND70',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'ND71',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'ND72',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'ND73',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'ND74',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'ND75',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'ND76',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'ND77',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'ND78',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'ND79',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'ND80',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'ND81',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'ND82',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'ND83',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'ND84',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'ND85',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'ND86',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'ND87',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'ND88',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'ND89',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'ND90',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'ND91',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'ND92',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'ND93',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'ND94',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'ND95',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,220,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25299
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDAT4_Bits',0,8,254,7,16,4,11
	.byte	'ND96',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ND97',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'ND98',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ND99',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ND100',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'ND101',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'ND102',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'ND103',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'ND104',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'ND105',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'ND106',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'ND107',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'ND108',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'ND109',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'ND110',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'ND111',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'ND112',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'ND113',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'ND114',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'ND115',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'ND116',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'ND117',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'ND118',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'ND119',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'ND120',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'ND121',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'ND122',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'ND123',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'ND124',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'ND125',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'ND126',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'ND127',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,228,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25879
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MBSC1_Bits',0,8,168,4,16,4,11
	.byte	'MBC0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MBC1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MBC2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MBC3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MBC4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MBC5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MBC6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MBC7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MBC8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MBC9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MBC10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MBC11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MBC12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MBC13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBC14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MBC15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MBC16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MBC17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MBC18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MBC19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MBC20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MBC21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MBC22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MBC23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MBC24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MBC25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MBC26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MBC27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MBC28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBC29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MBC30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MBC31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,228,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26487
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MBSC2_Bits',0,8,205,4,16,4,11
	.byte	'MBC32',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MBC33',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MBC34',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MBC35',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MBC36',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MBC37',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MBC38',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MBC39',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MBC40',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MBC41',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MBC42',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MBC43',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MBC44',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MBC45',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBC46',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MBC47',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MBC48',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MBC49',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MBC50',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MBC51',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MBC52',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MBC53',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MBC54',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MBC55',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MBC56',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MBC57',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MBC58',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MBC59',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MBC60',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBC61',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MBC62',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MBC63',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,236,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27089
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MBSC3_Bits',0,8,242,4,16,4,11
	.byte	'MBC64',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MBC65',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MBC66',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MBC67',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MBC68',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MBC69',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MBC70',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MBC71',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MBC72',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MBC73',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MBC74',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MBC75',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MBC76',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MBC77',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBC78',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MBC79',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MBC80',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MBC81',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MBC82',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MBC83',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MBC84',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MBC85',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MBC86',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MBC87',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MBC88',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MBC89',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MBC90',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MBC91',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MBC92',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBC93',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MBC94',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MBC95',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,244,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27701
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MBSC4_Bits',0,8,151,5,16,4,11
	.byte	'MBC96',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MBC97',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MBC98',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MBC99',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MBC100',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MBC101',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MBC102',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MBC103',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MBC104',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MBC105',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MBC106',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MBC107',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MBC108',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MBC109',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MBC110',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MBC111',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MBC112',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MBC113',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MBC114',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MBC115',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MBC116',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MBC117',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MBC118',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MBC119',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MBC120',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MBC121',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MBC122',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MBC123',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MBC124',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBC125',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MBC126',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MBC127',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,252,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28313
	.byte	4,2,35,0,0,14,88
	.word	432
	.byte	15,87,0,10
	.byte	'_Ifx_ERAY_NDIC1_Bits',0,8,163,8,16,4,11
	.byte	'NDIP0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'NDIP1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'NDIP2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'NDIP3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'NDIP4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'NDIP5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'NDIP6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NDIP7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'NDIP8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'NDIP9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'NDIP10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'NDIP11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'NDIP12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'NDIP13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'NDIP14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'NDIP15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'NDIP16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'NDIP17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'NDIP18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'NDIP19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'NDIP20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'NDIP21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'NDIP22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'NDIP23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'NDIP24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'NDIP25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'NDIP26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NDIP27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'NDIP28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'NDIP29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'NDIP30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'NDIP31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,236,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28962
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDIC2_Bits',0,8,200,8,16,4,11
	.byte	'NDIP32',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'NDIP33',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'NDIP34',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'NDIP35',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'NDIP36',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'NDIP37',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'NDIP38',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NDIP39',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'NDIP40',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'NDIP41',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'NDIP42',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'NDIP43',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'NDIP44',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'NDIP45',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'NDIP46',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'NDIP47',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'NDIP48',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'NDIP49',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'NDIP50',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'NDIP51',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'NDIP52',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'NDIP53',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'NDIP54',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'NDIP55',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'NDIP56',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'NDIP57',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'NDIP58',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NDIP59',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'NDIP60',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'NDIP61',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'NDIP62',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'NDIP63',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,244,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29596
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDIC3_Bits',0,8,237,8,16,4,11
	.byte	'NDIP64',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'NDIP65',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'NDIP66',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'NDIP67',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'NDIP68',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'NDIP69',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'NDIP70',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NDIP71',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'NDIP72',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'NDIP73',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'NDIP74',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'NDIP75',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'NDIP76',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'NDIP77',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'NDIP78',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'NDIP79',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'NDIP80',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'NDIP81',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'NDIP82',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'NDIP83',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'NDIP84',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'NDIP85',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'NDIP86',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'NDIP87',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'NDIP88',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'NDIP89',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'NDIP90',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NDIP91',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'NDIP92',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'NDIP93',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'NDIP94',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'NDIP95',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,252,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30240
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_NDIC4_Bits',0,8,146,9,16,4,11
	.byte	'NDIP96',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'NDIP97',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'NDIP98',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'NDIP99',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'NDIP100',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'NDIP101',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'NDIP102',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'NDIP103',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'NDIP104',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'NDIP105',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'NDIP106',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'NDIP107',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'NDIP108',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'NDIP109',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'NDIP110',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'NDIP111',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'NDIP112',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'NDIP113',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'NDIP114',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'NDIP115',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'NDIP116',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'NDIP117',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'NDIP118',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'NDIP119',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'NDIP120',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'NDIP121',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'NDIP122',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NDIP123',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'NDIP124',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'NDIP125',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'NDIP126',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'NDIP127',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,132,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30884
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MSIC1_Bits',0,8,242,5,16,4,11
	.byte	'MSIP0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MSIP1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MSIP2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MSIP3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MSIP4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MSIP5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MSIP6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MSIP7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MSIP8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MSIP9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MSIP10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MSIP11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MSIP12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MSIP13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MSIP14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MSIP15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MSIP16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MSIP17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MSIP18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MSIP19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MSIP20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MSIP21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MSIP22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MSIP23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MSIP24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MSIP25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MSIP26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MSIP27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MSIP28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MSIP29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MSIP30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MSIP31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,164,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31556
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MSIC2_Bits',0,8,151,6,16,4,11
	.byte	'MSIP32',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MSIP33',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MSIP34',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MSIP35',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MSIP36',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MSIP37',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MSIP38',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MSIP39',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MSIP40',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MSIP41',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MSIP42',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MSIP43',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MSIP44',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MSIP45',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MSIP46',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MSIP47',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MSIP48',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MSIP49',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MSIP50',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MSIP51',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MSIP52',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MSIP53',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MSIP54',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MSIP55',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MSIP56',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MSIP57',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MSIP58',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MSIP59',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MSIP60',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MSIP61',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MSIP62',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MSIP63',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,172,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32190
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MSIC3_Bits',0,8,188,6,16,4,11
	.byte	'MSIP64',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MSIP65',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MSIP66',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MSIP67',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MSIP68',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MSIP69',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MSIP70',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MSIP71',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MSIP72',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MSIP73',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MSIP74',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MSIP75',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MSIP76',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MSIP77',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MSIP78',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MSIP79',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MSIP80',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MSIP81',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MSIP82',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MSIP83',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MSIP84',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MSIP85',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MSIP86',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MSIP87',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MSIP88',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MSIP89',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MSIP90',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MSIP91',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MSIP92',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MSIP93',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MSIP94',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MSIP95',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,180,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32834
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MSIC4_Bits',0,8,225,6,16,4,11
	.byte	'MSIP96',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MSIP97',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MSIP98',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'MSIP99',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'MSIP100',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'MSIP101',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'MSIP102',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MSIP103',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'MSIP104',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'MSIP105',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'MSIP106',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'MSIP107',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MSIP108',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'MSIP109',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'MSIP110',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'MSIP111',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'MSIP112',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'MSIP113',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'MSIP114',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'MSIP115',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'MSIP116',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'MSIP117',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'MSIP118',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'MSIP119',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'MSIP120',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'MSIP121',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'MSIP122',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'MSIP123',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'MSIP124',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MSIP125',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'MSIP126',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'MSIP127',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,188,17,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33478
	.byte	4,2,35,0,0,14,40
	.word	432
	.byte	15,39,0,10
	.byte	'_Ifx_ERAY_CREL_Bits',0,8,145,1,16,4,11
	.byte	'DAY',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MON',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'YEAR',0,1
	.word	432
	.byte	4,4,2,35,2,11
	.byte	'SUBSTEP',0,1
	.word	432
	.byte	4,0,2,35,2,11
	.byte	'STEP',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'REL',0,1
	.word	432
	.byte	4,0,2,35,3,0,12,8,212,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34159
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ENDN_Bits',0,8,155,2,16,4,11
	.byte	'ETV',0,4
	.word	409
	.byte	32,0,2,35,0,0,12,8,140,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34322
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_WRDS_Bits',0,8,246,13,16,4,11
	.byte	'MDWB0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MDWB1',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MDWB2',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'MDWB3',0,1
	.word	432
	.byte	8,0,2,35,3,0,12,8,164,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34404
	.byte	4,2,35,0,0,14,128,2
	.word	34499
	.byte	15,63,0,10
	.byte	'_Ifx_ERAY_WRHS1_Bits',0,8,255,13,16,4,11
	.byte	'FID',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'CYC',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'CHA',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'CHB',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'CFG',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'PPIT',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXM',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBI',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0
.L225:
	.byte	12,8,172,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34549
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_WRHS2_Bits',0,8,143,14,16,4,11
	.byte	'CRC',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'PLC',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	9,0,2,35,2,0
.L228:
	.byte	12,8,180,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34807
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_WRHS3_Bits',0,8,152,14,16,4,11
	.byte	'DP',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,4
	.word	409
	.byte	21,0,2,35,0,0,12,8,188,20,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34951
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_IBCM_Bits',0,8,187,3,16,4,11
	.byte	'LHSH',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'LDSH',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'STXRH',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	449
	.byte	13,0,2,35,0,11
	.byte	'LHSS',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LDSS',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'STXRS',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,2
	.word	449
	.byte	13,0,2,35,2,0,12,8,148,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35056
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_IBCR_Bits',0,8,200,3,16,4,11
	.byte	'IBRH',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	449
	.byte	8,1,2,35,0,11
	.byte	'IBSYH',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'IBRS',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	8,1,2,35,2,11
	.byte	'IBSYS',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,156,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35266
	.byte	4,2,35,0,0,14,232,1
	.word	432
	.byte	15,231,1,0,10
	.byte	'_Ifx_ERAY_RDDS_Bits',0,8,162,10,16,4,11
	.byte	'MDRB0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MDRB1',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MDRB2',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'MDRB3',0,1
	.word	432
	.byte	8,0,2,35,3,0,12,8,228,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35455
	.byte	4,2,35,0,0,14,128,2
	.word	35550
	.byte	15,63,0,10
	.byte	'_Ifx_ERAY_RDHS1_Bits',0,8,171,10,16,4,11
	.byte	'FID',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'CYC',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'CHA',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'CHB',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'CFG',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'PPIT',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'TXM',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'MBI',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0
.L203:
	.byte	12,8,236,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35600
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_RDHS2_Bits',0,8,187,10,16,4,11
	.byte	'CRC',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'PLC',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'PLR',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0
.L206:
	.byte	12,8,244,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35858
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_RDHS3_Bits',0,8,198,10,16,4,11
	.byte	'DP',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	5,0,2,35,1,11
	.byte	'RCC',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'RCI',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'SFI',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'SYN',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NFI',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PPI',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'RES',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0
.L208:
	.byte	12,8,252,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36040
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_MBS_Bits',0,8,138,4,16,4,11
	.byte	'VFRA',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'VFRB',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SEOA',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SEOB',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'CEOA',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CEOB',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'SVOA',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'SVOB',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TCIA',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TCIB',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'ESA',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'ESB',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'MLST',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'FTA',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'FTB',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'CCS',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'RCIS',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'SFIS',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'SYNS',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'NFIS',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'PPIS',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'RESS',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,220,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36296
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_OBCM_Bits',0,8,196,9,16,4,11
	.byte	'RHSS',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'RDSS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	449
	.byte	14,0,2,35,0,11
	.byte	'RHSH',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'RDSH',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	449
	.byte	14,0,2,35,2,0,12,8,156,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36778
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_OBCR_Bits',0,8,207,9,16,4,11
	.byte	'OBRS',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'VIEW',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'REQ',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	5,1,2,35,1,11
	.byte	'OBSYS',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'OBRH',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	9,0,2,35,2,0,12,8,164,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36954
	.byte	4,2,35,0,0,14,216,2
	.word	432
	.byte	15,215,2,0,10
	.byte	'_Ifx_ERAY_OTSS_Bits',0,8,247,9,16,4,11
	.byte	'OTGB0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	6,0,2,35,0,11
	.byte	'OTGB1',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	6,0,2,35,1,11
	.byte	'OTGB2',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	449
	.byte	15,0,2,35,2,0,12,8,196,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37180
	.byte	4,2,35,0,0,14,116
	.word	432
	.byte	15,115,0,10
	.byte	'_Ifx_ERAY_OCS_Bits',0,8,220,9,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	2,0,2,35,3,0,12,8,172,18,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37375
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_KRSTCLR_Bits',0,8,242,3,16,4,11
	.byte	'CLR',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	409
	.byte	31,0,2,35,0,0,12,8,196,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37536
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_KRST1_Bits',0,8,235,3,16,4,11
	.byte	'RST',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	409
	.byte	31,0,2,35,0,0,12,8,188,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37643
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_KRST0_Bits',0,8,227,3,16,4,11
	.byte	'RST',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,12,8,180,16,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37748
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ACCEN1_Bits',0,8,82,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	32,0,2,35,0,0,12,8,172,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37872
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ERAY_ACCEN0_Bits',0,8,45,16,4,11
	.byte	'EN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	432
	.byte	1,0,2,35,3,0,12,8,164,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37962
	.byte	4,2,35,0,0,14,128,14
	.word	432
	.byte	15,255,13,0,10
	.byte	'_Ifx_ERAY',0,8,204,20,25,128,32,13
	.byte	'CLC',0
	.word	9536
	.byte	4,2,35,0,13
	.byte	'CUST1',0
	.word	9821
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	9944
	.byte	4,2,35,8,13
	.byte	'CUST3',0
	.word	10026
	.byte	4,2,35,12,13
	.byte	'TEST1',0
	.word	10388
	.byte	4,2,35,16,13
	.byte	'TEST2',0
	.word	10570
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	1477
	.byte	4,2,35,24,13
	.byte	'LCK',0
	.word	10689
	.byte	4,2,35,28,13
	.byte	'EIR',0
	.word	11103
	.byte	4,2,35,32,13
	.byte	'SIR',0
	.word	11527
	.byte	4,2,35,36,13
	.byte	'EILS',0
	.word	11960
	.byte	4,2,35,40,13
	.byte	'SILS',0
	.word	12405
	.byte	4,2,35,44,13
	.byte	'EIES',0
	.word	12838
	.byte	4,2,35,48,13
	.byte	'EIER',0
	.word	13271
	.byte	4,2,35,52,13
	.byte	'SIES',0
	.word	13716
	.byte	4,2,35,56,13
	.byte	'SIER',0
	.word	14161
	.byte	4,2,35,60,13
	.byte	'ILE',0
	.word	14283
	.byte	4,2,35,64,13
	.byte	'T0C',0
	.word	14481
	.byte	4,2,35,68,13
	.byte	'T1C',0
	.word	14640
	.byte	4,2,35,72,13
	.byte	'STPW1',0
	.word	14922
	.byte	4,2,35,76,13
	.byte	'STPW2',0
	.word	15070
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	15110
	.byte	44,2,35,84,13
	.byte	'SUCC1',0
	.word	15419
	.byte	4,3,35,128,1,13
	.byte	'SUCC2',0
	.word	15562
	.byte	4,3,35,132,1,13
	.byte	'SUCC3',0
	.word	15682
	.byte	4,3,35,136,1,13
	.byte	'NEMC',0
	.word	15786
	.byte	4,3,35,140,1,13
	.byte	'PRTC1',0
	.word	15992
	.byte	4,3,35,144,1,13
	.byte	'PRTC2',0
	.word	16188
	.byte	4,3,35,148,1,13
	.byte	'MHDC',0
	.word	16331
	.byte	4,3,35,152,1,13
	.byte	'reserved_9C',0
	.word	1477
	.byte	4,3,35,156,1,13
	.byte	'GTUC01',0
	.word	16437
	.byte	4,3,35,160,1,13
	.byte	'GTUC02',0
	.word	16582
	.byte	4,3,35,164,1,13
	.byte	'GTUC03',0
	.word	16761
	.byte	4,3,35,168,1,13
	.byte	'GTUC04',0
	.word	16906
	.byte	4,3,35,172,1,13
	.byte	'GTUC05',0
	.word	17058
	.byte	4,3,35,176,1,13
	.byte	'GTUC06',0
	.word	17203
	.byte	4,3,35,180,1,13
	.byte	'GTUC07',0
	.word	17348
	.byte	4,3,35,184,1,13
	.byte	'GTUC08',0
	.word	17492
	.byte	4,3,35,188,1,13
	.byte	'GTUC09',0
	.word	17675
	.byte	4,3,35,192,1,13
	.byte	'GTUC10',0
	.word	17820
	.byte	4,3,35,196,1,13
	.byte	'GTUC11',0
	.word	18042
	.byte	4,3,35,200,1,13
	.byte	'reserved_CC',0
	.word	18082
	.byte	52,3,35,204,1,13
	.byte	'CCSV',0
	.word	18339
	.byte	4,3,35,128,2,13
	.byte	'CCEV',0
	.word	18498
	.byte	4,3,35,132,2,13
	.byte	'reserved_108',0
	.word	3296
	.byte	8,3,35,136,2,13
	.byte	'SCV',0
	.word	18642
	.byte	4,3,35,144,2,13
	.byte	'MTCCV',0
	.word	18786
	.byte	4,3,35,148,2,13
	.byte	'RCV',0
	.word	18890
	.byte	4,3,35,152,2,13
	.byte	'OCV',0
	.word	18994
	.byte	4,3,35,156,2,13
	.byte	'SFS',0
	.word	19211
	.byte	4,3,35,160,2,13
	.byte	'SWNIT',0
	.word	19494
	.byte	4,3,35,164,2,13
	.byte	'ACS',0
	.word	19762
	.byte	4,3,35,168,2,13
	.byte	'reserved_12C',0
	.word	1477
	.byte	4,3,35,172,2,13
	.byte	'ESID_1S',0
	.word	19962
	.byte	60,3,35,176,2,13
	.byte	'reserved_16C',0
	.word	1477
	.byte	4,3,35,236,2,13
	.byte	'OSID_1S',0
	.word	20131
	.byte	60,3,35,240,2,13
	.byte	'reserved_1AC',0
	.word	1477
	.byte	4,3,35,172,3,13
	.byte	'NMV_1S',0
	.word	20220
	.byte	12,3,35,176,3,13
	.byte	'reserved_1BC',0
	.word	20229
	.byte	196,2,3,35,188,3,13
	.byte	'MRC',0
	.word	20365
	.byte	4,3,35,128,6,13
	.byte	'FRF',0
	.word	20551
	.byte	4,3,35,132,6,13
	.byte	'FRFM',0
	.word	20679
	.byte	4,3,35,136,6,13
	.byte	'FCL',0
	.word	20781
	.byte	4,3,35,140,6,13
	.byte	'MHDS',0
	.word	21091
	.byte	4,3,35,144,6,13
	.byte	'LDTS',0
	.word	21236
	.byte	4,3,35,148,6,13
	.byte	'FSR',0
	.word	21410
	.byte	4,3,35,152,6,13
	.byte	'MHDF',0
	.word	21643
	.byte	4,3,35,156,6,13
	.byte	'TXRQ1',0
	.word	22245
	.byte	4,3,35,160,6,13
	.byte	'TXRQ2',0
	.word	22857
	.byte	4,3,35,164,6,13
	.byte	'TXRQ3',0
	.word	23469
	.byte	4,3,35,168,6,13
	.byte	'TXRQ4',0
	.word	24109
	.byte	4,3,35,172,6,13
	.byte	'NDAT1',0
	.word	24679
	.byte	4,3,35,176,6,13
	.byte	'NDAT2',0
	.word	25259
	.byte	4,3,35,180,6,13
	.byte	'NDAT3',0
	.word	25839
	.byte	4,3,35,184,6,13
	.byte	'NDAT4',0
	.word	26447
	.byte	4,3,35,188,6,13
	.byte	'MBSC1',0
	.word	27049
	.byte	4,3,35,192,6,13
	.byte	'MBSC2',0
	.word	27661
	.byte	4,3,35,196,6,13
	.byte	'MBSC3',0
	.word	28273
	.byte	4,3,35,200,6,13
	.byte	'MBSC4',0
	.word	28913
	.byte	4,3,35,204,6,13
	.byte	'reserved_350',0
	.word	28953
	.byte	88,3,35,208,6,13
	.byte	'NDIC1',0
	.word	29556
	.byte	4,3,35,168,7,13
	.byte	'NDIC2',0
	.word	30200
	.byte	4,3,35,172,7,13
	.byte	'NDIC3',0
	.word	30844
	.byte	4,3,35,176,7,13
	.byte	'NDIC4',0
	.word	31516
	.byte	4,3,35,180,7,13
	.byte	'MSIC1',0
	.word	32150
	.byte	4,3,35,184,7,13
	.byte	'MSIC2',0
	.word	32794
	.byte	4,3,35,188,7,13
	.byte	'MSIC3',0
	.word	33438
	.byte	4,3,35,192,7,13
	.byte	'MSIC4',0
	.word	34110
	.byte	4,3,35,196,7,13
	.byte	'reserved_3C8',0
	.word	34150
	.byte	40,3,35,200,7,13
	.byte	'CREL',0
	.word	34282
	.byte	4,3,35,240,7,13
	.byte	'ENDN',0
	.word	34364
	.byte	4,3,35,244,7,13
	.byte	'reserved_3F8',0
	.word	3296
	.byte	8,3,35,248,7,13
	.byte	'WRDS_1S',0
	.word	34539
	.byte	128,2,3,35,128,8,13
	.byte	'WRHS1',0
	.word	34767
	.byte	4,3,35,128,10,13
	.byte	'WRHS2',0
	.word	34911
	.byte	4,3,35,132,10,13
	.byte	'WRHS3',0
	.word	35016
	.byte	4,3,35,136,10,13
	.byte	'reserved_50C',0
	.word	1477
	.byte	4,3,35,140,10,13
	.byte	'IBCM',0
	.word	35226
	.byte	4,3,35,144,10,13
	.byte	'IBCR',0
	.word	35404
	.byte	4,3,35,148,10,13
	.byte	'reserved_518',0
	.word	35444
	.byte	232,1,3,35,152,10,13
	.byte	'RDDS_1S',0
	.word	35590
	.byte	128,2,3,35,128,12,13
	.byte	'RDHS1',0
	.word	35818
	.byte	4,3,35,128,14,13
	.byte	'RDHS2',0
	.word	36000
	.byte	4,3,35,132,14,13
	.byte	'RDHS3',0
	.word	36256
	.byte	4,3,35,136,14,13
	.byte	'MBS',0
	.word	36738
	.byte	4,3,35,140,14,13
	.byte	'OBCM',0
	.word	36914
	.byte	4,3,35,144,14,13
	.byte	'OBCR',0
	.word	37129
	.byte	4,3,35,148,14,13
	.byte	'reserved_718',0
	.word	37169
	.byte	216,2,3,35,152,14,13
	.byte	'OTSS',0
	.word	37326
	.byte	4,3,35,240,16,13
	.byte	'reserved_874',0
	.word	37366
	.byte	116,3,35,244,16,13
	.byte	'OCS',0
	.word	37496
	.byte	4,3,35,232,17,13
	.byte	'KRSTCLR',0
	.word	37603
	.byte	4,3,35,236,17,13
	.byte	'KRST1',0
	.word	37708
	.byte	4,3,35,240,17,13
	.byte	'KRST0',0
	.word	37832
	.byte	4,3,35,244,17,13
	.byte	'ACCEN1',0
	.word	37922
	.byte	4,3,35,248,17,13
	.byte	'ACCEN0',0
	.word	38492
	.byte	4,3,35,252,17,13
	.byte	'reserved_900',0
	.word	38532
	.byte	128,14,3,35,128,18,0,16
	.word	38543
.L138:
	.byte	3
	.word	40496
.L218:
	.byte	8
	.byte	'IfxEray_getInputBufferBusyHostStatus',0,3,7,245,9,20
	.word	432
	.byte	1,1
.L220:
	.byte	5
	.byte	'eray',0,7,245,9,67
	.word	40501
.L222:
	.byte	6,0
.L230:
	.byte	8
	.byte	'IfxEray_getInputBufferBusyShadowStatus',0,3,7,251,9,18
	.word	432
	.byte	1,1
.L232:
	.byte	5
	.byte	'eray',0,7,251,9,67
	.word	40501
.L234:
	.byte	6,0,19
	.word	425
	.byte	20
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	40638
	.byte	0,16
	.word	409
	.byte	3
	.word	409
	.byte	22
	.byte	'__cmpswapw',0
	.word	40680
	.byte	1,1,1,1,23
	.byte	'p',0
	.word	40685
	.byte	23
	.byte	'value',0
	.word	409
	.byte	23
	.byte	'compare',0
	.word	409
	.byte	0,24
	.word	185
	.byte	25
	.word	211
	.byte	6,0,24
	.word	246
	.byte	25
	.word	278
	.byte	6,0,24
	.word	328
	.byte	25
	.word	347
	.byte	6,0,24
	.word	363
	.byte	25
	.word	378
	.byte	25
	.word	392
	.byte	6,0,26
	.byte	'IfxScuWdt_clearCpuEndinit',0,9,217,1,17,1,1,1,1,5
	.byte	'password',0,9,217,1,50
	.word	449
	.byte	0,26
	.byte	'IfxScuWdt_setCpuEndinit',0,9,239,1,17,1,1,1,1,5
	.byte	'password',0,9,239,1,48
	.word	449
	.byte	0,27
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,9,129,3,19
	.word	449
	.byte	1,1,1,1,24
	.word	8354
	.byte	25
	.word	8386
	.byte	25
	.word	8400
	.byte	25
	.word	8418
	.byte	6,0,24
	.word	8721
	.byte	25
	.word	8754
	.byte	25
	.word	8768
	.byte	25
	.word	8786
	.byte	25
	.word	8800
	.byte	6,0,24
	.word	8920
	.byte	25
	.word	8948
	.byte	25
	.word	8962
	.byte	25
	.word	8980
	.byte	6,0,24
	.word	9337
	.byte	25
	.word	9365
	.byte	6,0
.L149:
	.byte	7
	.byte	'unsigned long int',0,4,7
.L151:
	.byte	3
	.word	32150
.L159:
	.byte	3
	.word	29556
.L162:
	.byte	17,10,82,9,1,18
	.byte	'IfxEray_Index_none',0,127,18
	.byte	'IfxEray_Index_0',0,0,0,24
	.word	40506
	.byte	25
	.word	40555
	.byte	6,0,24
	.word	40571
	.byte	25
	.word	40622
	.byte	6,0
.L174:
	.byte	17,7,139,2,9,1,18
	.byte	'IfxEray_PocCommand_notAccepted',0,0,18
	.byte	'IfxEray_PocCommand_config',0,1,18
	.byte	'IfxEray_PocCommand_ready',0,2,18
	.byte	'IfxEray_PocCommand_wakeup',0,3,18
	.byte	'IfxEray_PocCommand_run',0,4,18
	.byte	'IfxEray_PocCommand_allSlots',0,5,18
	.byte	'IfxEray_PocCommand_halt',0,6,18
	.byte	'IfxEray_PocCommand_freeze',0,7,18
	.byte	'IfxEray_PocCommand_sendMts',0,8,18
	.byte	'IfxEray_PocCommand_coldStart',0,9,18
	.byte	'IfxEray_PocCommand_reset',0,10,18
	.byte	'IfxEray_PocCommand_monitor',0,11,18
	.byte	'IfxEray_PocCommand_clearRam',0,12,0
.L189:
	.byte	3
	.word	41030
	.byte	28,7,146,3,9,8,11
	.byte	'frameId',0,2
	.word	449
	.byte	11,5,2,35,0,11
	.byte	'payloadLength',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'headerCrc',0,2
	.word	449
	.byte	11,5,2,35,4,11
	.byte	'nullFrameIndicator',0,1
	.word	432
	.byte	1,4,2,35,5,11
	.byte	'syncFrame',0,1
	.word	432
	.byte	1,3,2,35,5,11
	.byte	'startupFrame',0,1
	.word	432
	.byte	1,2,2,35,5,11
	.byte	'cycleNumber',0,1
	.word	432
	.byte	7,1,2,35,6,11
	.byte	'payloadPreambleIndicator',0,1
	.word	432
	.byte	1,0,2,35,6,0
.L197:
	.byte	3
	.word	41513
.L200:
	.byte	7
	.byte	'short int',0,2,5,17,7,91,9,1,18
	.byte	'IfxEray_BufferDirection_receive',0,0,18
	.byte	'IfxEray_BufferDirection_transmit',0,1,0,17,7,224,2,9,1,18
	.byte	'IfxEray_TransmissionMode_continuous',0,0,18
	.byte	'IfxEray_TransmissionMode_singleShot',0,1,0,28,7,128,3,9,16,13
	.byte	'frameId',0
	.word	449
	.byte	2,2,35,0,13
	.byte	'cycleCode',0
	.word	432
	.byte	1,2,35,2,13
	.byte	'channelAFiltered',0
	.word	432
	.byte	1,2,35,3,13
	.byte	'channelBFiltered',0
	.word	432
	.byte	1,2,35,4,13
	.byte	'bufferDirection',0
	.word	41737
	.byte	1,2,35,5,13
	.byte	'transmitPayloadIndicatior',0
	.word	432
	.byte	1,2,35,6,13
	.byte	'transmissionMode',0
	.word	41812
	.byte	1,2,35,7,13
	.byte	'bufferServiceEnabled',0
	.word	432
	.byte	1,2,35,8,13
	.byte	'payloadLength',0
	.word	432
	.byte	1,2,35,9,13
	.byte	'dataPointer',0
	.word	449
	.byte	2,2,35,10,13
	.byte	'startupFrameIndicator',0
	.word	432
	.byte	1,2,35,12,13
	.byte	'syncFrameIndicator',0
	.word	432
	.byte	1,2,35,13,0,19
	.word	41895
.L212:
	.byte	3
	.word	42209
	.byte	19
	.word	41030
.L214:
	.byte	3
	.word	42219
	.byte	28,7,160,3,9,4,13
	.byte	'headerTransfered',0
	.word	432
	.byte	1,2,35,0,13
	.byte	'dataTransfered',0
	.word	432
	.byte	1,2,35,1,13
	.byte	'transferRequested',0
	.word	432
	.byte	1,2,35,2,13
	.byte	'bufferIndex',0
	.word	432
	.byte	1,2,35,3,0,19
	.word	42229
.L216:
	.byte	3
	.word	42334
	.byte	29
	.byte	'__wchar_t',0,11,1,1
	.word	41724
	.byte	29
	.byte	'__size_t',0,11,1,1
	.word	409
	.byte	29
	.byte	'__ptrdiff_t',0,11,1,1
	.word	425
	.byte	30,1,3
	.word	42399
	.byte	29
	.byte	'__codeptr',0,11,1,1
	.word	42401
	.byte	29
	.byte	'boolean',0,12,101,29
	.word	432
	.byte	29
	.byte	'uint8',0,12,105,29
	.word	432
	.byte	29
	.byte	'uint16',0,12,109,29
	.word	449
	.byte	29
	.byte	'uint32',0,12,113,29
	.word	41030
	.byte	29
	.byte	'uint64',0,12,118,29
	.word	291
	.byte	29
	.byte	'sint16',0,12,126,29
	.word	41724
	.byte	7
	.byte	'long int',0,4,5,29
	.byte	'sint32',0,12,131,1,29
	.word	42514
	.byte	7
	.byte	'long long int',0,8,5,29
	.byte	'sint64',0,12,139,1,29
	.word	42542
	.byte	29
	.byte	'float32',0,12,168,1,29
	.word	237
	.byte	29
	.byte	'pvoid',0,13,57,28
	.word	323
	.byte	29
	.byte	'Ifx_TickTime',0,13,79,28
	.word	42542
	.byte	29
	.byte	'Ifx_SizeT',0,13,92,16
	.word	41724
	.byte	29
	.byte	'Ifx_Priority',0,13,103,16
	.word	449
	.byte	17,13,130,1,9,1,18
	.byte	'Ifx_RxSel_a',0,0,18
	.byte	'Ifx_RxSel_b',0,1,18
	.byte	'Ifx_RxSel_c',0,2,18
	.byte	'Ifx_RxSel_d',0,3,18
	.byte	'Ifx_RxSel_e',0,4,18
	.byte	'Ifx_RxSel_f',0,5,18
	.byte	'Ifx_RxSel_g',0,6,18
	.byte	'Ifx_RxSel_h',0,7,0,29
	.byte	'Ifx_RxSel',0,13,140,1,3
	.word	42666
	.byte	16
	.word	317
	.byte	3
	.word	42804
	.byte	28,13,143,1,9,8,13
	.byte	'module',0
	.word	42809
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	42514
	.byte	4,2,35,4,0,29
	.byte	'IfxModule_IndexMap',0,13,147,1,3
	.word	42814
	.byte	29
	.byte	'Ifx_ERAY_ACCEN0_Bits',0,8,79,3
	.word	37962
	.byte	29
	.byte	'Ifx_ERAY_ACCEN1_Bits',0,8,85,3
	.word	37872
	.byte	29
	.byte	'Ifx_ERAY_ACS_Bits',0,8,102,3
	.word	19534
	.byte	29
	.byte	'Ifx_ERAY_CCEV_Bits',0,8,112,3
	.word	18379
	.byte	29
	.byte	'Ifx_ERAY_CCSV_Bits',0,8,130,1,3
	.word	18091
	.byte	29
	.byte	'Ifx_ERAY_CLC_Bits',0,8,142,1,3
	.word	9380
	.byte	29
	.byte	'Ifx_ERAY_CREL_Bits',0,8,153,1,3
	.word	34159
	.byte	29
	.byte	'Ifx_ERAY_CUST1_Bits',0,8,170,1,3
	.word	9576
	.byte	29
	.byte	'Ifx_ERAY_CUST3_Bits',0,8,176,1,3
	.word	9984
	.byte	29
	.byte	'Ifx_ERAY_EIER_Bits',0,8,202,1,3
	.word	12878
	.byte	29
	.byte	'Ifx_ERAY_EIES_Bits',0,8,228,1,3
	.word	12445
	.byte	29
	.byte	'Ifx_ERAY_EILS_Bits',0,8,254,1,3
	.word	11567
	.byte	29
	.byte	'Ifx_ERAY_EIR_Bits',0,8,152,2,3
	.word	10729
	.byte	29
	.byte	'Ifx_ERAY_ENDN_Bits',0,8,158,2,3
	.word	34322
	.byte	29
	.byte	'Ifx_ERAY_ESID_Bits',0,8,168,2,3
	.word	19802
	.byte	29
	.byte	'Ifx_ERAY_FCL_Bits',0,8,175,2,3
	.word	20719
	.byte	29
	.byte	'Ifx_ERAY_FRF_Bits',0,8,187,2,3
	.word	20405
	.byte	29
	.byte	'Ifx_ERAY_FRFM_Bits',0,8,195,2,3
	.word	20591
	.byte	29
	.byte	'Ifx_ERAY_FSR_Bits',0,8,206,2,3
	.word	21276
	.byte	29
	.byte	'Ifx_ERAY_GTUC01_Bits',0,8,213,2,3
	.word	16371
	.byte	29
	.byte	'Ifx_ERAY_GTUC02_Bits',0,8,222,2,3
	.word	16477
	.byte	29
	.byte	'Ifx_ERAY_GTUC03_Bits',0,8,233,2,3
	.word	16622
	.byte	29
	.byte	'Ifx_ERAY_GTUC04_Bits',0,8,242,2,3
	.word	16801
	.byte	29
	.byte	'Ifx_ERAY_GTUC05_Bits',0,8,252,2,3
	.word	16946
	.byte	29
	.byte	'Ifx_ERAY_GTUC06_Bits',0,8,133,3,3
	.word	17098
	.byte	29
	.byte	'Ifx_ERAY_GTUC07_Bits',0,8,142,3,3
	.word	17243
	.byte	29
	.byte	'Ifx_ERAY_GTUC08_Bits',0,8,151,3,3
	.word	17388
	.byte	29
	.byte	'Ifx_ERAY_GTUC09_Bits',0,8,162,3,3
	.word	17532
	.byte	29
	.byte	'Ifx_ERAY_GTUC10_Bits',0,8,171,3,3
	.word	17715
	.byte	29
	.byte	'Ifx_ERAY_GTUC11_Bits',0,8,184,3,3
	.word	17860
	.byte	29
	.byte	'Ifx_ERAY_IBCM_Bits',0,8,197,3,3
	.word	35056
	.byte	29
	.byte	'Ifx_ERAY_IBCR_Bits',0,8,208,3,3
	.word	35266
	.byte	29
	.byte	'Ifx_ERAY_ID_Bits',0,8,216,3,3
	.word	9861
	.byte	29
	.byte	'Ifx_ERAY_ILE_Bits',0,8,224,3,3
	.word	14201
	.byte	29
	.byte	'Ifx_ERAY_KRST0_Bits',0,8,232,3,3
	.word	37748
	.byte	29
	.byte	'Ifx_ERAY_KRST1_Bits',0,8,239,3,3
	.word	37643
	.byte	29
	.byte	'Ifx_ERAY_KRSTCLR_Bits',0,8,246,3,3
	.word	37536
	.byte	29
	.byte	'Ifx_ERAY_LCK_Bits',0,8,254,3,3
	.word	10610
	.byte	29
	.byte	'Ifx_ERAY_LDTS_Bits',0,8,135,4,3
	.word	21131
	.byte	29
	.byte	'Ifx_ERAY_MBS_Bits',0,8,165,4,3
	.word	36296
	.byte	29
	.byte	'Ifx_ERAY_MBSC1_Bits',0,8,202,4,3
	.word	26487
	.byte	29
	.byte	'Ifx_ERAY_MBSC2_Bits',0,8,239,4,3
	.word	27089
	.byte	29
	.byte	'Ifx_ERAY_MBSC3_Bits',0,8,148,5,3
	.word	27701
	.byte	29
	.byte	'Ifx_ERAY_MBSC4_Bits',0,8,185,5,3
	.word	28313
	.byte	29
	.byte	'Ifx_ERAY_MHDC_Bits',0,8,194,5,3
	.word	16228
	.byte	29
	.byte	'Ifx_ERAY_MHDF_Bits',0,8,209,5,3
	.word	21450
	.byte	29
	.byte	'Ifx_ERAY_MHDS_Bits',0,8,228,5,3
	.word	20821
	.byte	29
	.byte	'Ifx_ERAY_MRC_Bits',0,8,239,5,3
	.word	20240
	.byte	29
	.byte	'Ifx_ERAY_MSIC1_Bits',0,8,148,6,3
	.word	31556
	.byte	29
	.byte	'Ifx_ERAY_MSIC2_Bits',0,8,185,6,3
	.word	32190
	.byte	29
	.byte	'Ifx_ERAY_MSIC3_Bits',0,8,222,6,3
	.word	32834
	.byte	29
	.byte	'Ifx_ERAY_MSIC4_Bits',0,8,131,7,3
	.word	33478
	.byte	29
	.byte	'Ifx_ERAY_MTCCV_Bits',0,8,140,7,3
	.word	18682
	.byte	29
	.byte	'Ifx_ERAY_NDAT1_Bits',0,8,177,7,3
	.word	24149
	.byte	29
	.byte	'Ifx_ERAY_NDAT2_Bits',0,8,214,7,3
	.word	24719
	.byte	29
	.byte	'Ifx_ERAY_NDAT3_Bits',0,8,251,7,3
	.word	25299
	.byte	29
	.byte	'Ifx_ERAY_NDAT4_Bits',0,8,160,8,3
	.word	25879
	.byte	29
	.byte	'Ifx_ERAY_NDIC1_Bits',0,8,197,8,3
	.word	28962
	.byte	29
	.byte	'Ifx_ERAY_NDIC2_Bits',0,8,234,8,3
	.word	29596
	.byte	29
	.byte	'Ifx_ERAY_NDIC3_Bits',0,8,143,9,3
	.word	30240
	.byte	29
	.byte	'Ifx_ERAY_NDIC4_Bits',0,8,180,9,3
	.word	30884
	.byte	29
	.byte	'Ifx_ERAY_NEMC_Bits',0,8,187,9,3
	.word	15722
	.byte	29
	.byte	'Ifx_ERAY_NMV_Bits',0,8,193,9,3
	.word	20140
	.byte	29
	.byte	'Ifx_ERAY_OBCM_Bits',0,8,204,9,3
	.word	36778
	.byte	29
	.byte	'Ifx_ERAY_OBCR_Bits',0,8,217,9,3
	.word	36954
	.byte	29
	.byte	'Ifx_ERAY_OCS_Bits',0,8,227,9,3
	.word	37375
	.byte	29
	.byte	'Ifx_ERAY_OCV_Bits',0,8,234,9,3
	.word	18930
	.byte	29
	.byte	'Ifx_ERAY_OSID_Bits',0,8,244,9,3
	.word	19971
	.byte	29
	.byte	'Ifx_ERAY_OTSS_Bits',0,8,255,9,3
	.word	37180
	.byte	29
	.byte	'Ifx_ERAY_PRTC1_Bits',0,8,140,10,3
	.word	15826
	.byte	29
	.byte	'Ifx_ERAY_PRTC2_Bits',0,8,152,10,3
	.word	16032
	.byte	29
	.byte	'Ifx_ERAY_RCV_Bits',0,8,159,10,3
	.word	18826
	.byte	29
	.byte	'Ifx_ERAY_RDDS_Bits',0,8,168,10,3
	.word	35455
	.byte	29
	.byte	'Ifx_ERAY_RDHS1_Bits',0,8,184,10,3
	.word	35600
	.byte	29
	.byte	'Ifx_ERAY_RDHS2_Bits',0,8,195,10,3
	.word	35858
	.byte	29
	.byte	'Ifx_ERAY_RDHS3_Bits',0,8,211,10,3
	.word	36040
	.byte	29
	.byte	'Ifx_ERAY_SCV_Bits',0,8,220,10,3
	.word	18538
	.byte	29
	.byte	'Ifx_ERAY_SFS_Bits',0,8,234,10,3
	.word	19034
	.byte	29
	.byte	'Ifx_ERAY_SIER_Bits',0,8,133,11,3
	.word	13756
	.byte	29
	.byte	'Ifx_ERAY_SIES_Bits',0,8,160,11,3
	.word	13311
	.byte	29
	.byte	'Ifx_ERAY_SILS_Bits',0,8,187,11,3
	.word	12000
	.byte	29
	.byte	'Ifx_ERAY_SIR_Bits',0,8,214,11,3
	.word	11143
	.byte	29
	.byte	'Ifx_ERAY_STPW1_Bits',0,8,231,11,3
	.word	14680
	.byte	29
	.byte	'Ifx_ERAY_STPW2_Bits',0,8,240,11,3
	.word	14962
	.byte	29
	.byte	'Ifx_ERAY_SUCC1_Bits',0,8,133,12,3
	.word	15119
	.byte	29
	.byte	'Ifx_ERAY_SUCC2_Bits',0,8,142,12,3
	.word	15459
	.byte	29
	.byte	'Ifx_ERAY_SUCC3_Bits',0,8,150,12,3
	.word	15602
	.byte	29
	.byte	'Ifx_ERAY_SWNIT_Bits',0,8,168,12,3
	.word	19251
	.byte	29
	.byte	'Ifx_ERAY_T0C_Bits',0,8,180,12,3
	.word	14323
	.byte	29
	.byte	'Ifx_ERAY_T1C_Bits',0,8,190,12,3
	.word	14521
	.byte	29
	.byte	'Ifx_ERAY_TEST1_Bits',0,8,212,12,3
	.word	10066
	.byte	29
	.byte	'Ifx_ERAY_TEST2_Bits',0,8,223,12,3
	.word	10428
	.byte	29
	.byte	'Ifx_ERAY_TXRQ1_Bits',0,8,132,13,3
	.word	21683
	.byte	29
	.byte	'Ifx_ERAY_TXRQ2_Bits',0,8,169,13,3
	.word	22285
	.byte	29
	.byte	'Ifx_ERAY_TXRQ3_Bits',0,8,206,13,3
	.word	22897
	.byte	29
	.byte	'Ifx_ERAY_TXRQ4_Bits',0,8,243,13,3
	.word	23509
	.byte	29
	.byte	'Ifx_ERAY_WRDS_Bits',0,8,252,13,3
	.word	34404
	.byte	29
	.byte	'Ifx_ERAY_WRHS1_Bits',0,8,140,14,3
	.word	34549
	.byte	29
	.byte	'Ifx_ERAY_WRHS2_Bits',0,8,149,14,3
	.word	34807
	.byte	29
	.byte	'Ifx_ERAY_WRHS3_Bits',0,8,156,14,3
	.word	34951
	.byte	29
	.byte	'Ifx_ERAY_ACCEN0',0,8,169,14,3
	.word	38492
	.byte	29
	.byte	'Ifx_ERAY_ACCEN1',0,8,177,14,3
	.word	37922
	.byte	29
	.byte	'Ifx_ERAY_ACS',0,8,185,14,3
	.word	19762
	.byte	29
	.byte	'Ifx_ERAY_CCEV',0,8,193,14,3
	.word	18498
	.byte	29
	.byte	'Ifx_ERAY_CCSV',0,8,201,14,3
	.word	18339
	.byte	29
	.byte	'Ifx_ERAY_CLC',0,8,209,14,3
	.word	9536
	.byte	29
	.byte	'Ifx_ERAY_CREL',0,8,217,14,3
	.word	34282
	.byte	29
	.byte	'Ifx_ERAY_CUST1',0,8,225,14,3
	.word	9821
	.byte	29
	.byte	'Ifx_ERAY_CUST3',0,8,233,14,3
	.word	10026
	.byte	29
	.byte	'Ifx_ERAY_EIER',0,8,241,14,3
	.word	13271
	.byte	29
	.byte	'Ifx_ERAY_EIES',0,8,249,14,3
	.word	12838
	.byte	29
	.byte	'Ifx_ERAY_EILS',0,8,129,15,3
	.word	11960
	.byte	29
	.byte	'Ifx_ERAY_EIR',0,8,137,15,3
	.word	11103
	.byte	29
	.byte	'Ifx_ERAY_ENDN',0,8,145,15,3
	.word	34364
	.byte	29
	.byte	'Ifx_ERAY_ESID',0,8,153,15,3
	.word	19922
	.byte	29
	.byte	'Ifx_ERAY_FCL',0,8,161,15,3
	.word	20781
	.byte	29
	.byte	'Ifx_ERAY_FRF',0,8,169,15,3
	.word	20551
	.byte	29
	.byte	'Ifx_ERAY_FRFM',0,8,177,15,3
	.word	20679
	.byte	29
	.byte	'Ifx_ERAY_FSR',0,8,185,15,3
	.word	21410
	.byte	29
	.byte	'Ifx_ERAY_GTUC01',0,8,193,15,3
	.word	16437
	.byte	29
	.byte	'Ifx_ERAY_GTUC02',0,8,201,15,3
	.word	16582
	.byte	29
	.byte	'Ifx_ERAY_GTUC03',0,8,209,15,3
	.word	16761
	.byte	29
	.byte	'Ifx_ERAY_GTUC04',0,8,217,15,3
	.word	16906
	.byte	29
	.byte	'Ifx_ERAY_GTUC05',0,8,225,15,3
	.word	17058
	.byte	29
	.byte	'Ifx_ERAY_GTUC06',0,8,233,15,3
	.word	17203
	.byte	29
	.byte	'Ifx_ERAY_GTUC07',0,8,241,15,3
	.word	17348
	.byte	29
	.byte	'Ifx_ERAY_GTUC08',0,8,249,15,3
	.word	17492
	.byte	29
	.byte	'Ifx_ERAY_GTUC09',0,8,129,16,3
	.word	17675
	.byte	29
	.byte	'Ifx_ERAY_GTUC10',0,8,137,16,3
	.word	17820
	.byte	29
	.byte	'Ifx_ERAY_GTUC11',0,8,145,16,3
	.word	18042
	.byte	29
	.byte	'Ifx_ERAY_IBCM',0,8,153,16,3
	.word	35226
	.byte	29
	.byte	'Ifx_ERAY_IBCR',0,8,161,16,3
	.word	35404
	.byte	29
	.byte	'Ifx_ERAY_ID',0,8,169,16,3
	.word	9944
	.byte	29
	.byte	'Ifx_ERAY_ILE',0,8,177,16,3
	.word	14283
	.byte	29
	.byte	'Ifx_ERAY_KRST0',0,8,185,16,3
	.word	37832
	.byte	29
	.byte	'Ifx_ERAY_KRST1',0,8,193,16,3
	.word	37708
	.byte	29
	.byte	'Ifx_ERAY_KRSTCLR',0,8,201,16,3
	.word	37603
	.byte	29
	.byte	'Ifx_ERAY_LCK',0,8,209,16,3
	.word	10689
	.byte	29
	.byte	'Ifx_ERAY_LDTS',0,8,217,16,3
	.word	21236
	.byte	29
	.byte	'Ifx_ERAY_MBS',0,8,225,16,3
	.word	36738
	.byte	29
	.byte	'Ifx_ERAY_MBSC1',0,8,233,16,3
	.word	27049
	.byte	29
	.byte	'Ifx_ERAY_MBSC2',0,8,241,16,3
	.word	27661
	.byte	29
	.byte	'Ifx_ERAY_MBSC3',0,8,249,16,3
	.word	28273
	.byte	29
	.byte	'Ifx_ERAY_MBSC4',0,8,129,17,3
	.word	28913
	.byte	29
	.byte	'Ifx_ERAY_MHDC',0,8,137,17,3
	.word	16331
	.byte	29
	.byte	'Ifx_ERAY_MHDF',0,8,145,17,3
	.word	21643
	.byte	29
	.byte	'Ifx_ERAY_MHDS',0,8,153,17,3
	.word	21091
	.byte	29
	.byte	'Ifx_ERAY_MRC',0,8,161,17,3
	.word	20365
	.byte	29
	.byte	'Ifx_ERAY_MSIC1',0,8,169,17,3
	.word	32150
	.byte	29
	.byte	'Ifx_ERAY_MSIC2',0,8,177,17,3
	.word	32794
	.byte	29
	.byte	'Ifx_ERAY_MSIC3',0,8,185,17,3
	.word	33438
	.byte	29
	.byte	'Ifx_ERAY_MSIC4',0,8,193,17,3
	.word	34110
	.byte	29
	.byte	'Ifx_ERAY_MTCCV',0,8,201,17,3
	.word	18786
	.byte	29
	.byte	'Ifx_ERAY_NDAT1',0,8,209,17,3
	.word	24679
	.byte	29
	.byte	'Ifx_ERAY_NDAT2',0,8,217,17,3
	.word	25259
	.byte	29
	.byte	'Ifx_ERAY_NDAT3',0,8,225,17,3
	.word	25839
	.byte	29
	.byte	'Ifx_ERAY_NDAT4',0,8,233,17,3
	.word	26447
	.byte	29
	.byte	'Ifx_ERAY_NDIC1',0,8,241,17,3
	.word	29556
	.byte	29
	.byte	'Ifx_ERAY_NDIC2',0,8,249,17,3
	.word	30200
	.byte	29
	.byte	'Ifx_ERAY_NDIC3',0,8,129,18,3
	.word	30844
	.byte	29
	.byte	'Ifx_ERAY_NDIC4',0,8,137,18,3
	.word	31516
	.byte	29
	.byte	'Ifx_ERAY_NEMC',0,8,145,18,3
	.word	15786
	.byte	29
	.byte	'Ifx_ERAY_NMV',0,8,153,18,3
	.word	20180
	.byte	29
	.byte	'Ifx_ERAY_OBCM',0,8,161,18,3
	.word	36914
	.byte	29
	.byte	'Ifx_ERAY_OBCR',0,8,169,18,3
	.word	37129
	.byte	29
	.byte	'Ifx_ERAY_OCS',0,8,177,18,3
	.word	37496
	.byte	29
	.byte	'Ifx_ERAY_OCV',0,8,185,18,3
	.word	18994
	.byte	29
	.byte	'Ifx_ERAY_OSID',0,8,193,18,3
	.word	20091
	.byte	29
	.byte	'Ifx_ERAY_OTSS',0,8,201,18,3
	.word	37326
	.byte	29
	.byte	'Ifx_ERAY_PRTC1',0,8,209,18,3
	.word	15992
	.byte	29
	.byte	'Ifx_ERAY_PRTC2',0,8,217,18,3
	.word	16188
	.byte	29
	.byte	'Ifx_ERAY_RCV',0,8,225,18,3
	.word	18890
	.byte	29
	.byte	'Ifx_ERAY_RDDS',0,8,233,18,3
	.word	35550
	.byte	29
	.byte	'Ifx_ERAY_RDHS1',0,8,241,18,3
	.word	35818
	.byte	29
	.byte	'Ifx_ERAY_RDHS2',0,8,249,18,3
	.word	36000
	.byte	29
	.byte	'Ifx_ERAY_RDHS3',0,8,129,19,3
	.word	36256
	.byte	29
	.byte	'Ifx_ERAY_SCV',0,8,137,19,3
	.word	18642
	.byte	29
	.byte	'Ifx_ERAY_SFS',0,8,145,19,3
	.word	19211
	.byte	29
	.byte	'Ifx_ERAY_SIER',0,8,153,19,3
	.word	14161
	.byte	29
	.byte	'Ifx_ERAY_SIES',0,8,161,19,3
	.word	13716
	.byte	29
	.byte	'Ifx_ERAY_SILS',0,8,169,19,3
	.word	12405
	.byte	29
	.byte	'Ifx_ERAY_SIR',0,8,177,19,3
	.word	11527
	.byte	29
	.byte	'Ifx_ERAY_STPW1',0,8,185,19,3
	.word	14922
	.byte	29
	.byte	'Ifx_ERAY_STPW2',0,8,193,19,3
	.word	15070
	.byte	29
	.byte	'Ifx_ERAY_SUCC1',0,8,201,19,3
	.word	15419
	.byte	29
	.byte	'Ifx_ERAY_SUCC2',0,8,209,19,3
	.word	15562
	.byte	29
	.byte	'Ifx_ERAY_SUCC3',0,8,217,19,3
	.word	15682
	.byte	29
	.byte	'Ifx_ERAY_SWNIT',0,8,225,19,3
	.word	19494
	.byte	29
	.byte	'Ifx_ERAY_T0C',0,8,233,19,3
	.word	14481
	.byte	29
	.byte	'Ifx_ERAY_T1C',0,8,241,19,3
	.word	14640
	.byte	29
	.byte	'Ifx_ERAY_TEST1',0,8,249,19,3
	.word	10388
	.byte	29
	.byte	'Ifx_ERAY_TEST2',0,8,129,20,3
	.word	10570
	.byte	29
	.byte	'Ifx_ERAY_TXRQ1',0,8,137,20,3
	.word	22245
	.byte	29
	.byte	'Ifx_ERAY_TXRQ2',0,8,145,20,3
	.word	22857
	.byte	29
	.byte	'Ifx_ERAY_TXRQ3',0,8,153,20,3
	.word	23469
	.byte	29
	.byte	'Ifx_ERAY_TXRQ4',0,8,161,20,3
	.word	24109
	.byte	29
	.byte	'Ifx_ERAY_WRDS',0,8,169,20,3
	.word	34499
	.byte	29
	.byte	'Ifx_ERAY_WRHS1',0,8,177,20,3
	.word	34767
	.byte	29
	.byte	'Ifx_ERAY_WRHS2',0,8,185,20,3
	.word	34911
	.byte	29
	.byte	'Ifx_ERAY_WRHS3',0,8,193,20,3
	.word	35016
	.byte	16
	.word	38543
	.byte	29
	.byte	'Ifx_ERAY',0,8,195,21,3
	.word	48074
	.byte	29
	.byte	'IfxEray_Index',0,10,86,3
	.word	41061
	.byte	17,10,90,9,1,18
	.byte	'IfxEray_NodeId_none',0,127,18
	.byte	'IfxEray_NodeId_a',0,0,18
	.byte	'IfxEray_NodeId_b',0,1,0,29
	.byte	'IfxEray_NodeId',0,10,95,3
	.word	48119
	.byte	14,8
	.word	42814
	.byte	15,0,0,19
	.word	48208
	.byte	31
	.byte	'IfxEray_cfg_indexMap',0,10,106,41
	.word	48217
	.byte	1,1,29
	.byte	'Ifx_P_ACCEN0_Bits',0,4,79,3
	.word	7049
	.byte	29
	.byte	'Ifx_P_ACCEN1_Bits',0,4,85,3
	.word	6962
	.byte	29
	.byte	'Ifx_P_ESR_Bits',0,4,107,3
	.word	3305
	.byte	29
	.byte	'Ifx_P_ID_Bits',0,4,115,3
	.word	1358
	.byte	29
	.byte	'Ifx_P_IN_Bits',0,4,137,1,3
	.word	2353
	.byte	29
	.byte	'Ifx_P_IOCR0_Bits',0,4,150,1,3
	.word	1486
	.byte	29
	.byte	'Ifx_P_IOCR12_Bits',0,4,163,1,3
	.word	2133
	.byte	29
	.byte	'Ifx_P_IOCR4_Bits',0,4,176,1,3
	.word	1701
	.byte	29
	.byte	'Ifx_P_IOCR8_Bits',0,4,189,1,3
	.word	1916
	.byte	29
	.byte	'Ifx_P_LPCR0_Bits',0,4,197,1,3
	.word	6321
	.byte	29
	.byte	'Ifx_P_LPCR1_Bits',0,4,205,1,3
	.word	6445
	.byte	29
	.byte	'Ifx_P_LPCR1_P21_Bits',0,4,215,1,3
	.word	6529
	.byte	29
	.byte	'Ifx_P_LPCR2_Bits',0,4,229,1,3
	.word	6709
	.byte	29
	.byte	'Ifx_P_OMCR0_Bits',0,4,240,1,3
	.word	4960
	.byte	29
	.byte	'Ifx_P_OMCR12_Bits',0,4,250,1,3
	.word	5484
	.byte	29
	.byte	'Ifx_P_OMCR4_Bits',0,4,133,2,3
	.word	5134
	.byte	29
	.byte	'Ifx_P_OMCR8_Bits',0,4,144,2,3
	.word	5308
	.byte	29
	.byte	'Ifx_P_OMCR_Bits',0,4,166,2,3
	.word	5973
	.byte	29
	.byte	'Ifx_P_OMR_Bits',0,4,203,2,3
	.word	787
	.byte	29
	.byte	'Ifx_P_OMSR0_Bits',0,4,213,2,3
	.word	4297
	.byte	29
	.byte	'Ifx_P_OMSR12_Bits',0,4,224,2,3
	.word	4785
	.byte	29
	.byte	'Ifx_P_OMSR4_Bits',0,4,235,2,3
	.word	4444
	.byte	29
	.byte	'Ifx_P_OMSR8_Bits',0,4,246,2,3
	.word	4613
	.byte	29
	.byte	'Ifx_P_OMSR_Bits',0,4,140,3,3
	.word	5640
	.byte	29
	.byte	'Ifx_P_OUT_Bits',0,4,162,3,3
	.word	471
	.byte	29
	.byte	'Ifx_P_PCSR_Bits',0,4,180,3,3
	.word	4011
	.byte	29
	.byte	'Ifx_P_PDISC_Bits',0,4,202,3,3
	.word	3645
	.byte	29
	.byte	'Ifx_P_PDR0_Bits',0,4,223,3,3
	.word	2676
	.byte	29
	.byte	'Ifx_P_PDR1_Bits',0,4,244,3,3
	.word	2980
	.byte	29
	.byte	'Ifx_P_ACCEN0',0,4,129,4,3
	.word	7576
	.byte	29
	.byte	'Ifx_P_ACCEN1',0,4,137,4,3
	.word	7009
	.byte	29
	.byte	'Ifx_P_ESR',0,4,145,4,3
	.word	3596
	.byte	29
	.byte	'Ifx_P_ID',0,4,153,4,3
	.word	1437
	.byte	29
	.byte	'Ifx_P_IN',0,4,161,4,3
	.word	2627
	.byte	29
	.byte	'Ifx_P_IOCR0',0,4,169,4,3
	.word	1661
	.byte	29
	.byte	'Ifx_P_IOCR12',0,4,177,4,3
	.word	2313
	.byte	29
	.byte	'Ifx_P_IOCR4',0,4,185,4,3
	.word	1876
	.byte	29
	.byte	'Ifx_P_IOCR8',0,4,193,4,3
	.word	2093
	.byte	29
	.byte	'Ifx_P_LPCR0',0,4,201,4,3
	.word	6405
	.byte	29
	.byte	'Ifx_P_LPCR1',0,4,210,4,3
	.word	6654
	.byte	29
	.byte	'Ifx_P_LPCR2',0,4,218,4,3
	.word	6913
	.byte	29
	.byte	'Ifx_P_OMCR',0,4,226,4,3
	.word	6281
	.byte	29
	.byte	'Ifx_P_OMCR0',0,4,234,4,3
	.word	5094
	.byte	29
	.byte	'Ifx_P_OMCR12',0,4,242,4,3
	.word	5600
	.byte	29
	.byte	'Ifx_P_OMCR4',0,4,250,4,3
	.word	5268
	.byte	29
	.byte	'Ifx_P_OMCR8',0,4,130,5,3
	.word	5444
	.byte	29
	.byte	'Ifx_P_OMR',0,4,138,5,3
	.word	1318
	.byte	29
	.byte	'Ifx_P_OMSR',0,4,146,5,3
	.word	5933
	.byte	29
	.byte	'Ifx_P_OMSR0',0,4,154,5,3
	.word	4404
	.byte	29
	.byte	'Ifx_P_OMSR12',0,4,162,5,3
	.word	4920
	.byte	29
	.byte	'Ifx_P_OMSR4',0,4,170,5,3
	.word	4573
	.byte	29
	.byte	'Ifx_P_OMSR8',0,4,178,5,3
	.word	4745
	.byte	29
	.byte	'Ifx_P_OUT',0,4,186,5,3
	.word	747
	.byte	29
	.byte	'Ifx_P_PCSR',0,4,194,5,3
	.word	4257
	.byte	29
	.byte	'Ifx_P_PDISC',0,4,202,5,3
	.word	3971
	.byte	29
	.byte	'Ifx_P_PDR0',0,4,210,5,3
	.word	2940
	.byte	29
	.byte	'Ifx_P_PDR1',0,4,218,5,3
	.word	3256
	.byte	16
	.word	7616
	.byte	29
	.byte	'Ifx_P',0,4,139,6,3
	.word	49571
	.byte	17,14,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,29
	.byte	'IfxScu_WDTCON1_IR',0,14,255,10,3
	.word	49591
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,15,45,16,4,11
	.byte	'EN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN0_Bits',0,15,79,3
	.word	49713
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,15,82,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1_Bits',0,15,85,3
	.word	50270
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,15,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	409
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,15,94,3
	.word	50347
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,15,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	432
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	432
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	432
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	432
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	432
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,15,111,3
	.word	50483
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,15,114,16,4,11
	.byte	'CANDIV',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	432
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	432
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	432
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	432
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,15,126,3
	.word	50763
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,15,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,15,135,1,3
	.word	51001
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,15,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	432
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,15,150,1,3
	.word	51129
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,15,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	432
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	432
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,15,165,1,3
	.word	51372
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,15,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,15,174,1,3
	.word	51607
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,15,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	409
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,15,181,1,3
	.word	51735
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,15,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	409
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,15,188,1,3
	.word	51835
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,15,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	432
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	432
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	432
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,15,202,1,3
	.word	51935
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,15,205,1,16,4,11
	.byte	'PWD',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	409
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCON_Bits',0,15,213,1,3
	.word	52143
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,15,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	449
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSLIM_Bits',0,15,225,1,3
	.word	52308
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,15,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,15,235,1,3
	.word	52491
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,15,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	432
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	409
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	432
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	432
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,15,129,2,3
	.word	52645
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,15,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,15,143,2,3
	.word	53009
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,15,146,2,16,4,11
	.byte	'POL',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	449
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	432
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	432
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,15,159,2,3
	.word	53220
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,15,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	449
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	409
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG_Bits',0,15,167,2,3
	.word	53472
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,15,170,2,16,4,11
	.byte	'ARI',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,15,175,2,3
	.word	53590
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,15,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR13CON_Bits',0,15,185,2,3
	.word	53701
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,15,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	409
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVR33CON_Bits',0,15,195,2,3
	.word	53864
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,15,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,15,205,2,3
	.word	54027
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,15,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,15,215,2,3
	.word	54185
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,15,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	432
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	432
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	432
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	432
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	449
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,15,232,2,3
	.word	54350
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,15,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	432
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	432
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	449
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	432
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,15,245,2,3
	.word	54679
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,15,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVROVMON_Bits',0,15,255,2,3
	.word	54900
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,15,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,15,142,3,3
	.word	55063
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,15,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,15,152,3,3
	.word	55335
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,15,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,15,162,3,3
	.word	55488
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,15,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,15,172,3,3
	.word	55644
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,15,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,15,181,3,3
	.word	55806
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,15,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,15,191,3,3
	.word	55949
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,15,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,15,200,3,3
	.word	56114
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,15,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	449
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,15,211,3,3
	.word	56259
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,15,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	432
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,15,222,3,3
	.word	56440
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,15,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,15,232,3,3
	.word	56614
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,15,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	409
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,15,241,3,3
	.word	56774
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,15,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	409
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,15,130,4,3
	.word	56918
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,15,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,15,139,4,3
	.word	57192
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,15,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,15,149,4,3
	.word	57331
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,15,152,4,16,4,11
	.byte	'EN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	432
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	449
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	432
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	432
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	432
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,15,163,4,3
	.word	57494
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,15,166,4,16,4,11
	.byte	'STEP',0,2
	.word	449
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	432
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	449
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,15,174,4,3
	.word	57712
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,15,177,4,16,4,11
	.byte	'FS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,15,197,4,3
	.word	57875
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,15,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,15,205,4,3
	.word	58211
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,15,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	432
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,15,232,4,3
	.word	58318
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,15,235,4,16,4,11
	.byte	'P0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,15,240,4,3
	.word	58770
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,15,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	432
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,15,250,4,3
	.word	58869
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,15,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	449
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,15,131,5,3
	.word	59019
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,15,134,5,16,4,11
	.byte	'SEED',0,4
	.word	409
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,15,141,5,3
	.word	59168
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,15,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	409
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,15,149,5,3
	.word	59329
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,15,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	449
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	449
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON_Bits',0,15,158,5,3
	.word	59459
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,15,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,15,166,5,3
	.word	59591
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,15,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	432
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	449
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,15,174,5,3
	.word	59706
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,15,177,5,16,4,11
	.byte	'PS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	449
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	449
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,15,185,5,3
	.word	59817
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,15,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	432
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	432
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	432
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	432
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,15,209,5,3
	.word	59975
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,15,212,5,16,4,11
	.byte	'P0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,15,217,5,3
	.word	60387
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,15,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	449
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,15,233,5,3
	.word	60488
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,15,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	409
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,15,242,5,3
	.word	60755
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,15,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,15,250,5,3
	.word	60891
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,15,253,5,16,4,11
	.byte	'PD0',0,1
	.word	432
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	432
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,15,132,6,3
	.word	61002
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,15,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,15,146,6,3
	.word	61135
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,15,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	449
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	432
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLCON0_Bits',0,15,166,6,3
	.word	61338
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,15,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	432
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON1_Bits',0,15,177,6,3
	.word	61694
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,15,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	449
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLCON2_Bits',0,15,184,6,3
	.word	61872
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,15,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	449
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	432
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	432
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	432
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,15,204,6,3
	.word	61972
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,15,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	432
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	432
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	432
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	9,0,2,35,2,0,29
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,15,215,6,3
	.word	62342
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,15,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	409
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,15,227,6,3
	.word	62528
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,15,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	409
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,15,241,6,3
	.word	62726
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,15,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	432
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	409
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR_Bits',0,15,251,6,3
	.word	62959
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,15,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	432
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	432
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	432
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	432
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	432
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,15,153,7,3
	.word	63111
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,15,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	432
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	432
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	432
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	432
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,15,170,7,3
	.word	63678
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,15,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	432
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	432
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	432
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	432
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	432
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	432
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	432
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,15,187,7,3
	.word	63972
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,15,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	432
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	432
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	432
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	432
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	432
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	449
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	432
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	432
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,15,214,7,3
	.word	64250
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,15,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	449
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,15,230,7,3
	.word	64746
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,15,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	449
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	432
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	432
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	432
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,15,243,7,3
	.word	65059
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,15,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	432
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	432
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	432
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	432
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	432
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,15,129,8,3
	.word	65268
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,15,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	432
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	432
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	432
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	432
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	432
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	432
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	432
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,15,155,8,3
	.word	65479
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,15,158,8,16,4,11
	.byte	'HBT',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	409
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON_Bits',0,15,162,8,3
	.word	65911
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,15,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	432
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	432
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	432
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	432
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	432
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	432
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	432
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	432
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	432
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	432
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	432
	.byte	7,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,15,178,8,3
	.word	66007
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,15,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	409
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,15,186,8,3
	.word	66267
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,15,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	432
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	432
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	409
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,15,198,8,3
	.word	66392
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,15,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,15,208,8,3
	.word	66589
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,15,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,15,218,8,3
	.word	66742
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,15,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,15,228,8,3
	.word	66895
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,15,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	409
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,15,238,8,3
	.word	67048
	.byte	7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,15,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	67203
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	67203
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	67203
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	67203
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,15,247,8,3
	.word	67219
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,15,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	432
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	432
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,15,134,9,3
	.word	67349
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,15,137,9,16,4,11
	.byte	'AE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	432
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,15,150,9,3
	.word	67587
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,15,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	67203
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	67203
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	67203
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	67203
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,15,159,9,3
	.word	67810
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,15,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	432
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,15,175,9,3
	.word	67936
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,15,178,9,16,4,11
	.byte	'AE',0,1
	.word	432
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	432
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	432
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	432
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	432
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	432
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	432
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	432
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	432
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	432
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	449
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,15,191,9,3
	.word	68188
	.byte	12,15,199,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49713
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN0',0,15,204,9,3
	.word	68407
	.byte	12,15,207,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50270
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN1',0,15,212,9,3
	.word	68471
	.byte	12,15,215,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50347
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,15,220,9,3
	.word	68535
	.byte	12,15,223,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50483
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,15,228,9,3
	.word	68600
	.byte	12,15,231,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50763
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,15,236,9,3
	.word	68665
	.byte	12,15,239,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51001
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,15,244,9,3
	.word	68730
	.byte	12,15,247,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51129
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,15,252,9,3
	.word	68795
	.byte	12,15,255,9,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51372
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,15,132,10,3
	.word	68860
	.byte	12,15,135,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51607
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,15,140,10,3
	.word	68925
	.byte	12,15,143,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51735
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,15,148,10,3
	.word	68990
	.byte	12,15,151,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51835
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,15,156,10,3
	.word	69055
	.byte	12,15,159,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51935
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,15,164,10,3
	.word	69120
	.byte	12,15,167,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52143
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCON',0,15,172,10,3
	.word	69184
	.byte	12,15,175,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52308
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSLIM',0,15,180,10,3
	.word	69248
	.byte	12,15,183,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52491
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSSTAT',0,15,188,10,3
	.word	69312
	.byte	12,15,191,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52645
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,15,196,10,3
	.word	69377
	.byte	12,15,199,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53009
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,15,204,10,3
	.word	69439
	.byte	12,15,207,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53220
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,15,212,10,3
	.word	69501
	.byte	12,15,215,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53472
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFG',0,15,220,10,3
	.word	69563
	.byte	12,15,223,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53590
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,15,228,10,3
	.word	69627
	.byte	12,15,231,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53701
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR13CON',0,15,236,10,3
	.word	69692
	.byte	12,15,239,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53864
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVR33CON',0,15,244,10,3
	.word	69758
	.byte	12,15,247,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54027
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRADCSTAT',0,15,252,10,3
	.word	69824
	.byte	12,15,255,10,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54185
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRDVSTAT',0,15,132,11,3
	.word	69892
	.byte	12,15,135,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54350
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRMONCTRL',0,15,140,11,3
	.word	69959
	.byte	12,15,143,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54679
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROSCCTRL',0,15,148,11,3
	.word	70027
	.byte	12,15,151,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	54900
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVROVMON',0,15,156,11,3
	.word	70095
	.byte	12,15,159,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55063
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRRSTCON',0,15,164,11,3
	.word	70161
	.byte	12,15,167,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55335
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,15,172,11,3
	.word	70228
	.byte	12,15,175,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55488
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,15,180,11,3
	.word	70297
	.byte	12,15,183,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55644
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,15,188,11,3
	.word	70366
	.byte	12,15,191,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55806
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,15,196,11,3
	.word	70435
	.byte	12,15,199,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	55949
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,15,204,11,3
	.word	70504
	.byte	12,15,207,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56114
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,15,212,11,3
	.word	70573
	.byte	12,15,215,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56259
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL1',0,15,220,11,3
	.word	70642
	.byte	12,15,223,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56440
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL2',0,15,228,11,3
	.word	70710
	.byte	12,15,231,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56614
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL3',0,15,236,11,3
	.word	70778
	.byte	12,15,239,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56774
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSDCTRL4',0,15,244,11,3
	.word	70846
	.byte	12,15,247,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56918
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRSTAT',0,15,252,11,3
	.word	70914
	.byte	12,15,255,11,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57192
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRTRIM',0,15,132,12,3
	.word	70979
	.byte	12,15,135,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57331
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EVRUVMON',0,15,140,12,3
	.word	71044
	.byte	12,15,143,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57494
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,15,148,12,3
	.word	71110
	.byte	12,15,151,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57712
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,15,156,12,3
	.word	71174
	.byte	12,15,159,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57875
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,15,164,12,3
	.word	71235
	.byte	12,15,167,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58211
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,15,172,12,3
	.word	71296
	.byte	12,15,175,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58318
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,15,180,12,3
	.word	71356
	.byte	12,15,183,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58770
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,15,188,12,3
	.word	71418
	.byte	12,15,191,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58869
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,15,196,12,3
	.word	71478
	.byte	12,15,199,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59019
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,15,204,12,3
	.word	71540
	.byte	12,15,207,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59168
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,15,212,12,3
	.word	71608
	.byte	12,15,215,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59329
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,15,220,12,3
	.word	71676
	.byte	12,15,223,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59459
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON',0,15,228,12,3
	.word	71744
	.byte	12,15,231,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59591
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,15,236,12,3
	.word	71808
	.byte	12,15,239,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59706
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,15,244,12,3
	.word	71873
	.byte	12,15,247,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59817
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,15,252,12,3
	.word	71936
	.byte	12,15,255,12,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59975
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,15,132,13,3
	.word	71997
	.byte	12,15,135,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60387
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,15,140,13,3
	.word	72061
	.byte	12,15,143,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60488
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,15,148,13,3
	.word	72122
	.byte	12,15,151,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60755
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,15,156,13,3
	.word	72186
	.byte	12,15,159,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60891
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,15,164,13,3
	.word	72253
	.byte	12,15,167,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61002
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,15,172,13,3
	.word	72316
	.byte	12,15,175,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61135
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,15,180,13,3
	.word	72377
	.byte	12,15,183,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61338
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON0',0,15,188,13,3
	.word	72439
	.byte	12,15,191,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61694
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON1',0,15,196,13,3
	.word	72504
	.byte	12,15,199,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61872
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLCON2',0,15,204,13,3
	.word	72569
	.byte	12,15,207,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61972
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON0',0,15,212,13,3
	.word	72634
	.byte	12,15,215,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62342
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYCON1',0,15,220,13,3
	.word	72703
	.byte	12,15,223,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62528
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLERAYSTAT',0,15,228,13,3
	.word	72772
	.byte	12,15,231,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62726
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PLLSTAT',0,15,236,13,3
	.word	72841
	.byte	12,15,239,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62959
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR',0,15,244,13,3
	.word	72906
	.byte	12,15,247,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63111
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR0',0,15,252,13,3
	.word	72969
	.byte	12,15,255,13,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63678
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,15,132,14,3
	.word	73034
	.byte	12,15,135,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63972
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR2',0,15,140,14,3
	.word	73099
	.byte	12,15,143,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64250
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTAT',0,15,148,14,3
	.word	73164
	.byte	12,15,151,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64746
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWSTATCLR',0,15,156,14,3
	.word	73230
	.byte	12,15,159,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65268
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,15,164,14,3
	.word	73299
	.byte	12,15,167,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65059
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,15,172,14,3
	.word	73363
	.byte	12,15,175,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65479
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,15,180,14,3
	.word	73428
	.byte	12,15,183,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65911
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SAFECON',0,15,188,14,3
	.word	73493
	.byte	12,15,191,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66007
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,15,196,14,3
	.word	73558
	.byte	12,15,199,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66267
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,15,204,14,3
	.word	73622
	.byte	12,15,207,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66392
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,15,212,14,3
	.word	73688
	.byte	12,15,215,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66589
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,15,220,14,3
	.word	73752
	.byte	12,15,223,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66742
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS',0,15,228,14,3
	.word	73817
	.byte	12,15,231,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66895
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,15,236,14,3
	.word	73882
	.byte	12,15,239,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67048
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,15,244,14,3
	.word	73947
	.byte	12,15,247,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67219
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,15,252,14,3
	.word	74013
	.byte	12,15,255,14,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67349
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,15,132,15,3
	.word	74082
	.byte	12,15,135,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67587
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTCPU_SR',0,15,140,15,3
	.word	74151
	.byte	12,15,143,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67810
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,15,148,15,3
	.word	74218
	.byte	12,15,151,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67936
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,15,156,15,3
	.word	74285
	.byte	12,15,159,15,9,4,13
	.byte	'U',0
	.word	409
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	425
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68188
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,15,164,15,3
	.word	74352
	.byte	10
	.byte	'_Ifx_SCU_WDTCPU',0,15,175,15,25,12,13
	.byte	'CON0',0
	.word	74013
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	74082
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	74151
	.byte	4,2,35,8,0,16
	.word	74417
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,15,180,15,3
	.word	74480
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,15,183,15,25,12,13
	.byte	'CON0',0
	.word	74218
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	74285
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	74352
	.byte	4,2,35,8,0,16
	.word	74509
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,15,188,15,3
	.word	74570
	.byte	29
	.byte	'IfxPort_InputMode',0,3,89,3
	.word	8229
	.byte	29
	.byte	'IfxPort_OutputIdx',0,3,130,1,3
	.word	8504
	.byte	29
	.byte	'IfxPort_OutputMode',0,3,138,1,3
	.word	8434
	.byte	17,3,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,29
	.byte	'IfxPort_PadDriver',0,3,158,1,3
	.word	74678
	.byte	29
	.byte	'IfxPort_State',0,3,178,1,3
	.word	8817
	.byte	28,3,190,1,9,8,13
	.byte	'port',0
	.word	8224
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	432
	.byte	1,2,35,4,0,29
	.byte	'IfxPort_Pin',0,3,194,1,3
	.word	75143
	.byte	28,16,59,15,20,13
	.byte	'module',0
	.word	40501
	.byte	4,2,35,0,13
	.byte	'nodeId',0
	.word	48119
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	75143
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	42666
	.byte	1,2,35,16,0,19
	.word	75203
	.byte	29
	.byte	'IfxEray_Rxd_In',0,16,65,3
	.word	75270
	.byte	28,16,68,15,20,13
	.byte	'module',0
	.word	40501
	.byte	4,2,35,0,13
	.byte	'nodeId',0
	.word	48119
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	75143
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	8504
	.byte	1,2,35,16,0,19
	.word	75298
	.byte	29
	.byte	'IfxEray_Txd_Out',0,16,74,3
	.word	75365
	.byte	28,16,77,15,20,13
	.byte	'module',0
	.word	40501
	.byte	4,2,35,0,13
	.byte	'nodeId',0
	.word	48119
	.byte	1,2,35,4,13
	.byte	'pin',0
	.word	75143
	.byte	8,2,35,8,13
	.byte	'select',0
	.word	8504
	.byte	1,2,35,16,0,19
	.word	75394
	.byte	29
	.byte	'IfxEray_Txen_Out',0,16,83,3
	.word	75461
	.byte	17,17,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0,29
	.byte	'IfxSrc_Tos',0,17,74,3
	.word	75491
	.byte	29
	.byte	'Ifx_SRC_SRCR_Bits',0,6,62,3
	.word	8998
	.byte	29
	.byte	'Ifx_SRC_SRCR',0,6,75,3
	.word	9288
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,6,86,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	75616
	.byte	29
	.byte	'Ifx_SRC_AGBT',0,6,89,3
	.word	75648
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,6,92,25,12,13
	.byte	'TX',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,8,0,16
	.word	75674
	.byte	29
	.byte	'Ifx_SRC_ASCLIN',0,6,97,3
	.word	75733
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,6,100,25,4,13
	.byte	'SBSRC',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	75761
	.byte	29
	.byte	'Ifx_SRC_BCUSPB',0,6,103,3
	.word	75798
	.byte	14,64
	.word	9288
	.byte	15,15,0,10
	.byte	'_Ifx_SRC_CAN',0,6,106,25,64,13
	.byte	'INT',0
	.word	75826
	.byte	64,2,35,0,0,16
	.word	75835
	.byte	29
	.byte	'Ifx_SRC_CAN',0,6,109,3
	.word	75867
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,6,112,25,16,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	9288
	.byte	4,2,35,12,0,16
	.word	75892
	.byte	29
	.byte	'Ifx_SRC_CCU6',0,6,118,3
	.word	75964
	.byte	14,8
	.word	9288
	.byte	15,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,6,121,25,8,13
	.byte	'SR',0
	.word	75990
	.byte	8,2,35,0,0,16
	.word	75999
	.byte	29
	.byte	'Ifx_SRC_CERBERUS',0,6,124,3
	.word	76035
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,6,127,25,16,13
	.byte	'MI',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	9288
	.byte	4,2,35,12,0,16
	.word	76065
	.byte	29
	.byte	'Ifx_SRC_CIF',0,6,133,1,3
	.word	76138
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,6,136,1,25,4,13
	.byte	'SBSRC',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	76164
	.byte	29
	.byte	'Ifx_SRC_CPU',0,6,139,1,3
	.word	76199
	.byte	14,192,1
	.word	9288
	.byte	15,47,0,10
	.byte	'_Ifx_SRC_DMA',0,6,142,1,25,208,1,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	3636
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	76225
	.byte	192,1,2,35,16,0,16
	.word	76235
	.byte	29
	.byte	'Ifx_SRC_DMA',0,6,147,1,3
	.word	76302
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,6,150,1,25,8,13
	.byte	'SRM',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	9288
	.byte	4,2,35,4,0,16
	.word	76328
	.byte	29
	.byte	'Ifx_SRC_DSADC',0,6,154,1,3
	.word	76376
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,6,157,1,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	76404
	.byte	29
	.byte	'Ifx_SRC_EMEM',0,6,160,1,3
	.word	76437
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,6,163,1,25,80,13
	.byte	'INT',0
	.word	75990
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	75990
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	75990
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	75990
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	9288
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	9288
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	34150
	.byte	40,2,35,40,0,16
	.word	76464
	.byte	29
	.byte	'Ifx_SRC_ERAY',0,6,172,1,3
	.word	76591
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,6,175,1,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	76618
	.byte	29
	.byte	'Ifx_SRC_ETH',0,6,178,1,3
	.word	76650
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,6,181,1,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	76676
	.byte	29
	.byte	'Ifx_SRC_FCE',0,6,184,1,3
	.word	76708
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,6,187,1,25,12,13
	.byte	'DONE',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	9288
	.byte	4,2,35,8,0,16
	.word	76734
	.byte	29
	.byte	'Ifx_SRC_FFT',0,6,192,1,3
	.word	76794
	.byte	14,16
	.word	432
	.byte	15,15,0,10
	.byte	'_Ifx_SRC_GPSR',0,6,195,1,25,32,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	9288
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	76820
	.byte	16,2,35,16,0,16
	.word	76829
	.byte	29
	.byte	'Ifx_SRC_GPSR',0,6,202,1,3
	.word	76923
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,6,205,1,25,48,13
	.byte	'CIRQ',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	9288
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	9288
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	9288
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	2667
	.byte	24,2,35,24,0,16
	.word	76950
	.byte	29
	.byte	'Ifx_SRC_GPT12',0,6,214,1,3
	.word	77067
	.byte	14,12
	.word	9288
	.byte	15,2,0,14,32
	.word	9288
	.byte	15,7,0,14,32
	.word	77104
	.byte	15,0,0,14,108
	.word	9288
	.byte	15,26,0,14,96
	.word	432
	.byte	15,95,0,14,96
	.word	77104
	.byte	15,2,0,14,160,3
	.word	432
	.byte	15,159,3,0,14,64
	.word	77104
	.byte	15,1,0,14,192,3
	.word	432
	.byte	15,191,3,0,14,16
	.word	9288
	.byte	15,3,0,14,64
	.word	77180
	.byte	15,3,0,14,192,2
	.word	432
	.byte	15,191,2,0,10
	.byte	'_Ifx_SRC_GTM',0,6,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	77095
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	1477
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	9288
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	9288
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	75990
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	3296
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	77113
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	28953
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	77122
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	77131
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	9288
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	3636
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	77140
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	77149
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	77140
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	77149
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	77160
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	77169
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	77189
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	77198
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	77095
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	18082
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	77095
	.byte	12,3,35,192,18,0,16
	.word	77209
	.byte	29
	.byte	'Ifx_SRC_GTM',0,6,243,1,3
	.word	77669
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,6,246,1,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	77695
	.byte	29
	.byte	'Ifx_SRC_HSCT',0,6,249,1,3
	.word	77728
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,6,252,1,25,16,13
	.byte	'COK',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	9288
	.byte	4,2,35,12,0,16
	.word	77755
	.byte	29
	.byte	'Ifx_SRC_HSSL',0,6,130,2,3
	.word	77828
	.byte	14,56
	.word	432
	.byte	15,55,0,10
	.byte	'_Ifx_SRC_I2C',0,6,133,2,25,80,13
	.byte	'BREQ',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	9288
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	9288
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	77855
	.byte	56,2,35,24,0,16
	.word	77864
	.byte	29
	.byte	'Ifx_SRC_I2C',0,6,142,2,3
	.word	77987
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,6,145,2,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	78013
	.byte	29
	.byte	'Ifx_SRC_LMU',0,6,148,2,3
	.word	78045
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,6,151,2,25,20,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	9288
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	9288
	.byte	4,2,35,16,0,16
	.word	78071
	.byte	29
	.byte	'Ifx_SRC_MSC',0,6,158,2,3
	.word	78156
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,6,161,2,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	78182
	.byte	29
	.byte	'Ifx_SRC_PMU',0,6,164,2,3
	.word	78214
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,6,167,2,25,32,13
	.byte	'SR',0
	.word	77104
	.byte	32,2,35,0,0,16
	.word	78240
	.byte	29
	.byte	'Ifx_SRC_PSI5',0,6,170,2,3
	.word	78273
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,6,173,2,25,32,13
	.byte	'SR',0
	.word	77104
	.byte	32,2,35,0,0,16
	.word	78300
	.byte	29
	.byte	'Ifx_SRC_PSI5S',0,6,176,2,3
	.word	78334
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,6,179,2,25,24,13
	.byte	'TX',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	9288
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	9288
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	9288
	.byte	4,2,35,20,0,16
	.word	78362
	.byte	29
	.byte	'Ifx_SRC_QSPI',0,6,187,2,3
	.word	78455
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,6,190,2,25,4,13
	.byte	'SR',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	78482
	.byte	29
	.byte	'Ifx_SRC_SCR',0,6,193,2,3
	.word	78514
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,6,196,2,25,20,13
	.byte	'DTS',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	77180
	.byte	16,2,35,4,0,16
	.word	78540
	.byte	29
	.byte	'Ifx_SRC_SCU',0,6,200,2,3
	.word	78586
	.byte	14,24
	.word	9288
	.byte	15,5,0,10
	.byte	'_Ifx_SRC_SENT',0,6,203,2,25,24,13
	.byte	'SR',0
	.word	78612
	.byte	24,2,35,0,0,16
	.word	78621
	.byte	29
	.byte	'Ifx_SRC_SENT',0,6,206,2,3
	.word	78654
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,6,209,2,25,12,13
	.byte	'SR',0
	.word	77095
	.byte	12,2,35,0,0,16
	.word	78681
	.byte	29
	.byte	'Ifx_SRC_SMU',0,6,212,2,3
	.word	78713
	.byte	10
	.byte	'_Ifx_SRC_STM',0,6,215,2,25,8,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,0,16
	.word	78739
	.byte	29
	.byte	'Ifx_SRC_STM',0,6,219,2,3
	.word	78785
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,6,222,2,25,16,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	9288
	.byte	4,2,35,12,0,16
	.word	78811
	.byte	29
	.byte	'Ifx_SRC_VADCCG',0,6,228,2,3
	.word	78886
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,6,231,2,25,16,13
	.byte	'SR0',0
	.word	9288
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	9288
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	9288
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	9288
	.byte	4,2,35,12,0,16
	.word	78915
	.byte	29
	.byte	'Ifx_SRC_VADCG',0,6,237,2,3
	.word	78989
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,6,240,2,25,4,13
	.byte	'SRC',0
	.word	9288
	.byte	4,2,35,0,0,16
	.word	79017
	.byte	29
	.byte	'Ifx_SRC_XBAR',0,6,243,2,3
	.word	79051
	.byte	14,4
	.word	75616
	.byte	15,0,0,16
	.word	79078
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,6,128,3,25,4,13
	.byte	'AGBT',0
	.word	79087
	.byte	4,2,35,0,0,16
	.word	79092
	.byte	29
	.byte	'Ifx_SRC_GAGBT',0,6,131,3,3
	.word	79128
	.byte	14,48
	.word	75674
	.byte	15,3,0,16
	.word	79156
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,6,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	79165
	.byte	48,2,35,0,0,16
	.word	79170
	.byte	29
	.byte	'Ifx_SRC_GASCLIN',0,6,137,3,3
	.word	79210
	.byte	16
	.word	75761
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,6,140,3,25,4,13
	.byte	'SPB',0
	.word	79240
	.byte	4,2,35,0,0,16
	.word	79245
	.byte	29
	.byte	'Ifx_SRC_GBCU',0,6,143,3,3
	.word	79279
	.byte	14,64
	.word	75835
	.byte	15,0,0,16
	.word	79306
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,6,146,3,25,64,13
	.byte	'CAN',0
	.word	79315
	.byte	64,2,35,0,0,16
	.word	79320
	.byte	29
	.byte	'Ifx_SRC_GCAN',0,6,149,3,3
	.word	79354
	.byte	14,32
	.word	75892
	.byte	15,1,0,16
	.word	79381
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,6,152,3,25,32,13
	.byte	'CCU6',0
	.word	79390
	.byte	32,2,35,0,0,16
	.word	79395
	.byte	29
	.byte	'Ifx_SRC_GCCU6',0,6,155,3,3
	.word	79431
	.byte	16
	.word	75999
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,6,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	79459
	.byte	8,2,35,0,0,16
	.word	79464
	.byte	29
	.byte	'Ifx_SRC_GCERBERUS',0,6,161,3,3
	.word	79508
	.byte	14,16
	.word	76065
	.byte	15,0,0,16
	.word	79540
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,6,164,3,25,16,13
	.byte	'CIF',0
	.word	79549
	.byte	16,2,35,0,0,16
	.word	79554
	.byte	29
	.byte	'Ifx_SRC_GCIF',0,6,167,3,3
	.word	79588
	.byte	14,8
	.word	76164
	.byte	15,1,0,16
	.word	79615
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,6,170,3,25,8,13
	.byte	'CPU',0
	.word	79624
	.byte	8,2,35,0,0,16
	.word	79629
	.byte	29
	.byte	'Ifx_SRC_GCPU',0,6,173,3,3
	.word	79663
	.byte	14,208,1
	.word	76235
	.byte	15,0,0,16
	.word	79690
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,6,176,3,25,208,1,13
	.byte	'DMA',0
	.word	79700
	.byte	208,1,2,35,0,0,16
	.word	79705
	.byte	29
	.byte	'Ifx_SRC_GDMA',0,6,179,3,3
	.word	79741
	.byte	16
	.word	76328
	.byte	16
	.word	76328
	.byte	16
	.word	76328
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,6,182,3,25,32,13
	.byte	'DSADC0',0
	.word	79768
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	3296
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	79773
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	79778
	.byte	8,2,35,24,0,16
	.word	79783
	.byte	29
	.byte	'Ifx_SRC_GDSADC',0,6,188,3,3
	.word	79874
	.byte	14,4
	.word	76404
	.byte	15,0,0,16
	.word	79903
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,6,191,3,25,4,13
	.byte	'EMEM',0
	.word	79912
	.byte	4,2,35,0,0,16
	.word	79917
	.byte	29
	.byte	'Ifx_SRC_GEMEM',0,6,194,3,3
	.word	79953
	.byte	14,80
	.word	76464
	.byte	15,0,0,16
	.word	79981
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,6,197,3,25,80,13
	.byte	'ERAY',0
	.word	79990
	.byte	80,2,35,0,0,16
	.word	79995
	.byte	29
	.byte	'Ifx_SRC_GERAY',0,6,200,3,3
	.word	80031
	.byte	14,4
	.word	76618
	.byte	15,0,0,16
	.word	80059
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,6,203,3,25,4,13
	.byte	'ETH',0
	.word	80068
	.byte	4,2,35,0,0,16
	.word	80073
	.byte	29
	.byte	'Ifx_SRC_GETH',0,6,206,3,3
	.word	80107
	.byte	14,4
	.word	76676
	.byte	15,0,0,16
	.word	80134
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,6,209,3,25,4,13
	.byte	'FCE',0
	.word	80143
	.byte	4,2,35,0,0,16
	.word	80148
	.byte	29
	.byte	'Ifx_SRC_GFCE',0,6,212,3,3
	.word	80182
	.byte	14,12
	.word	76734
	.byte	15,0,0,16
	.word	80209
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,6,215,3,25,12,13
	.byte	'FFT',0
	.word	80218
	.byte	12,2,35,0,0,16
	.word	80223
	.byte	29
	.byte	'Ifx_SRC_GFFT',0,6,218,3,3
	.word	80257
	.byte	14,64
	.word	76829
	.byte	15,1,0,16
	.word	80284
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,6,221,3,25,64,13
	.byte	'GPSR',0
	.word	80293
	.byte	64,2,35,0,0,16
	.word	80298
	.byte	29
	.byte	'Ifx_SRC_GGPSR',0,6,224,3,3
	.word	80334
	.byte	14,48
	.word	76950
	.byte	15,0,0,16
	.word	80362
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,6,227,3,25,48,13
	.byte	'GPT12',0
	.word	80371
	.byte	48,2,35,0,0,16
	.word	80376
	.byte	29
	.byte	'Ifx_SRC_GGPT12',0,6,230,3,3
	.word	80414
	.byte	14,204,18
	.word	77209
	.byte	15,0,0,16
	.word	80443
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,6,233,3,25,204,18,13
	.byte	'GTM',0
	.word	80453
	.byte	204,18,2,35,0,0,16
	.word	80458
	.byte	29
	.byte	'Ifx_SRC_GGTM',0,6,236,3,3
	.word	80494
	.byte	14,4
	.word	77695
	.byte	15,0,0,16
	.word	80521
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,6,239,3,25,4,13
	.byte	'HSCT',0
	.word	80530
	.byte	4,2,35,0,0,16
	.word	80535
	.byte	29
	.byte	'Ifx_SRC_GHSCT',0,6,242,3,3
	.word	80571
	.byte	14,64
	.word	77755
	.byte	15,3,0,16
	.word	80599
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,6,245,3,25,68,13
	.byte	'HSSL',0
	.word	80608
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	9288
	.byte	4,2,35,64,0,16
	.word	80613
	.byte	29
	.byte	'Ifx_SRC_GHSSL',0,6,249,3,3
	.word	80662
	.byte	14,80
	.word	77864
	.byte	15,0,0,16
	.word	80690
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,6,252,3,25,80,13
	.byte	'I2C',0
	.word	80699
	.byte	80,2,35,0,0,16
	.word	80704
	.byte	29
	.byte	'Ifx_SRC_GI2C',0,6,255,3,3
	.word	80738
	.byte	14,4
	.word	78013
	.byte	15,0,0,16
	.word	80765
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,6,130,4,25,4,13
	.byte	'LMU',0
	.word	80774
	.byte	4,2,35,0,0,16
	.word	80779
	.byte	29
	.byte	'Ifx_SRC_GLMU',0,6,133,4,3
	.word	80813
	.byte	14,40
	.word	78071
	.byte	15,1,0,16
	.word	80840
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,6,136,4,25,40,13
	.byte	'MSC',0
	.word	80849
	.byte	40,2,35,0,0,16
	.word	80854
	.byte	29
	.byte	'Ifx_SRC_GMSC',0,6,139,4,3
	.word	80888
	.byte	14,8
	.word	78182
	.byte	15,1,0,16
	.word	80915
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,6,142,4,25,8,13
	.byte	'PMU',0
	.word	80924
	.byte	8,2,35,0,0,16
	.word	80929
	.byte	29
	.byte	'Ifx_SRC_GPMU',0,6,145,4,3
	.word	80963
	.byte	14,32
	.word	78240
	.byte	15,0,0,16
	.word	80990
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,6,148,4,25,32,13
	.byte	'PSI5',0
	.word	80999
	.byte	32,2,35,0,0,16
	.word	81004
	.byte	29
	.byte	'Ifx_SRC_GPSI5',0,6,151,4,3
	.word	81040
	.byte	14,32
	.word	78300
	.byte	15,0,0,16
	.word	81068
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,6,154,4,25,32,13
	.byte	'PSI5S',0
	.word	81077
	.byte	32,2,35,0,0,16
	.word	81082
	.byte	29
	.byte	'Ifx_SRC_GPSI5S',0,6,157,4,3
	.word	81120
	.byte	14,96
	.word	78362
	.byte	15,3,0,16
	.word	81149
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,6,160,4,25,96,13
	.byte	'QSPI',0
	.word	81158
	.byte	96,2,35,0,0,16
	.word	81163
	.byte	29
	.byte	'Ifx_SRC_GQSPI',0,6,163,4,3
	.word	81199
	.byte	14,4
	.word	78482
	.byte	15,0,0,16
	.word	81227
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,6,166,4,25,4,13
	.byte	'SCR',0
	.word	81236
	.byte	4,2,35,0,0,16
	.word	81241
	.byte	29
	.byte	'Ifx_SRC_GSCR',0,6,169,4,3
	.word	81275
	.byte	16
	.word	78540
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,6,172,4,25,20,13
	.byte	'SCU',0
	.word	81302
	.byte	20,2,35,0,0,16
	.word	81307
	.byte	29
	.byte	'Ifx_SRC_GSCU',0,6,175,4,3
	.word	81341
	.byte	14,24
	.word	78621
	.byte	15,0,0,16
	.word	81368
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,6,178,4,25,24,13
	.byte	'SENT',0
	.word	81377
	.byte	24,2,35,0,0,16
	.word	81382
	.byte	29
	.byte	'Ifx_SRC_GSENT',0,6,181,4,3
	.word	81418
	.byte	14,12
	.word	78681
	.byte	15,0,0,16
	.word	81446
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,6,184,4,25,12,13
	.byte	'SMU',0
	.word	81455
	.byte	12,2,35,0,0,16
	.word	81460
	.byte	29
	.byte	'Ifx_SRC_GSMU',0,6,187,4,3
	.word	81494
	.byte	14,16
	.word	78739
	.byte	15,1,0,16
	.word	81521
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,6,190,4,25,16,13
	.byte	'STM',0
	.word	81530
	.byte	16,2,35,0,0,16
	.word	81535
	.byte	29
	.byte	'Ifx_SRC_GSTM',0,6,193,4,3
	.word	81569
	.byte	14,64
	.word	78915
	.byte	15,3,0,16
	.word	81596
	.byte	14,224,1
	.word	432
	.byte	15,223,1,0,14,32
	.word	78811
	.byte	15,1,0,16
	.word	81621
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,6,196,4,25,192,2,13
	.byte	'G',0
	.word	81605
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	81610
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	81630
	.byte	32,3,35,160,2,0,16
	.word	81635
	.byte	29
	.byte	'Ifx_SRC_GVADC',0,6,201,4,3
	.word	81704
	.byte	16
	.word	79017
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,6,204,4,25,4,13
	.byte	'XBAR',0
	.word	81732
	.byte	4,2,35,0,0,16
	.word	81737
	.byte	29
	.byte	'Ifx_SRC_GXBAR',0,6,207,4,3
	.word	81773
	.byte	17,7,82,9,1,18
	.byte	'IfxEray_Baudrate_10',0,0,18
	.byte	'IfxEray_Baudrate_5',0,1,18
	.byte	'IfxEray_Baudrate_2_5',0,2,0,29
	.byte	'IfxEray_Baudrate',0,7,87,3
	.word	81801
	.byte	29
	.byte	'IfxEray_BufferDirection',0,7,95,3
	.word	41737
	.byte	17,7,107,9,4,18
	.byte	'IfxEray_ClearErrorFlag_pemc',0,1,18
	.byte	'IfxEray_ClearErrorFlag_cna',0,2,18
	.byte	'IfxEray_ClearErrorFlag_sfbm',0,4,18
	.byte	'IfxEray_ClearErrorFlag_sfo',0,8,18
	.byte	'IfxEray_ClearErrorFlag_ccf',0,16,18
	.byte	'IfxEray_ClearErrorFlag_ccl',0,32,18
	.byte	'IfxEray_ClearErrorFlag_eerr',0,192,0,18
	.byte	'IfxEray_ClearErrorFlag_rfo',0,128,1,18
	.byte	'IfxEray_ClearErrorFlag_efa',0,128,2,18
	.byte	'IfxEray_ClearErrorFlag_iiba',0,128,4,18
	.byte	'IfxEray_ClearErrorFlag_ioba',0,128,8,18
	.byte	'IfxEray_ClearErrorFlag_mhf',0,128,16,18
	.byte	'IfxEray_ClearErrorFlag_eda',0,128,128,4,18
	.byte	'IfxEray_ClearErrorFlag_ltva',0,128,128,8,18
	.byte	'IfxEray_ClearErrorFlag_taba',0,128,128,16,18
	.byte	'IfxEray_ClearErrorFlag_edb',0,128,128,128,8,18
	.byte	'IfxEray_ClearErrorFlag_ltvb',0,128,128,128,16,18
	.byte	'IfxEray_ClearErrorFlag_tabb',0,128,128,128,32,0,29
	.byte	'IfxEray_ClearErrorFlag',0,7,127,3
	.word	81930
	.byte	17,7,131,1,9,4,18
	.byte	'IfxEray_ClearStatusFlag_wst',0,1,18
	.byte	'IfxEray_ClearStatusFlag_cas',0,2,18
	.byte	'IfxEray_ClearStatusFlag_cycs',0,4,18
	.byte	'IfxEray_ClearStatusFlag_txi',0,8,18
	.byte	'IfxEray_ClearStatusFlag_rxi',0,16,18
	.byte	'IfxEray_ClearStatusFlag_rfne',0,32,18
	.byte	'IfxEray_ClearStatusFlag_rfcl',0,192,0,18
	.byte	'IfxEray_ClearStatusFlag_nmvc',0,128,1,18
	.byte	'IfxEray_ClearStatusFlag_ti0',0,128,2,18
	.byte	'IfxEray_ClearStatusFlag_ti1',0,128,4,18
	.byte	'IfxEray_ClearStatusFlag_tibc',0,128,8,18
	.byte	'IfxEray_ClearStatusFlag_tobc',0,128,16,18
	.byte	'IfxEray_ClearStatusFlag_swe',0,128,32,18
	.byte	'IfxEray_ClearStatusFlag_sucs',0,128,192,0,18
	.byte	'IfxEray_ClearStatusFlag_mbsi',0,128,128,1,18
	.byte	'IfxEray_ClearStatusFlag_sds',0,128,128,2,18
	.byte	'IfxEray_ClearStatusFlag_wupa',0,128,128,4,18
	.byte	'IfxEray_ClearStatusFlag_mtsa',0,128,128,8,18
	.byte	'IfxEray_ClearStatusFlag_wupb',0,128,128,128,8,18
	.byte	'IfxEray_ClearStatusFlag_mtsb',0,128,128,128,16,0,29
	.byte	'IfxEray_ClearStatusFlag',0,7,153,1,3
	.word	82519
	.byte	17,7,171,1,9,1,18
	.byte	'IfxEray_ExternalOffset_noCorrection',0,1,18
	.byte	'IfxEray_ExternalOffset_correctionSubtracted',0,2,18
	.byte	'IfxEray_ExternalOffset_correctionAdded',0,3,0,29
	.byte	'IfxEray_ExternalOffset',0,7,176,1,3
	.word	83194
	.byte	17,7,180,1,9,1,18
	.byte	'IfxEray_ExternalOffsetCorrection_0',0,0,18
	.byte	'IfxEray_ExternalOffsetCorrection_1',0,1,18
	.byte	'IfxEray_ExternalOffsetCorrection_2',0,2,18
	.byte	'IfxEray_ExternalOffsetCorrection_3',0,3,18
	.byte	'IfxEray_ExternalOffsetCorrection_4',0,4,18
	.byte	'IfxEray_ExternalOffsetCorrection_5',0,5,18
	.byte	'IfxEray_ExternalOffsetCorrection_6',0,6,18
	.byte	'IfxEray_ExternalOffsetCorrection_7',0,7,0,29
	.byte	'IfxEray_ExternalOffsetCorrection',0,7,190,1,3
	.word	83358
	.byte	17,7,194,1,9,1,18
	.byte	'IfxEray_ExternalRate_noCorrection',0,1,18
	.byte	'IfxEray_ExternalRate_correctionSubtracted',0,2,18
	.byte	'IfxEray_ExternalRate_correctionAdded',0,3,0,29
	.byte	'IfxEray_ExternalRate',0,7,199,1,3
	.word	83703
	.byte	17,7,203,1,9,1,18
	.byte	'IfxEray_ExternalRateCorrection_0',0,0,18
	.byte	'IfxEray_ExternalRateCorrection_1',0,1,18
	.byte	'IfxEray_ExternalRateCorrection_2',0,2,18
	.byte	'IfxEray_ExternalRateCorrection_3',0,3,18
	.byte	'IfxEray_ExternalRateCorrection_4',0,4,18
	.byte	'IfxEray_ExternalRateCorrection_5',0,5,18
	.byte	'IfxEray_ExternalRateCorrection_6',0,6,18
	.byte	'IfxEray_ExternalRateCorrection_7',0,7,0,29
	.byte	'IfxEray_ExternalRateCorrection',0,7,213,1,3
	.word	83859
	.byte	17,7,217,1,9,1,18
	.byte	'IfxEray_IdleDynamicSlots_0',0,0,18
	.byte	'IfxEray_IdleDynamicSlots_1',0,1,18
	.byte	'IfxEray_IdleDynamicSlots_2',0,2,0,29
	.byte	'IfxEray_IdleDynamicSlots',0,7,222,1,3
	.word	84186
	.byte	17,7,226,1,9,1,18
	.byte	'IfxEray_ListenTimeOutNoise_2',0,1,18
	.byte	'IfxEray_ListenTimeOutNoise_3',0,2,18
	.byte	'IfxEray_ListenTimeOutNoise_4',0,3,18
	.byte	'IfxEray_ListenTimeOutNoise_5',0,4,18
	.byte	'IfxEray_ListenTimeOutNoise_6',0,5,18
	.byte	'IfxEray_ListenTimeOutNoise_7',0,6,18
	.byte	'IfxEray_ListenTimeOutNoise_8',0,7,18
	.byte	'IfxEray_ListenTimeOutNoise_9',0,8,18
	.byte	'IfxEray_ListenTimeOutNoise_10',0,9,18
	.byte	'IfxEray_ListenTimeOutNoise_11',0,10,18
	.byte	'IfxEray_ListenTimeOutNoise_12',0,11,18
	.byte	'IfxEray_ListenTimeOutNoise_13',0,12,18
	.byte	'IfxEray_ListenTimeOutNoise_14',0,13,18
	.byte	'IfxEray_ListenTimeOutNoise_15',0,14,18
	.byte	'IfxEray_ListenTimeOutNoise_16',0,15,0,29
	.byte	'IfxEray_ListenTimeOutNoise',0,7,243,1,3
	.word	84314
	.byte	17,7,247,1,9,1,18
	.byte	'IfxEray_MaxSynchFrames_2',0,2,18
	.byte	'IfxEray_MaxSynchFrames_3',0,3,18
	.byte	'IfxEray_MaxSynchFrames_4',0,4,18
	.byte	'IfxEray_MaxSynchFrames_5',0,5,18
	.byte	'IfxEray_MaxSynchFrames_6',0,6,18
	.byte	'IfxEray_MaxSynchFrames_7',0,7,18
	.byte	'IfxEray_MaxSynchFrames_8',0,8,18
	.byte	'IfxEray_MaxSynchFrames_9',0,9,18
	.byte	'IfxEray_MaxSynchFrames_10',0,10,18
	.byte	'IfxEray_MaxSynchFrames_11',0,11,18
	.byte	'IfxEray_MaxSynchFrames_12',0,12,18
	.byte	'IfxEray_MaxSynchFrames_13',0,13,18
	.byte	'IfxEray_MaxSynchFrames_14',0,14,18
	.byte	'IfxEray_MaxSynchFrames_15',0,15,0,29
	.byte	'IfxEray_MaxSynchFrames',0,7,135,2,3
	.word	84829
	.byte	29
	.byte	'IfxEray_PocCommand',0,7,154,2,3
	.word	41130
	.byte	17,7,158,2,9,1,18
	.byte	'IfxEray_PocState_defaultConfig',0,0,18
	.byte	'IfxEray_PocState_ready',0,1,18
	.byte	'IfxEray_PocState_normalActive',0,2,18
	.byte	'IfxEray_PocState_normalPassive',0,3,18
	.byte	'IfxEray_PocState_halt',0,4,18
	.byte	'IfxEray_PocState_monitor',0,5,18
	.byte	'IfxEray_PocState_config',0,15,18
	.byte	'IfxEray_PocState_wakeupStandby',0,16,18
	.byte	'IfxEray_PocState_wakeupListen',0,17,18
	.byte	'IfxEray_PocState_wakeupSend',0,18,18
	.byte	'IfxEray_PocState_wakeupDetect',0,19,18
	.byte	'IfxEray_PocState_startup',0,32,18
	.byte	'IfxEray_PocState_coldStartListen',0,33,18
	.byte	'IfxEray_PocState_collisionResolution',0,34,18
	.byte	'IfxEray_PocState_consistencyCheck',0,35,18
	.byte	'IfxEray_PocState_gap',0,36,18
	.byte	'IfxEray_PocState_join',0,37,18
	.byte	'IfxEray_PocState_integrationCheck',0,38,18
	.byte	'IfxEray_PocState_integrationListen',0,39,18
	.byte	'IfxEray_PocState_integrationConsistencyCheck',0,40,18
	.byte	'IfxEray_PocState_initializeSchedule',0,41,18
	.byte	'IfxEray_PocState_staruAborted',0,42,18
	.byte	'IfxEray_PocState_startupSucced',0,43,0,29
	.byte	'IfxEray_PocState',0,7,183,2,3
	.word	85280
	.byte	17,7,187,2,9,1,18
	.byte	'IfxEray_ReceiveChannel_both',0,0,18
	.byte	'IfxEray_ReceiveChannel_b',0,1,18
	.byte	'IfxEray_ReceiveChannel_a',0,2,18
	.byte	'IfxEray_ReceiveChannel_none',0,3,0,29
	.byte	'IfxEray_ReceiveChannel',0,7,193,2,3
	.word	86047
	.byte	17,7,198,2,9,1,18
	.byte	'IfxEray_SleepMode_enable',0,0,18
	.byte	'IfxEray_SleepMode_disable',0,1,0,29
	.byte	'IfxEray_SleepMode',0,7,202,2,3
	.word	86200
	.byte	17,7,206,2,9,1,18
	.byte	'IfxEray_StrobePosition_5',0,0,18
	.byte	'IfxEray_StrobePosition_4',0,1,18
	.byte	'IfxEray_StrobePosition_6',0,2,0,29
	.byte	'IfxEray_StrobePosition',0,7,211,2,3
	.word	86289
	.byte	17,7,215,2,9,1,18
	.byte	'IfxEray_SuspendMode_none',0,0,18
	.byte	'IfxEray_SuspendMode_hard',0,1,18
	.byte	'IfxEray_SuspendMode_soft',0,2,0,29
	.byte	'IfxEray_SuspendMode',0,7,220,2,3
	.word	86409
	.byte	29
	.byte	'IfxEray_TransmissionMode',0,7,228,2,3
	.word	41812
	.byte	17,7,232,2,9,1,18
	.byte	'IfxEray_TransmissionSlotMode_all',0,0,18
	.byte	'IfxEray_TransmissionSlotMode_single',0,1,0,29
	.byte	'IfxEray_TransmissionSlotMode',0,7,236,2,3
	.word	86560
	.byte	17,7,240,2,9,1,18
	.byte	'IfxEray_WakeupChannel_a',0,0,18
	.byte	'IfxEray_WakeupChannel_b',0,1,0,29
	.byte	'IfxEray_WakeupChannel',0,7,244,2,3
	.word	86678
	.byte	29
	.byte	'IfxEray_Header',0,7,142,3,3
	.word	41895
	.byte	29
	.byte	'IfxEray_ReceivedHeader',0,7,156,3,3
	.word	41513
	.byte	29
	.byte	'IfxEray_SlotConfig',0,7,166,3,3
	.word	42229
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,53,0,73,19,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,38,0,73,19,0,0,20,46,1,3,8,54,15,39,12,63,12,60,12,0,0,21
	.byte	5,0,73,19,0,0,22,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,23,5,0,3,8,73,19,0,0,24,46,1,49,19,0,0,25
	.byte	5,0,49,19,0,0,26,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,27,46,0,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,28,19,1,58,15,59,15,57,15,11,15,0,0,29,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,30,21,0,54,15,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L61:
	.word	.L285-.L284
.L284:
	.half	3
	.word	.L287-.L286
.L286:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxPort.h',0,2,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxSrc.h',0,4,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.h',0,0,0,0
	.byte	'IfxEray_regdef.h',0,3,0,0
	.byte	'IfxScuWdt.h',0,5,0,0
	.byte	'IfxEray_cfg.h',0,6,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,6,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxEray_PinMap.h',0,7,0,0
	.byte	'IfxSrc_cfg.h',0,6,0,0,0
.L287:
.L285:
	.sdecl	'.debug_info',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_info'
.L62:
	.word	251
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_clearAllFlags',0,1,126,6,1,1,1
	.word	.L34,.L137,.L33
	.byte	4
	.byte	'eray',0,1,126,38
	.word	.L138,.L139
	.byte	5
	.word	.L34,.L137
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_line'
.L64:
	.word	.L289-.L288
.L288:
	.half	3
	.word	.L291-.L290
.L290:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L291:
	.byte	5,20,7,0,5,2
	.word	.L34
	.byte	3,255,0,1,5,18,1,9
	.half	.L292-.L34
	.byte	3,1,1,9
	.half	.L293-.L292
	.byte	3,1,1,9
	.half	.L294-.L293
	.byte	3,1,1,5,20,9
	.half	.L295-.L294
	.byte	3,1,1,5,18,9
	.half	.L296-.L295
	.byte	1,5,1,9
	.half	.L297-.L296
	.byte	3,1,1,7,9
	.half	.L66-.L297
	.byte	0,1,1
.L289:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L34,0,.L66-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_info'
.L67:
	.word	260
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_enableInterruptLines',0,1,136,1,6,1,1,1
	.word	.L36,.L140,.L35
	.byte	4
	.byte	'eray',0,1,136,1,45
	.word	.L138,.L141
	.byte	5
	.word	.L36,.L140
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_line'
.L69:
	.word	.L299-.L298
.L298:
	.half	3
	.word	.L301-.L300
.L300:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L301:
	.byte	5,21,7,0,5,2
	.word	.L36
	.byte	3,137,1,1,5,19,1,5,21,9
	.half	.L302-.L36
	.byte	3,1,1,5,19,3,4,1,5,21,9
	.half	.L303-.L302
	.byte	3,125,1,5,19,3,127,1,9
	.half	.L304-.L303
	.byte	3,1,1,5,21,9
	.half	.L305-.L304
	.byte	3,1,1,5,19,3,2,1,5,21,9
	.half	.L306-.L305
	.byte	3,126,1,5,19,1,5,21,9
	.half	.L307-.L306
	.byte	3,1,1,5,19,9
	.half	.L308-.L307
	.byte	1,9
	.half	.L29-.L308
	.byte	3,1,1,5,1,9
	.half	.L309-.L29
	.byte	3,8,1,7,9
	.half	.L71-.L309
	.byte	0,1,1
.L299:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L36,0,.L71-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_info'
.L72:
	.word	393
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_setMessageBufferInterruptDestination',0,1,250,1,6,1,1,1
	.word	.L48,.L142,.L47
	.byte	4
	.byte	'eray',0,1,250,1,61
	.word	.L138,.L143
	.byte	4
	.byte	'messageBuffer',0,1,250,1,73
	.word	.L144,.L145
	.byte	4
	.byte	'messageBufferDestination',0,1,250,1,94
	.word	.L144,.L146
	.byte	5
	.word	.L147
	.byte	6
	.byte	'ix',0,1,252,1,21
	.word	.L144,.L148
	.byte	6
	.byte	'mask',0,1,253,1,21
	.word	.L149,.L150
	.byte	6
	.byte	'msicSFR',0,1,254,1,21
	.word	.L151,.L152
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_line'
.L74:
	.word	.L311-.L310
.L310:
	.half	3
	.word	.L313-.L312
.L312:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L313:
	.byte	5,31,7,0,5,2
	.word	.L48
	.byte	3,252,1,1,5,63,3,1,1,5,37,9
	.half	.L314-.L48
	.byte	3,127,1,5,31,9
	.half	.L315-.L314
	.byte	3,127,1,5,33,9
	.half	.L263-.L315
	.byte	3,1,1,5,63,3,1,1,5,1,9
	.half	.L264-.L263
	.byte	3,10,1,7,9
	.half	.L76-.L264
	.byte	0,1,1
.L311:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L48,0,.L76-.L48,0,0
.L147:
	.word	-1,.L48,0,.L142-.L48,-1,.L50,0,.L136-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_info'
.L77:
	.word	383
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_setNewDataInterruptDestination',0,1,139,2,6,1,1,1
	.word	.L52,.L153,.L51
	.byte	4
	.byte	'eray',0,1,139,2,55
	.word	.L138,.L154
	.byte	4
	.byte	'ndat',0,1,139,2,67
	.word	.L144,.L155
	.byte	4
	.byte	'ndatDestination',0,1,139,2,79
	.word	.L144,.L156
	.byte	5
	.word	.L52,.L153
	.byte	5
	.word	.L52,.L153
	.byte	6
	.byte	'ix',0,1,142,2,21
	.word	.L144,.L157
	.byte	6
	.byte	'mask',0,1,143,2,21
	.word	.L149,.L158
	.byte	6
	.byte	'ndicSFR',0,1,144,2,21
	.word	.L159,.L160
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_line'
.L79:
	.word	.L317-.L316
.L316:
	.half	3
	.word	.L319-.L318
.L318:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L319:
	.byte	5,31,7,0,5,2
	.word	.L52
	.byte	3,142,2,1,5,63,3,1,1,5,37,9
	.half	.L320-.L52
	.byte	3,127,1,5,33,9
	.half	.L321-.L320
	.byte	1,5,31,9
	.half	.L270-.L321
	.byte	3,127,1,5,63,3,2,1,5,1,9
	.half	.L271-.L270
	.byte	3,10,1,7,9
	.half	.L81-.L271
	.byte	0,1,1
.L317:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L52,0,.L81-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_info'
.L82:
	.word	275
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_getAddress',0,1,154,1,11
	.word	.L138
	.byte	1,1,1
	.word	.L38,.L161,.L37
	.byte	4
	.byte	'eray',0,1,154,1,44
	.word	.L162,.L163
	.byte	5
	.word	.L38,.L161
	.byte	6
	.byte	'module',0,1,156,1,15
	.word	.L138,.L164
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_line'
.L84:
	.word	.L323-.L322
.L322:
	.half	3
	.word	.L325-.L324
.L324:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L325:
	.byte	5,5,7,0,5,2
	.word	.L38
	.byte	3,157,1,1,5,30,7,9
	.half	.L326-.L38
	.byte	3,2,1,5,50,9
	.half	.L327-.L326
	.byte	1,5,56,9
	.half	.L328-.L327
	.byte	1,5,1,9
	.half	.L246-.L328
	.byte	3,8,1,5,16,7,9
	.half	.L7-.L246
	.byte	3,124,1,5,1,9
	.half	.L247-.L7
	.byte	3,4,1,7,9
	.half	.L86-.L247
	.byte	0,1,1
.L323:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L38,0,.L86-.L38,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_info'
.L87:
	.word	273
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_getIndex',0,1,171,1,15
	.word	.L162
	.byte	1,1,1
	.word	.L40,.L165,.L39
	.byte	4
	.byte	'eray',0,1,171,1,42
	.word	.L138,.L166
	.byte	5
	.word	.L40,.L165
	.byte	6
	.byte	'result',0,1,174,1,19
	.word	.L162,.L167
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_line'
.L89:
	.word	.L330-.L329
.L329:
	.half	3
	.word	.L332-.L331
.L331:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L332:
	.byte	5,13,7,0,5,2
	.word	.L40
	.byte	3,179,1,1,5,40,9
	.half	.L333-.L40
	.byte	1,5,12,9
	.half	.L334-.L333
	.byte	3,124,1,5,9,9
	.half	.L248-.L334
	.byte	3,4,1,5,64,7,9
	.half	.L335-.L248
	.byte	3,2,1,5,22,9
	.half	.L336-.L335
	.byte	1,5,1,9
	.half	.L10-.L336
	.byte	3,6,1,7,9
	.half	.L91-.L10
	.byte	0,1,1
.L330:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L40,0,.L91-.L40,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_info'
.L92:
	.word	272
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_resetModule',0,1,230,1,6,1,1,1
	.word	.L46,.L168,.L45
	.byte	4
	.byte	'eray',0,1,230,1,36
	.word	.L138,.L169
	.byte	5
	.word	.L46,.L168
	.byte	6
	.byte	'passwd',0,1,232,1,12
	.word	.L170,.L171
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_line'
.L94:
	.word	.L338-.L337
.L337:
	.half	3
	.word	.L340-.L339
.L339:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L340:
	.byte	5,6,7,0,5,2
	.word	.L46
	.byte	3,229,1,1,5,53,9
	.half	.L257-.L46
	.byte	3,2,1,5,19,9
	.half	.L256-.L257
	.byte	1,5,31,9
	.half	.L259-.L256
	.byte	3,1,1,5,18,9
	.half	.L258-.L259
	.byte	3,1,1,5,29,9
	.half	.L341-.L258
	.byte	3,3,1,5,23,9
	.half	.L260-.L341
	.byte	3,125,1,5,18,9
	.half	.L342-.L260
	.byte	3,1,1,5,23,9
	.half	.L343-.L342
	.byte	1,5,29,9
	.half	.L344-.L343
	.byte	3,2,1,5,16,9
	.half	.L261-.L344
	.byte	3,2,1,5,25,9
	.half	.L15-.L261
	.byte	1,5,38,9
	.half	.L345-.L15
	.byte	1,5,31,7,9
	.half	.L346-.L345
	.byte	3,5,1,5,29,9
	.half	.L347-.L346
	.byte	3,2,1,5,20,3,127,1,5,25,9
	.half	.L262-.L347
	.byte	1,5,29,9
	.half	.L348-.L262
	.byte	3,1,1,5,1,7,9
	.half	.L96-.L348
	.byte	3,1,0,1,1
.L338:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L46,0,.L96-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_info'
.L97:
	.word	279
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L100,.L99
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_changePocState',0,1,102,9
	.word	.L144
	.byte	1,1,1
	.word	.L5,.L172,.L32
	.byte	4
	.byte	'eray',0,1,102,42
	.word	.L138,.L173
	.byte	4
	.byte	'pocCommand',0,1,102,67
	.word	.L174,.L175
	.byte	5
	.word	.L5,.L172
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_line'
.L99:
	.word	.L350-.L349
.L349:
	.half	3
	.word	.L352-.L351
.L351:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L352:
	.byte	5,25,7,0,5,2
	.word	.L5
	.byte	3,234,0,1,5,35,9
	.half	.L353-.L5
	.byte	1,5,18,7,9
	.half	.L354-.L353
	.byte	3,3,1,5,23,9
	.half	.L355-.L354
	.byte	1,5,22,9
	.half	.L356-.L355
	.byte	3,3,1,5,1,9
	.half	.L357-.L356
	.byte	3,10,1,7,9
	.half	.L101-.L357
	.byte	0,1,1
.L350:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_ranges'
.L100:
	.word	-1,.L5,0,.L101-.L5,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_info'
.L102:
	.word	251
	.half	3
	.word	.L103
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L105,.L104
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_setPocReady',0,1,157,2,6,1,1,1
	.word	.L20,.L176,.L53
	.byte	4
	.byte	'eray',0,1,157,2,36
	.word	.L138,.L177
	.byte	5
	.word	.L20,.L176
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_abbrev'
.L103:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_line'
.L104:
	.word	.L359-.L358
.L358:
	.half	3
	.word	.L361-.L360
.L360:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L361:
	.byte	5,25,7,0,5,2
	.word	.L20
	.byte	3,159,2,1,5,35,9
	.half	.L362-.L20
	.byte	1,5,25,7,9
	.half	.L363-.L362
	.byte	3,4,1,5,23,1,5,25,9
	.half	.L364-.L363
	.byte	3,1,1,5,23,1,5,18,9
	.half	.L365-.L364
	.byte	3,1,1,5,23,9
	.half	.L366-.L365
	.byte	1,5,1,9
	.half	.L367-.L366
	.byte	3,1,1,7,9
	.half	.L106-.L367
	.byte	0,1,1
.L359:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_ranges'
.L105:
	.word	-1,.L20,0,.L106-.L20,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_info'
.L107:
	.word	433
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L110,.L109
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_calcHeaderCrc',0,1,55,8
	.word	.L170
	.byte	1,1,1
	.word	.L31,.L178,.L30
	.byte	4
	.byte	'payloadLength',0,1,55,36
	.word	.L144,.L179
	.byte	4
	.byte	'frameId',0,1,55,58
	.word	.L170,.L180
	.byte	4
	.byte	'startupFrameIndicator',0,1,55,75
	.word	.L144,.L181
	.byte	4
	.byte	'syncFrameIndicator',0,1,55,106
	.word	.L144,.L182
	.byte	5
	.word	.L31,.L178
	.byte	6
	.byte	'headerValue',0,1,57,12
	.word	.L149,.L183
	.byte	6
	.byte	'length',0,1,61,12
	.word	.L149,.L184
	.byte	6
	.byte	'crcNext',0,1,62,12
	.word	.L149,.L185
	.byte	6
	.byte	'crcRegX',0,1,64,12
	.word	.L149,.L186
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_line'
.L109:
	.word	.L369-.L368
.L368:
	.half	3
	.word	.L371-.L370
.L370:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L371:
	.byte	5,47,7,0,5,2
	.word	.L31
	.byte	3,56,1,5,18,3,14,1,5,54,9
	.half	.L372-.L31
	.byte	3,114,1,5,87,9
	.half	.L373-.L372
	.byte	1,5,94,9
	.half	.L374-.L373
	.byte	1,5,61,9
	.half	.L375-.L374
	.byte	1,5,113,9
	.half	.L376-.L375
	.byte	1,5,17,9
	.half	.L377-.L376
	.byte	3,11,1,5,122,9
	.half	.L243-.L377
	.byte	3,117,1,5,101,9
	.half	.L378-.L243
	.byte	1,5,145,1,9
	.half	.L379-.L378
	.byte	1,5,128,1,9
	.half	.L380-.L379
	.byte	1,5,17,9
	.half	.L381-.L380
	.byte	3,10,1,5,21,9
	.half	.L2-.L381
	.byte	3,6,1,5,24,9
	.half	.L382-.L2
	.byte	3,4,1,5,37,9
	.half	.L383-.L382
	.byte	3,125,1,5,17,9
	.half	.L384-.L383
	.byte	3,12,1,5,9,9
	.half	.L385-.L384
	.byte	3,119,1,9
	.half	.L244-.L385
	.byte	3,11,1,5,24,7,9
	.half	.L386-.L244
	.byte	3,2,1,5,21,9
	.half	.L245-.L386
	.byte	1,5,18,9
	.half	.L3-.L245
	.byte	3,109,1,5,13,7,9
	.half	.L387-.L3
	.byte	3,25,1,5,1,3,3,1,7,9
	.half	.L111-.L387
	.byte	0,1,1
.L369:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_ranges'
.L110:
	.word	-1,.L31,0,.L111-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_readData')
	.sect	'.debug_info'
.L112:
	.word	343
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L115,.L114
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_readData',0,1,191,1,6,1,1,1
	.word	.L42,.L187,.L41
	.byte	4
	.byte	'eray',0,1,191,1,33
	.word	.L138,.L188
	.byte	4
	.byte	'data',0,1,191,1,47
	.word	.L189,.L190
	.byte	4
	.byte	'payloadLength',0,1,191,1,59
	.word	.L144,.L191
	.byte	5
	.word	.L42,.L187
	.byte	5
	.word	.L192,.L12
	.byte	6
	.byte	'length',0,1,195,1,16
	.word	.L170,.L193
	.byte	6
	.byte	'index',0,1,196,1,16
	.word	.L144,.L194
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_readData')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_readData')
	.sect	'.debug_line'
.L114:
	.word	.L389-.L388
.L388:
	.half	3
	.word	.L391-.L390
.L390:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L391:
	.byte	5,5,7,0,5,2
	.word	.L42
	.byte	3,192,1,1,5,40,7,9
	.half	.L192-.L42
	.byte	3,2,1,5,27,3,5,1,5,40,9
	.half	.L249-.L192
	.byte	3,123,1,5,20,9
	.half	.L392-.L249
	.byte	3,3,1,5,39,1,5,46,9
	.half	.L14-.L392
	.byte	1,5,43,3,2,1,5,46,9
	.half	.L250-.L14
	.byte	3,126,1,5,21,3,2,1,5,39,9
	.half	.L13-.L250
	.byte	3,126,1,5,1,7,9
	.half	.L12-.L13
	.byte	3,5,1,7,9
	.half	.L116-.L12
	.byte	0,1,1
.L389:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_readData')
	.sect	'.debug_ranges'
.L115:
	.word	-1,.L42,0,.L116-.L42,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_info'
.L117:
	.word	405
	.half	3
	.word	.L118
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L120,.L119
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_readFrame',0,1,206,1,6,1,1,1
	.word	.L44,.L195,.L43
	.byte	4
	.byte	'eray',0,1,206,1,34
	.word	.L138,.L196
	.byte	4
	.byte	'header',0,1,206,1,64
	.word	.L197,.L198
	.byte	4
	.byte	'data',0,1,206,1,80
	.word	.L189,.L199
	.byte	4
	.byte	'maxPayloadLength',0,1,206,1,96
	.word	.L200,.L201
	.byte	5
	.word	.L44,.L195
	.byte	5
	.word	.L44,.L202
	.byte	6
	.byte	'rdhs1',0,1,209,1,24
	.word	.L203,.L204
	.byte	5
	.word	.L205,.L202
	.byte	6
	.byte	'rdhs2',0,1,211,1,24
	.word	.L206,.L207
	.byte	5
	.word	.L205,.L202
	.byte	6
	.byte	'rdhs3',0,1,213,1,24
	.word	.L208,.L209
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_line'
.L119:
	.word	.L394-.L393
.L393:
	.half	3
	.word	.L396-.L395
.L395:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L396:
	.byte	5,55,7,0,5,2
	.word	.L44
	.byte	3,209,1,1,5,15,9
	.half	.L205-.L44
	.byte	3,6,1,5,51,9
	.half	.L397-.L205
	.byte	1,5,55,3,124,1,9
	.half	.L253-.L397
	.byte	3,2,1,5,42,9
	.half	.L255-.L253
	.byte	3,2,1,5,51,9
	.half	.L398-.L255
	.byte	3,1,1,5,15,9
	.half	.L399-.L398
	.byte	1,5,51,9
	.half	.L400-.L399
	.byte	3,1,1,5,42,9
	.half	.L254-.L400
	.byte	3,127,1,5,15,9
	.half	.L401-.L254
	.byte	3,1,1,5,42,9
	.half	.L402-.L401
	.byte	1,5,51,9
	.half	.L403-.L402
	.byte	3,1,1,5,15,9
	.half	.L404-.L403
	.byte	1,5,51,9
	.half	.L405-.L404
	.byte	1,9
	.half	.L406-.L405
	.byte	3,1,1,9
	.half	.L407-.L406
	.byte	3,1,1,5,42,9
	.half	.L408-.L407
	.byte	3,126,1,5,15,9
	.half	.L409-.L408
	.byte	3,1,1,5,42,9
	.half	.L410-.L409
	.byte	1,5,51,9
	.half	.L411-.L410
	.byte	3,2,1,5,42,9
	.half	.L412-.L411
	.byte	3,127,1,9
	.half	.L413-.L412
	.byte	3,1,1,5,51,9
	.half	.L414-.L413
	.byte	3,1,1,5,42,9
	.half	.L415-.L414
	.byte	1,5,41,9
	.half	.L202-.L415
	.byte	3,3,1,5,77,1,5,41,9
	.half	.L251-.L202
	.byte	1,5,57,9
	.half	.L416-.L251
	.byte	1,5,77,9
	.half	.L417-.L416
	.byte	1,5,1,9
	.half	.L121-.L417
	.byte	3,1,0,1,1
.L394:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_ranges'
.L120:
	.word	-1,.L44,0,.L121-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_info'
.L122:
	.word	476
	.half	3
	.word	.L123
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L125,.L124
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_setSlot',0,1,170,2,6,1,1,1
	.word	.L55,.L210,.L54
	.byte	4
	.byte	'eray',0,1,170,2,32
	.word	.L138,.L211
	.byte	4
	.byte	'header',0,1,170,2,60
	.word	.L212,.L213
	.byte	4
	.byte	'data',0,1,170,2,82
	.word	.L214,.L215
	.byte	4
	.byte	'slotConfig',0,1,170,2,114
	.word	.L216,.L217
	.byte	5
	.word	.L55,.L210
	.byte	6
	.word	.L218,.L21,.L219
	.byte	7
	.word	.L220,.L221
	.byte	8
	.word	.L222,.L21,.L219
	.byte	0,5
	.word	.L223,.L224
	.byte	9
	.byte	'wrhs1',0,1,179,2,28
	.word	.L225,.L226
	.byte	0,5
	.word	.L224,.L227
	.byte	9
	.byte	'wrhs2',0,1,192,2,28
	.word	.L228,.L229
	.byte	0,6
	.word	.L230,.L24,.L231
	.byte	7
	.word	.L232,.L233
	.byte	8
	.word	.L234,.L24,.L231
	.byte	0,6
	.word	.L218,.L25,.L235
	.byte	7
	.word	.L220,.L221
	.byte	8
	.word	.L222,.L25,.L235
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_abbrev'
.L123:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_line'
.L124:
	.word	.L419-.L418
.L418:
	.half	3
	.word	.L421-.L420
.L420:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.h',0,0,0,0,0
.L421:
	.byte	5,6,7,0,5,2
	.word	.L55
	.byte	3,169,2,1,4,2,5,17,9
	.half	.L276-.L55
	.byte	3,205,7,1,5,25,9
	.half	.L21-.L276
	.byte	1,4,1,5,62,9
	.half	.L219-.L21
	.byte	3,182,120,1,5,5,7,9
	.half	.L422-.L219
	.byte	3,3,1,5,27,7,9
	.half	.L223-.L422
	.byte	3,4,1,5,35,3,1,1,5,27,9
	.half	.L277-.L223
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L423-.L277
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L424-.L423
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L425-.L424
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L426-.L425
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L427-.L426
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L428-.L427
	.byte	1,5,35,3,1,1,5,27,9
	.half	.L429-.L428
	.byte	1,3,1,1,5,21,9
	.half	.L224-.L429
	.byte	3,4,1,5,23,9
	.half	.L278-.L224
	.byte	3,2,1,5,13,9
	.half	.L430-.L278
	.byte	1,5,59,7,9
	.half	.L431-.L430
	.byte	3,2,1,5,82,9
	.half	.L432-.L431
	.byte	1,5,99,9
	.half	.L433-.L432
	.byte	1,5,130,1,9
	.half	.L434-.L433
	.byte	1,5,29,9
	.half	.L272-.L434
	.byte	1,5,35,9
	.half	.L23-.L272
	.byte	3,3,1,5,27,9
	.half	.L435-.L23
	.byte	1,3,1,1,5,31,9
	.half	.L227-.L435
	.byte	3,3,1,5,23,9
	.half	.L436-.L227
	.byte	1,5,41,9
	.half	.L22-.L436
	.byte	3,3,1,5,17,9
	.half	.L280-.L22
	.byte	3,2,1,5,36,9
	.half	.L437-.L280
	.byte	1,5,24,9
	.half	.L438-.L437
	.byte	1,5,17,9
	.half	.L439-.L438
	.byte	3,1,1,5,36,9
	.half	.L440-.L439
	.byte	1,5,24,9
	.half	.L441-.L440
	.byte	1,5,17,9
	.half	.L442-.L441
	.byte	3,1,1,5,36,9
	.half	.L443-.L442
	.byte	1,5,24,9
	.half	.L444-.L443
	.byte	1,5,17,9
	.half	.L445-.L444
	.byte	3,1,1,5,36,9
	.half	.L446-.L445
	.byte	1,5,24,9
	.half	.L447-.L446
	.byte	1,4,2,5,25,9
	.half	.L24-.L447
	.byte	3,169,7,1,4,1,5,64,9
	.half	.L231-.L24
	.byte	3,218,120,1,4,2,5,17,7,9
	.half	.L448-.L231
	.byte	3,160,7,1,5,25,9
	.half	.L25-.L448
	.byte	1,4,1,5,62,9
	.half	.L235-.L25
	.byte	3,227,120,1,5,1,7,9
	.half	.L449-.L235
	.byte	3,2,1,7,9
	.half	.L126-.L449
	.byte	0,1,1
.L419:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_ranges'
.L125:
	.word	-1,.L55,0,.L126-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('IfxEray_writeData')
	.sect	'.debug_info'
.L127:
	.word	344
	.half	3
	.word	.L128
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L130,.L129
	.byte	2
	.word	.L58
	.byte	3
	.byte	'IfxEray_writeData',0,1,223,2,6,1,1,1
	.word	.L57,.L236,.L56
	.byte	4
	.byte	'eray',0,1,223,2,34
	.word	.L138,.L237
	.byte	4
	.byte	'data',0,1,223,2,54
	.word	.L214,.L238
	.byte	4
	.byte	'payloadLength',0,1,223,2,66
	.word	.L144,.L239
	.byte	5
	.word	.L57,.L236
	.byte	5
	.word	.L240,.L26
	.byte	6
	.byte	'length',0,1,227,2,16
	.word	.L170,.L241
	.byte	6
	.byte	'index',0,1,228,2,16
	.word	.L144,.L242
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxEray_writeData')
	.sect	'.debug_abbrev'
.L128:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxEray_writeData')
	.sect	'.debug_line'
.L129:
	.word	.L451-.L450
.L450:
	.half	3
	.word	.L453-.L452
.L452:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L453:
	.byte	5,5,7,0,5,2
	.word	.L57
	.byte	3,224,2,1,5,40,7,9
	.half	.L240-.L57
	.byte	3,2,1,5,17,3,5,1,5,40,9
	.half	.L282-.L240
	.byte	3,123,1,5,20,9
	.half	.L454-.L282
	.byte	3,3,1,5,39,1,5,46,9
	.half	.L28-.L454
	.byte	1,5,38,3,2,1,5,46,9
	.half	.L283-.L28
	.byte	3,126,1,5,36,3,2,1,5,39,9
	.half	.L27-.L283
	.byte	3,126,1,5,1,7,9
	.half	.L26-.L27
	.byte	3,5,1,7,9
	.half	.L131-.L26
	.byte	0,1,1
.L451:
	.sdecl	'.debug_ranges',debug,cluster('IfxEray_writeData')
	.sect	'.debug_ranges'
.L130:
	.word	-1,.L57,0,.L131-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L132:
	.word	212
	.half	3
	.word	.L133
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L135,.L134
	.byte	2
	.word	.L58
	.byte	3
	.byte	'.cocofun_1',0,1,250,1,6,1
	.word	.L50,.L136,.L49
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L133:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L134:
	.word	.L456-.L455
.L455:
	.half	3
	.word	.L458-.L457
.L457:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std\\IfxEray.c',0,0,0,0,0
.L458:
	.byte	5,63,7,0,5,2
	.word	.L50
	.byte	3,253,1,1,5,77,9
	.half	.L265-.L50
	.byte	1,5,71,9
	.half	.L266-.L265
	.byte	1,5,29,9
	.half	.L459-.L266
	.byte	1,5,16,9
	.half	.L269-.L459
	.byte	3,4,1,5,5,9
	.half	.L268-.L269
	.byte	3,126,1,5,23,7,9
	.half	.L460-.L268
	.byte	3,2,1,5,20,9
	.half	.L267-.L460
	.byte	1,5,28,1,5,20,9
	.half	.L16-.L267
	.byte	3,4,1,9
	.half	.L136-.L16
	.byte	0,1,1,5,63,0,5,2
	.word	.L50
	.byte	3,143,2,1,5,77,9
	.half	.L265-.L50
	.byte	1,5,71,9
	.half	.L266-.L265
	.byte	1,5,29,9
	.half	.L459-.L266
	.byte	1,5,16,9
	.half	.L269-.L459
	.byte	3,4,1,5,5,9
	.half	.L268-.L269
	.byte	3,126,1,5,23,7,9
	.half	.L460-.L268
	.byte	3,2,1,5,20,9
	.half	.L267-.L460
	.byte	1,5,28,1,5,20,9
	.half	.L16-.L267
	.byte	3,4,1,9
	.half	.L461-.L16
	.byte	3,110,1,7,9
	.half	.L136-.L461
	.byte	0,1,1
.L456:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L135:
	.word	-1,.L50,0,.L136-.L50,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L49:
	.word	-1,.L50,0,.L136-.L50
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L178-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L185:
	.word	-1,.L31,.L244-.L31,.L245-.L31
	.half	1
	.byte	95
	.word	0,0
.L186:
	.word	-1,.L31,.L243-.L31,.L178-.L31
	.half	1
	.byte	81
	.word	0,0
.L180:
	.word	-1,.L31,0,.L178-.L31
	.half	1
	.byte	85
	.word	0,0
.L183:
	.word	-1,.L31,.L2-.L31,.L178-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L184:
	.word	0,0
.L179:
	.word	-1,.L31,0,.L178-.L31
	.half	1
	.byte	84
	.word	0,0
.L181:
	.word	-1,.L31,0,.L178-.L31
	.half	1
	.byte	86
	.word	0,0
.L182:
	.word	-1,.L31,0,.L178-.L31
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L5,0,.L172-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L173:
	.word	-1,.L5,0,.L172-.L5
	.half	1
	.byte	100
	.word	0,0
.L175:
	.word	-1,.L5,0,.L172-.L5
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_loc'
.L33:
	.word	-1,.L34,0,.L137-.L34
	.half	2
	.byte	138,0
	.word	0,0
.L139:
	.word	-1,.L34,0,.L137-.L34
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L140-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L141:
	.word	-1,.L36,0,.L140-.L36
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L161-.L38
	.half	2
	.byte	138,0
	.word	0,0
.L163:
	.word	-1,.L38,0,.L161-.L38
	.half	1
	.byte	84
	.word	0,0
.L164:
	.word	-1,.L38,.L246-.L38,.L7-.L38
	.half	1
	.byte	98
	.word	.L247-.L38,.L161-.L38
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_loc'
.L39:
	.word	-1,.L40,0,.L165-.L40
	.half	2
	.byte	138,0
	.word	0,0
.L166:
	.word	-1,.L40,0,.L165-.L40
	.half	1
	.byte	100
	.word	0,0
.L167:
	.word	-1,.L40,.L248-.L40,.L165-.L40
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_readData')
	.sect	'.debug_loc'
.L41:
	.word	-1,.L42,0,.L187-.L42
	.half	2
	.byte	138,0
	.word	0,0
.L190:
	.word	-1,.L42,0,.L187-.L42
	.half	1
	.byte	101
	.word	0,0
.L188:
	.word	-1,.L42,0,.L187-.L42
	.half	1
	.byte	100
	.word	0,0
.L194:
	.word	-1,.L42,.L14-.L42,.L250-.L42
	.half	1
	.byte	95
	.word	.L13-.L42,.L12-.L42
	.half	1
	.byte	95
	.word	0,0
.L193:
	.word	-1,.L42,.L249-.L42,.L12-.L42
	.half	1
	.byte	84
	.word	0,0
.L191:
	.word	-1,.L42,0,.L249-.L42
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_loc'
.L43:
	.word	-1,.L44,0,.L195-.L44
	.half	2
	.byte	138,0
	.word	0,0
.L199:
	.word	-1,.L44,0,.L195-.L44
	.half	1
	.byte	102
	.word	.L251-.L44,.L195-.L44
	.half	1
	.byte	101
	.word	0,0
.L196:
	.word	-1,.L44,0,.L195-.L44
	.half	1
	.byte	100
	.word	0,0
.L198:
	.word	-1,.L44,0,.L251-.L44
	.half	1
	.byte	101
	.word	0,0
.L201:
	.word	-1,.L44,0,.L252-.L44
	.half	1
	.byte	84
	.word	0,0
.L204:
	.word	-1,.L44,.L205-.L44,.L253-.L44
	.half	1
	.byte	95
	.word	0,0
.L207:
	.word	-1,.L44,.L253-.L44,.L254-.L44
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L209:
	.word	-1,.L44,.L255-.L44,.L195-.L44
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_loc'
.L45:
	.word	-1,.L46,0,.L168-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L169:
	.word	-1,.L46,0,.L256-.L46
	.half	1
	.byte	100
	.word	.L257-.L46,.L168-.L46
	.half	1
	.byte	111
	.word	0,0
.L171:
	.word	-1,.L46,.L256-.L46,.L258-.L46
	.half	1
	.byte	82
	.word	.L259-.L46,.L168-.L46
	.half	1
	.byte	88
	.word	.L260-.L46,.L261-.L46
	.half	1
	.byte	84
	.word	.L262-.L46,.L168-.L46
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L142-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L143:
	.word	-1,.L48,.L265-.L48,.L136-.L48
	.half	1
	.byte	100
	.word	0,.L142-.L48
	.half	1
	.byte	100
	.word	0,0
.L148:
	.word	-1,.L48,.L263-.L48,.L264-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	.L265-.L48,.L266-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L150:
	.word	-1,.L48,.L263-.L48,.L264-.L48
	.half	1
	.byte	81
	.word	.L265-.L48,.L267-.L48
	.half	1
	.byte	81
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	81
	.word	0,0
.L145:
	.word	-1,.L48,.L265-.L48,.L136-.L48
	.half	1
	.byte	84
	.word	0,.L142-.L48
	.half	1
	.byte	84
	.word	0,0
.L146:
	.word	-1,.L48,.L265-.L48,.L136-.L48
	.half	1
	.byte	85
	.word	0,.L142-.L48
	.half	1
	.byte	85
	.word	0,0
.L152:
	.word	-1,.L48,.L266-.L48,.L268-.L48
	.half	1
	.byte	95
	.word	.L269-.L48,.L136-.L48
	.half	1
	.byte	111
	.word	.L264-.L48,.L142-.L48
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_loc'
.L51:
	.word	-1,.L52,0,.L153-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L154:
	.word	-1,.L52,.L265-.L52,.L136-.L52
	.half	1
	.byte	100
	.word	0,.L153-.L52
	.half	1
	.byte	100
	.word	0,0
.L157:
	.word	-1,.L52,.L270-.L52,.L271-.L52
	.half	5
	.byte	144,32,157,32,0
	.word	.L265-.L52,.L266-.L52
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L158:
	.word	-1,.L52,.L270-.L52,.L271-.L52
	.half	1
	.byte	81
	.word	.L265-.L52,.L267-.L52
	.half	1
	.byte	81
	.word	.L16-.L52,.L17-.L52
	.half	1
	.byte	81
	.word	0,0
.L155:
	.word	-1,.L52,.L265-.L52,.L136-.L52
	.half	1
	.byte	84
	.word	0,.L153-.L52
	.half	1
	.byte	84
	.word	0,0
.L156:
	.word	-1,.L52,.L265-.L52,.L136-.L52
	.half	1
	.byte	85
	.word	0,.L153-.L52
	.half	1
	.byte	85
	.word	0,0
.L160:
	.word	-1,.L52,.L266-.L52,.L268-.L52
	.half	1
	.byte	95
	.word	.L269-.L52,.L136-.L52
	.half	1
	.byte	111
	.word	.L271-.L52,.L153-.L52
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_loc'
.L53:
	.word	-1,.L20,0,.L176-.L20
	.half	2
	.byte	138,0
	.word	0,0
.L177:
	.word	-1,.L20,0,.L176-.L20
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L210-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L215:
	.word	-1,.L55,0,.L272-.L55
	.half	1
	.byte	102
	.word	.L275-.L55,.L210-.L55
	.half	1
	.byte	109
	.word	.L281-.L55,.L280-.L55
	.half	1
	.byte	101
	.word	0,0
.L211:
	.word	-1,.L55,0,.L272-.L55
	.half	1
	.byte	100
	.word	.L273-.L55,.L210-.L55
	.half	1
	.byte	108
	.word	.L279-.L55,.L280-.L55
	.half	1
	.byte	100
	.word	0,0
.L221:
	.word	0,0
.L233:
	.word	0,0
.L213:
	.word	-1,.L55,0,.L272-.L55
	.half	1
	.byte	101
	.word	.L274-.L55,.L25-.L55
	.half	1
	.byte	111
	.word	0,0
.L217:
	.word	-1,.L55,0,.L272-.L55
	.half	1
	.byte	103
	.word	.L276-.L55,.L210-.L55
	.half	1
	.byte	110
	.word	0,0
.L226:
	.word	-1,.L55,.L277-.L55,.L272-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L229:
	.word	-1,.L55,.L278-.L55,.L22-.L55
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxEray_writeData')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L236-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L57,0,.L236-.L57
	.half	1
	.byte	101
	.word	0,0
.L237:
	.word	-1,.L57,0,.L236-.L57
	.half	1
	.byte	100
	.word	0,0
.L242:
	.word	-1,.L57,.L28-.L57,.L283-.L57
	.half	1
	.byte	95
	.word	.L27-.L57,.L26-.L57
	.half	1
	.byte	95
	.word	0,0
.L241:
	.word	-1,.L57,.L282-.L57,.L26-.L57
	.half	1
	.byte	84
	.word	0,0
.L239:
	.word	-1,.L57,0,.L282-.L57
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L462:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxEray_calcHeaderCrc')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L31,.L178-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_changePocState')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L5,.L172-.L5
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_clearAllFlags')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L34,.L137-.L34
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_enableInterruptLines')
	.sect	'.debug_frame'
	.word	20
	.word	.L462,.L36,.L140-.L36
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L38,.L161-.L38
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L462,.L40,.L165-.L40
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_readData')
	.sect	'.debug_frame'
	.word	20
	.word	.L462,.L42,.L187-.L42
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxEray_readFrame')
	.sect	'.debug_frame'
	.word	12
	.word	.L462,.L44,.L195-.L44
	.sdecl	'.debug_frame',debug,cluster('IfxEray_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L462,.L46,.L168-.L46
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setMessageBufferInterruptDestination')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L48,.L142-.L48
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setNewDataInterruptDestination')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L52,.L153-.L52
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setPocReady')
	.sect	'.debug_frame'
	.word	24
	.word	.L462,.L20,.L176-.L20
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxEray_setSlot')
	.sect	'.debug_frame'
	.word	12
	.word	.L462,.L55,.L210-.L55
	.sdecl	'.debug_frame',debug,cluster('IfxEray_writeData')
	.sect	'.debug_frame'
	.word	20
	.word	.L462,.L57,.L236-.L57
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L463:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L463,.L50,.L136-.L50
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\src\BaseSw\iLLD\TC26B\Tricore\Eray\Std\IfxEray.c	   364  
	; Module end
