	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\.IfxGtm_Atom_PwmHl.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc27xd -D__CPU_TC27XD__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c'

	
$TC16X
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getDeadtime',code,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getDeadtime'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_getDeadtime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     2   * \file IfxGtm_Atom_PwmHl.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     3   * \brief GTM PWMHL details
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    49  #include "IfxGtm_Atom_PwmHl.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    50  #include "_Utilities/Ifx_Assert.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    51  #include "stddef.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    52  #include "string.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    53  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    54  /** \addtogroup IfxLld_Gtm_Atom_PwmHl_PwmHl_StdIf_Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    55   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    56  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    57  /*------------------------Inline Function Prototypes--------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    58  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    59  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    60  /** \brief Inverts the active state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    61   * \param activeState Active state
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    62   * \return State
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    63   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    64  IFX_INLINE Ifx_ActiveState IfxGtm_Atom_PwmHl_invertActiveState(Ifx_ActiveState activeState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    65  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    66  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    67  /*-----------------------Private Function Prototypes--------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    68  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    69  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    70  /** \brief Sets switched to OFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    71   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    72   * \param tOn ON time
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    73   * \param shift Shift value in ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    74   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    75   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    76  IFX_STATIC void IfxGtm_Atom_PwmHl_updateAndShiftOff(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    77  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    78  /** \brief Updates the x output duty cycle in center aligned and center aligned inverted modes
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    79   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    80   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    81   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    82   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    83  IFX_STATIC void IfxGtm_Atom_PwmHl_updateCenterAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    84  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    85  /** \brief Updates the x output duty cycle in edge aligned modes (left and right aligned)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    86   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    87   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    88   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    89   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    90  IFX_STATIC void IfxGtm_Atom_PwmHl_updateEdgeAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    91  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    92  /** \brief Set the outputs to inactive
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    93   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    94   * \param tOn T on
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    95   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    96   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    97  IFX_STATIC void IfxGtm_Atom_PwmHl_updateOff(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    98  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	    99  /** \brief Update Pulse
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   100   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   101   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   102   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   103   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   104   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   105  IFX_STATIC void IfxGtm_Atom_PwmHl_updatePulse(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   106  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   107  /** \brief Set Pulse to OFF
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   108   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   109   * \param tOn ON times. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   110   * \param offset Offset value in ticks. Phase 0 top, phase 1 top, ... phase 0 bottom, phase 1 botteom, ...
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   111   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   112   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   113  IFX_STATIC void IfxGtm_Atom_PwmHl_updatePulseOff(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   114  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   115  /** \brief Update Shift Center Aligned
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   116   * \param driver GTM ATOM PWM driver
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   117   * \param tOn ON time
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   118   * \param shift Shift value in ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   119   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   120   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   121  IFX_STATIC void IfxGtm_Atom_PwmHl_updateShiftCenterAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   122  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   123  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   124  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   125  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   126  /*------------------------Private Variables/Constants-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   127  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   128  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   129  IFX_STATIC IFX_CONST IfxGtm_Atom_PwmHl_Mode IfxGtm_Atom_PwmHl_modes[Ifx_Pwm_Mode_off + 1] = {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   130      {Ifx_Pwm_Mode_centerAligned,         FALSE, &IfxGtm_Atom_PwmHl_updateCenterAligned, &IfxGtm_Atom_PwmHl_updateShiftCenterAligned, &IfxGtm_Atom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   131      {Ifx_Pwm_Mode_centerAlignedInverted, TRUE,  &IfxGtm_Atom_PwmHl_updateCenterAligned, &IfxGtm_Atom_PwmHl_updateShiftCenterAligned, &IfxGtm_Atom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   132      {Ifx_Pwm_Mode_leftAligned,           FALSE, &IfxGtm_Atom_PwmHl_updateEdgeAligned,   &IfxGtm_Atom_PwmHl_updateAndShiftOff,        &IfxGtm_Atom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   133      {Ifx_Pwm_Mode_rightAligned,          TRUE,  &IfxGtm_Atom_PwmHl_updateEdgeAligned,   &IfxGtm_Atom_PwmHl_updateAndShiftOff,        &IfxGtm_Atom_PwmHl_updatePulse   },
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   134      {Ifx_Pwm_Mode_off,                   FALSE, &IfxGtm_Atom_PwmHl_updateOff,           &IfxGtm_Atom_PwmHl_updateAndShiftOff,        &IfxGtm_Atom_PwmHl_updatePulseOff},
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   135  };
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   136  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   138  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   139  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   140  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   141  IFX_INLINE Ifx_ActiveState IfxGtm_Atom_PwmHl_invertActiveState(Ifx_ActiveState activeState)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   142  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   143      return activeState == Ifx_ActiveState_low ? Ifx_ActiveState_high : Ifx_ActiveState_low;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   144  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   145  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   147  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   148  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   149  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   151  float32 IfxGtm_Atom_PwmHl_getDeadtime(IfxGtm_Atom_PwmHl *driver)
; Function IfxGtm_Atom_PwmHl_getDeadtime
.L93:
IfxGtm_Atom_PwmHl_getDeadtime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   153      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.deadtime);
	ld.w	d15,[a4]
.L724:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	fcall	.cocofun_6
.L554:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   154  PwmHl *driver)
	ret
.L361:
	
__IfxGtm_Atom_PwmHl_getDeadtime_function_end:
	.size	IfxGtm_Atom_PwmHl_getDeadtime,__IfxGtm_Atom_PwmHl_getDeadtime_function_end-IfxGtm_Atom_PwmHl_getDeadtime
.L178:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_6',code,cluster('.cocofun_6')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_6'
	.align	2
; Function .cocofun_6
.L95:
.cocofun_6:	.type	func
; Function body .cocofun_6, coco_iter:0
	ld.a	a15,[a4]20
.L986:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	utof	d15,d15
.L987:
	ld.w	d0,[a15]6
.L988:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	div.f	d2,d15,d0
	fret
.L288:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getMinPulse',code,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getMinPulse'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_getMinPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   155  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   156      return IfxStdIf_Timer_tickToS(driver->timer->base.clockFreq, driver->base.minPulse - driver->base.deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   157  }
; Function IfxGtm_Atom_PwmHl_getMinPulse
.L97:
IfxGtm_Atom_PwmHl_getMinPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   158  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   159  
	ld.w	d15,[a4]4
.L729:
	ld.w	d0,[a4]
.L730:
	sub	d15,d0
.L731:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
	fcall	.cocofun_6
.L732:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   160  Pwm_Mode IfxGtm_Atom_PwmHl_getMode(IfxGtm_Atom_PwmHl *driver)
	ret
.L364:
	
__IfxGtm_Atom_PwmHl_getMinPulse_function_end:
	.size	IfxGtm_Atom_PwmHl_getMinPulse,__IfxGtm_Atom_PwmHl_getMinPulse_function_end-IfxGtm_Atom_PwmHl_getMinPulse
.L183:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getMode',code,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_getMode'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_getMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   162      return driver->base.mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   163  }
; Function IfxGtm_Atom_PwmHl_getMode
.L99:
IfxGtm_Atom_PwmHl_getMode:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   165  
	ld.bu	d2,[a4]12
.L737:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   166  boolean IfxGtm_Atom_PwmHl_init(IfxGtm_Atom_PwmHl *driver, const IfxGtm_Atom_PwmHl_Config *config)
	ret
.L367:
	
__IfxGtm_Atom_PwmHl_getMode_function_end:
	.size	IfxGtm_Atom_PwmHl_getMode,__IfxGtm_Atom_PwmHl_getMode_function_end-IfxGtm_Atom_PwmHl_getMode
.L188:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_init',code,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_init'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_init

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   167  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   168      boolean            result       = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   169      uint16             channelMask;
; Function IfxGtm_Atom_PwmHl_init
.L101:
IfxGtm_Atom_PwmHl_init:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   170      uint16             channelsMask = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   171      uint32             channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   172  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   173      IfxGtm_Atom_Timer *timer = config->timer;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   174  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   175      driver->base.mode             = Ifx_Pwm_Mode_init;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   176      driver->timer                 = timer;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   177      driver->base.setMode          = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   178      driver->base.inverted         = FALSE;
	mov	d15,#5
	mov.aa	a12,a4
.L557:
	mov.aa	a15,a5
.L558:
	mov	d8,#0
	ld.a	a13,[a15]16
.L560:
	st.b	[a12]12,d15
.L658:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   179      driver->base.ccxActiveState   = config->base.ccxActiveState;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   180      driver->base.coutxActiveState = config->base.coutxActiveState;
	mov	d15,d8
	st.a	[a12]20,a13
.L561:
	st.b	[a12]13,d15
.L659:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   181      driver->base.channelCount     = config->base.channelCount;
	st.b	[a12]16,d15
.L660:
	sub.a	a10,#40
.L555:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   182  
	ld.bu	d15,[a15]12
.L562:
	st.b	[a12]14,d15
.L661:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   183      IfxGtm_Atom_PwmHl_setDeadtime(driver, config->base.deadtime);
	ld.bu	d15,[a15]13
.L662:
	st.b	[a12]15,d15
.L663:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   184      IfxGtm_Atom_PwmHl_setMinPulse(driver, config->base.minPulse);
	ld.bu	d15,[a15]8
.L664:
	st.b	[a12]17,d15
.L665:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   185  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   186      driver->atom = &(timer->gtm->ATOM[config->atom]);
	ld.w	d4,[a15]
	call	IfxGtm_Atom_PwmHl_setDeadtime
.L556:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   187      /* Only one AGC  */
	ld.w	d4,[a15]4
	mov.aa	a4,a12
.L563:
	call	IfxGtm_Atom_PwmHl_setMinPulse
.L564:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   188      driver->agc  = (Ifx_GTM_ATOM_AGC *)&driver->atom->AGC.GLB_CTRL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   189  
	ld.a	a2,[a13]12
.L666:
	ld.bu	d15,[a15]20
	sha	d15,d15,#11
.L667:
	addsc.a	a2,a2,d15,#0
	movh.a	a3,#1
	add.a	a3,a2
	lea	a2,[a3]-12288
.L668:
	st.a	[a12]36,a2
.L669:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   190      IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, config->base.channelCount <= IFXGTM_ATOM_PWMHL_MAX_NUM_CHANNELS);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   191  
	lea	a2,[a2]64
.L670:
	st.a	[a12]40,a2
.L349:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   192      IfxGtm_Cmu_Clk clock = IfxGtm_Atom_Ch_getClockSource(timer->atom, timer->timerChannel);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   193  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   194      for (channelIndex = 0; channelIndex < config->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   195      {
	ld.a	a4,[a13]16
.L671:
	ld.b	d4,[a13]25
	call	IfxGtm_Atom_Ch_getClockSource
.L565:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   196          IfxGtm_Atom_Ch channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   197          /* CCX */
	mov	d9,d2
	mov.aa	a14,a12
.L566:
	mov	d10,#0
	j	.L5
.L6:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   198          channel                   = config->ccx[channelIndex]->channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   199          driver->ccx[channelIndex] = channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   200          channelMask               = 1 << channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   201          channelsMask             |= channelMask;
	ld.a	a2,[a15]24
.L672:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   203          /* Initialize the timer part */
	mov	d0,#1
.L673:
	addsc.a	a2,a2,d10,#2
	ld.a	a2,[a2]
.L674:
	ld.b	d4,[a2]1
.L568:
	st.b	[a14]44,d4
.L675:
	sha	d0,d0,d4
.L676:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   204          IfxGtm_Atom_Ch_configurePwmMode(driver->atom, channel, clock,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   205              driver->base.inverted ? config->base.ccxActiveState :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   206              IfxGtm_Atom_PwmHl_invertActiveState(config->base.ccxActiveState),
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   207              IfxGtm_Atom_Ch_ResetEvent_onTrigger, IfxGtm_Atom_Ch_OutputTrigger_forward);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   208  
	ld.bu	d15,[a12]16
.L677:
	extr.u	d0,d0,#0,#16
	ld.bu	d6,[a15]12
.L570:
	or	d8,d0
.L678:
	jne	d15,#0,.L8
.L679:
	eq	d6,d6,#0
.L8:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   209          /* Initialize the port */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   210          if (config->initPins == TRUE)
	mov	d5,d9
	ld.a	a4,[a12]36
.L572:
	mov	d0,#0
	st.b	[a10],d0
.L571:
	mov	d7,#1
	call	IfxGtm_Atom_Ch_configurePwmMode
.L569:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   211          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   212              IfxGtm_PinMap_setAtomTout(config->ccx[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   213                  config->base.outputMode, config->base.outputDriver);
	ld.bu	d15,[a15]32
.L680:
	jne	d15,#1,.L9
.L681:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   214          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   215  
	ld.a	a2,[a15]24
.L682:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   216          /* COUTX */
	ld.bu	d4,[a15]10
.L683:
	ld.bu	d5,[a15]11
.L684:
	addsc.a	a2,a2,d10,#2
	ld.a	a4,[a2]
.L685:
	call	IfxGtm_PinMap_setAtomTout
.L9:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   217          channel                     = config->coutx[channelIndex]->channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   218          driver->coutx[channelIndex] = channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   219          channelMask                 = 1 << channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   220          channelsMask               |= channelMask;
	ld.a	a2,[a15]28
.L686:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   221  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   222          /* Initialize the timer part */
	mov	d15,#1
.L687:
	addsc.a	a2,a2,d10,#2
	ld.a	a2,[a2]
.L688:
	ld.b	d4,[a2]1
.L573:
	st.b	[a14]52,d4
.L689:
	sha	d15,d15,d4
	add.a	a14,#1
.L690:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   223          IfxGtm_Atom_Ch_configurePwmMode(driver->atom, channel, clock,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   224              driver->base.inverted ?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   225              IfxGtm_Atom_PwmHl_invertActiveState(config->base.coutxActiveState)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   226              : config->base.coutxActiveState,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   227              IfxGtm_Atom_Ch_ResetEvent_onTrigger, IfxGtm_Atom_Ch_OutputTrigger_forward);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   228  
	extr.u	d15,d15,#0,#16
	ld.bu	d6,[a15]13
.L575:
	or	d8,d15
	ld.bu	d15,[a12]16
.L576:
	jeq	d15,#0,.L10
.L691:
	eq	d6,d6,#0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   229          /* Initialize the port */
.L10:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   230          if (config->initPins == TRUE)
	mov	d5,d9
	ld.a	a4,[a12]36
.L577:
	mov	d15,#0
	st.b	[a10],d15
.L692:
	mov	d7,#1
	call	IfxGtm_Atom_Ch_configurePwmMode
.L574:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   231          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   232              IfxGtm_PinMap_setAtomTout(config->coutx[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   233                  config->base.outputMode, config->base.outputDriver);
	ld.bu	d15,[a15]32
.L693:
	jne	d15,#1,.L12
.L694:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   234          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   235      }
	ld.a	a2,[a15]28
.L695:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   236  
	ld.bu	d4,[a15]10
.L696:
	ld.bu	d5,[a15]11
.L697:
	addsc.a	a2,a2,d10,#2
	ld.a	a4,[a2]
.L698:
	call	IfxGtm_PinMap_setAtomTout
.L12:
	add	d10,#1
.L5:
	ld.bu	d15,[a15]8
.L699:
	jlt.u	d10,d15,.L6
.L700:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   237      IfxGtm_Atom_Agc_enableChannelsOutput(driver->agc, channelsMask, 0, TRUE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   238      IfxGtm_Atom_Agc_enableChannels(driver->agc, channelsMask, 0, TRUE);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   239  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   240      IfxGtm_Atom_PwmHl_setMode(driver, Ifx_Pwm_Mode_off);
	mov	d4,d8
	ld.a	a4,[a12]40
.L578:
	mov	d5,#0
.L701:
	mov	d6,#1
	call	IfxGtm_Atom_Agc_enableChannelsOutput
.L579:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   241  
	mov	d4,d8
	ld.a	a4,[a12]40
.L580:
	mov	d5,#0
.L702:
	mov	d6,#1
	call	IfxGtm_Atom_Agc_enableChannels
.L581:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   242      Ifx_TimerValue tOn[IFXGTM_ATOM_PWMHL_MAX_NUM_CHANNELS] = {0};
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   243      IfxGtm_Atom_PwmHl_updateOff(driver, tOn); /* tOn do not need defined values */
	mov	d4,#4
	mov.aa	a4,a12
.L582:
	call	IfxGtm_Atom_PwmHl_setMode
.L354:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   244  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   245      /* Transfer the shadow registers */
	movh.a	a15,#@his(.1.ini)
.L559:
	lea	a15,[a15]@los(.1.ini)
.L703:
	lea	a2,[a10]4
	mov.a	a4,#7
.L13:
	ld.w	d15,[a15+]
	st.w	[a2+],d15
	loop	a4,.L13
.L704:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   246      IfxGtm_Atom_Agc_setChannelsForceUpdate(driver->agc, channelsMask, 0, 0, 0);
	lea	a5,[a10]4
	mov.aa	a4,a12
.L583:
	call	IfxGtm_Atom_PwmHl_updateOff
.L584:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   247      IfxGtm_Atom_Agc_trigger(driver->agc);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   248      IfxGtm_Atom_Agc_setChannelsForceUpdate(driver->agc, 0, channelsMask, 0, 0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   249  
	mov	d5,#0
	ld.a	a4,[a12]40
.L705:
	mov	d4,d8
.L585:
	mov	e6,d5,d5
	call	IfxGtm_Atom_Agc_setChannelsForceUpdate
.L586:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   250      /* Enable timer to update the channels */
	ld.a	a4,[a12]40
	call	IfxGtm_Atom_Agc_trigger
.L706:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   251  
	mov	d4,#0
	ld.a	a4,[a12]40
.L707:
	mov	d5,d8
.L587:
	mov	e6,d4,d4
	call	IfxGtm_Atom_Agc_setChannelsForceUpdate
.L588:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   252      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   253      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   254          IfxGtm_Atom_Timer_addToChannelMask(timer, driver->ccx[channelIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   255          IfxGtm_Atom_Timer_addToChannelMask(timer, driver->coutx[channelIndex]);
	mov	d15,#0
	mov.aa	a15,a12
.L567:
	j	.L14
.L15:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   256      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   257  
	ld.b	d4,[a15]44
	mov.aa	a4,a13
.L589:
	call	IfxGtm_Atom_Timer_addToChannelMask
.L590:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   258      return result;
	ld.b	d4,[a15]52
	mov.aa	a4,a13
.L591:
	call	IfxGtm_Atom_Timer_addToChannelMask
.L592:
	add	d15,#1
	add.a	a15,#1
.L14:
	ld.bu	d0,[a12]17
.L708:
	jlt.u	d15,d0,.L15
.L709:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   259  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   261  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   262  void IfxGtm_Atom_PwmHl_initConfig(IfxGtm_Atom_PwmHl_Config *config)
	mov	d2,#1
	ret
.L337:
	
__IfxGtm_Atom_PwmHl_init_function_end:
	.size	IfxGtm_Atom_PwmHl_init,__IfxGtm_Atom_PwmHl_init_function_end-IfxGtm_Atom_PwmHl_init
.L168:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_initConfig',code,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_initConfig'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_initConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   263  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   264      IfxStdIf_PwmHl_initConfig(&config->base);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   265      config->timer    = NULL_PTR;
; Function IfxGtm_Atom_PwmHl_initConfig
.L103:
IfxGtm_Atom_PwmHl_initConfig:	.type	func
	mov.aa	a12,a4
.L594:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   266      config->atom     = IfxGtm_Atom_0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   267      config->ccx      = NULL_PTR;
	call	IfxStdIf_PwmHl_initConfig
.L593:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   268      config->coutx    = NULL_PTR;
	mov.a	a15,#0
.L714:
	st.a	[a12]16,a15
.L715:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   269      config->initPins = TRUE;
	mov	d15,#0
	st.b	[a12]20,d15
.L716:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   270  }
	st.a	[a12]24,a15
.L717:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   271  
	st.a	[a12]28,a15
.L718:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   272  
	mov	d15,#1
	st.b	[a12]32,d15
.L719:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   273  boolean IfxGtm_Atom_PwmHl_setDeadtime(IfxGtm_Atom_PwmHl *driver, float32 deadtime)
	ret
.L357:
	
__IfxGtm_Atom_PwmHl_initConfig_function_end:
	.size	IfxGtm_Atom_PwmHl_initConfig,__IfxGtm_Atom_PwmHl_initConfig_function_end-IfxGtm_Atom_PwmHl_initConfig
.L173:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setDeadtime',code,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setDeadtime'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setDeadtime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   274  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   275      Ifx_TimerValue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   276      driver->base.deadtime = value;
; Function IfxGtm_Atom_PwmHl_setDeadtime
.L105:
IfxGtm_Atom_PwmHl_setDeadtime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   277  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   278      return TRUE;
	fcall	.cocofun_7
.L742:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   279  }
	st.w	[a4],d15
.L595:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   280  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   282  boolean IfxGtm_Atom_PwmHl_setMinPulse(IfxGtm_Atom_PwmHl *driver, float32 minPulse)
	mov	d2,#1
	ret
.L369:
	
__IfxGtm_Atom_PwmHl_setDeadtime_function_end:
	.size	IfxGtm_Atom_PwmHl_setDeadtime,__IfxGtm_Atom_PwmHl_setDeadtime_function_end-IfxGtm_Atom_PwmHl_setDeadtime
.L193:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_7',code,cluster('.cocofun_7')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_7'
	.align	2
; Function .cocofun_7
.L107:
.cocofun_7:	.type	func
; Function body .cocofun_7, coco_iter:0
	ld.a	a15,[a4]20
.L993:
	ld.w	d15,[a15]6
.L994:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d15,d4,d15
	ftouz	d15,d15
	fret
.L293:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setMinPulse',code,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setMinPulse'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setMinPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   283  ue value = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, minPulse);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   285      driver->base.minPulse = value + driver->base.deadtime;
; Function IfxGtm_Atom_PwmHl_setMinPulse
.L109:
IfxGtm_Atom_PwmHl_setMinPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   286      driver->base.maxPulse = driver->timer->base.period - driver->base.minPulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   287  
	fcall	.cocofun_7
.L596:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   288      return TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   289  }
	ld.w	d0,[a4]
.L747:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   290  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   291  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   292  boolean IfxGtm_Atom_PwmHl_setMode(IfxGtm_Atom_PwmHl *driver, Ifx_Pwm_Mode mode)
	mov	d2,#1
.L748:
	add	d15,d0
	st.w	[a4]4,d15
.L749:
	ld.w	d0,[a15]
.L750:
	sub	d0,d15
	st.w	[a4]8,d0
.L751:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   293  {
	ret
.L373:
	
__IfxGtm_Atom_PwmHl_setMinPulse_function_end:
	.size	IfxGtm_Atom_PwmHl_setMinPulse,__IfxGtm_Atom_PwmHl_setMinPulse_function_end-IfxGtm_Atom_PwmHl_setMinPulse
.L198:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setMode',code,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setMode'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setMode

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   294      boolean                 result = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   295      IfxGtm_Atom_PwmHl_Base *base   = &driver->base;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   296  
; Function IfxGtm_Atom_PwmHl_setMode
.L111:
IfxGtm_Atom_PwmHl_setMode:	.type	func
	mov.aa	a15,a4
.L598:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   297      if (base->mode != mode)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   298      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   299          if ((mode > Ifx_Pwm_Mode_off) || (IfxGtm_Atom_PwmHl_modes[mode].update == NULL_PTR))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   300          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   301              mode   = Ifx_Pwm_Mode_off;
	ld.bu	d15,[a15]12
.L756:
	mov	d9,#1
.L599:
	jeq	d15,d4,.L19
.L757:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   302              result = FALSE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   303          }
	jge.u	d4,#5,.L20
.L758:
	fcall	.cocofun_8
.L759:
	ld.w	d15,[a2]4
.L760:
	jne	d15,#0,.L21
.L20:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   304  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   305          IFX_ASSERT(IFX_VERBOSE_LEVEL_ERROR, mode == IfxGtm_Atom_PwmHl_modes[mode].mode);
	mov	d4,#4
.L761:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   306  
	mov	d9,#0
.L21:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   307          base->mode             = mode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   308          driver->update         = IfxGtm_Atom_PwmHl_modes[mode].update;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   309          driver->updateAndShift = IfxGtm_Atom_PwmHl_modes[mode].updateAndShift;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   310          driver->updatePulse    = IfxGtm_Atom_PwmHl_modes[mode].updatePulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   311  
	st.b	[a15]12,d4
.L762:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   312          if (base->mode != Ifx_Pwm_Mode_off)
	fcall	.cocofun_8
.L763:
	ld.a	a4,[a2]4
.L597:
	st.a	[a15]24,a4
.L764:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   313          {
	ld.a	a4,[a2]8
.L765:
	st.a	[a15]28,a4
.L766:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   314              base->inverted = IfxGtm_Atom_PwmHl_modes[mode].inverted;
	ld.a	a4,[a2]12
.L767:
	st.a	[a15]32,a4
.L768:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   315          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   316          else
	jeq	d4,#4,.L22
.L769:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   317          {   /* Keep previous inverted for off mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   318          }
	ld.bu	d15,[a2]1
.L770:
	st.b	[a15]16,d15
.L22:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   319  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   320          if (base->inverted)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   321          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   322              driver->ccxTemp   = driver->coutx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   323              driver->coutxTemp = driver->ccx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   324          }
	ld.bu	d15,[a15]16
.L771:
	jeq	d15,#0,.L23
.L772:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   325          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   326          {
	lea	a2,[a15]52
.L773:
	st.a	[a15]60,a2
.L774:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   327              driver->ccxTemp   = driver->ccx;
	lea	a2,[a15]44
.L775:
	j	.L24
.L23:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   328              driver->coutxTemp = driver->coutx;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   329          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   330  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   331          {   /* Workaround to enable the signal inversion required for center aligned inverted
	lea	a2,[a15]44
.L776:
	st.a	[a15]60,a2
.L777:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   332               * and right aligned modes */
	lea	a2,[a15]52
.L24:
	st.a	[a15]64,a2
.L383:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   333              /** \note Changing signal level may produce short circuit at the power stage,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   334               * in which case the inverter must be disable during this action.*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   335  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   336              /* Ifx_Pwm_Mode_centerAligned and Ifx_Pwm_Mode_LeftAligned use inverted=FALSE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   337              /* Ifx_Pwm_Mode_centerAlignedInverted and Ifx_Pwm_Mode_RightAligned use inverted=TRUE */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   338              uint32 channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   339  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   340              for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   341              {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   342                  IfxGtm_Atom_Ch channel;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   343  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   344                  channel = driver->ccx[channelIndex];
	mov	d8,#0
	mov.aa	a12,a15
.L600:
	j	.L25
.L26:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   345                  IfxGtm_Atom_Ch_setSignalLevel(driver->atom, channel, base->inverted
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   346                      ? base->ccxActiveState
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   347                      : IfxGtm_Atom_PwmHl_invertActiveState(driver->base.ccxActiveState));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   348  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   349                  channel = driver->coutx[channelIndex];
	ld.bu	d15,[a15]16
.L778:
	ld.b	d4,[a12]44
.L601:
	jeq	d15,#0,.L27
.L779:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   350                  IfxGtm_Atom_Ch_setSignalLevel(driver->atom, channel, base->inverted
	ld.bu	d5,[a15]14
.L780:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   351                      ? IfxGtm_Atom_PwmHl_invertActiveState(driver->base.coutxActiveState)
	j	.L28
.L27:
	ld.bu	d15,[a15]14
.L781:
	eq	d5,d15,#0
.L28:
	ld.a	a4,[a15]36
.L782:
	call	IfxGtm_Atom_Ch_setSignalLevel
.L602:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   352                      : base->coutxActiveState);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   353              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   354          }
	ld.bu	d15,[a15]16
.L783:
	ld.b	d4,[a12]52
.L603:
	add.a	a12,#1
.L784:
	jeq	d15,#0,.L29
.L785:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   355      }
	ld.bu	d15,[a15]15
.L786:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   356  
	eq	d5,d15,#0
	j	.L30
.L29:
	ld.bu	d5,[a15]15
.L30:
	ld.a	a4,[a15]36
.L787:
	call	IfxGtm_Atom_Ch_setSignalLevel
.L385:
	add	d8,#1
.L25:
	ld.bu	d15,[a15]17
.L788:
	jlt.u	d8,d15,.L26
.L19:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   357      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   358  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   360  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   361  void IfxGtm_Atom_PwmHl_setOnTime(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   362  {
	mov	d2,d9
	ret
.L376:
	
__IfxGtm_Atom_PwmHl_setMode_function_end:
	.size	IfxGtm_Atom_PwmHl_setMode,__IfxGtm_Atom_PwmHl_setMode_function_end-IfxGtm_Atom_PwmHl_setMode
.L203:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_8',code,cluster('.cocofun_8')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_8'
	.align	2
; Function .cocofun_8
.L113:
.cocofun_8:	.type	func
; Function body .cocofun_8, coco_iter:0
	sha	d15,d4,#4
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_modes)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_modes)
.L999:
	addsc.a	a2,a2,d15,#0
.L1000:
	fret
.L298:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setOnTime',code,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setOnTime'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setOnTime

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   363      driver->update(driver, tOn);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   364  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   365  
; Function IfxGtm_Atom_PwmHl_setOnTime
.L115:
IfxGtm_Atom_PwmHl_setOnTime:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   366  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   367  void IfxGtm_Atom_PwmHl_setOnTimeAndShift(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
	ld.a	a15,[a4]24
.L793:
	ji	a15
.L387:
	
__IfxGtm_Atom_PwmHl_setOnTime_function_end:
	.size	IfxGtm_Atom_PwmHl_setOnTime,__IfxGtm_Atom_PwmHl_setOnTime_function_end-IfxGtm_Atom_PwmHl_setOnTime
.L208:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setOnTimeAndShift',code,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setOnTimeAndShift'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setOnTimeAndShift

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   368  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   369      driver->updateAndShift(driver, tOn, shift);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   370  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   371  
; Function IfxGtm_Atom_PwmHl_setOnTimeAndShift
.L117:
IfxGtm_Atom_PwmHl_setOnTimeAndShift:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   372  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   373  void IfxGtm_Atom_PwmHl_setPulse(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset)
	ld.a	a15,[a4]28
.L798:
	ji	a15
.L391:
	
__IfxGtm_Atom_PwmHl_setOnTimeAndShift_function_end:
	.size	IfxGtm_Atom_PwmHl_setOnTimeAndShift,__IfxGtm_Atom_PwmHl_setOnTimeAndShift_function_end-IfxGtm_Atom_PwmHl_setOnTimeAndShift
.L213:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setPulse',code,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setPulse'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setPulse

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   374  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   375      driver->updatePulse(driver, tOn, offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   376  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   377  
; Function IfxGtm_Atom_PwmHl_setPulse
.L119:
IfxGtm_Atom_PwmHl_setPulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   378  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   379  void IfxGtm_Atom_PwmHl_setupChannels(IfxGtm_Atom_PwmHl *driver, boolean *activeCh, boolean *stuckSt)
	ld.a	a15,[a4]32
.L803:
	ji	a15
.L395:
	
__IfxGtm_Atom_PwmHl_setPulse_function_end:
	.size	IfxGtm_Atom_PwmHl_setPulse,__IfxGtm_Atom_PwmHl_setPulse_function_end-IfxGtm_Atom_PwmHl_setPulse
.L218:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setupChannels',code,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_setupChannels'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_setupChannels

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   380  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   381      /* Dummy Function for StdIf Compile*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   382      IFX_UNUSED_PARAMETER(driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   383      IFX_UNUSED_PARAMETER(activeCh)
; Function IfxGtm_Atom_PwmHl_setupChannels
.L121:
IfxGtm_Atom_PwmHl_setupChannels:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   384      IFX_UNUSED_PARAMETER(stuckSt)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   385  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   386  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   387  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   388  boolean IfxGtm_Atom_PwmHl_stdIfPwmHlInit(IfxStdIf_PwmHl *stdif, IfxGtm_Atom_PwmHl *driver)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   389  {
	ret
.L400:
	
__IfxGtm_Atom_PwmHl_setupChannels_function_end:
	.size	IfxGtm_Atom_PwmHl_setupChannels,__IfxGtm_Atom_PwmHl_setupChannels_function_end-IfxGtm_Atom_PwmHl_setupChannels
.L223:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_stdIfPwmHlInit',code,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_stdIfPwmHlInit'
	.align	2
	
	.global	IfxGtm_Atom_PwmHl_stdIfPwmHlInit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   390      /* Ensure the stdif is reset to zeros */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   391      memset(stdif, 0, sizeof(IfxStdIf_PwmHl));
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   392  
; Function IfxGtm_Atom_PwmHl_stdIfPwmHlInit
.L123:
IfxGtm_Atom_PwmHl_stdIfPwmHlInit:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   393      /* *INDENT-OFF* Note: this file was indented manually by the author. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   394      /* Set the API link */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   395      stdif->driver               = driver;
	mov	d4,#0
	mov.aa	a15,a4
.L605:
	mov	d5,#112
	mov.aa	a12,a5
.L606:
	call	memset
.L604:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   396      stdif->setDeadtime          = (IfxStdIf_PwmHl_SetDeadtime      )&IfxGtm_Atom_PwmHl_setDeadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   397      stdif->getDeadtime          = (IfxStdIf_PwmHl_GetDeadtime      )&IfxGtm_Atom_PwmHl_getDeadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   398      stdif->setMinPulse          = (IfxStdIf_PwmHl_SetMinPulse      )&IfxGtm_Atom_PwmHl_setMinPulse;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   399      stdif->getMinPulse          = (IfxStdIf_PwmHl_GetMinPulse      )&IfxGtm_Atom_PwmHl_getMinPulse;
	st.a	[a15],a12
.L812:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   400      stdif->getMode              = (IfxStdIf_PwmHl_GetMode          )&IfxGtm_Atom_PwmHl_getMode;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setDeadtime)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setDeadtime)
.L813:
	st.a	[a15]4,a2
.L814:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   401      stdif->setMode              = (IfxStdIf_PwmHl_SetMode          )&IfxGtm_Atom_PwmHl_setMode;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_getDeadtime)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_getDeadtime)
.L815:
	st.a	[a15]8,a2
.L816:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   402      stdif->setOnTime            = (IfxStdIf_PwmHl_SetOnTime        )&IfxGtm_Atom_PwmHl_setOnTime;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setMinPulse)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setMinPulse)
.L817:
	st.a	[a15]12,a2
.L818:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   403      stdif->setOnTimeAndShift    = (IfxStdIf_PwmHl_SetOnTimeAndShift)&IfxGtm_Atom_PwmHl_setOnTimeAndShift;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_getMinPulse)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_getMinPulse)
.L819:
	st.a	[a15]16,a2
.L820:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   404      stdif->setPulse             = (IfxStdIf_PwmHl_SetPulse         )&IfxGtm_Atom_PwmHl_setPulse;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_getMode)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_getMode)
.L821:
	st.a	[a15]20,a2
.L822:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   405      stdif->setupChannels        = (IfxStdIf_PwmHl_SetupChannels    )&IfxGtm_Atom_PwmHl_setupChannels;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setMode)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setMode)
.L823:
	st.a	[a15]24,a2
.L824:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   406      IfxGtm_Atom_Timer_stdIfTimerInit(&stdif->timer, driver->timer);
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setOnTime)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setOnTime)
.L825:
	st.a	[a15]28,a2
.L826:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   407      /* *INDENT-ON* */
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setOnTimeAndShift)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setOnTimeAndShift)
.L827:
	st.a	[a15]32,a2
.L828:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   408  
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setPulse)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setPulse)
.L829:
	st.a	[a15]36,a2
.L830:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   409      return TRUE;
	movh.a	a2,#@his(IfxGtm_Atom_PwmHl_setupChannels)
	lea	a2,[a2]@los(IfxGtm_Atom_PwmHl_setupChannels)
.L831:
	st.a	[a15]40,a2
.L832:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   410  }
	lea	a4,[a15]44
.L833:
	ld.a	a5,[a12]20
	call	IfxGtm_Atom_Timer_stdIfTimerInit
.L834:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   411  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   412  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   413  IFX_STATIC void IfxGtm_Atom_PwmHl_updateAndShiftOff(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   414  {
	mov	d2,#1
	ret
.L405:
	
__IfxGtm_Atom_PwmHl_stdIfPwmHlInit_function_end:
	.size	IfxGtm_Atom_PwmHl_stdIfPwmHlInit,__IfxGtm_Atom_PwmHl_stdIfPwmHlInit_function_end-IfxGtm_Atom_PwmHl_stdIfPwmHlInit
.L228:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateAndShiftOff',code,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateAndShiftOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   415      IfxGtm_Atom_PwmHl_updateOff(driver, NULL_PTR);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   416      IFX_UNUSED_PARAMETER(tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   417      IFX_UNUSED_PARAMETER(shift)
; Function IfxGtm_Atom_PwmHl_updateAndShiftOff
.L125:
IfxGtm_Atom_PwmHl_updateAndShiftOff:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   418  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   419  
	mov.a	a5,#0
.L607:
	j	IfxGtm_Atom_PwmHl_updateOff
.L409:
	
__IfxGtm_Atom_PwmHl_updateAndShiftOff_function_end:
	.size	IfxGtm_Atom_PwmHl_updateAndShiftOff,__IfxGtm_Atom_PwmHl_updateAndShiftOff_function_end-IfxGtm_Atom_PwmHl_updateAndShiftOff
.L233:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateCenterAligned',code,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateCenterAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   420  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   421  IFX_STATIC void IfxGtm_Atom_PwmHl_updateCenterAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   422  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   423      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   424      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   425      Ifx_TimerValue deadtime = driver->base.deadtime;
; Function IfxGtm_Atom_PwmHl_updateCenterAligned
.L127:
IfxGtm_Atom_PwmHl_updateCenterAligned:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   427      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   428  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   429      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
	fcall	.cocofun_12
.L619:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   430      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   431          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   432          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   433          x = tOn[channelIndex];
	j	.L33
.L34:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   434  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   435          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   436          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   437              x = period - x;
	addsc.a	a15,a5,d4,#2
	ld.w	d0,[a15]
.L610:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   438          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   439          else
	fcall	.cocofun_9
.L843:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   440          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   441  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   442          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   443          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   444              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   445          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   446          else if (x > driver->base.maxPulse)
	jlt.u	d0,d15,.L36
.L844:
	jlt.u	d2,d0,.L37
.L36:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   447          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   448              x = period;
	mov	d0,#0
	j	.L38
.L37:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   449          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   450          else
	ld.w	d15,[a4]8
.L845:
	ge.u	d15,d15,d0
.L846:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   451          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   452  
	cmovn	d0,d15,d3
.L38:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   453          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   454          if (x == period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   455          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   456              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   457                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   458                  2 /* 1st compare event (issue: expected to be 1)*/ + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   459              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   460                  period + 2 /* No compare event, issues has been seen with +1 */,
	fcall	.cocofun_4
.L847:
	jne	d0,d3,.L40
.L425:
	fcall	.cocofun_2
.L426:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   461                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   462          }
	j	.L41
.L40:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   463          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   464          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   465              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   466              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   467              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1);
	jne	d0,#0,.L42
.L848:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   468              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   469          }
	fcall	.cocofun_10
.L443:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d6
.L849:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d5
.L444:
	j	.L43
.L42:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   470            cm1 = (period - x) / 2; // CM1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   471              cm0 = (period + x) / 2; // CM0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   472              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   473              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   474          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   475      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   476  }
	sub	d15,d3,d0
	sh	d5,d15,#-1
.L621:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   477  
	add	d0,d3
.L620:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   478  
	sh	d6,d0,#-1
	fcall	.cocofun_11
.L43:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   479  IFX_STATIC void IfxGtm_Atom_PwmHl_updateEdgeAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn)
	fcall	.cocofun_3
.L41:
	fcall	.cocofun_13
.L33:
	ld.bu	d15,[a4]17
.L850:
	jlt.u	d4,d15,.L34
.L851:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   480  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   481      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   482      Ifx_TimerValue period;
	ret
.L413:
	
__IfxGtm_Atom_PwmHl_updateCenterAligned_function_end:
	.size	IfxGtm_Atom_PwmHl_updateCenterAligned,__IfxGtm_Atom_PwmHl_updateCenterAligned_function_end-IfxGtm_Atom_PwmHl_updateCenterAligned
.L238:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_13',code,cluster('.cocofun_13')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_13'
	.align	2
; Function .cocofun_13
.L129:
.cocofun_13:	.type	func
; Function body .cocofun_13, coco_iter:0
	add	d4,#1
.L626:
	extr.u	d4,d4,#0,#8
	fret
.L323:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_12',code,cluster('.cocofun_12')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_12'
	.align	2
; Function .cocofun_12
.L131:
.cocofun_12:	.type	func
; Function body .cocofun_12, coco_iter:0
	ld.a	a15,[a4]20
.L627:
	mov	d4,#0
	ld.w	d2,[a4]
.L608:
	ld.w	d3,[a15]
.L609:
	fret
.L318:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_11',code,cluster('.cocofun_11')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_11'
	.align	2
; Function .cocofun_11
.L133:
.cocofun_11:	.type	func
; Function body .cocofun_11, coco_iter:0
	fcall	.cocofun_15
.L622:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d6
.L648:
	add	d15,d5,d2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L623:
	fret
.L313:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_10',code,cluster('.cocofun_10')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_10'
	.align	2
; Function .cocofun_10
.L135:
.cocofun_10:	.type	func
; Function body .cocofun_10, coco_iter:0
	mov	d6,#1
.L618:
	add	d5,d3,#2
	fcall	.cocofun_15
.L617:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	fret
.L308:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_9',code,cluster('.cocofun_9')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_9'
	.align	2
; Function .cocofun_9
.L137:
.cocofun_9:	.type	func
; Function body .cocofun_9, coco_iter:0
	ld.bu	d15,[a4]16
.L636:
	jeq	d15,#0,.L35
.L1005:
	sub	d0,d3,d0
.L35:
	ld.w	d15,[a4]4
.L1006:
	fret
.L303:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_4',code,cluster('.cocofun_4')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_4'
	.align	2
; Function .cocofun_4
.L139:
.cocofun_4:	.type	func
; Function body .cocofun_4, coco_iter:0
	ld.a	a2,[a4]60
.L971:
	ld.a	a15,[a4]36
.L972:
	addsc.a	a2,a2,d4,#0
	ld.b	d1,[a2]0
.L973:
	fret
.L278:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_3'
	.align	2
; Function .cocofun_3
.L141:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	fcall	.cocofun_14
.L624:
	add	d6,d2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d6
.L625:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d5
	fret
.L273:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_2',code,cluster('.cocofun_2')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_2'
	.align	2
; Function .cocofun_2
.L143:
.cocofun_2:	.type	func
; Function body .cocofun_2, coco_iter:0
	fcall	.cocofun_15
.L612:
	add	d15,d3,#1

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d15
.L961:
	add	d15,d2,#2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L613:
	fcall	.cocofun_14
.L615:
	add	d15,d3,#2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d15
.L962:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	mov	d15,#2
	st.w	[a15]12,d15
.L616:
	fret
.L268:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateEdgeAligned',code,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateEdgeAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   483  Value deadtime = driver->base.deadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   484  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   485      period = driver->timer->base.period;
; Function IfxGtm_Atom_PwmHl_updateEdgeAligned
.L145:
IfxGtm_Atom_PwmHl_updateEdgeAligned:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   486  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   487      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   488      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   489          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
	fcall	.cocofun_12
.L629:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   490          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   491          x = tOn[channelIndex];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   492  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   493          if (driver->base.inverted != FALSE)
	j	.L44
.L45:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   494          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   495              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   496          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   497          else
	addsc.a	a15,a5,d4,#2
.L856:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   498          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   499  
	ld.bu	d15,[a4]16
.L857:
	ld.w	d5,[a15]
.L630:
	jeq	d15,#0,.L46
.L858:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   500          if ((x < driver->base.minPulse) || (x <= deadtime))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   501          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
	sub	d5,d3,d5
.L46:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   502              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   503          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   504          else if (x > driver->base.maxPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   505          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   506              x = period;
	ld.w	d15,[a4]4
.L859:
	jlt.u	d5,d15,.L47
.L860:
	jlt.u	d2,d5,.L48
.L47:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   507          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   508          else
	mov	d5,#0
	j	.L49
.L48:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   509          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   510  
	ld.w	d15,[a4]8
.L861:
	ge.u	d15,d15,d5
.L862:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   511          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   512          if (x == period)
	cmovn	d5,d15,d3
.L49:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   513          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   514              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   515                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   516                  2 /* 1st compare event (issue: expected to be 1)*/ + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   517              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   518                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   519                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   520          }
	fcall	.cocofun_4
.L863:
	jne	d5,d3,.L51
.L455:
	fcall	.cocofun_2
.L456:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   521          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   522          {
	j	.L52
.L51:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   523              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   524              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   525              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   526              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   527          }
	jne	d5,#0,.L53
.L864:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   528          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   529          {            /* x% duty cycle */
	mov	d5,#1
.L628:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   530              cm1 = 2; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   531              cm0 = x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
	add	d6,d3,#2
	fcall	.cocofun_15
.L463:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d5
.L865:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d6
.L464:
	j	.L54
.L53:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   532  r->atom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   533              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   534          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   535      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   536  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   537  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   538  
	mov	d6,#2
	fcall	.cocofun_15
.L465:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d5
.L866:
	add	d15,d2,#2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L54:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   539  TIC void IfxGtm_Atom_PwmHl_updateOff(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn)
	fcall	.cocofun_14
.L466:
	add	d5,d2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d5
.L631:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d6
.L52:
	fcall	.cocofun_13
.L44:
	ld.bu	d15,[a4]17
.L867:
	jlt.u	d4,d15,.L45
.L868:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   540  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   541      IFX_UNUSED_PARAMETER(tOn)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   542      uint8 channelIndex;
	ret
.L445:
	
__IfxGtm_Atom_PwmHl_updateEdgeAligned_function_end:
	.size	IfxGtm_Atom_PwmHl_updateEdgeAligned,__IfxGtm_Atom_PwmHl_updateEdgeAligned_function_end-IfxGtm_Atom_PwmHl_updateEdgeAligned
.L243:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_15',code,cluster('.cocofun_15')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_15'
	.align	2
; Function .cocofun_15
.L147:
.cocofun_15:	.type	func
; Function body .cocofun_15, coco_iter:2
	mov.d	d0,a15
.L611:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	sha	d1,#7
.L1034:
	add	d0,d1
.L1035:
	mov.a	a15,d0
	fret
.L333:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_14',code,cluster('.cocofun_14')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_14'
	.align	2
; Function .cocofun_14
.L149:
.cocofun_14:	.type	func
; Function body .cocofun_14, coco_iter:1
	ld.a	a2,[a4]64
.L1027:
	ld.a	a15,[a4]36
.L1028:
	addsc.a	a2,a2,d4,#0
	ld.b	d1,[a2]0
.L1029:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
	fcall	.cocofun_15
.L614:
	fret
.L328:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateOff',code,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   543    Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   544      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   545  
; Function IfxGtm_Atom_PwmHl_updateOff
.L151:
IfxGtm_Atom_PwmHl_updateOff:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   546      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   547      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   548          IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   549              2 /* 1 will keep the previous level*/, period + 2);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   550          IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], period + 1, 2);
	ld.a	a15,[a4]20
.L873:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   551      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   552  }
	mov	d1,#0
.L473:
	mov	d2,#2
.L474:
	ld.w	d0,[a15]
.L633:
	j	.L55
.L56:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   553  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   554  
	ld.a	a15,[a4]36
.L874:
	ld.a	a2,[a4]60
.L875:
	fcall	.cocofun_5
.L480:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d2
.L876:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   555  oid IfxGtm_Atom_PwmHl_updatePulse(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset)
	add	d15,d0,#2

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L481:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   556  
	ld.a	a15,[a4]36
.L877:
	ld.a	a2,[a4]64
.L878:
	fcall	.cocofun_5
.L482:
	add	d15,d0,#1

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d15
.L483:
	add	d1,#1

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d2
.L632:
	extr.u	d1,d1,#0,#8
.L55:
	ld.bu	d15,[a4]17
.L879:
	jlt.u	d1,d15,.L56
.L880:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   557      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   558      Ifx_TimerValue period;
	ret
.L467:
	
__IfxGtm_Atom_PwmHl_updateOff_function_end:
	.size	IfxGtm_Atom_PwmHl_updateOff,__IfxGtm_Atom_PwmHl_updateOff_function_end-IfxGtm_Atom_PwmHl_updateOff
.L248:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl..cocofun_5',code,cluster('.cocofun_5')
	.sect	'.text.IfxGtm_Atom_PwmHl..cocofun_5'
	.align	2
; Function .cocofun_5
.L153:
.cocofun_5:	.type	func
; Function body .cocofun_5, coco_iter:0
	addsc.a	a2,a2,d1,#0
	ld.b	d3,[a2]0
.L978:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
	mov.d	d15,a15
.L979:
	sha	d3,#7
.L980:
	add	d15,d3
.L981:
	mov.a	a15,d15
	fret
.L283:
	; End of function
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updatePulse',code,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updatePulse'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   559     period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   560  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   561      /* Top channels */
; Function IfxGtm_Atom_PwmHl_updatePulse
.L155:
IfxGtm_Atom_PwmHl_updatePulse:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   562      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   563      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   564          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   565          Ifx_TimerValue o;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   566          Ifx_TimerValue cm0, cm1;
	ld.a	a15,[a4]20
.L885:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   568          x = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   569          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex]);
	mov	d4,#0
.L639:
	ld.w	d3,[a15]
.L640:
	j	.L57
.L58:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   570  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   571          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   572          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   573              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   574          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   575          else
	ld.a	a15,[a4]20
.L886:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   576          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   577  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   578          if ((x < driver->base.minPulse) || (o > period))
	ld.bu	d15,[a4]16
.L887:
	ld.w	d0,[a15]6
.L888:
	addsc.a	a15,a5,d4,#2
	ld.w	d1,[a15]
.L889:
	addsc.a	a15,a6,d4,#2
.L495:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d1,d1,d0
.L496:
	ld.w	d2,[a15]
.L503:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	ftouz	d1,d1
.L504:
	mul.f	d0,d2,d0
	ftouz	d0,d0
.L505:
	jeq	d15,#0,.L59
.L890:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   579    x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   580          }
	sub	d1,d3,d1
.L59:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   581          else if ((x > driver->base.maxPulse) || (o + x > period))
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   582          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   583              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   584          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   585          else
	ld.w	d15,[a4]4
.L891:
	jlt.u	d1,d15,.L60
.L892:
	jge.u	d3,d0,.L61
.L60:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   586          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   587  
	mov	d1,#0
	j	.L62
.L61:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   588          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   589          if (x == period)
	ld.w	d15,[a4]8
.L893:
	jlt.u	d15,d1,.L63
.L894:
	add	d15,d0,d1
.L895:
	jge.u	d3,d15,.L64
.L63:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   590          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   591              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex],
	mov	d1,d3
.L64:
.L62:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   592                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   593                  2 /* 1st compare event (issue: expected to be 1)*/);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   594          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   595          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   596          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   597              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   598              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   599              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1);
	ld.a	a2,[a4]60
.L896:
	ld.a	a15,[a4]36
.L897:
	addsc.a	a2,a2,d4,#0
	ld.b	d2,[a2]0
.L898:
	jne	d1,d3,.L65
.L506:
	mov.d	d0,a15
.L899:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	sha	d2,#7
.L900:
	add	d0,d2
.L901:
	mov.a	a15,d0
.L511:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   600  e
	add	d15,d3,#1
.L902:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d15
.L903:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	mov	d15,#2

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   601         {                /* x% duty cycle */
	j	.L66
.L65:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   602              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   603              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
	jne	d1,#0,.L67
.L904:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   604              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   605          }
	mov	d1,#1
.L634:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   606      }
	add	d15,d3,#2
	j	.L68
.L67:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   607  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   608      /* Bottom channels */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   609      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   610      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   611          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
	add	d15,d0,#2
.L635:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   612          Ifx_TimerValue o;
	add	d1,d0
.L68:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   613          Ifx_TimerValue cm0, cm1;
	mov.d	d0,a15
.L905:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	sha	d2,#7
.L906:
	add	d0,d2
.L907:
	mov.a	a15,d0
.L514:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d1
.L66:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L490:
	fcall	.cocofun_13
.L57:
	ld.bu	d15,[a4]17
.L908:
	jlt.u	d4,d15,.L58
.L909:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   614  IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, tOn[channelIndex + driver->base.channelCount]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   615          o = IfxStdIf_Timer_sToTick(driver->timer->base.clockFreq, offset[channelIndex + driver->base.channelCount]);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   616  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   617          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   618          {
	mov	d4,#0
	j	.L69
.L70:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   619              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   620          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   621          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   622          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   623  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   624          if (x < driver->base.minPulse)
	ld.a	a15,[a4]20
.L910:
	ld.bu	d0,[a4]17
.L911:
	add	d15,d4,d0
	ld.w	d1,[a15]6
.L912:
	addsc.a	a15,a5,d15,#2
	ld.w	d0,[a15]
.L913:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   625          {
	addsc.a	a15,a6,d15,#2
.L519:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	mul.f	d0,d0,d1
.L520:
	ld.w	d2,[a15]
.L522:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     2   * \file IfxStdIf_Timer.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     3   * \brief Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     4   * \ingroup IfxStdIf
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     6   * \version disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    45   * \defgroup library_srvsw_stdif_timer Standard interface: Timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    46   * \ingroup library_srvsw_stdif
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    47   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    48   * The standard interface timer (Timer) abstract the hardware used for timer feature. It provide, after proper initialization an hardware
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    49   * independant way to interact with the timer functionallity like setting period, trigger points, ...
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    51   * The figure below shows the standard timer interface.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    52   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    53   * \image html "Timer.png" "Standard timer interface"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    54   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    55   * This interface defines the following features:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    56   * - Timer with configurable frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    57   * - Configurable counting direction
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    58   * - Optional interrupt on timer event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    59   * - Optional trigger signal with:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    60   *   - Optional interrupt on trigger event with configurable service request provider and priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    61   *   - Configurable trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    62   *   - Configurable trigger edge
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    63   *   - trigger signal can be internal only or forwarded to a port pin
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    64   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    65  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    66  #ifndef IFXSTDIF_TIMER_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    67  #define IFXSTDIF_TIMER_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    68  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    69  #include "Cpu/Std/Ifx_Types.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    70  #include "Src/Std/IfxSrc.h"     
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    71  #include "Port/Std/IfxPort.h"   
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    72  #include "IfxStdIf.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    73  /** \brief Output event enable / disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    74  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    75  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    76      IfxStdIf_Timer_Output_disabled,              /**< \brief Timer output is set to the inactive, no change in the output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    77      IfxStdIf_Timer_Output_enabled                /**< \brief In case the trigger is enabled,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    78                                                    *          the output is set to active between time 0 to the trigger point,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    79                                                    *          and is set to inactive between the trigger point and the period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    80                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_up, the output is toggled when the timer is reset
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    81                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_down, the output is toggled when the timer is reloaded
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    82                                                    *          In case the trigger is disabled and counting direction if IfxStdIf_Timer_CountDir_upAndDown, the output is toggled when the timer reach 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    83                                                    *          In case the trigger is enabled the trigger is active before the trigger point and inactive after the trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    84                                                    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    85  } IfxStdIf_Timer_OutputEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    86  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    87  /** \brief Timer increment direction */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    88  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    89  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    90      IfxStdIf_Timer_CountDir_up,                      /**< \brief Timer is counting up */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    91      IfxStdIf_Timer_CountDir_upAndDown,               /**< \brief Timer is counting up and down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    92      IfxStdIf_Timer_CountDir_down                     /**< \brief Timer is counting down */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    93  } IfxStdIf_Timer_CountDir;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    94  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    95  /** \brief Forward declaration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    96  typedef struct IfxStdIf_Timer_ IfxStdIf_Timer;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    97  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    98  /** \brief Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	    99   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   100   * \return Return the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   101   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   102  typedef float32 (*IfxStdIf_Timer_GetFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   104  /** \brief Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   105   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   106   * \return Return the timer period in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   107   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   108  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetPeriod)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   109  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   110  /** \brief Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   111   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   112   * \return Return the timer resolution in seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   114  typedef float32 (*IfxStdIf_Timer_GetResolution)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   115  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   116  /** \brief Return the timer trigger point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   117   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   118   * \return Return the timer timer point
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   119   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   120  typedef Ifx_TimerValue (*IfxStdIf_Timer_GetTrigger)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   121  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   122  /** \brief Set the timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   123   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   124   * \param frequency Requested timer frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   125   * \retval TRUE The requested frequency could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   126   * \retval FALSE The requested frequency is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   128  typedef boolean (*IfxStdIf_Timer_SetFrequency)(IfxStdIf_InterfaceDriver stdIf, float32 frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   129  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   130  /** \brief Indicates the stdIf that the imput frequency has changed and that it should be taken in account
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   131   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   132   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   133   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   134  typedef void (*IfxStdIf_Timer_UpdateInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   136  /** \brief Apply requested updates.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   138   * Such requested update are calls to:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   139   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   140   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   141   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   142   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   143   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   144   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   145   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   146   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   147   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   148   * It is important to note, that only one call to Timer_applyUpdate() is allowed within
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   149   * one timer period!!!
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   150   * In order to ensure correct update synchronisation, disableUpdate() should have been called previously.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   151   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   152   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   153   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   154   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   155  typedef void (*IfxStdIf_Timer_ApplyUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   156  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   157  /** \brief Disable updates
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   158   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   159   * The following API action will not be taken in account before applyUpdate is called:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   160   * - IfxStdIf_Timer_setSingleMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   161   * - IfxStdIf_Timer_setTrigger()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   162   * - IfxStdIf_Timer_setPeriod() or IfxStdIf_Timer_setFrequency()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   163   * as well as PWM generation related calls such as:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   164   * - IfxStdIf_PwmHl_setDeadtime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   165   * - IfxStdIf_PwmHl_setMode()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   166   * - IfxStdIf_PwmHl_setOnTime()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   167   * - IfxStdIf_PwmHl_setupChannels()
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   168   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   169   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   170   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   171   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   172  typedef void (*IfxStdIf_Timer_DisableUpdate)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   173  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   174  /** \brief Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   175   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   176   * \return Return the timer input frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   177   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   178  typedef float32 (*IfxStdIf_Timer_GetInputFrequency)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   179  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   180  /** \brief Immediately start the timer.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   181   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   182   * Please note that other mechanism may avoid the timer to tick, such as when the
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   183   * global (input) clock to the timer block is inactive.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   184   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   185   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   186   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   187  typedef void (*IfxStdIf_Timer_Run)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   188  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   189  /** \brief Set the timer period.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   190   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   191   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   192   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   193   * \param period Period value in ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   194   * \retval TRUE The requested period could be set
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   195   * \retval FALSE The requested period is out of range
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   196   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   197  typedef boolean (*IfxStdIf_Timer_SetPeriod)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   198  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   199  /** \brief Stop timer at the end of the period
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   201   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   202   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   203   * \param enabled If TRUE, enable the single mode, else disable the single mode (continuous mode)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   204   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   205   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   206  typedef void (*IfxStdIf_Timer_SetSingleMode)(IfxStdIf_InterfaceDriver stdIf, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   207  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   208  /** \brief Set trigger point.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   209   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   210   * \see Timer_OutputEvent for the definition of the output level.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   211   * Active state is defined by Timer_Config::outputActiveState.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   212   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   213   * Timer_applyUpdate() shall be invoked in order this to take effect.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   214   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   215   * \param triggerPoint Trigger point in ticks from the period start.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   216   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   217   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   218  typedef void (*IfxStdIf_Timer_SetTrigger)(IfxStdIf_InterfaceDriver stdIf, Ifx_TimerValue triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   219  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   220  /** \brief Immediately stops the timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   221   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   222   * \return none
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   223   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   224  typedef void (*IfxStdIf_Timer_Stop)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   225  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   226  /** \brief Return the timer interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   227   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   228   * \return Return the timer interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   229   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   230  typedef boolean (*IfxStdIf_Timer_AckTimerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   231  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   232  /** \brief Return the trigger interrupt flag and reset it
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   233   * \param stdIf Pointer to the interface driver object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   234   * \return Return the trigger interrupt flag
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   236  typedef boolean (*IfxStdIf_Timer_AckTriggerIrq)(IfxStdIf_InterfaceDriver stdIf);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   238  /** \brief Standard interface object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   239   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   240  struct IfxStdIf_Timer_
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   241  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   242      IfxStdIf_InterfaceDriver            driver;                  /**< \brief Interface driver object                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   243      IfxStdIf_Timer_GetFrequency         getFrequency;            /**< \brief \see IfxStdIf_Timer_GetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   244      IfxStdIf_Timer_GetPeriod            getPeriod;               /**< \brief \see IfxStdIf_Timer_GetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   245      IfxStdIf_Timer_GetResolution        getResolution;           /**< \brief \see IfxStdIf_Timer_GetResolution        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   246      IfxStdIf_Timer_GetTrigger           getTrigger;              /**< \brief \see IfxStdIf_Timer_GetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   247      IfxStdIf_Timer_SetFrequency         setFrequency;            /**< \brief \see IfxStdIf_Timer_SetFrequency         */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   248      IfxStdIf_Timer_UpdateInputFrequency updateInputFrequency;    /**< \brief \see IfxStdIf_Timer_UpdateInputFrequency */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   249      IfxStdIf_Timer_ApplyUpdate          applyUpdate;             /**< \brief \see IfxStdIf_Timer_ApplyUpdate          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   250      IfxStdIf_Timer_DisableUpdate        disableUpdate;           /**< \brief \see IfxStdIf_Timer_DisableUpdate        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   251      IfxStdIf_Timer_GetInputFrequency    getInputFrequency;       /**< \brief \see IfxStdIf_Timer_GetInputFrequency    */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   252      IfxStdIf_Timer_Run                  run;                     /**< \brief \see IfxStdIf_Timer_Run                  */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   253      IfxStdIf_Timer_SetPeriod            setPeriod;               /**< \brief \see IfxStdIf_Timer_SetPeriod            */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   254      IfxStdIf_Timer_SetSingleMode        setSingleMode;           /**< \brief \see IfxStdIf_Timer_SetSingleMode        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   255      IfxStdIf_Timer_SetTrigger           setTrigger;              /**< \brief \see IfxStdIf_Timer_SetTrigger           */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   256      IfxStdIf_Timer_Stop                 stop;                    /**< \brief \see IfxStdIf_Timer_Stop                 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   257      IfxStdIf_Timer_AckTimerIrq          ackTimerIrq;             /**< \brief \see IfxStdIf_Timer_AckTimerIrq          */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   258      IfxStdIf_Timer_AckTriggerIrq        ackTriggerIrq;           /**< \brief \see IfxStdIf_Timer_AckTriggerIrq        */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   259  };
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   261  /** \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   262  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   264      boolean            enabled;             /**< \brief If true, the trigger functionality is Initialised, else ignored */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   265      Ifx_TimerValue     triggerPoint;        /**< \brief Trigger point in timer ticks */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   266      Ifx_Priority       isrPriority;         /**< \brief Interrupt isrPriority of the trigger interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   267      IfxSrc_Tos         isrProvider;         /**< \brief Interrupt service provider for the trigger interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   268      IfxPort_OutputMode outputMode;          /**< \brief Output mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   269      IfxPort_PadDriver  outputDriver;        /**< \brief Output pad driver */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   270      boolean            risingEdgeAtPeriod;  /**< \brief Set the clock signal polarity, if TRUE, the rising edge is at the period, else at the trigger offset. When the timer is stopped, the output is set to high */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   271      boolean            outputEnabled;       /**< \brief If TRUE, the output pin is enabled, else disabled. In case the output is disabled, the output pin is not initialized. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   272  } IfxStdIf_Timer_TrigConfig;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   274  /** \brief Timer configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   275  typedef struct
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   276  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   277      float32                   frequency;     /**< \brief PWM frequency in Hz. This parameter is only used to initialise the timer structure. An additional cell is required to build the timer. */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   278      Ifx_Priority              isrPriority;   /**< \brief Interrupt isrPriority of the timer interrupt, if 0 the interrupt is disable */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   279      IfxSrc_Tos                isrProvider;   /**< \brief Interrupt service provider for the timer interrupt */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   280      float32                   minResolution; /**< \brief Minimum resolution of the timer in seconds. if 0, this parameter is ignored. If the configuration does not enable this setting a warning is given */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   281      IfxStdIf_Timer_TrigConfig trigger;       /**< \brief Trigger configuration */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   282      IfxStdIf_Timer_CountDir   countDir;      /**< \brief Timer counting mode */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   283      float32                   startOffset;   /**< \brief FIXME make startOffset as Ifx_TimerValue. Timer initial offset in % of the period */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   284  } IfxStdIf_Timer_Config;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   285  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   286  /** \addtogroup library_srvsw_stdif_timer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   287   *  \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   288   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   289  /** \copydoc IfxStdIf_Timer_GetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   290   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   291   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   292  IFX_INLINE float32 IfxStdIf_Timer_getFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   293  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   294      return stdIf->getFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   295  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   296  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   298  /** \copydoc IfxStdIf_Timer_GetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   299   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   300   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   301  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getPeriod(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   302  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   303      return stdIf->getPeriod(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   304  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   306  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   307  /** \copydoc IfxStdIf_Timer_GetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   308   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   309   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   310  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_getTrigger(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   311  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   312      return stdIf->getTrigger(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   313  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   314  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   315  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   316  /** \copydoc IfxStdIf_Timer_GetResolution
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   317   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   318   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   319  IFX_INLINE float32 IfxStdIf_Timer_getResolution(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   320  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   321      return stdIf->getResolution(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   322  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   323  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   324  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   325  /** \copydoc IfxStdIf_Timer_SetFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   326   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   328  IFX_INLINE boolean IfxStdIf_Timer_setFrequency(IfxStdIf_Timer *stdIf, float32 frequency)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   329  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   330      return stdIf->setFrequency(stdIf->driver, frequency);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   331  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   332  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   333  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   334  /** \copydoc IfxStdIf_Timer_UpdateInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   335   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   336   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   337  IFX_INLINE void IfxStdIf_Timer_updateInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   338  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   339      stdIf->updateInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   340  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   341  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   342  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   343  /** \copydoc IfxStdIf_Timer_ApplyUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   344   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   345   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   346  IFX_INLINE void IfxStdIf_Timer_applyUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   347  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   348      stdIf->applyUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   349  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   350  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   351  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   352  /** \copydoc IfxStdIf_Timer_DisableUpdate
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   353   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   354   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   355  IFX_INLINE void IfxStdIf_Timer_disableUpdate(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   356  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   357      stdIf->disableUpdate(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   358  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   359  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   360  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   361  /** \copydoc IfxStdIf_Timer_GetInputFrequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   362   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   363   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   364  IFX_INLINE float32 IfxStdIf_Timer_getInputFrequency(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   365  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   366      return stdIf->getInputFrequency(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   367  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   368  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   369  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   370  /** \copydoc IfxStdIf_Timer_Run
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   371   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   372   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   373  IFX_INLINE void IfxStdIf_Timer_run(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   374  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   375      stdIf->run(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   376  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   377  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   378  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   379  /** \copydoc IfxStdIf_Timer_SetPeriod
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   380   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   381   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   382  IFX_INLINE boolean IfxStdIf_Timer_setPeriod(IfxStdIf_Timer *stdIf, Ifx_TimerValue period)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   383  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   384      return stdIf->setPeriod(stdIf->driver, period);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   385  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   386  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   388  /** \copydoc IfxStdIf_Timer_SetSingleMode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   389   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   390   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   391  IFX_INLINE void IfxStdIf_Timer_setSingleMode(IfxStdIf_Timer *stdIf, boolean enabled)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   392  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   393      stdIf->setSingleMode(stdIf->driver, enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   394  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   395  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   397  /** \copydoc IfxStdIf_Timer_SetTrigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   398   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   399   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   400  IFX_INLINE void IfxStdIf_Timer_setTrigger(IfxStdIf_Timer *stdIf, Ifx_TimerValue triggerPoint)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   401  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   402      stdIf->setTrigger(stdIf->driver, triggerPoint);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   403  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   404  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   405  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   406  /** \copydoc IfxStdIf_Timer_Stop
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   407   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   409  IFX_INLINE void IfxStdIf_Timer_stop(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   410  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   411      stdIf->stop(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   412  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   413  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   415  /** \copydoc IfxStdIf_Timer_AckTimerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   416   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   417   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   418  IFX_INLINE boolean IfxStdIf_Timer_ackTimerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   419  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   420      return stdIf->ackTimerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   421  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   423  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   424  /** \copydoc IfxStdIf_Timer_AckTriggerIrq
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   425   * \param stdIf Standard interface pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   426   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   427  IFX_INLINE boolean IfxStdIf_Timer_ackTriggerIrq(IfxStdIf_Timer *stdIf)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   428  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   429      return stdIf->ackTriggerIrq(stdIf->driver);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   430  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   431  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   432  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   433  /** \brief Convert timer ticks to seconds
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   434   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   435   * \param  ticks time value in ticks to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   436   * \return Return the converted time in s
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   438  IFX_INLINE float32 IfxStdIf_Timer_tickToS(float32 clockFreq, Ifx_TimerValue ticks)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   439  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   440      return ticks / clockFreq;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   441  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   442  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   443  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   444  /** \brief Convert seconds to timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   445   * \param  clockFreq Timer clock frequency
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   446   * \param  seconds time value in seconds to be converted
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   447   * \return Return the converted time in timer ticks
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   448   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   449  IFX_INLINE Ifx_TimerValue IfxStdIf_Timer_sToTick(float32 clockFreq, float32 seconds)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   450  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\Service\CpuGeneric\StdIf\IfxStdIf_Timer.h	   451      return seconds * clockFreq;
	ftouz	d0,d0
.L523:
	mul.f	d1,d2,d1
.L914:
	ftouz	d1,d1

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   626  x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   627          }
	fcall	.cocofun_9
.L524:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   628          else if (x > driver->base.maxPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   629          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   630              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   631          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   632          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   633          {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   634  
	jge.u	d0,d15,.L72
.L915:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   635          /* Special handling due to GTM issue */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   636          if (x == period)
	mov	d0,#0
	j	.L73
.L72:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   637          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   638              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex],
	ld.w	d15,[a4]8
.L916:
	ge.u	d15,d15,d0
.L917:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   639                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   640                  2 /* 1st compare event (issue: expected to be 1)*/);
	cmovn	d0,d15,d3
.L73:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   641          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   642          else if (x == 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   643          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   644              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   645              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   646              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   647          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   648          else
	ld.a	a2,[a4]64
.L918:
	ld.a	a15,[a4]36
.L919:
	addsc.a	a2,a2,d4,#0
	ld.b	d2,[a2]0
.L920:
	jne	d0,d3,.L75
.L525:
	mov.d	d15,a15
.L921:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	sha	d2,#7
.L922:
	add	d15,d2
.L923:
	mov.a	a15,d15
.L526:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   649  Shadow(driver->atom, driver->coutxTemp[channelIndex], cm0, cm1);
	add	d15,d3,#2
.L924:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d15
.L925:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	mov	d15,#2

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   650  IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0, cm1);
	j	.L76
.L75:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   651          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   652          else
	jne	d0,#0,.L77
.L926:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   653          {                /* x% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   654              cm1 = 2 + o; // CM1, set to 2 due to a GTM issue. should be 1 according to spec
	mov	d0,#1
.L637:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   655              cm0 = o + x; // CM0, set to x+2 due to a GTM issue. should be x+1 according to spec
	add	d15,d3,#2
	j	.L78
.L77:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   656              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   657          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   658      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   659  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   660  
	add	d15,d1,#2
.L638:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   661  
	add	d0,d1
.L78:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   662  IFX_STATIC void IfxGtm_Atom_PwmHl_updatePulseOff(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset)
	mov.d	d1,a15
.L927:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
	sha	d2,#7
.L928:
	add	d1,d2
.L929:
	mov.a	a15,d1
.L527:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	st.w	[a15]8,d0
.L76:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d15
.L515:
	fcall	.cocofun_13
.L69:
	ld.bu	d15,[a4]17
.L930:
	jlt.u	d4,d15,.L70
.L931:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   663  wmHl_updatePulseOff(IfxGtm_Atom_PwmHl *driver, float32 *tOn, float32 *offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   664  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   665      IFX_UNUSED_PARAMETER(tOn)
	ret
.L484:
	
__IfxGtm_Atom_PwmHl_updatePulse_function_end:
	.size	IfxGtm_Atom_PwmHl_updatePulse,__IfxGtm_Atom_PwmHl_updatePulse_function_end-IfxGtm_Atom_PwmHl_updatePulse
.L253:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updatePulseOff',code,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updatePulseOff'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   666      IFX_UNUSED_PARAMETER(offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   667  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   668      IfxGtm_Atom_PwmHl_updateOff(driver, NULL_PTR);
; Function IfxGtm_Atom_PwmHl_updatePulseOff
.L157:
IfxGtm_Atom_PwmHl_updatePulseOff:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   669  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   670  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   671  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   672  IFX_STATIC void IfxGtm_Atom_PwmHl_updateShiftCenterAligned(IfxGtm_Atom_PwmHl *driver, Ifx_TimerValue *tOn, Ifx_TimerValue *shift)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   673  {
	mov.a	a5,#0
.L641:
	j	IfxGtm_Atom_PwmHl_updateOff
.L528:
	
__IfxGtm_Atom_PwmHl_updatePulseOff_function_end:
	.size	IfxGtm_Atom_PwmHl_updatePulseOff,__IfxGtm_Atom_PwmHl_updatePulseOff_function_end-IfxGtm_Atom_PwmHl_updatePulseOff
.L258:
	; End of function
	
	.sdecl	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateShiftCenterAligned',code,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.text.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_updateShiftCenterAligned'
	.align	2
	

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   674      uint8          channelIndex;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   675      Ifx_TimerValue period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   676      Ifx_TimerValue deadtime = driver->base.deadtime;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   677  
; Function IfxGtm_Atom_PwmHl_updateShiftCenterAligned
.L159:
IfxGtm_Atom_PwmHl_updateShiftCenterAligned:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   678      period = driver->timer->base.period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   679  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   680      for (channelIndex = 0; channelIndex < driver->base.channelCount; channelIndex++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   681      {
	fcall	.cocofun_12
.L643:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   682          Ifx_TimerValue x; /* x=period*dutyCycle, x=OnTime+deadTime */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   683          Ifx_TimerValue s; /* Shift value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   684          Ifx_TimerValue cm0, cm1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   685          x = tOn[channelIndex];
	j	.L79
.L80:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   686  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   687          if (driver->base.inverted != FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   688          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   689              x = period - x;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   690          }
	addsc.a	a15,a5,d4,#2
.L940:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   691          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   692          {}
	ld.bu	d15,[a4]16
.L941:
	ld.w	d6,[a15]
.L642:
	jeq	d15,#0,.L81
.L942:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   693  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   694          if ((x < driver->base.minPulse) || (x <= deadtime))
	sub	d6,d3,d6
.L81:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   695          {   /* For deadtime condition: avoid leading edge of top channel to occur after the trailing edge */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   696              x = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   697          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   698          else if (x > driver->base.maxPulse)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   699          {
	ld.w	d15,[a4]4
.L943:
	jlt.u	d6,d15,.L82
.L944:
	jlt.u	d2,d6,.L83
.L82:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   700              x = period;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   701          }
	mov	d6,#0
	j	.L84
.L83:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   702          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   703          {}
	ld.w	d15,[a4]8
.L945:
	ge.u	d15,d15,d6
.L946:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   704  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   705          /* Special handling due to GTM issue */
	cmovn	d6,d15,d3
.L84:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   706          if (x == period)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   707          {   /* 100% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   708              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   709                  period + 1 /* No compare event */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   710                  2 /* 1st compare event (issue: expected to be 1)*/ + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   711              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex],
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   712                  period + 2 /* No compare event, issues has been seen with +1 */,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   713                  2 /* 1st compare event (issue: expected to be 1)*/);
	fcall	.cocofun_4
.L947:
	jne	d6,d3,.L86
.L543:
	fcall	.cocofun_2
.L544:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   714          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   715          else if (x == 0)
	j	.L87
.L86:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   716          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   717              cm0 = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   718              cm1 = period + 2;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   719              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   720              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	jne	d6,#0,.L88
.L948:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   721          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   722          else
	fcall	.cocofun_10
.L551:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     2   * \file IfxGtm_Atom.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     3   * \brief GTM  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     4   * \ingroup IfxLld_Gtm
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     7   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    44   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    45   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    46   * \defgroup IfxLld_Gtm_Std_Atom Atom Basic Functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    47   * \ingroup IfxLld_Gtm_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    48   * \defgroup IfxLld_Gtm_Std_Atom_Enumerations ATOM Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    49   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    50   * \defgroup IfxLld_Gtm_Std_Atom_Channel_Functions ATOM Channel Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    51   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    52   * \defgroup IfxLld_Gtm_Std_Atom_AGC_Functions ATOM AGC Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    53   * \ingroup IfxLld_Gtm_Std_Atom
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    54   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    55  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    56  #ifndef IFXGTM_ATOM_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    57  #define IFXGTM_ATOM_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    58  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    59  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    60  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    61  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    62  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    63  #include "_Impl/IfxGtm_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    64  #include "IfxGtm.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    65  #include "IfxGtm_Tbu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    66  #include "Src/Std/IfxSrc.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    67  #include "IfxGtm_Cmu.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    68  #include "stddef.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    69  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    70  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    71  /*--------------------------------Enumerations--------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    72  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    73  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    74  /** \addtogroup IfxLld_Gtm_Std_Atom_Enumerations
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    75   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    76  /** \brief Reset source for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    77   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    78  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    79  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    80      IfxGtm_Atom_Ch_OutputTrigger_forward  = 0, /**< \brief Forward the trigger from the previous channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    81      IfxGtm_Atom_Ch_OutputTrigger_generate = 1  /**< \brief Generate the trigger from the current channel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    82  } IfxGtm_Atom_Ch_OutputTrigger;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    83  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    84  /** \brief Reset event for channel counter CN0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    85   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    86  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    87  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    88      IfxGtm_Atom_Ch_ResetEvent_onCm0     = 0,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    89      IfxGtm_Atom_Ch_ResetEvent_onTrigger = 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    90  } IfxGtm_Atom_Ch_ResetEvent;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    91  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    92  /** \brief Enum for ATOM mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    93   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    94  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    95  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    96      IfxGtm_Atom_Mode_outputImmediate,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    97      IfxGtm_Atom_Mode_outputCompare,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    98      IfxGtm_Atom_Mode_outputPwm,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	    99      IfxGtm_Atom_Mode_outputSerial
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   100  } IfxGtm_Atom_Mode;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   101  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   102  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   103  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   104  /** \brief Enable/disable of Aru Input to ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   105   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   106  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   107  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   108      IfxGtm_Atom_AruInput_disabled = 0,  /**< \brief ARU input disabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   109      IfxGtm_Atom_AruInput_enabled  = 1   /**< \brief ARU input enabled */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   110  } IfxGtm_Atom_AruInput;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   111  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   112  /** \brief Match Compare control modes
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   113   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   114  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   115  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   116      IfxGtm_Atom_SomcControl_compareBoth     = 0,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   117      IfxGtm_Atom_SomcControl_compareBoth1    = 1,  /**< \brief compare CCU0 and CCU1 in parallel */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   118      IfxGtm_Atom_SomcControl_ccu0Ts0         = 2,  /**< \brief compare CCU0 against TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   119      IfxGtm_Atom_SomcControl_ccu1Ts12        = 3,  /**< \brief compare only CCU1 against TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   120      IfxGtm_Atom_SomcControl_ccu0ccu1Ts0     = 4,  /**< \brief compare CCU0 then CCU1, use TS0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   121      IfxGtm_Atom_SomcControl_ccu0ccu1Ts12    = 5,  /**< \brief compare CCU0 then CCU1. Use TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   122      IfxGtm_Atom_SomcControl_ccu0Ts0ccu1Ts12 = 6,  /**< \brief compare CCU0 with TS0 then CCU1 with TS1 or TS2 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   123      IfxGtm_Atom_SomcControl_cancelCompare   = 7   /**< \brief Cancel pending compare events */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   124  } IfxGtm_Atom_SomcControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   125  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   126  /** \brief SOMC signal level Control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   127   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   128  typedef enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   129  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   130      IfxGtm_Atom_SomcSignalLevelControl_noChange = 0,  /**< \brief no signal level change at output */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   131      IfxGtm_Atom_SomcSignalLevelControl_sl0out1  = 1,  /**< \brief SL= 0 -> Out=1; SL=1->Out=0 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   132      IfxGtm_Atom_SomcSignalLevelControl_sl0out0  = 2,  /**< \brief SL=0->Out=0; SL=1->Out=1 */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   133      IfxGtm_Atom_SomcSignalLevelControl_toggle   = 3   /**< \brief toggle the output signal level */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   134  } IfxGtm_Atom_SomcSignalLevelControl;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   135  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   136  /** \addtogroup IfxLld_Gtm_Std_Atom_Channel_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   137   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   138  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   139  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   140  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   141  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   143  /** \brief Returns the base addredd of selected Atom channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   144   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   145   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   146   * \return Pointer to channel base address
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   147   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   148  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   149  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   150  /** \brief Sets the compare 0 and 1 shadow values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   151   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   152   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   153   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   154   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   155   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   156   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   157  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   158  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   159  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   160  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   161  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   162  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   163  /** \brief Clears the channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   164   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   165   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   166   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   168  IFX_EXTERN void IfxGtm_Atom_Ch_clearOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   170  /** \brief Clears the channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   171   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   172   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   173   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   174   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   175  IFX_EXTERN void IfxGtm_Atom_Ch_clearZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   176  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   177  /** \brief
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   178   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   179   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   180   * \param clock Clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   181   * \param activeState Active State
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   182   * \param resetEvent Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   183   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   184   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   186  IFX_EXTERN void IfxGtm_Atom_Ch_configurePwmMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock, Ifx_ActiveState activeState, IfxGtm_Atom_Ch_ResetEvent resetEvent, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   188  /** \brief Returns the ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   189   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   190   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   191   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   192   * \return ATOM channel input clock frequency in Hz
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   193   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   194  IFX_EXTERN float32 IfxGtm_Atom_Ch_getClockFrequency(Ifx_GTM *gtm, Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   195  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   196  /** \brief Returns the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   197   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   198   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   199   * \return The clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   200   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   201  IFX_EXTERN IfxGtm_Cmu_Clk IfxGtm_Atom_Ch_getClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   202  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   203  /** \brief Returns the compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   204   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   205   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   206   * \return compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   207   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   208  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   209  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   210  /** \brief Returns the compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   211   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   212   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   213   * \return compare one pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   214   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   215  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareOnePointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   216  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   217  /** \brief Returns the compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   218   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   219   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   220   * \return compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   221   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   222  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   223  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   224  /** \brief Returns the compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   225   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   226   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   227   * \return compare zero pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   228   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   229  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getCompareZeroPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   230  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   231  /** \brief Gets the ATOM output level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   232   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   233   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   234   * \return TRUE the output is high, FALSE the output is low
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   236  IFX_EXTERN boolean IfxGtm_Atom_Ch_getOutputLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   238  /** \brief Returns a pointer to the ATOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   239   * \param gtm Pointer to GTM module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   240   * \param atom Specifies the atom object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   241   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   242   * \return Pointer to the TOM channel SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   243   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   244  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxGtm_Atom_Ch_getSrcPointer(Ifx_GTM *gtm, IfxGtm_Atom atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   245  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   246  /** \brief Returns the Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   247   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   248   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   249   * \return Timer pointer
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   250   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   251  IFX_EXTERN volatile uint32 *IfxGtm_Atom_Ch_getTimerPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   252  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   253  /** \brief Returns the status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   254   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   255   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   256   * \return Status of channel One notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   257   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   258  IFX_EXTERN boolean IfxGtm_Atom_Ch_isOneNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   259  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   260  /** \brief Returns the status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   261   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   262   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   263   * \return Status of channel Zero notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   264   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   265  IFX_EXTERN boolean IfxGtm_Atom_Ch_isZeroNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   267  /** \brief Raises the interrupt for Compare 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   268   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   269   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   270   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   271   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   272  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   274  /** \brief Raises the interrupt for Compare 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   275   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   276   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   277   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   278   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   279  IFX_EXTERN void IfxGtm_Atom_Ch_raiseInterruptZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   280  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   281  /** \brief Sets the channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   282   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   283   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   284   * \param clock Channel clock source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   285   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   286   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   287  IFX_EXTERN void IfxGtm_Atom_Ch_setClockSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Cmu_Clk clock);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   288  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   289  /** \brief Sets the compare 0 and 1 values
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   290   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   291   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   292   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   293   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   294   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   295   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   296  IFX_EXTERN void IfxGtm_Atom_Ch_setCompare(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   297  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   298  /** \brief Sets the compare 1 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   299   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   300   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   301   * \param compareOne Compare one value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   302   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   303   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   304  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOne(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   305  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   306  /** \brief Sets the compare 1 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   307   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   308   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   309   * \param shadowOne Compare one shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   310   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   311   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   312  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareOneShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   313  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   314  /** \brief Sets the compare 0 value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   315   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   316   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   317   * \param compareZero Compare zero value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   318   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   319   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   320  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZero(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 compareZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   321  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   322  /** \brief Sets the compare 0 shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   323   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   324   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   325   * \param shadowZero Compare zero shadow value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   326   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   327   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   328  IFX_EXTERN void IfxGtm_Atom_Ch_setCompareZeroShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   329  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   330  /** \brief Sets the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   331   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   332   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   333   * \param value Counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   334   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   335   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   336  IFX_EXTERN void IfxGtm_Atom_Ch_setCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   337  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   338  /** \brief set the Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   339   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   340   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   341   * \param mode Atom operating mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   342   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   343   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   344  IFX_EXTERN void IfxGtm_Atom_Ch_setMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Mode mode);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   345  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   346  /** \brief Sets the channel notification
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   347   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   348   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   349   * \param mode Interrupt mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   350   * \param interruptOnCompareZero If TRUE, an interrupt is generated on compare 0, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   351   * \param interruptOnCompareOne If TRUE, an interrupt is generated on compare 1, else no interrupt is generated
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   352   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   353   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   354  IFX_EXTERN void IfxGtm_Atom_Ch_setNotification(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_IrqMode mode, boolean interruptOnCompareZero, boolean interruptOnCompareOne);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   355  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   356  /** \brief Enable/disable the one shot mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   357   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   358   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   359   * \param enabled If TRUE, the feature is enabled, else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   360   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   361   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   362  IFX_EXTERN void IfxGtm_Atom_Ch_setOneShotMode(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   363  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   364  /** \brief Sets the channel clock source either from local or from previous channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   365   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   366   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   367   * \param event Channel reset event
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   368   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   369   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   370  IFX_EXTERN void IfxGtm_Atom_Ch_setResetSource(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_ResetEvent event);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   371  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   372  /** \brief Sets the signal level
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   373   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   374   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   375   * \param activeState Signal level active state. In case the channel is reset, the output is set to not active. The signal is active between 0 and the leading edge (CM1) and inactive between the leading edge and the trailing edge (CM0).
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   376   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   377   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   378  IFX_EXTERN void IfxGtm_Atom_Ch_setSignalLevel(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, Ifx_ActiveState activeState);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   379  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   380  /** \brief Sets the channel trigger output
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   381   * \param atom Pointer to the ATOM object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   382   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   383   * \param trigger Channel trigger output mode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   384   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   385   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   386  IFX_EXTERN void IfxGtm_Atom_Ch_setTriggerOutput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_Ch_OutputTrigger trigger);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   387  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   388  /** \brief Get the counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   389   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   390   * \param channel channel index of the ATOM
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   391   * \return counter value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   392   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   393  IFX_EXTERN uint32 IfxGtm_Atom_Ch_getCounterValue(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   394  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   395  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   396  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   397  /** \addtogroup IfxLld_Gtm_Std_Atom_AGC_Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   398   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   399  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   400  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   401  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   402  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   403  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   404  /** \brief Sets the channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   405   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   406   * \param value value for the channel enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   407   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   408   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   409  IFX_INLINE void IfxGtm_Atom_Agc_setChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   410  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   411  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   412  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   413  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   414  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   415  /** \brief Builds the register value for the feature enable/disable
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   416   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   417   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   418   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   419   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   420   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   421  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeature(uint16 enableMask, uint16 disableMask, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   422  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   423  /** \brief Builds the register value for the feature enable/disable for a single channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   424   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   425   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   426   * \param bitfieldOffset Offset of the channel 0 bitfield in the register
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   427   * \return The register value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   428   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   429  IFX_EXTERN uint32 IfxGtm_Atom_Agc_buildFeatureForChannel(IfxGtm_Atom_Ch channel, boolean enabled, uint8 bitfieldOffset);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   430  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   431  /** \brief Enable/disable one channel (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   432   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   433   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   434   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   435   * \param immediate If TRUE, the action is done immediately else, the action is done on AGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   436   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   437   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   438  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannel(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   439  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   440  /** \brief Enable/disable one channel output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   441   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   442   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   443   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   444   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   445   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   446   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   447  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelOutput(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   448  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   449  /** \brief Enable/disable one channel for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   450   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   451   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   452   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   453   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   454   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   455  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   456  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   457  /** \brief Enable/disable one or more channels (ENDIS)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   458   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   459   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   460   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   461   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   462   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   463   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   464  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannels(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   465  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   466  /** \brief Enable/disable one or more channels output (OUTEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   467   * \param agc Pointer to the TGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   468   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   469   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   470   * \param immediate If TRUE, the action is done immediately else, the action is done on TGC trigger (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   471   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   472   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   473  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsOutput(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, boolean immediate);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   474  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   475  /** \brief Enable/disable the TGC channels trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   476   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   477   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   478   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   479   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   480   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   481  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsTrigger(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   482  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   483  /** \brief Enable/disable one or more channels for update (UPEN)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   484   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   485   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   486   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   487   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   488   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   489  IFX_EXTERN void IfxGtm_Atom_Agc_enableChannelsUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   490  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   491  /** \brief Enable/disable the time base trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   492   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   493   * \param enabled If TRUE, the trigger is enabled else disabled
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   494   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   495   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   496  IFX_EXTERN void IfxGtm_Atom_Agc_enableTimeTrigger(Ifx_GTM_ATOM_AGC *agc, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   497  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   498  /** \brief Reset one or more channels
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   499   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   500   * \param resetMask Mask for the channel reset (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   501   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   502   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   503  IFX_EXTERN void IfxGtm_Atom_Agc_resetChannels(Ifx_GTM_ATOM_AGC *agc, uint32 resetMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   504  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   505  /** \brief Enable/disable one channel for update (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   506   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   507   * \param channel Channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   508   * \param enabled Enable/ Disable choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   509   * \param resetEnabled Enable/ Disable reset choise of the feature
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   510   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   511   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   512  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelForceUpdate(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Atom_Ch channel, boolean enabled, boolean resetEnabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   513  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   514  /** \brief Enable/disable one or more channels for the force update feature (FUPD)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   515   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   516   * \param enableMask Mask for the channel feature enable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   517   * \param disableMask Mask for the channel feature disable (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   518   * \param resetEnableMask Mask for the enabled channels counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...) Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   519   * \param resetDisableMask Mask for the disabled channels with no counter reset on force update (bit 0: Channel 0, bit 1: channel 1, ...)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   520   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   521   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   522  IFX_EXTERN void IfxGtm_Atom_Agc_setChannelsForceUpdate(Ifx_GTM_ATOM_AGC *agc, uint16 enableMask, uint16 disableMask, uint16 resetEnableMask, uint16 resetDisableMask);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   523  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   524  /** \brief Sets the trigger time base and time base value
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   525   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   526   * \param base Time base used for comparison
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   527   * \param value Compare value that raise the trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   528   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   529   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   530  IFX_EXTERN void IfxGtm_Atom_Agc_setTimeTrigger(Ifx_GTM_ATOM_AGC *agc, IfxGtm_Tbu_Ts base, uint32 value);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   531  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   532  /** \brief Raise the trigger for the channel enable/disable settings,  output enable settings, and force update event (CTRL_TRIG)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   533   * \param agc Pointer to the AGC object
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   534   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   535   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   536  IFX_EXTERN void IfxGtm_Atom_Agc_trigger(Ifx_GTM_ATOM_AGC *agc);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   537  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   538  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   539  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   540  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   541  /*-------------------------Global Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   542  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   543  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   544  /** \brief enable/disable ARU input for the ATOM channel specified.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   545   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   546   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   547   * \param enabled ARU enable status
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   548   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   549   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   550  IFX_EXTERN void IfxGtm_Atom_Ch_setAruInput(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, boolean enabled);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   551  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   552  /** \brief sets the SOMC control bits for the specified ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   553   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   554   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   555   * \param control SOMC control mode enum
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   556   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   557   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   558  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcControl control);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   559  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   560  /** \brief sets the SL control for SOMC mode.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   561   * \param atom pointer to the ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   562   * \param channel index of ATOM channel
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   563   * \param ctrl SIgnal level control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   564   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   565   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   566  IFX_EXTERN void IfxGtm_Atom_Ch_setSomcSignalLevelControl(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, IfxGtm_Atom_SomcSignalLevelControl ctrl);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   567  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   568  /** \brief set the ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   569   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   570   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   571   * \param address ARU read address 0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   572   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   573   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   574  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress0(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   575  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   576  /** \brief set the ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   577   * \param atom pointer to ATOM instance
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   578   * \param channel ATOM channel index
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   579   * \param address ARU read address 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   580   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   581   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   582  IFX_EXTERN void IfxGtm_Atom_Ch_setAruReadAddress1(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 address);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   583  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   584  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   585  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   586  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   587  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   588  IFX_INLINE Ifx_GTM_ATOM_CH *IfxGtm_Atom_Ch_getChannelPointer(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   589  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   590      return (Ifx_GTM_ATOM_CH *)((uint32)&atom->CH0.RDADDR.U + 0x80 * channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   591  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   592  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   593  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   594  IFX_INLINE void IfxGtm_Atom_Ch_setCompareShadow(Ifx_GTM_ATOM *atom, IfxGtm_Atom_Ch channel, uint32 shadowZero, uint32 shadowOne)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   595  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   596      Ifx_GTM_ATOM_CH *atomCh = IfxGtm_Atom_Ch_getChannelPointer(atom, channel);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   597  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   598      atomCh->SR0.U = shadowZero; // TK: replaced .B access to optimize runtime
	mov	d15,d6
	st.w	[a15]8,d15
.L644:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Std\IfxGtm_Atom.h	   599      atomCh->SR1.U = shadowOne;
	st.w	[a15]12,d5
.L552:
	j	.L89
.L88:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   723      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   724          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   725          {                           /* x% duty cycle */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   726              s = shift[channelIndex];
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   727  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   728              if (s > 0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   729              {
	addsc.a	a2,a6,d4,#2
.L949:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   730                  s = __minX(s, (period - x) / 2 - 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   731              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   732              else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   733              {
	sub	d5,d3,d6
.L950:
	ld.w	d0,[a2]
.L645:
	sh	d5,#-1
.L951:
	jeq	d0,#0,.L90
.L952:
	add	d15,d5,#-1
.L953:
	min.u	d15,d0,d15
	j	.L91
.L90:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   734                  s = __maxX(s, (x - period) / 2 + 1);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   735              }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   736  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   737              cm1 = s + (period - x) / 2; // CM1
	sub	d0,d6,d3
.L646:
	sh	d0,#-1
	add	d15,d0,#1
.L91:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   738              cm0 = s + (period + x) / 2; // CM0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   739              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->ccxTemp[channelIndex], cm0, cm1 + deadtime);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   740              IfxGtm_Atom_Ch_setCompareShadow(driver->atom, driver->coutxTemp[channelIndex], cm0 + deadtime, cm1);
	add	d5,d15
.L954:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   741          }
	add	d0,d3,d6
	sh	d0,#-1
.L647:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   742      }
	add	d6,d15,d0
	fcall	.cocofun_11
.L89:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Gtm\Atom\PwmHl\IfxGtm_Atom_PwmHl.c	   743  }
	fcall	.cocofun_3
.L87:
	fcall	.cocofun_13
.L79:
	ld.bu	d15,[a4]17
.L955:
	jlt.u	d4,d15,.L80
.L956:


	ret
.L532:
	
__IfxGtm_Atom_PwmHl_updateShiftCenterAligned_function_end:
	.size	IfxGtm_Atom_PwmHl_updateShiftCenterAligned,__IfxGtm_Atom_PwmHl_updateShiftCenterAligned_function_end-IfxGtm_Atom_PwmHl_updateShiftCenterAligned
.L263:
	; End of function
	
	.sdecl	'.rodata.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_modes',data,rom,cluster('IfxGtm_Atom_PwmHl_modes')
	.sect	'.rodata.IfxGtm_Atom_PwmHl.IfxGtm_Atom_PwmHl_modes'
	.align	4
IfxGtm_Atom_PwmHl_modes:	.type	object
	.size	IfxGtm_Atom_PwmHl_modes,80
	.space	4
	.word	IfxGtm_Atom_PwmHl_updateCenterAligned,IfxGtm_Atom_PwmHl_updateShiftCenterAligned,IfxGtm_Atom_PwmHl_updatePulse
	.byte	1,1
	.space	2
	.word	IfxGtm_Atom_PwmHl_updateCenterAligned,IfxGtm_Atom_PwmHl_updateShiftCenterAligned,IfxGtm_Atom_PwmHl_updatePulse
	.byte	2
	.space	3
	.word	IfxGtm_Atom_PwmHl_updateEdgeAligned,IfxGtm_Atom_PwmHl_updateAndShiftOff,IfxGtm_Atom_PwmHl_updatePulse
	.byte	3,1
	.space	2
	.word	IfxGtm_Atom_PwmHl_updateEdgeAligned,IfxGtm_Atom_PwmHl_updateAndShiftOff,IfxGtm_Atom_PwmHl_updatePulse
	.byte	4
	.space	3
	.word	IfxGtm_Atom_PwmHl_updateOff,IfxGtm_Atom_PwmHl_updateAndShiftOff,IfxGtm_Atom_PwmHl_updatePulseOff
	.sdecl	'.rodata.IfxGtm_Atom_PwmHl..1.ini',data,rom
	.sect	'.rodata.IfxGtm_Atom_PwmHl..1.ini'
	.align	2
.1.ini:	.type	object
	.size	.1.ini,32
	.space	32
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_getDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_getMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_getMode'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setDeadtime'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setMinPulse'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setMode'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setOnTime'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setOnTimeAndShift'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setPulse'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_setupChannels'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updateAndShiftOff'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updateCenterAligned'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updateEdgeAligned'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updateOff'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updatePulse'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updatePulseOff'
	.calls	'__INDIRECT__','IfxGtm_Atom_PwmHl_updateShiftCenterAligned'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_PwmHl_setDeadtime'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_PwmHl_setMinPulse'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Ch_getClockSource'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Ch_configurePwmMode'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_PinMap_setAtomTout'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Agc_enableChannelsOutput'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Agc_enableChannels'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_PwmHl_setMode'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_PwmHl_updateOff'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Agc_setChannelsForceUpdate'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Agc_trigger'
	.calls	'IfxGtm_Atom_PwmHl_init','IfxGtm_Atom_Timer_addToChannelMask'
	.calls	'IfxGtm_Atom_PwmHl_initConfig','IfxStdIf_PwmHl_initConfig'
	.calls	'IfxGtm_Atom_PwmHl_setMode','IfxGtm_Atom_Ch_setSignalLevel'
	.calls	'IfxGtm_Atom_PwmHl_setOnTime','__INDIRECT__'
	.calls	'IfxGtm_Atom_PwmHl_setOnTimeAndShift','__INDIRECT__'
	.calls	'IfxGtm_Atom_PwmHl_setPulse','__INDIRECT__'
	.calls	'IfxGtm_Atom_PwmHl_stdIfPwmHlInit','memset'
	.calls	'IfxGtm_Atom_PwmHl_stdIfPwmHlInit','IfxGtm_Atom_Timer_stdIfTimerInit'
	.calls	'IfxGtm_Atom_PwmHl_updateAndShiftOff','IfxGtm_Atom_PwmHl_updateOff'
	.calls	'IfxGtm_Atom_PwmHl_updatePulseOff','IfxGtm_Atom_PwmHl_updateOff'
	.calls	'IfxGtm_Atom_PwmHl_getDeadtime','.cocofun_6'
	.calls	'IfxGtm_Atom_PwmHl_getMinPulse','.cocofun_6'
	.calls	'IfxGtm_Atom_PwmHl_setDeadtime','.cocofun_7'
	.calls	'IfxGtm_Atom_PwmHl_setMinPulse','.cocofun_7'
	.calls	'IfxGtm_Atom_PwmHl_setMode','.cocofun_8'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_12'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_9'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_4'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_2'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_10'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_11'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_3'
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','.cocofun_13'
	.calls	'.cocofun_11','.cocofun_15'
	.calls	'.cocofun_10','.cocofun_15'
	.calls	'.cocofun_3','.cocofun_14'
	.calls	'.cocofun_2','.cocofun_15'
	.calls	'.cocofun_2','.cocofun_14'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_12'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_4'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_2'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_15'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_14'
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','.cocofun_13'
	.calls	'.cocofun_14','.cocofun_15'
	.calls	'IfxGtm_Atom_PwmHl_updateOff','.cocofun_5'
	.calls	'IfxGtm_Atom_PwmHl_updatePulse','.cocofun_13'
	.calls	'IfxGtm_Atom_PwmHl_updatePulse','.cocofun_9'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_12'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_4'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_2'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_10'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_11'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_3'
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','.cocofun_13'
	.calls	'IfxGtm_Atom_PwmHl_getDeadtime','',0
	.calls	'.cocofun_6','',0
	.calls	'IfxGtm_Atom_PwmHl_getMinPulse','',0
	.calls	'IfxGtm_Atom_PwmHl_getMode','',0
	.calls	'IfxGtm_Atom_PwmHl_init','',40
	.calls	'IfxGtm_Atom_PwmHl_initConfig','',0
	.calls	'IfxGtm_Atom_PwmHl_setDeadtime','',0
	.calls	'.cocofun_7','',0
	.calls	'IfxGtm_Atom_PwmHl_setMinPulse','',0
	.calls	'IfxGtm_Atom_PwmHl_setMode','',0
	.calls	'.cocofun_8','',0
	.calls	'IfxGtm_Atom_PwmHl_setOnTime','',0
	.calls	'IfxGtm_Atom_PwmHl_setOnTimeAndShift','',0
	.calls	'IfxGtm_Atom_PwmHl_setPulse','',0
	.calls	'IfxGtm_Atom_PwmHl_setupChannels','',0
	.calls	'IfxGtm_Atom_PwmHl_stdIfPwmHlInit','',0
	.calls	'IfxGtm_Atom_PwmHl_updateAndShiftOff','',0
	.calls	'IfxGtm_Atom_PwmHl_updateCenterAligned','',0
	.calls	'.cocofun_13','',0
	.calls	'.cocofun_12','',0
	.calls	'.cocofun_11','',0
	.calls	'.cocofun_10','',0
	.calls	'.cocofun_9','',0
	.calls	'.cocofun_4','',0
	.calls	'.cocofun_3','',0
	.calls	'.cocofun_2','',0
	.calls	'IfxGtm_Atom_PwmHl_updateEdgeAligned','',0
	.calls	'.cocofun_15','',0
	.calls	'.cocofun_14','',0
	.calls	'IfxGtm_Atom_PwmHl_updateOff','',0
	.calls	'.cocofun_5','',0
	.calls	'IfxGtm_Atom_PwmHl_updatePulse','',0
	.calls	'IfxGtm_Atom_PwmHl_updatePulseOff','',0
	.extern	IfxStdIf_PwmHl_initConfig
	.extern	IfxGtm_Atom_Ch_configurePwmMode
	.extern	IfxGtm_Atom_Ch_getClockSource
	.extern	IfxGtm_Atom_Ch_setSignalLevel
	.extern	IfxGtm_Atom_Agc_enableChannels
	.extern	IfxGtm_Atom_Agc_enableChannelsOutput
	.extern	IfxGtm_Atom_Agc_setChannelsForceUpdate
	.extern	IfxGtm_Atom_Agc_trigger
	.extern	IfxGtm_PinMap_setAtomTout
	.extern	IfxGtm_Atom_Timer_addToChannelMask
	.extern	IfxGtm_Atom_Timer_stdIfTimerInit
	.extern	memset
	.extern	__INDIRECT__
	.calls	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L161:
	.word	164145
	.half	3
	.word	.L162
	.byte	4
.L160:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L163
	.byte	2,1,1,3
	.word	193
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	196
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L360:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	241
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	253
	.byte	6,0,9
	.byte	'void',0,10
	.word	307
	.byte	3
	.word	313
	.byte	7
	.byte	'unsigned int',0,4,7,4
	.byte	'__ldmst_c',0,3,2,111,17,1,1,5
	.byte	'address',0,2,111,42
	.word	318
	.byte	5
	.byte	'mask',0,2,111,60
	.word	323
	.byte	5
	.byte	'value',0,2,111,75
	.word	323
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,3
	.word	307
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	401
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	427
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	427
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	401
	.byte	6,0,7
	.byte	'int',0,4,5
.L336:
	.byte	7
	.byte	'unsigned char',0,1,8,11
	.byte	'_Ifx_SRC_SRCR_Bits',0,4,45,16,4,12
	.byte	'SRPN',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	2,6,2,35,1,12
	.byte	'SRE',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'TOS',0,1
	.word	520
	.byte	2,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	520
	.byte	3,0,2,35,1,12
	.byte	'ECC',0,1
	.word	520
	.byte	6,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	520
	.byte	2,0,2,35,2,12
	.byte	'SRR',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'CLRR',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'SETR',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'IOV',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'IOVCLR',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'SWS',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'SWSCLR',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,4,70,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	537
	.byte	4,2,35,0,0,10
	.word	827
	.byte	3
	.word	866
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,3,250,1,17,1,1,5
	.byte	'src',0,3,250,1,60
	.word	871
	.byte	6,0
.L342:
	.byte	7
	.byte	'unsigned short int',0,2,7,11
	.byte	'_Ifx_P_OUT_Bits',0,6,143,3,16,4,12
	.byte	'P0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,181,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	941
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMR_Bits',0,6,169,2,16,4,12
	.byte	'PS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'PCL0',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,133,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1257
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ID_Bits',0,6,110,16,4,12
	.byte	'MODREV',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,148,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1828
	.byte	4,2,35,0,0,15,4
	.word	520
	.byte	16,3,0,11
	.byte	'_Ifx_P_IOCR0_Bits',0,6,140,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PC0',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PC1',0,1
	.word	520
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PC2',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PC3',0,1
	.word	520
	.byte	5,0,2,35,3,0,13,6,164,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	1956
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR4_Bits',0,6,166,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PC4',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PC5',0,1
	.word	520
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PC6',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PC7',0,1
	.word	520
	.byte	5,0,2,35,3,0,13,6,180,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2171
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR8_Bits',0,6,179,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PC8',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PC9',0,1
	.word	520
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PC10',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PC11',0,1
	.word	520
	.byte	5,0,2,35,3,0,13,6,188,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2386
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IOCR12_Bits',0,6,153,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PC12',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PC13',0,1
	.word	520
	.byte	5,0,2,35,1,12
	.byte	'reserved_16',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PC14',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PC15',0,1
	.word	520
	.byte	5,0,2,35,3,0,13,6,172,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2603
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_IN_Bits',0,6,118,16,4,12
	.byte	'P0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'P2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'P3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'P4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'P5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'P6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'P7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'P8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'P9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'P10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'P11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'P12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'P13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'P14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'P15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,156,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	2823
	.byte	4,2,35,0,0,15,24
	.word	520
	.byte	16,23,0,11
	.byte	'_Ifx_P_PDR0_Bits',0,6,205,3,16,4,12
	.byte	'PD0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	520
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PD2',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PL2',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'PD3',0,1
	.word	520
	.byte	3,1,2,35,1,12
	.byte	'PL3',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'PD4',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PL4',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'PD5',0,1
	.word	520
	.byte	3,1,2,35,2,12
	.byte	'PL5',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'PD6',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PL6',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'PD7',0,1
	.word	520
	.byte	3,1,2,35,3,12
	.byte	'PL7',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,205,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3146
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PDR1_Bits',0,6,226,3,16,4,12
	.byte	'PD8',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PL8',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PD9',0,1
	.word	520
	.byte	3,1,2,35,0,12
	.byte	'PL9',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PD10',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'PL10',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'PD11',0,1
	.word	520
	.byte	3,1,2,35,1,12
	.byte	'PL11',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'PD12',0,1
	.word	520
	.byte	3,5,2,35,2,12
	.byte	'PL12',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'PD13',0,1
	.word	520
	.byte	3,1,2,35,2,12
	.byte	'PL13',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'PD14',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'PL14',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'PD15',0,1
	.word	520
	.byte	3,1,2,35,3,12
	.byte	'PL15',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,213,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3450
	.byte	4,2,35,0,0,15,8
	.word	520
	.byte	16,7,0,11
	.byte	'_Ifx_P_ESR_Bits',0,6,88,16,4,12
	.byte	'EN0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,140,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	3775
	.byte	4,2,35,0,0,15,12
	.word	520
	.byte	16,11,0,11
	.byte	'_Ifx_P_PDISC_Bits',0,6,183,3,16,4,12
	.byte	'PDIS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PDIS2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PDIS3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PDIS4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PDIS5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PDIS6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PDIS7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PDIS8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'PDIS9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'PDIS10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'PDIS11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'PDIS12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'PDIS13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'PDIS14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'PDIS15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,197,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4115
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_PCSR_Bits',0,6,165,3,16,4,12
	.byte	'SEL0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'SEL1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'SEL2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SEL3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'SEL4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'SEL5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'SEL6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'SEL7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	2,6,2,35,1,12
	.byte	'SEL10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'SEL11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	323
	.byte	19,1,2,35,0,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,189,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4481
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR0_Bits',0,6,206,2,16,4,12
	.byte	'PS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	28,0,2,35,0,0,13,6,149,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4767
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR4_Bits',0,6,227,2,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'PS4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,13,6,165,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	4914
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR8_Bits',0,6,238,2,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'PS8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,4
	.word	323
	.byte	20,0,2,35,0,0,13,6,173,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5083
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR12_Bits',0,6,216,2,16,4,12
	.byte	'reserved_0',0,2
	.word	919
	.byte	12,4,2,35,0,12
	.byte	'PS12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,157,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5255
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR0_Bits',0,6,232,1,16,4,12
	.byte	'reserved_0',0,2
	.word	919
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'reserved_20',0,2
	.word	919
	.byte	12,0,2,35,2,0,13,6,229,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5430
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR4_Bits',0,6,253,1,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	20,12,2,35,0,12
	.byte	'PCL4',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	8,0,2,35,3,0,13,6,245,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5604
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR8_Bits',0,6,136,2,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	24,8,2,35,0,12
	.byte	'PCL8',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,13,6,253,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5778
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR12_Bits',0,6,243,1,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	28,4,2,35,0,12
	.byte	'PCL12',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,237,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	5954
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMSR_Bits',0,6,249,2,16,4,12
	.byte	'PS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PS2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PS3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PS4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PS5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PS6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PS7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PS8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'PS9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'PS10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'PS11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'PS12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'PS13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'PS14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'PS15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,141,5,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6110
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_OMCR_Bits',0,6,147,2,16,4,12
	.byte	'reserved_0',0,2
	.word	919
	.byte	16,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'PCL2',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'PCL3',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'PCL4',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'PCL5',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'PCL6',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'PCL7',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'PCL8',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'PCL9',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'PCL10',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'PCL11',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'PCL12',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'PCL13',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'PCL14',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'PCL15',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,221,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6443
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR0_Bits',0,6,192,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,13,6,196,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6791
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_Bits',0,6,200,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,11
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,6,208,1,16,4,12
	.byte	'RDIS_CTRL',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'RX_DIS',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'TERM',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'LRXTERM',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,13,6,204,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	6915
	.byte	4,2,35,0,14
	.byte	'B_P21',0
	.word	6999
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_LPCR2_Bits',0,6,218,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'LVDSR',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'LVDSRL',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	520
	.byte	2,4,2,35,1,12
	.byte	'TDIS_CTRL',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'TX_DIS',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'TX_PD',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'TX_PWDPD',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,13,6,213,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7179
	.byte	4,2,35,0,0,15,76
	.word	520
	.byte	16,75,0,11
	.byte	'_Ifx_P_ACCEN1_Bits',0,6,82,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	32,0,2,35,0,0,13,6,132,4,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7432
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P_ACCEN0_Bits',0,6,45,16,4,12
	.byte	'EN0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	520
	.byte	1,0,2,35,3,0,13,6,252,3,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	7519
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_P',0,6,229,5,25,128,2,14
	.byte	'OUT',0
	.word	1217
	.byte	4,2,35,0,14
	.byte	'OMR',0
	.word	1788
	.byte	4,2,35,4,14
	.byte	'ID',0
	.word	1907
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1947
	.byte	4,2,35,12,14
	.byte	'IOCR0',0
	.word	2131
	.byte	4,2,35,16,14
	.byte	'IOCR4',0
	.word	2346
	.byte	4,2,35,20,14
	.byte	'IOCR8',0
	.word	2563
	.byte	4,2,35,24,14
	.byte	'IOCR12',0
	.word	2783
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	1947
	.byte	4,2,35,32,14
	.byte	'IN',0
	.word	3097
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3137
	.byte	24,2,35,40,14
	.byte	'PDR0',0
	.word	3410
	.byte	4,2,35,64,14
	.byte	'PDR1',0
	.word	3726
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	3766
	.byte	8,2,35,72,14
	.byte	'ESR',0
	.word	4066
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	4106
	.byte	12,2,35,84,14
	.byte	'PDISC',0
	.word	4441
	.byte	4,2,35,96,14
	.byte	'PCSR',0
	.word	4727
	.byte	4,2,35,100,14
	.byte	'reserved_68',0
	.word	3766
	.byte	8,2,35,104,14
	.byte	'OMSR0',0
	.word	4874
	.byte	4,2,35,112,14
	.byte	'OMSR4',0
	.word	5043
	.byte	4,2,35,116,14
	.byte	'OMSR8',0
	.word	5215
	.byte	4,2,35,120,14
	.byte	'OMSR12',0
	.word	5390
	.byte	4,2,35,124,14
	.byte	'OMCR0',0
	.word	5564
	.byte	4,3,35,128,1,14
	.byte	'OMCR4',0
	.word	5738
	.byte	4,3,35,132,1,14
	.byte	'OMCR8',0
	.word	5914
	.byte	4,3,35,136,1,14
	.byte	'OMCR12',0
	.word	6070
	.byte	4,3,35,140,1,14
	.byte	'OMSR',0
	.word	6403
	.byte	4,3,35,144,1,14
	.byte	'OMCR',0
	.word	6751
	.byte	4,3,35,148,1,14
	.byte	'reserved_98',0
	.word	3766
	.byte	8,3,35,152,1,14
	.byte	'LPCR0',0
	.word	6875
	.byte	4,3,35,160,1,14
	.byte	'LPCR1',0
	.word	7124
	.byte	4,3,35,164,1,14
	.byte	'LPCR2',0
	.word	7383
	.byte	4,3,35,168,1,14
	.byte	'reserved_A4',0
	.word	7423
	.byte	76,3,35,172,1,14
	.byte	'ACCEN1',0
	.word	7479
	.byte	4,3,35,248,1,14
	.byte	'ACCEN0',0
	.word	8046
	.byte	4,3,35,252,1,0,10
	.word	8086
	.byte	3
	.word	8689
	.byte	17,5,172,1,9,4,18
	.byte	'IfxPort_State_notChanged',0,0,18
	.byte	'IfxPort_State_high',0,1,18
	.byte	'IfxPort_State_low',0,128,128,4,18
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,5,208,4,17,1,1,5
	.byte	'port',0,5,208,4,44
	.word	8694
	.byte	5
	.byte	'pinIndex',0,5,208,4,56
	.word	520
	.byte	5
	.byte	'action',0,5,208,4,80
	.word	8699
	.byte	6,0,19
	.byte	'IfxStdIf_InterfaceDriver',0,8,118,15
	.word	427
	.byte	20
	.word	253
	.byte	1,1,21
	.word	427
	.byte	0,3
	.word	8913
	.byte	19
	.byte	'IfxStdIf_Timer_GetFrequency',0,7,102,19
	.word	8926
.L345:
	.byte	7
	.byte	'unsigned long int',0,4,7,20
	.word	8967
	.byte	1,1,21
	.word	427
	.byte	0,3
	.word	8988
	.byte	19
	.byte	'IfxStdIf_Timer_GetPeriod',0,7,108,26
	.word	9001
	.byte	19
	.byte	'IfxStdIf_Timer_GetResolution',0,7,114,19
	.word	8926
	.byte	19
	.byte	'IfxStdIf_Timer_GetTrigger',0,7,120,26
	.word	9001
	.byte	20
	.word	520
	.byte	1,1,21
	.word	427
	.byte	21
	.word	253
	.byte	0,3
	.word	9110
	.byte	19
	.byte	'IfxStdIf_Timer_SetFrequency',0,7,128,1,19
	.word	9128
	.byte	22,1,1,21
	.word	427
	.byte	0,3
	.word	9170
	.byte	19
	.byte	'IfxStdIf_Timer_UpdateInputFrequency',0,7,134,1,16
	.word	9179
	.byte	19
	.byte	'IfxStdIf_Timer_ApplyUpdate',0,7,155,1,16
	.word	9179
	.byte	19
	.byte	'IfxStdIf_Timer_DisableUpdate',0,7,172,1,16
	.word	9179
	.byte	19
	.byte	'IfxStdIf_Timer_GetInputFrequency',0,7,178,1,19
	.word	8926
	.byte	19
	.byte	'IfxStdIf_Timer_Run',0,7,187,1,16
	.word	9179
	.byte	20
	.word	520
	.byte	1,1,21
	.word	427
	.byte	21
	.word	8967
	.byte	0,3
	.word	9373
	.byte	19
	.byte	'IfxStdIf_Timer_SetPeriod',0,7,197,1,19
	.word	9391
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	520
	.byte	0,3
	.word	9430
	.byte	19
	.byte	'IfxStdIf_Timer_SetSingleMode',0,7,206,1,16
	.word	9444
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	8967
	.byte	0,3
	.word	9487
	.byte	19
	.byte	'IfxStdIf_Timer_SetTrigger',0,7,218,1,16
	.word	9501
	.byte	19
	.byte	'IfxStdIf_Timer_Stop',0,7,224,1,16
	.word	9179
	.byte	20
	.word	520
	.byte	1,1,21
	.word	427
	.byte	0,3
	.word	9570
	.byte	19
	.byte	'IfxStdIf_Timer_AckTimerIrq',0,7,230,1,19
	.word	9583
	.byte	19
	.byte	'IfxStdIf_Timer_AckTriggerIrq',0,7,236,1,19
	.word	9583
	.byte	11
	.byte	'IfxStdIf_Timer_',0,7,240,1,8,68,14
	.byte	'driver',0
	.word	8880
	.byte	4,2,35,0,14
	.byte	'getFrequency',0
	.word	8931
	.byte	4,2,35,4,14
	.byte	'getPeriod',0
	.word	9006
	.byte	4,2,35,8,14
	.byte	'getResolution',0
	.word	9039
	.byte	4,2,35,12,14
	.byte	'getTrigger',0
	.word	9076
	.byte	4,2,35,16,14
	.byte	'setFrequency',0
	.word	9133
	.byte	4,2,35,20,14
	.byte	'updateInputFrequency',0
	.word	9184
	.byte	4,2,35,24,14
	.byte	'applyUpdate',0
	.word	9229
	.byte	4,2,35,28,14
	.byte	'disableUpdate',0
	.word	9265
	.byte	4,2,35,32,14
	.byte	'getInputFrequency',0
	.word	9303
	.byte	4,2,35,36,14
	.byte	'run',0
	.word	9345
	.byte	4,2,35,40,14
	.byte	'setPeriod',0
	.word	9396
	.byte	4,2,35,44,14
	.byte	'setSingleMode',0
	.word	9449
	.byte	4,2,35,48,14
	.byte	'setTrigger',0
	.word	9506
	.byte	4,2,35,52,14
	.byte	'stop',0
	.word	9541
	.byte	4,2,35,56,14
	.byte	'ackTimerIrq',0
	.word	9588
	.byte	4,2,35,60,14
	.byte	'ackTriggerIrq',0
	.word	9624
	.byte	4,2,35,64,0,3
	.word	9662
	.byte	8
	.byte	'IfxStdIf_Timer_getInputFrequency',0,3,7,236,2,20
	.word	253
	.byte	1,1,5
	.byte	'stdIf',0,7,236,2,69
	.word	10041
	.byte	6,0,3
	.word	307
	.byte	3
	.word	8913
	.byte	3
	.word	8988
	.byte	3
	.word	8913
	.byte	3
	.word	8988
	.byte	3
	.word	9110
	.byte	3
	.word	9170
	.byte	3
	.word	9170
	.byte	3
	.word	9170
	.byte	3
	.word	8913
	.byte	3
	.word	9170
	.byte	3
	.word	9373
	.byte	3
	.word	9430
	.byte	3
	.word	9487
	.byte	3
	.word	9170
	.byte	3
	.word	9570
	.byte	3
	.word	9570
	.byte	8
	.byte	'IfxStdIf_Timer_tickToS',0,3,7,182,3,20
	.word	253
	.byte	1,1,5
	.byte	'clockFreq',0,7,182,3,51
	.word	253
	.byte	5
	.byte	'ticks',0,7,182,3,77
	.word	8967
	.byte	6,0
.L494:
	.byte	8
	.byte	'IfxStdIf_Timer_sToTick',0,3,7,193,3,27
	.word	8967
	.byte	1,1
.L497:
	.byte	5
	.byte	'clockFreq',0,7,193,3,58
	.word	253
.L499:
	.byte	5
	.byte	'seconds',0,7,193,3,77
	.word	253
.L501:
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,11
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,171,3,16,4,12
	.byte	'RDADDR0',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	7,16,2,35,0,12
	.byte	'RDADDR1',0,4
	.word	10337
	.byte	9,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	7,0,2,35,0,0,13,10,224,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10353
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,245,2,16,4,12
	.byte	'MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACB',0,4
	.word	10337
	.byte	5,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10337
	.byte	3,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,184,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10512
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,180,3,16,4,12
	.byte	'MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'TB12_SEL',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACB10',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ACB42',0,4
	.word	10337
	.byte	3,23,2,35,0,12
	.byte	'CMP_CTRL',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'WR_REQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10337
	.byte	7,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'SLA',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'ABM',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,232,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	10925
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,201,3,16,4,12
	.byte	'MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	20,0,2,35,0,0,13,10,240,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11303
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,213,3,16,4,12
	.byte	'MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ADL',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	5,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,248,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11508
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,232,3,16,4,12
	.byte	'MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACB0',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	6,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	11,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,128,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	11857
	.byte	4,2,35,0,0,13,10,177,55,5,4,14
	.byte	'CTRL',0
	.word	10885
	.byte	4,2,35,0,14
	.byte	'SOMC',0
	.word	11263
	.byte	4,2,35,0,14
	.byte	'SOMI',0
	.word	11468
	.byte	4,2,35,0,14
	.byte	'SOMP',0
	.word	11817
	.byte	4,2,35,0,14
	.byte	'SOMS',0
	.word	12079
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,10,247,3,16,4,12
	.byte	'SR0',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,136,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12196
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,10,254,3,16,4,12
	.byte	'SR1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,144,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12307
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,10,224,2,16,4,12
	.byte	'CM0',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,160,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12418
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,10,231,2,16,4,12
	.byte	'CM1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,168,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12529
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,10,238,2,16,4,12
	.byte	'CN0',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,176,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12640
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,10,133,4,16,4,12
	.byte	'OL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	15,16,2,35,0,12
	.byte	'ACBI',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'DV',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'WRF',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'ACBO',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,152,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12751
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,163,3,16,4,12
	.byte	'CCU0TC',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,216,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	12968
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,140,3,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,192,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,148,3,16,4,12
	.byte	'TRG_CCU0TC',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,200,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13254
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,156,3,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,208,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13401
	.byte	4,2,35,0,0,15,16
	.word	520
	.byte	16,15,0,11
	.byte	'_Ifx_GTM_ATOM_CH',0,10,174,55,25,64,14
	.byte	'RDADDR',0
	.word	10472
	.byte	4,2,35,0,23
	.word	12119
	.byte	4,2,35,4,14
	.byte	'SR0',0
	.word	12267
	.byte	4,2,35,8,14
	.byte	'SR1',0
	.word	12378
	.byte	4,2,35,12,14
	.byte	'CM0',0
	.word	12489
	.byte	4,2,35,16,14
	.byte	'CM1',0
	.word	12600
	.byte	4,2,35,20,14
	.byte	'CN0',0
	.word	12711
	.byte	4,2,35,24,14
	.byte	'STAT',0
	.word	12928
	.byte	4,2,35,28,14
	.byte	'IRQ_NOTIFY',0
	.word	13066
	.byte	4,2,35,32,14
	.byte	'IRQ_EN',0
	.word	13214
	.byte	4,2,35,36,14
	.byte	'IRQ_FORCINT',0
	.word	13361
	.byte	4,2,35,40,14
	.byte	'IRQ_MODE',0
	.word	13481
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13521
	.byte	16,2,35,48,0,10
	.word	13530
	.byte	3
	.word	13754
	.byte	10
	.word	13530
	.byte	11
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,159,2,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,128,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	13769
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,238,1,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,232,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14219
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,252,1,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,240,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14507
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,229,1,16,4,12
	.byte	'ACT_TB',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10337
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,224,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,196,2,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,144,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	14951
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,210,2,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,152,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15239
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,138,2,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,248,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15527
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,182,2,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,136,35,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	15959
	.byte	4,2,35,0,0,15,32
	.word	520
	.byte	16,31,0,11
	.byte	'_Ifx_GTM_ATOM_AGC',0,10,160,55,25,64,14
	.byte	'GLB_CTRL',0
	.word	14179
	.byte	4,2,35,0,14
	.byte	'ENDIS_CTRL',0
	.word	14467
	.byte	4,2,35,4,14
	.byte	'ENDIS_STAT',0
	.word	14755
	.byte	4,2,35,8,14
	.byte	'ACT_TB',0
	.word	14911
	.byte	4,2,35,12,14
	.byte	'OUTEN_CTRL',0
	.word	15199
	.byte	4,2,35,16,14
	.byte	'OUTEN_STAT',0
	.word	15487
	.byte	4,2,35,20,14
	.byte	'FUPD_CTRL',0
	.word	15919
	.byte	4,2,35,24,14
	.byte	'INT_TRIG',0
	.word	16189
	.byte	4,2,35,28,14
	.byte	'reserved_20',0
	.word	16229
	.byte	32,2,35,32,0,10
	.word	16238
	.byte	10
	.word	13530
	.byte	15,64
	.word	520
	.byte	16,63,0,10
	.word	13530
	.byte	10
	.word	13530
	.byte	10
	.word	13530
	.byte	10
	.word	13530
	.byte	10
	.word	13530
	.byte	10
	.word	13530
	.byte	15,192,8
	.word	520
	.byte	16,191,8,0,11
	.byte	'_Ifx_GTM_ATOM',0,10,166,57,25,128,16,14
	.byte	'CH0',0
	.word	13764
	.byte	64,2,35,0,14
	.byte	'AGC',0
	.word	16435
	.byte	64,2,35,64,14
	.byte	'CH1',0
	.word	16440
	.byte	64,3,35,128,1,14
	.byte	'reserved_C0',0
	.word	16445
	.byte	64,3,35,192,1,14
	.byte	'CH2',0
	.word	16454
	.byte	64,3,35,128,2,14
	.byte	'reserved_140',0
	.word	16445
	.byte	64,3,35,192,2,14
	.byte	'CH3',0
	.word	16459
	.byte	64,3,35,128,3,14
	.byte	'reserved_1C0',0
	.word	16445
	.byte	64,3,35,192,3,14
	.byte	'CH4',0
	.word	16464
	.byte	64,3,35,128,4,14
	.byte	'reserved_240',0
	.word	16445
	.byte	64,3,35,192,4,14
	.byte	'CH5',0
	.word	16469
	.byte	64,3,35,128,5,14
	.byte	'reserved_2C0',0
	.word	16445
	.byte	64,3,35,192,5,14
	.byte	'CH6',0
	.word	16474
	.byte	64,3,35,128,6,14
	.byte	'reserved_340',0
	.word	16445
	.byte	64,3,35,192,6,14
	.byte	'CH7',0
	.word	16479
	.byte	64,3,35,128,7,14
	.byte	'reserved_3C0',0
	.word	16484
	.byte	192,8,3,35,192,7,0,10
	.word	16495
	.byte	3
	.word	16802
.L352:
	.byte	17,11,222,1,9,1,18
	.byte	'IfxGtm_Atom_Ch_none',0,127,18
	.byte	'IfxGtm_Atom_Ch_0',0,0,18
	.byte	'IfxGtm_Atom_Ch_1',0,1,18
	.byte	'IfxGtm_Atom_Ch_2',0,2,18
	.byte	'IfxGtm_Atom_Ch_3',0,3,18
	.byte	'IfxGtm_Atom_Ch_4',0,4,18
	.byte	'IfxGtm_Atom_Ch_5',0,5,18
	.byte	'IfxGtm_Atom_Ch_6',0,6,18
	.byte	'IfxGtm_Atom_Ch_7',0,7,0
.L436:
	.byte	8
	.byte	'IfxGtm_Atom_Ch_getChannelPointer',0,3,9,204,4,29
	.word	13759
	.byte	1,1
.L437:
	.byte	5
	.byte	'atom',0,9,204,4,76
	.word	16807
.L439:
	.byte	5
	.byte	'channel',0,9,204,4,97
	.word	16812
.L441:
	.byte	6,0
.L424:
	.byte	4
	.byte	'IfxGtm_Atom_Ch_setCompareShadow',0,3,9,210,4,17,1,1
.L427:
	.byte	5
	.byte	'atom',0,9,210,4,63
	.word	16807
.L429:
	.byte	5
	.byte	'channel',0,9,210,4,84
	.word	16812
.L431:
	.byte	5
	.byte	'shadowZero',0,9,210,4,100
	.word	8967
.L433:
	.byte	5
	.byte	'shadowOne',0,9,210,4,119
	.word	8967
.L435:
	.byte	24,6,0,0,17,13,116,9,1,18
	.byte	'Ifx_ActiveState_low',0,0,18
	.byte	'Ifx_ActiveState_high',0,1,0,8
	.byte	'IfxGtm_Atom_PwmHl_invertActiveState',0,3,12,141,1,28
	.word	17185
	.byte	1,1,5
	.byte	'activeState',0,12,141,1,80
	.word	17185
	.byte	6,0,25
	.word	513
	.byte	26
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,21
	.word	17307
	.byte	0,10
	.word	323
	.byte	3
	.word	323
	.byte	27
	.byte	'__cmpswapw',0
	.word	17349
	.byte	1,1,1,1,28
	.byte	'p',0
	.word	17354
	.byte	28
	.byte	'value',0
	.word	323
	.byte	28
	.byte	'compare',0
	.word	323
	.byte	0,29
	.word	201
	.byte	30
	.word	227
	.byte	6,0,29
	.word	262
	.byte	30
	.word	294
	.byte	6,0,29
	.word	339
	.byte	30
	.word	356
	.byte	30
	.word	372
	.byte	30
	.word	385
	.byte	6,0,29
	.word	432
	.byte	30
	.word	451
	.byte	6,0,29
	.word	467
	.byte	30
	.word	482
	.byte	30
	.word	496
	.byte	6,0,29
	.word	876
	.byte	30
	.word	904
	.byte	6,0,29
	.word	8802
	.byte	30
	.word	8830
	.byte	30
	.word	8844
	.byte	30
	.word	8862
	.byte	6,0,29
	.word	10046
	.byte	30
	.word	10091
	.byte	6,0,29
	.word	10193
	.byte	30
	.word	10228
	.byte	30
	.word	10247
	.byte	6,0,29
	.word	10264
	.byte	30
	.word	10299
	.byte	30
	.word	10318
	.byte	6,0,17,5,134,1,9,1,18
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,18
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,17,5,144,1,9,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,18
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,18
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,18
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,18
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,18
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,18
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,18
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,18
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,18
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,31,14,195,1,9,16,14
	.byte	'deadtime',0
	.word	253
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	253
	.byte	4,2,35,4,14
	.byte	'channelCount',0
	.word	520
	.byte	1,2,35,8,14
	.byte	'emergencyEnabled',0
	.word	520
	.byte	1,2,35,9,14
	.byte	'outputMode',0
	.word	17566
	.byte	1,2,35,10,14
	.byte	'outputDriver',0
	.word	17636
	.byte	1,2,35,11,14
	.byte	'ccxActiveState',0
	.word	17185
	.byte	1,2,35,12,14
	.byte	'coutxActiveState',0
	.word	17185
	.byte	1,2,35,13,0,3
	.word	18051
	.byte	32
	.byte	'IfxStdIf_PwmHl_initConfig',0,14,192,2,17,1,1,1,1,5
	.byte	'config',0,14,192,2,66
	.word	18234
	.byte	0,29
	.word	16993
	.byte	30
	.word	17038
	.byte	30
	.word	17052
	.byte	6,0,29
	.word	17071
	.byte	30
	.word	17111
	.byte	30
	.word	17125
	.byte	30
	.word	17142
	.byte	30
	.word	17162
	.byte	24,33
	.word	16993
	.byte	30
	.word	17038
	.byte	30
	.word	17052
	.byte	34
	.word	17069
	.byte	0,6,0,0
.L350:
	.byte	17,15,67,9,1,18
	.byte	'IfxGtm_Cmu_Clk_0',0,0,18
	.byte	'IfxGtm_Cmu_Clk_1',0,1,18
	.byte	'IfxGtm_Cmu_Clk_2',0,2,18
	.byte	'IfxGtm_Cmu_Clk_3',0,3,18
	.byte	'IfxGtm_Cmu_Clk_4',0,4,18
	.byte	'IfxGtm_Cmu_Clk_5',0,5,18
	.byte	'IfxGtm_Cmu_Clk_6',0,6,18
	.byte	'IfxGtm_Cmu_Clk_7',0,7,0,17,9,86,9,1,18
	.byte	'IfxGtm_Atom_Ch_ResetEvent_onCm0',0,0,18
	.byte	'IfxGtm_Atom_Ch_ResetEvent_onTrigger',0,1,0,17,9,78,9,1,18
	.byte	'IfxGtm_Atom_Ch_OutputTrigger_forward',0,0,18
	.byte	'IfxGtm_Atom_Ch_OutputTrigger_generate',0,1,0,32
	.byte	'IfxGtm_Atom_Ch_configurePwmMode',0,9,186,1,17,1,1,1,1,5
	.byte	'atom',0,9,186,1,63
	.word	16807
	.byte	5
	.byte	'channel',0,9,186,1,84
	.word	16812
	.byte	5
	.byte	'clock',0,9,186,1,108
	.word	18358
	.byte	5
	.byte	'activeState',0,9,186,1,131,1
	.word	17185
	.byte	5
	.byte	'resetEvent',0,9,186,1,170,1
	.word	18516
	.byte	5
	.byte	'trigger',0,9,186,1,211,1
	.word	18594
	.byte	0,35
	.byte	'IfxGtm_Atom_Ch_getClockSource',0,9,201,1,27
	.word	18358
	.byte	1,1,1,1,5
	.byte	'atom',0,9,201,1,71
	.word	16807
	.byte	5
	.byte	'channel',0,9,201,1,92
	.word	16812
	.byte	0,32
	.byte	'IfxGtm_Atom_Ch_setSignalLevel',0,9,250,2,17,1,1,1,1,5
	.byte	'atom',0,9,250,2,61
	.word	16807
	.byte	5
	.byte	'channel',0,9,250,2,82
	.word	16812
	.byte	5
	.byte	'activeState',0,9,250,2,107
	.word	17185
	.byte	0,10
	.word	16238
	.byte	3
	.word	18995
	.byte	32
	.byte	'IfxGtm_Atom_Agc_enableChannels',0,9,208,3,17,1,1,1,1,5
	.byte	'agc',0,9,208,3,66
	.word	19000
	.byte	5
	.byte	'enableMask',0,9,208,3,78
	.word	919
	.byte	5
	.byte	'disableMask',0,9,208,3,97
	.word	919
	.byte	5
	.byte	'immediate',0,9,208,3,118
	.word	520
	.byte	0,32
	.byte	'IfxGtm_Atom_Agc_enableChannelsOutput',0,9,217,3,17,1,1,1,1,5
	.byte	'agc',0,9,217,3,72
	.word	19000
	.byte	5
	.byte	'enableMask',0,9,217,3,84
	.word	919
	.byte	5
	.byte	'disableMask',0,9,217,3,103
	.word	919
	.byte	5
	.byte	'immediate',0,9,217,3,124
	.word	520
	.byte	0,32
	.byte	'IfxGtm_Atom_Agc_setChannelsForceUpdate',0,9,138,4,17,1,1,1,1,5
	.byte	'agc',0,9,138,4,74
	.word	19000
	.byte	5
	.byte	'enableMask',0,9,138,4,86
	.word	919
	.byte	5
	.byte	'disableMask',0,9,138,4,105
	.word	919
	.byte	5
	.byte	'resetEnableMask',0,9,138,4,125
	.word	919
	.byte	5
	.byte	'resetDisableMask',0,9,138,4,149,1
	.word	919
	.byte	0,32
	.byte	'IfxGtm_Atom_Agc_trigger',0,9,152,4,17,1,1,1,1,5
	.byte	'agc',0,9,152,4,59
	.word	19000
	.byte	0,17,11,212,1,9,1,18
	.byte	'IfxGtm_Atom_0',0,0,18
	.byte	'IfxGtm_Atom_1',0,1,18
	.byte	'IfxGtm_Atom_2',0,2,18
	.byte	'IfxGtm_Atom_3',0,3,0,17,16,86,9,1,18
	.byte	'IfxGtm_ToutSel_a',0,0,18
	.byte	'IfxGtm_ToutSel_b',0,1,18
	.byte	'IfxGtm_ToutSel_c',0,2,18
	.byte	'IfxGtm_ToutSel_d',0,3,18
	.byte	'IfxGtm_ToutSel_e',0,4,0,31,5,190,1,9,8,14
	.byte	'port',0
	.word	8694
	.byte	4,2,35,0,14
	.byte	'pinIndex',0
	.word	520
	.byte	1,2,35,4,0,17,5,120,9,1,18
	.byte	'IfxPort_OutputIdx_general',0,128,1,18
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,18
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,18
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,18
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,18
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,18
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,18
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,31,16,105,15,20,14
	.byte	'atom',0
	.word	19441
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	16812
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	19512
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8967
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	19613
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	19652
	.byte	1,2,35,16,0,25
	.word	19869
	.byte	3
	.word	19967
	.byte	32
	.byte	'IfxGtm_PinMap_setAtomTout',0,16,141,1,17,1,1,1,1,5
	.byte	'config',0,16,141,1,64
	.word	19972
	.byte	5
	.byte	'outputMode',0,16,141,1,91
	.word	17566
	.byte	5
	.byte	'padDriver',0,16,141,1,121
	.word	17636
	.byte	0,17,7,88,9,1,18
	.byte	'IfxStdIf_Timer_CountDir_up',0,0,18
	.byte	'IfxStdIf_Timer_CountDir_upAndDown',0,1,18
	.byte	'IfxStdIf_Timer_CountDir_down',0,2,0,31,17,106,9,12,14
	.byte	'period',0
	.word	8967
	.byte	4,2,35,0,14
	.byte	'triggerEnabled',0
	.word	520
	.byte	1,2,35,4,14
	.byte	'clockFreq',0
	.word	253
	.byte	4,2,35,6,14
	.byte	'countDir',0
	.word	20068
	.byte	1,2,35,10,0,11
	.byte	'_Ifx_GTM_REV_Bits',0,10,213,27,16,4,12
	.byte	'STEP',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'NO',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'MINOR',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'MAJOR',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'DEV_CODE0',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'DEV_CODE1',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'DEV_CODE2',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,249,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20253
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_RST_Bits',0,10,225,27,16,4,12
	.byte	'RST',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	31,0,2,35,0,0,13,10,129,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20445
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CTRL_Bits',0,10,201,10,16,4,12
	.byte	'RF_PROT',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TO_MODE',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'TO_VAL',0,4
	.word	10337
	.byte	5,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	23,0,2,35,0,0,13,10,168,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20547
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,114,16,4,12
	.byte	'TO_ADDR',0,4
	.word	10337
	.byte	20,12,2,35,0,12
	.byte	'TO_W1R0',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	11,0,2,35,0,0,13,10,232,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20713
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,10,139,23,16,4,12
	.byte	'AEI_TO_XPT',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,137,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	20847
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,10,240,22,16,4,12
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,241,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21032
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,10,250,22,16,4,12
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_AEI_USP_BE',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,249,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21241
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,10,132,23,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,129,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21443
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,10,211,18,16,4,12
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,217,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21555
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,10,180,8,16,4,12
	.byte	'BRG_MODE',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MSK_WR_RSP',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	6,24,2,35,0,12
	.byte	'MODE_UP_PGR',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'BUFF_OVL',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'SYNC_INPUT_REG',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'BRG_RST',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10337
	.byte	7,8,2,35,0,12
	.byte	'BUFF_DPT',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,144,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	21769
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,10,196,8,16,4,12
	.byte	'NEW_TRAN_PTR',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'FIRST_RSP_PTR',0,4
	.word	10337
	.byte	5,22,2,35,0,12
	.byte	'TRAN_IN_PGR',0,4
	.word	10337
	.byte	5,17,2,35,0,12
	.byte	'ABT_TRAN_PGR',0,4
	.word	10337
	.byte	5,12,2,35,0,12
	.byte	'FBC',0,4
	.word	10337
	.byte	6,6,2,35,0,12
	.byte	'RSP_TRAN_RDY',0,4
	.word	10337
	.byte	6,0,2,35,0,0,13,10,152,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22083
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,10,207,8,16,4,12
	.byte	'TRAN_IN_PGR2',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,160,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22291
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRIDGE',0,10,222,57,25,12,14
	.byte	'MODE',0
	.word	22043
	.byte	4,2,35,0,14
	.byte	'PTR1',0
	.word	22251
	.byte	4,2,35,4,14
	.byte	'PTR2',0
	.word	22370
	.byte	4,2,35,8,0,10
	.word	22410
	.byte	11
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,151,29,16,4,12
	.byte	'SRC_CH0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SRC_CH1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'SRC_CH2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'SRC_CH3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SRC_CH4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'SRC_CH5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'SRC_CH6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'SRC_CH7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,153,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22480
	.byte	4,2,35,0,0,15,12
	.word	22690
	.byte	16,2,0,15,180,1
	.word	520
	.byte	16,179,1,0,11
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,10,142,29,16,4,12
	.byte	'ENDIS_CH0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CH1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CH2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,145,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22750
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,232,28,16,4,12
	.byte	'LOW_RES',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,233,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	22905
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,10,225,28,16,4,12
	.byte	'BASE',0,4
	.word	10337
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,225,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23042
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,247,28,16,4,12
	.byte	'CH_MODE',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,249,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23155
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,10,240,28,16,4,12
	.byte	'BASE',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,241,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23292
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,134,29,16,4,12
	.byte	'CH_MODE',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CH_CLK_SRC',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,137,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23405
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,10,255,28,16,4,12
	.byte	'BASE',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,129,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23542
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TBU',0,10,225,59,25,28,14
	.byte	'CHEN',0
	.word	22865
	.byte	4,2,35,0,14
	.byte	'CH0_CTRL',0
	.word	23002
	.byte	4,2,35,4,14
	.byte	'CH0_BASE',0
	.word	23115
	.byte	4,2,35,8,14
	.byte	'CH1_CTRL',0
	.word	23252
	.byte	4,2,35,12,14
	.byte	'CH1_BASE',0
	.word	23365
	.byte	4,2,35,16,14
	.byte	'CH2_CTRL',0
	.word	23502
	.byte	4,2,35,20,14
	.byte	'CH2_BASE',0
	.word	23615
	.byte	4,2,35,24,0,10
	.word	23655
	.byte	15,100
	.word	520
	.byte	16,99,0,11
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,10,246,25,16,4,12
	.byte	'ACT_CMU0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ACT_CMU1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ACT_CMU2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ACT_CMU3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACT_CMU4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ACT_CMU5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ACT_CMU6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ACT_CMU7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ACT_CMUFX0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ACT_CMUFX1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ACT_CMUFX2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ACT_CMUFX3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'ACT_CMUFX4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'CMP_ERR',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10337
	.byte	3,12,2,35,0,12
	.byte	'MCS0_ERR',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'MCS1_ERR',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'MCS2_ERR',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,249,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	23811
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,216,25,16,4,12
	.byte	'MCA_0_0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MCA_0_1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MCA_0_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'MCA_0_3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'MCA_0_4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'MCA_0_5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MCA_0_6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MCA_0_7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'MCA_1_0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MCA_1_1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'MCA_1_2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MCA_1_3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'MCA_1_4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'MCA_1_5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'MCA_1_6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'MCA_1_7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'MCA_2_0',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'MCA_2_1',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'MCA_2_2',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'MCA_2_3',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'MCA_2_4',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'MCA_2_5',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'MCA_2_6',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'MCA_2_7',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,241,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24301
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MON',0,10,185,59,25,8,14
	.byte	'STATUS',0
	.word	24261
	.byte	4,2,35,0,14
	.byte	'ACTIVITY_0',0
	.word	24816
	.byte	4,2,35,4,0,10
	.word	24856
	.byte	15,120
	.word	520
	.byte	16,119,0,11
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,10,254,8,16,4,12
	.byte	'ABWC0_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,184,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	24926
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,223,9,16,4,12
	.byte	'ABWC0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ABWC1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ABWC2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ABWC3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ABWC4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ABWC5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ABWC6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ABWC7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ABWC8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ABWC9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ABWC10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ABWC11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TBWC0',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TBWC1',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TBWC2',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TBWC3',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TBWC4',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TBWC5',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TBWC6',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TBWC7',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TBWC8',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TBWC9',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TBWC10',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TBWC11',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,216,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	25501
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,10,156,9,16,4,12
	.byte	'ABWC0_EN_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,192,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26012
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,186,9,16,4,12
	.byte	'TRG_ABWC0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_ABWC1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_ABWC2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_ABWC3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG_ABWC4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG_ABWC5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TRG_ABWC6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TRG_ABWC7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TRG_ABWC8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TRG_ABWC9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TRG_ABWC10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TRG_ABWC11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TRG_TBWC0',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TRG_TBWC1',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TRG_TBWC2',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TRG_TBWC3',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TRG_TBWC4',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TRG_TBWC5',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TRG_TBWC6',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TRG_TBWC7',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TRG_TBWC8',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TRG_TBWC9',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TRG_TBWC10',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TRG_TBWC11',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,200,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	26687
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,216,9,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,208,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27295
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,224,8,16,4,12
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,176,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	27411
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMP',0,10,230,57,25,24,14
	.byte	'EN',0
	.word	25461
	.byte	4,2,35,0,14
	.byte	'IRQ_NOTIFY',0
	.word	25972
	.byte	4,2,35,4,14
	.byte	'IRQ_EN',0
	.word	26647
	.byte	4,2,35,8,14
	.byte	'IRQ_FORCINT',0
	.word	27255
	.byte	4,2,35,12,14
	.byte	'IRQ_MODE',0
	.word	27371
	.byte	4,2,35,16,14
	.byte	'EIRQ_EN',0
	.word	28071
	.byte	4,2,35,20,0,10
	.word	28111
	.byte	15,104
	.word	520
	.byte	16,103,0,11
	.byte	'_Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,129,1,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'RREQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'WREQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10337
	.byte	18,0,2,35,0,0,13,10,248,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28249
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,10,139,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,128,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28418
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,10,146,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,136,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28529
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,153,1,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	23,0,2,35,0,0,13,10,144,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28640
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,167,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,160,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28755
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,174,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,168,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28871
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,160,1,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	23,0,2,35,0,0,13,10,152,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	28987
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,181,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,176,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29102
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,188,1,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,184,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29218
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,220,1,16,4,12
	.byte	'NEW_DATA0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,216,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29334
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,10,195,1,16,4,12
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,192,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29493
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,204,1,16,4,12
	.byte	'TRG_NEW_DATA0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_NEW_DATA',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_ACC_ACK',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,200,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29669
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,213,1,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,208,34,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	29840
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ARU',0,10,148,57,25,52,14
	.byte	'ARU_ACCESS',0
	.word	28378
	.byte	4,2,35,0,14
	.byte	'DATA_H',0
	.word	28489
	.byte	4,2,35,4,14
	.byte	'DATA_L',0
	.word	28600
	.byte	4,2,35,8,14
	.byte	'DBG_ACCESS0',0
	.word	28715
	.byte	4,2,35,12,14
	.byte	'DBG_DATA0_H',0
	.word	28831
	.byte	4,2,35,16,14
	.byte	'DBG_DATA0_L',0
	.word	28947
	.byte	4,2,35,20,14
	.byte	'DBG_ACCESS1',0
	.word	29062
	.byte	4,2,35,24,14
	.byte	'DBG_DATA1_H',0
	.word	29178
	.byte	4,2,35,28,14
	.byte	'DBG_DATA1_L',0
	.word	29294
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	29453
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	29629
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	29800
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	29916
	.byte	4,2,35,48,0,10
	.word	29956
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,10,148,10,16,4,12
	.byte	'EN_CLK0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'EN_CLK1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'EN_CLK2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'EN_CLK3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'EN_CLK4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'EN_CLK5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'EN_CLK6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'EN_CLK7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'EN_ECLK0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'EN_ECLK1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'EN_ECLK2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'EN_FXCLK',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,248,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30234
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,194,10,16,4,12
	.byte	'GCLK_NUM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,160,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30561
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,187,10,16,4,12
	.byte	'GCLK_DEN',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,152,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30678
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,253,9,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,224,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30795
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,10,200,55,25,4,14
	.byte	'CTRL',0
	.word	30874
	.byte	4,2,35,0,0,15,24
	.word	30914
	.byte	16,5,0,10
	.word	30955
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,132,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'CLK6_SEL',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	7,0,2,35,0,0,13,10,232,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	30969
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_6',0,10,206,55,25,4,14
	.byte	'CTRL',0
	.word	31067
	.byte	4,2,35,0,0,10
	.word	31107
	.byte	11
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,140,10,16,4,12
	.byte	'CLK_CNT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'CLK7_SEL',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	7,0,2,35,0,0,13,10,240,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31152
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_CLK_7',0,10,212,55,25,4,14
	.byte	'CTRL',0
	.word	31250
	.byte	4,2,35,0,0,10
	.word	31290
	.byte	11
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,173,10,16,4,12
	.byte	'ECLK_NUM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,136,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31335
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,166,10,16,4,12
	.byte	'ECLK_DEN',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,128,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31452
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_ECLK',0,10,218,55,25,8,14
	.byte	'NUM',0
	.word	31412
	.byte	4,2,35,0,14
	.byte	'DEN',0
	.word	31529
	.byte	4,2,35,4,0,15,24
	.word	31569
	.byte	16,2,0,10
	.word	31620
	.byte	11
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,180,10,16,4,12
	.byte	'FXCLK_SEL',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,144,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31634
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_CMU_FXCLK',0,10,225,55,25,4,14
	.byte	'CTRL',0
	.word	31713
	.byte	4,2,35,0,0,10
	.word	31753
	.byte	11
	.byte	'_Ifx_GTM_CMU',0,10,241,57,25,72,14
	.byte	'CLK_EN',0
	.word	30521
	.byte	4,2,35,0,14
	.byte	'GCLK_NUM',0
	.word	30638
	.byte	4,2,35,4,14
	.byte	'GCLK_DEN',0
	.word	30755
	.byte	4,2,35,8,14
	.byte	'CLK0_5',0
	.word	30964
	.byte	24,2,35,12,14
	.byte	'CLK_6',0
	.word	31147
	.byte	4,2,35,36,14
	.byte	'CLK_7',0
	.word	31330
	.byte	4,2,35,40,14
	.byte	'ECLK',0
	.word	31629
	.byte	24,2,35,44,14
	.byte	'FXCLK',0
	.word	31793
	.byte	4,2,35,68,0,10
	.word	31798
	.byte	15,184,1
	.word	520
	.byte	16,183,1,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,236,4,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,208,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	31961
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,245,4,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,216,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32117
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,222,5,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,128,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32690
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,231,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,136,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	32846
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,132,6,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,144,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33419
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,141,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,152,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	33575
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,170,6,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,160,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34148
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,179,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,168,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34304
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,208,6,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,176,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	34877
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,217,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,184,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35033
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,246,6,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,192,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35606
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,255,6,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,200,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	35762
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,156,7,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,208,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36335
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,165,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,216,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	36491
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,194,7,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,224,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37064
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,203,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,232,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37220
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,232,7,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,240,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37793
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,241,7,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,248,37,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	37949
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,142,8,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,128,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38522
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,151,8,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,136,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	38678
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,146,5,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,224,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39251
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,155,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,232,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39408
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,184,5,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'BRC_MODE',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,240,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	39982
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,193,5,16,4,12
	.byte	'EN_DEST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN_DEST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN_DEST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN_DEST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN_DEST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN_DEST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN_DEST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN_DEST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN_DEST8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN_DEST9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN_DEST10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN_DEST11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN_DEST12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN_DEST13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN_DEST14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN_DEST15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN_DEST16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN_DEST17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN_DEST18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN_DEST19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN_DEST20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN_DEST21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN_TRASHBIN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	9,0,2,35,0,0,13,10,248,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40139
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,210,4,16,4,12
	.byte	'DEST_ERR',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DID0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'DID1',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'DID2',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'DID3',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'DID4',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DID5',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'DID6',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'DID7',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DID8',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'DID9',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'DID10',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'DID11',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,192,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	40713
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,10,165,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,168,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41026
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,184,4,16,4,12
	.byte	'TRG_DEST_ERR',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_DID0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_DID1',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_DID2',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG_DID3',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG_DID4',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TRG_DID5',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TRG_DID6',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TRG_DID7',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TRG_DID8',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TRG_DID9',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TRG_DID10',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TRG_DID11',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,176,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41374
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,203,4,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,184,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41740
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,10,229,4,16,4,12
	.byte	'RST',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	31,0,2,35,0,0,13,10,200,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41856
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,146,4,16,4,12
	.byte	'DEST_ERR_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DID_EN0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'DID_EN1',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'DID_EN2',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'DID_EN3',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'DID_EN4',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DID_EN5',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'DID_EN6',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'DID_EN7',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DID_EN8',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'DID_EN9',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'DID_EN10',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'DID_EN11',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	19,0,2,35,0,0,13,10,160,36,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	41962
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_BRC',0,10,187,57,25,120,14
	.byte	'SRC0_ADDR',0
	.word	32077
	.byte	4,2,35,0,14
	.byte	'SRC0_DEST',0
	.word	32650
	.byte	4,2,35,4,14
	.byte	'SRC1_ADDR',0
	.word	32806
	.byte	4,2,35,8,14
	.byte	'SRC1_DEST',0
	.word	33379
	.byte	4,2,35,12,14
	.byte	'SRC2_ADDR',0
	.word	33535
	.byte	4,2,35,16,14
	.byte	'SRC2_DEST',0
	.word	34108
	.byte	4,2,35,20,14
	.byte	'SRC3_ADDR',0
	.word	34264
	.byte	4,2,35,24,14
	.byte	'SRC3_DEST',0
	.word	34837
	.byte	4,2,35,28,14
	.byte	'SRC4_ADDR',0
	.word	34993
	.byte	4,2,35,32,14
	.byte	'SRC4_DEST',0
	.word	35566
	.byte	4,2,35,36,14
	.byte	'SRC5_ADDR',0
	.word	35722
	.byte	4,2,35,40,14
	.byte	'SRC5_DEST',0
	.word	36295
	.byte	4,2,35,44,14
	.byte	'SRC6_ADDR',0
	.word	36451
	.byte	4,2,35,48,14
	.byte	'SRC6_DEST',0
	.word	37024
	.byte	4,2,35,52,14
	.byte	'SRC7_ADDR',0
	.word	37180
	.byte	4,2,35,56,14
	.byte	'SRC7_DEST',0
	.word	37753
	.byte	4,2,35,60,14
	.byte	'SRC8_ADDR',0
	.word	37909
	.byte	4,2,35,64,14
	.byte	'SRC8_DEST',0
	.word	38482
	.byte	4,2,35,68,14
	.byte	'SRC9_ADDR',0
	.word	38638
	.byte	4,2,35,72,14
	.byte	'SRC9_DEST',0
	.word	39211
	.byte	4,2,35,76,14
	.byte	'SRC10_ADDR',0
	.word	39368
	.byte	4,2,35,80,14
	.byte	'SRC10_DEST',0
	.word	39942
	.byte	4,2,35,84,14
	.byte	'SRC11_ADDR',0
	.word	40099
	.byte	4,2,35,88,14
	.byte	'SRC11_DEST',0
	.word	40673
	.byte	4,2,35,92,14
	.byte	'IRQ_NOTIFY',0
	.word	40986
	.byte	4,2,35,96,14
	.byte	'IRQ_EN',0
	.word	41334
	.byte	4,2,35,100,14
	.byte	'IRQ_FORCINT',0
	.word	41700
	.byte	4,2,35,104,14
	.byte	'IRQ_MODE',0
	.word	41816
	.byte	4,2,35,108,14
	.byte	'RST',0
	.word	41922
	.byte	4,2,35,112,14
	.byte	'EIRQ_EN',0
	.word	42271
	.byte	4,2,35,116,0,10
	.word	42311
	.byte	15,136,3
	.word	520
	.byte	16,135,3,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,10,241,19,16,4,12
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'BRC_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'AEI_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'CMP_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'SPE0_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'SPE1_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	8,16,2,35,0,12
	.byte	'PSM0_CH0_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'PSM0_CH1_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'PSM0_CH2_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'PSM0_CH3_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'PSM0_CH4_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'PSM0_CH5_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'PSM0_CH6_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'PSM0_CH7_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,233,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	42912
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_1_Bits',0,10,136,20,16,4,12
	.byte	'DPLL_DCG_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DPLL_EDI_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'DPLL_TIN_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'DPLL_TAX_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'DPLL_SIS_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'DPLL_TIS_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DPLL_MSI_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'DPLL_MTI_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'DPLL_SAS_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DPLL_TAS_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'DPLL_PWI_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'DPLL_W2I_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'DPLL_W1I_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'DPLL_GLI_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'DPLL_LLI_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'DPLL_EI_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'DPLL_TE0_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'DPLL_TE1_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'DPLL_TE2_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'DPLL_TE3_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'DPLL_TE4_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'DPLL_CDIT_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'DPLL_CDIS_IRQ',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'DPLL_TORI_IRQ',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'DPLL_SORI_IRQ',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,241,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	43403
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,10,169,20,16,4,12
	.byte	'TIM0_CH0_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,249,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44151
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_4_Bits',0,10,199,20,16,4,12
	.byte	'MCS0_CH0_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,129,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	44822
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,10,229,20,16,4,12
	.byte	'TOM0_CH0_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TOM0_CH1_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TOM0_CH2_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TOM0_CH3_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TOM0_CH4_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TOM0_CH5_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TOM0_CH6_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TOM0_CH7_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TOM0_CH8_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TOM0_CH9_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TOM0_CH10_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TOM0_CH11_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TOM0_CH12_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TOM0_CH13_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TOM0_CH14_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TOM0_CH15_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TOM1_CH0_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TOM1_CH1_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TOM1_CH2_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TOM1_CH3_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TOM1_CH4_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TOM1_CH5_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TOM1_CH6_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TOM1_CH7_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'TOM1_CH8_IRQ',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TOM1_CH9_IRQ',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'TOM1_CH10_IRQ',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'TOM1_CH11_IRQ',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'TOM1_CH12_IRQ',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'TOM1_CH13_IRQ',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'TOM1_CH14_IRQ',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'TOM1_CH15_IRQ',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,137,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	45493
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_9_Bits',0,10,138,21,16,4,12
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,145,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	46345
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,249,21,16,4,12
	.byte	'GTM_EIRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'BRC_EIRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_EIRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TIM0_EIRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TIM1_EIRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TIM2_EIRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10337
	.byte	5,20,2,35,0,12
	.byte	'MCS0_EIRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'MCS1_EIRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'MCS2_EIRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	5,12,2,35,0,12
	.byte	'SPE0_EIRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'SPE1_EIRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'CMP_EIRQ',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'DPLL_EIRQ',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10337
	.byte	6,0,2,35,0,0,13,10,177,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47217
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,175,21,16,4,12
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,153,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47675
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,189,21,16,4,12
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,161,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	47980
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,219,21,16,4,12
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,169,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	48678
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ICM',0,10,133,59,25,68,14
	.byte	'IRQG_0',0
	.word	43363
	.byte	4,2,35,0,14
	.byte	'IRQG_1',0
	.word	44111
	.byte	4,2,35,4,14
	.byte	'IRQG_2',0
	.word	44782
	.byte	4,2,35,8,14
	.byte	'reserved_C',0
	.word	1947
	.byte	4,2,35,12,14
	.byte	'IRQG_4',0
	.word	45453
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1947
	.byte	4,2,35,20,14
	.byte	'IRQG_6',0
	.word	46305
	.byte	4,2,35,24,14
	.byte	'reserved_1C',0
	.word	3766
	.byte	8,2,35,28,14
	.byte	'IRQG_9',0
	.word	47177
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3766
	.byte	8,2,35,40,14
	.byte	'IRQG_MEI',0
	.word	47635
	.byte	4,2,35,48,14
	.byte	'IRQG_CEI0',0
	.word	47940
	.byte	4,2,35,52,14
	.byte	'IRQG_CEI1',0
	.word	48638
	.byte	4,2,35,56,14
	.byte	'reserved_3C',0
	.word	1947
	.byte	4,2,35,60,14
	.byte	'IRQG_CEI3',0
	.word	49336
	.byte	4,2,35,64,0,10
	.word	49376
	.byte	15,188,3
	.word	520
	.byte	16,187,3,0,11
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,246,27,16,4,12
	.byte	'SPE_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SIE0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'SIE1',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'SIE2',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRIG_SEL',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'TIM_SEL',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'FSOM',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SPE_PAT_PTR',0,4
	.word	10337
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'AIP',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'ADIR',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'PIP',0,4
	.word	10337
	.byte	3,13,2,35,0,12
	.byte	'PDIR',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'NIP',0,4
	.word	10337
	.byte	3,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'FSOL',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,153,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	49687
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,10,204,28,16,4,12
	.byte	'IP0_VAL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'IP0_PAT',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'IP1_VAL',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'IP1_PAT',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'IP2_VAL',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'IP2_PAT',0,4
	.word	10337
	.byte	3,20,2,35,0,12
	.byte	'IP3_VAL',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'IP3_PAT',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'IP4_VAL',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'IP4_PAT',0,4
	.word	10337
	.byte	3,12,2,35,0,12
	.byte	'IP5_VAL',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'IP5_PAT',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'IP6_VAL',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'IP6_PAT',0,4
	.word	10337
	.byte	3,4,2,35,0,12
	.byte	'IP7_VAL',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'IP7_PAT',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,217,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50045
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,10,197,28,16,4,12
	.byte	'SPE_OUT_PAT',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,209,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50418
	.byte	4,2,35,0,0,15,32
	.word	50497
	.byte	16,7,0,11
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,190,28,16,4,12
	.byte	'SPE_OUT_CTRL',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,201,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50546
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,179,28,16,4,12
	.byte	'SPE_NIPD',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,193,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50667
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,10,150,28,16,4,12
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,169,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	50864
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,161,28,16,4,12
	.byte	'TRG_SPE_NIPD',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_SPE_DCHG',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_SPE_PERR',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_SPE_BIS',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG_SPE_RCMP',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,177,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51092
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,172,28,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,185,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51310
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,139,28,16,4,12
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,161,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51426
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CNT_Bits',0,10,239,27,16,4,12
	.byte	'CNT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,145,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51660
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_SPE_CMP_Bits',0,10,232,27,16,4,12
	.byte	'CMP',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,137,51,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	51767
	.byte	4,2,35,0,0,15,56
	.word	520
	.byte	16,55,0,11
	.byte	'_Ifx_GTM_SPE',0,10,208,59,25,128,1,14
	.byte	'CTRL_STAT',0
	.word	50005
	.byte	4,2,35,0,14
	.byte	'PAT',0
	.word	50378
	.byte	4,2,35,4,14
	.byte	'OUT_PAT',0
	.word	50537
	.byte	32,2,35,8,14
	.byte	'OUT_CTRL',0
	.word	50627
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	50824
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	51052
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	51270
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	51386
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	51620
	.byte	4,2,35,60,14
	.byte	'CNT',0
	.word	51727
	.byte	4,2,35,64,14
	.byte	'CMP',0
	.word	51834
	.byte	4,2,35,68,14
	.byte	'reserved_48',0
	.word	51874
	.byte	56,2,35,72,0,15,128,2
	.word	51883
	.byte	16,1,0,10
	.word	52110
	.byte	15,128,12
	.word	520
	.byte	16,255,11,0,11
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,10,171,23,16,4,12
	.byte	'TSEL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SSL',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'LSEL',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	11,16,2,35,0,12
	.byte	'TSPP0_EN',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TSPP0_DLD',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'TSPP0_I0V',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TSPP0_I1V',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TSPP0_I2V',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'reserved_23',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'TSPP1_EN',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TSPP1_DLD',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'TSPP1_I0V',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'TSPP1_I1V',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'TSPP1_I2V',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,169,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52136
	.byte	4,2,35,0,0,15,60
	.word	520
	.byte	16,59,0,11
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,10,194,23,16,4,12
	.byte	'MEM0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'MEM1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'MEM2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,177,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52584
	.byte	4,2,35,0,0,15,188,1
	.word	520
	.byte	16,187,1,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,10,248,29,16,4,12
	.byte	'GPR0',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,225,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52736
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,10,255,29,16,4,12
	.byte	'GPR1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,233,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52841
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,10,165,29,16,4,12
	.byte	'CNT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,161,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	52946
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,10,208,29,16,4,12
	.byte	'ECNT',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,185,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53056
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,10,172,29,16,4,12
	.byte	'CNTS',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'ECNT',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,169,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53168
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,10,177,30,16,4,12
	.byte	'TO_CNT',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,145,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53273
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,10,184,30,16,4,12
	.byte	'TOV',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	20,4,2,35,0,12
	.byte	'TCS',0,4
	.word	10337
	.byte	3,1,2,35,0,12
	.byte	'reserved_31',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,153,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53386
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,241,29,16,4,12
	.byte	'FLT_RE',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,217,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53534
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,234,29,16,4,12
	.byte	'FLT_FE',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,209,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53650
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,10,179,29,16,4,12
	.byte	'TIM_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TIM_MODE',0,4
	.word	10337
	.byte	3,28,2,35,0,12
	.byte	'OSM',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ARU_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'CICTRL',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TBU0_SEL',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'GPR0_SEL',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'GPR1_SEL',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'CNTS_SEL',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'DSL',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'ISL',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'ECNT_RESET',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'FLT_EN',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'FLT_CNT_FRQ',0,4
	.word	10337
	.byte	2,13,2,35,0,12
	.byte	'EXT_CAP_EN',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'FLT_MODE_RE',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'FLT_CTR_RE',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'FLT_MODE_FE',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'FLT_CTR_FE',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'CLK_SEL',0,4
	.word	10337
	.byte	3,5,2,35,0,12
	.byte	'FR_ECNT_OFL',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'EGPR0_SEL',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'EGPR1_SEL',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'TOCTRL',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,177,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	53766
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,215,29,16,4,12
	.byte	'EXT_CAP_SRC',0,4
	.word	10337
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,193,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54315
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,165,30,16,4,12
	.byte	'NEWVAL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'GPROFL',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TODET',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,137,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54434
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,134,30,16,4,12
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_IRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TODET_IRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,241,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54646
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,146,30,16,4,12
	.byte	'TRG_NEWVAL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_ECNTOFL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_CNTOFL',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_GPROFL',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG_TODET',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG_GLITCHDET',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,249,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	54896
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,158,30,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,129,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55133
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,222,29,16,4,12
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TODET_EIRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'reserved_6',0,4
	.word	10337
	.byte	26,0,2,35,0,0,13,10,201,52,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55252
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_CH',0,10,221,56,25,120,14
	.byte	'GPR0',0
	.word	52801
	.byte	4,2,35,0,14
	.byte	'GPR1',0
	.word	52906
	.byte	4,2,35,4,14
	.byte	'CNT',0
	.word	53016
	.byte	4,2,35,8,14
	.byte	'ECNT',0
	.word	53128
	.byte	4,2,35,12,14
	.byte	'CNTS',0
	.word	53233
	.byte	4,2,35,16,14
	.byte	'TDUC',0
	.word	53346
	.byte	4,2,35,20,14
	.byte	'TDUV',0
	.word	53494
	.byte	4,2,35,24,14
	.byte	'FLT_RE',0
	.word	53610
	.byte	4,2,35,28,14
	.byte	'FLT_FE',0
	.word	53726
	.byte	4,2,35,32,14
	.byte	'CTRL',0
	.word	54275
	.byte	4,2,35,36,14
	.byte	'ECTRL',0
	.word	54394
	.byte	4,2,35,40,14
	.byte	'IRQ_NOTIFY',0
	.word	54606
	.byte	4,2,35,44,14
	.byte	'IRQ_EN',0
	.word	54856
	.byte	4,2,35,48,14
	.byte	'IRQ_FORCINT',0
	.word	55093
	.byte	4,2,35,52,14
	.byte	'IRQ_MODE',0
	.word	55212
	.byte	4,2,35,56,14
	.byte	'EIRQ_EN',0
	.word	55469
	.byte	4,2,35,60,14
	.byte	'reserved_40',0
	.word	51874
	.byte	56,2,35,64,0,10
	.word	55509
	.byte	11
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,10,193,30,16,4,12
	.byte	'VAL_0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'MODE_0',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'VAL_1',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'MODE_1',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'VAL_2',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'MODE_2',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'VAL_3',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'MODE_3',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'VAL_4',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'MODE_4',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'VAL_5',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'MODE_5',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'VAL_6',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'MODE_6',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'VAL_7',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'MODE_7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,161,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	55808
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,10,214,30,16,4,12
	.byte	'RST_CH0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,169,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56160
	.byte	4,2,35,0,0,10
	.word	55509
	.byte	10
	.word	55509
	.byte	10
	.word	55509
	.byte	10
	.word	55509
	.byte	10
	.word	55509
	.byte	10
	.word	55509
	.byte	10
	.word	55509
	.byte	15,136,8
	.word	520
	.byte	16,135,8,0,11
	.byte	'_Ifx_GTM_TIM',0,10,237,59,25,128,16,14
	.byte	'CH0',0
	.word	55803
	.byte	120,2,35,0,14
	.byte	'IN_SRC',0
	.word	56120
	.byte	4,2,35,120,14
	.byte	'RST',0
	.word	56363
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	56403
	.byte	120,3,35,128,1,14
	.byte	'reserved_F8',0
	.word	3766
	.byte	8,3,35,248,1,14
	.byte	'CH2',0
	.word	56408
	.byte	120,3,35,128,2,14
	.byte	'reserved_178',0
	.word	3766
	.byte	8,3,35,248,2,14
	.byte	'CH3',0
	.word	56413
	.byte	120,3,35,128,3,14
	.byte	'reserved_1F8',0
	.word	3766
	.byte	8,3,35,248,3,14
	.byte	'CH4',0
	.word	56418
	.byte	120,3,35,128,4,14
	.byte	'reserved_278',0
	.word	3766
	.byte	8,3,35,248,4,14
	.byte	'CH5',0
	.word	56423
	.byte	120,3,35,128,5,14
	.byte	'reserved_2F8',0
	.word	3766
	.byte	8,3,35,248,5,14
	.byte	'CH6',0
	.word	56428
	.byte	120,3,35,128,6,14
	.byte	'reserved_378',0
	.word	3766
	.byte	8,3,35,248,6,14
	.byte	'CH7',0
	.word	56433
	.byte	120,3,35,128,7,14
	.byte	'reserved_3F8',0
	.word	56438
	.byte	136,8,3,35,248,7,0,15,128,48
	.word	56449
	.byte	16,2,0,10
	.word	56771
	.byte	15,128,176,1
	.word	520
	.byte	16,255,175,1,0,11
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,10,249,30,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	11,21,2,35,0,12
	.byte	'SL',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'CLK_SRC_SR',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	5,12,2,35,0,12
	.byte	'RST_CCU0',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'TRIGOUT',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'OSM',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'BITREV',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'SPEM',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'GCM',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,201,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	56799
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,10,170,31,16,4,12
	.byte	'SR0',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,241,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57125
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,10,177,31,16,4,12
	.byte	'SR1',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,249,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57235
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,10,228,30,16,4,12
	.byte	'CM0',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,177,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57345
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,10,235,30,16,4,12
	.byte	'CM1',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,185,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57455
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,10,242,30,16,4,12
	.byte	'CN0',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,193,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57565
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,10,184,31,16,4,12
	.byte	'OL',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	31,0,2,35,0,0,13,10,129,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57675
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,162,31,16,4,12
	.byte	'CCU0TC',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,233,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57784
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,139,31,16,4,12
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,209,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	57921
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,147,31,16,4,12
	.byte	'TRG_CCU0TC0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_CCU1TC0',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,217,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58068
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,155,31,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,225,53,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58216
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_CH',0,10,243,56,25,48,14
	.byte	'CTRL',0
	.word	57085
	.byte	4,2,35,0,14
	.byte	'SR0',0
	.word	57195
	.byte	4,2,35,4,14
	.byte	'SR1',0
	.word	57305
	.byte	4,2,35,8,14
	.byte	'CM0',0
	.word	57415
	.byte	4,2,35,12,14
	.byte	'CM1',0
	.word	57525
	.byte	4,2,35,16,14
	.byte	'CN0',0
	.word	57635
	.byte	4,2,35,20,14
	.byte	'STAT',0
	.word	57744
	.byte	4,2,35,24,14
	.byte	'IRQ_NOTIFY',0
	.word	57881
	.byte	4,2,35,28,14
	.byte	'IRQ_EN',0
	.word	58028
	.byte	4,2,35,32,14
	.byte	'IRQ_FORCINT',0
	.word	58176
	.byte	4,2,35,36,14
	.byte	'IRQ_MODE',0
	.word	58295
	.byte	4,2,35,40,14
	.byte	'reserved_2C',0
	.word	1947
	.byte	4,2,35,44,0,10
	.word	58335
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,249,31,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,169,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	58552
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,191,31,16,4,12
	.byte	'ACT_TB',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10337
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,137,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59002
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,228,31,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,161,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59158
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,144,32,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,177,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59590
	.byte	4,2,35,0,0,10
	.word	58335
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,200,31,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,145,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	59865
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,214,31,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,153,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60153
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,158,32,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,185,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60441
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,172,32,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,193,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	60729
	.byte	4,2,35,0,0,10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,244,32,16,4,12
	.byte	'HOST_TRIG',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	7,24,2,35,0,12
	.byte	'RST_CH0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'RST_CH1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'RST_CH2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'RST_CH3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'RST_CH4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'RST_CH5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'RST_CH6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'RST_CH7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'UPEN_CTRL0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'UPEN_CTRL1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'UPEN_CTRL2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'UPEN_CTRL3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'UPEN_CTRL4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'UPEN_CTRL5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'UPEN_CTRL6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'UPEN_CTRL7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,233,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61052
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,186,32,16,4,12
	.byte	'ACT_TB',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'TB_TRIG',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TBU_SEL',0,4
	.word	10337
	.byte	2,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,201,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61502
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,223,32,16,4,12
	.byte	'FUPD_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'FUPD_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'FUPD_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'FUPD_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'FUPD_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'FUPD_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'FUPD_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'FUPD_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'RSTCN0_CH0',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'RSTCN0_CH1',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'RSTCN0_CH2',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'RSTCN0_CH3',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'RSTCN0_CH4',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'RSTCN0_CH5',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'RSTCN0_CH6',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'RSTCN0_CH7',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,225,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	61658
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,139,33,16,4,12
	.byte	'INT_TRIG0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'INT_TRIG1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'INT_TRIG2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'INT_TRIG3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'INT_TRIG4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'INT_TRIG5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'INT_TRIG6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'INT_TRIG7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,241,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62090
	.byte	4,2,35,0,0,10
	.word	58335
	.byte	11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,195,32,16,4,12
	.byte	'ENDIS_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,209,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62365
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,209,32,16,4,12
	.byte	'ENDIS_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'ENDIS_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'ENDIS_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'ENDIS_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'ENDIS_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'ENDIS_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'ENDIS_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'ENDIS_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,217,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62653
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,153,33,16,4,12
	.byte	'OUTEN_CTRL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_CTRL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_CTRL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_CTRL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_CTRL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_CTRL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_CTRL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_CTRL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,249,54,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	62941
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,167,33,16,4,12
	.byte	'OUTEN_STAT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'OUTEN_STAT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'OUTEN_STAT2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'OUTEN_STAT3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'OUTEN_STAT4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'OUTEN_STAT5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'OUTEN_STAT6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'OUTEN_STAT7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,129,55,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	63229
	.byte	4,2,35,0,0,10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	10
	.word	58335
	.byte	15,144,8
	.word	520
	.byte	16,143,8,0,11
	.byte	'_Ifx_GTM_TOM',0,10,131,60,25,128,16,14
	.byte	'CH0',0
	.word	58547
	.byte	48,2,35,0,14
	.byte	'TGC0_GLB_CTRL',0
	.word	58962
	.byte	4,2,35,48,14
	.byte	'TGC0_ACT_TB',0
	.word	59118
	.byte	4,2,35,52,14
	.byte	'TGC0_FUPD_CTRL',0
	.word	59550
	.byte	4,2,35,56,14
	.byte	'TGC0_INT_TRIG',0
	.word	59820
	.byte	4,2,35,60,14
	.byte	'CH1',0
	.word	59860
	.byte	48,2,35,64,14
	.byte	'TGC0_ENDIS_CTRL',0
	.word	60113
	.byte	4,2,35,112,14
	.byte	'TGC0_ENDIS_STAT',0
	.word	60401
	.byte	4,2,35,116,14
	.byte	'TGC0_OUTEN_CTRL',0
	.word	60689
	.byte	4,2,35,120,14
	.byte	'TGC0_OUTEN_STAT',0
	.word	60977
	.byte	4,2,35,124,14
	.byte	'CH2',0
	.word	61017
	.byte	48,3,35,128,1,14
	.byte	'reserved_B0',0
	.word	13521
	.byte	16,3,35,176,1,14
	.byte	'CH3',0
	.word	61022
	.byte	48,3,35,192,1,14
	.byte	'reserved_F0',0
	.word	13521
	.byte	16,3,35,240,1,14
	.byte	'CH4',0
	.word	61027
	.byte	48,3,35,128,2,14
	.byte	'reserved_130',0
	.word	13521
	.byte	16,3,35,176,2,14
	.byte	'CH5',0
	.word	61032
	.byte	48,3,35,192,2,14
	.byte	'reserved_170',0
	.word	13521
	.byte	16,3,35,240,2,14
	.byte	'CH6',0
	.word	61037
	.byte	48,3,35,128,3,14
	.byte	'reserved_1B0',0
	.word	13521
	.byte	16,3,35,176,3,14
	.byte	'CH7',0
	.word	61042
	.byte	48,3,35,192,3,14
	.byte	'reserved_1F0',0
	.word	13521
	.byte	16,3,35,240,3,14
	.byte	'CH8',0
	.word	61047
	.byte	48,3,35,128,4,14
	.byte	'TGC1_GLB_CTRL',0
	.word	61462
	.byte	4,3,35,176,4,14
	.byte	'TGC1_ACT_TB',0
	.word	61618
	.byte	4,3,35,180,4,14
	.byte	'TGC1_FUPD_CTRL',0
	.word	62050
	.byte	4,3,35,184,4,14
	.byte	'TGC1_INT_TRIG',0
	.word	62320
	.byte	4,3,35,188,4,14
	.byte	'CH9',0
	.word	62360
	.byte	48,3,35,192,4,14
	.byte	'TGC1_ENDIS_CTRL',0
	.word	62613
	.byte	4,3,35,240,4,14
	.byte	'TGC1_ENDIS_STAT',0
	.word	62901
	.byte	4,3,35,244,4,14
	.byte	'TGC1_OUTEN_CTRL',0
	.word	63189
	.byte	4,3,35,248,4,14
	.byte	'TGC1_OUTEN_STAT',0
	.word	63477
	.byte	4,3,35,252,4,14
	.byte	'CH10',0
	.word	63517
	.byte	48,3,35,128,5,14
	.byte	'reserved_2B0',0
	.word	13521
	.byte	16,3,35,176,5,14
	.byte	'CH11',0
	.word	63522
	.byte	48,3,35,192,5,14
	.byte	'reserved_2F0',0
	.word	13521
	.byte	16,3,35,240,5,14
	.byte	'CH12',0
	.word	63527
	.byte	48,3,35,128,6,14
	.byte	'reserved_330',0
	.word	13521
	.byte	16,3,35,176,6,14
	.byte	'CH13',0
	.word	63532
	.byte	48,3,35,192,6,14
	.byte	'reserved_370',0
	.word	13521
	.byte	16,3,35,240,6,14
	.byte	'CH14',0
	.word	63537
	.byte	48,3,35,128,7,14
	.byte	'reserved_3B0',0
	.word	13521
	.byte	16,3,35,176,7,14
	.byte	'CH15',0
	.word	63542
	.byte	48,3,35,192,7,14
	.byte	'reserved_3F0',0
	.word	63547
	.byte	144,8,3,35,240,7,0,15,128,32
	.word	63558
	.byte	16,1,0,10
	.word	64472
	.byte	15,128,128,1
	.word	520
	.byte	16,255,127,0,15,128,64
	.word	16495
	.byte	16,3,0,10
	.word	64499
	.byte	15,128,160,2
	.word	520
	.byte	16,255,159,2,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,235,18,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	23,0,2,35,0,0,13,10,233,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64527
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_RD_CH',0,10,231,55,25,4,14
	.byte	'ARU_RD_FIFO',0
	.word	64608
	.byte	4,2,35,0,0,15,32
	.word	64648
	.byte	16,7,0,10
	.word	64695
	.byte	11
	.byte	'_Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,242,18,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'TMODE',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'DIR',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10337
	.byte	13,0,2,35,0,0,13,10,241,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64709
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A_STR_CH',0,10,237,55,25,4,14
	.byte	'STR_CFG',0
	.word	64826
	.byte	4,2,35,0,0,15,32
	.word	64866
	.byte	16,7,0,10
	.word	64910
	.byte	11
	.byte	'_Ifx_GTM_F2A_ENABLE_Bits',0,10,221,18,16,4,12
	.byte	'STR0_EN',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'STR1_EN',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'STR2_EN',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'STR3_EN',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'STR4_EN',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'STR5_EN',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'STR6_EN',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'STR7_EN',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,225,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	64924
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_F2A',0,10,247,58,25,68,14
	.byte	'RD_CH',0
	.word	64704
	.byte	32,2,35,0,14
	.byte	'STR_CH',0
	.word	64919
	.byte	32,2,35,32,14
	.byte	'ENABLE',0
	.word	65131
	.byte	4,2,35,64,0,10
	.word	65171
	.byte	11
	.byte	'_Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,122,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	29,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,240,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65243
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_AFD_CH',0,10,153,55,25,16,14
	.byte	'BUF_ACC',0
	.word	65317
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4106
	.byte	12,2,35,4,0,15,128,1
	.word	65357
	.byte	16,7,0,10
	.word	65417
	.byte	11
	.byte	'_Ifx_GTM_AFD',0,10,142,57,25,128,1,14
	.byte	'CH',0
	.word	65427
	.byte	128,1,2,35,0,0,10
	.word	65432
	.byte	15,128,6
	.word	520
	.byte	16,255,5,0,11
	.byte	'_Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,251,18,16,4,12
	.byte	'RBM',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'RAP',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FLUSH',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'WULOCK',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,249,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65482
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,143,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,137,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65643
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,210,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,201,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65760
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,227,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,217,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65879
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,196,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,185,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	65996
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,217,19,16,4,12
	.byte	'EMPTY',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'FULL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'LOW_WM',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'UP_WM',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,209,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66113
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,150,19,16,4,12
	.byte	'LEVEL',0,4
	.word	10337
	.byte	11,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	21,0,2,35,0,0,13,10,145,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66279
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,234,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,225,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66399
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,203,19,16,4,12
	.byte	'ADDR',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,193,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66514
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,186,19,16,4,12
	.byte	'FIFO_EMPTY',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,177,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66629
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,157,19,16,4,12
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,153,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	66814
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,167,19,16,4,12
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_FIFO_FULL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_FIFO_LWM',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_FIFO_UWM',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,161,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67023
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,177,19,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'DMA_HYSTERESIS',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'DMA_HYST_DIR',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,169,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67225
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,133,19,16,4,12
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'Reserved',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,129,46,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67395
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_FIFO_CH',0,10,243,55,25,64,14
	.byte	'CTRL',0
	.word	65603
	.byte	4,2,35,0,14
	.byte	'END_ADDR',0
	.word	65720
	.byte	4,2,35,4,14
	.byte	'START_ADDR',0
	.word	65839
	.byte	4,2,35,8,14
	.byte	'UPPER_WM',0
	.word	65956
	.byte	4,2,35,12,14
	.byte	'LOWER_WM',0
	.word	66073
	.byte	4,2,35,16,14
	.byte	'STATUS',0
	.word	66239
	.byte	4,2,35,20,14
	.byte	'FILL_LEVEL',0
	.word	66359
	.byte	4,2,35,24,14
	.byte	'WR_PTR',0
	.word	66474
	.byte	4,2,35,28,14
	.byte	'RD_PTR',0
	.word	66589
	.byte	4,2,35,32,14
	.byte	'IRQ_NOTIFY',0
	.word	66774
	.byte	4,2,35,36,14
	.byte	'IRQ_EN',0
	.word	66983
	.byte	4,2,35,40,14
	.byte	'IRQ_FORCINT',0
	.word	67185
	.byte	4,2,35,44,14
	.byte	'IRQ_MODE',0
	.word	67355
	.byte	4,2,35,48,14
	.byte	'EIRQ_EN',0
	.word	67567
	.byte	4,2,35,52,14
	.byte	'reserved_38',0
	.word	3766
	.byte	8,2,35,56,0,15,128,4
	.word	67607
	.byte	16,7,0,10
	.word	67900
	.byte	11
	.byte	'_Ifx_GTM_FIFO',0,10,255,58,25,128,4,14
	.byte	'CH',0
	.word	67910
	.byte	128,4,2,35,0,0,10
	.word	67915
	.byte	15,128,244,3
	.word	520
	.byte	16,255,243,3,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,10,144,12,16,4,12
	.byte	'MLT',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'SNU',0,4
	.word	10337
	.byte	5,16,2,35,0,12
	.byte	'TNU',0,4
	.word	10337
	.byte	9,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'SEN',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'TEN',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,224,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	67968
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,10,186,12,16,4,12
	.byte	'DMO',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DEN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'IDDS',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'COA',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10337
	.byte	5,16,2,35,0,12
	.byte	'SYN_NT',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'LCD',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'SWR',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'SYSF',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TS0_HRS',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'TS0_HRT',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'SMC',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'SSL',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'TSL',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,248,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68206
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,10,226,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'AEN0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'AEN1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'AEN2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'AEN3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'AEN4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'AEN5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'AEN6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'AEN7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'WAD0',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'WAD1',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'WAD2',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'WAD3',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'WAD4',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'WAD5',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'WAD6',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'WAD7',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,136,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	68639
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,10,249,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'AEN8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'AEN9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'AEN10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'AEN11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'AEN12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'AEN13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'AEN14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'AEN15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'WAD8',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'WAD9',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'WAD10',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'WAD11',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'WAD12',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'WAD13',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'WAD14',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'WAD15',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,144,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69013
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,10,144,13,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'AEN16',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'AEN17',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'AEN18',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'AEN19',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'AEN20',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'AEN21',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'AEN22',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'AEN23',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'WAD16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'WAD17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'WAD18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'WAD19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'WAD20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'WAD21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'WAD22',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'WAD23',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,152,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69399
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,10,230,10,16,4,12
	.byte	'ACT_Ni',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,192,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69789
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,10,147,16,16,4,12
	.byte	'SWON_S',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'SWON_T',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	6,24,2,35,0,12
	.byte	'OSS',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,175,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	69904
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,10,145,11,16,4,12
	.byte	'AOSV_2A',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'AOSV_2B',0,4
	.word	10337
	.byte	8,16,2,35,0,12
	.byte	'AOSV_2C',0,4
	.word	10337
	.byte	8,8,2,35,0,12
	.byte	'AOSV_2D',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,240,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70070
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,10,192,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'WAPT',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'APT',0,4
	.word	10337
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'WAPT_2B',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'APT_2B',0,4
	.word	10337
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,144,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70219
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,10,162,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'WAPS',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'APS',0,4
	.word	10337
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'WAPS_1C2',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'APS_1C2',0,4
	.word	10337
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,248,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70425
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,10,184,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'APT_2C',0,4
	.word	10337
	.byte	10,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	20,0,2,35,0,0,13,10,152,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70632
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,10,154,11,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'APS_1C3',0,4
	.word	10337
	.byte	6,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,128,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70768
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,10,132,16,16,4,12
	.byte	'NUTE',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'FST',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	2,19,2,35,0,12
	.byte	'SYN_T',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'SYN_T_OLD',0,4
	.word	10337
	.byte	3,13,2,35,0,12
	.byte	'VTN',0,4
	.word	10337
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	4,3,2,35,0,12
	.byte	'WNUT',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'WVTN',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,167,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	70905
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,10,246,15,16,4,12
	.byte	'NUSE',0,4
	.word	10337
	.byte	6,26,2,35,0,12
	.byte	'FSS',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'SYN_S',0,4
	.word	10337
	.byte	6,19,2,35,0,12
	.byte	'SYN_S_OLD',0,4
	.word	10337
	.byte	6,13,2,35,0,12
	.byte	'VSN',0,4
	.word	10337
	.byte	6,7,2,35,0,12
	.byte	'reserved_25',0,4
	.word	10337
	.byte	4,3,2,35,0,12
	.byte	'WNUS',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'WSYN',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'WVSN',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,159,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71154
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,239,15,16,4,12
	.byte	'NTI_CNT',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,151,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71380
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,235,14,16,4,12
	.byte	'PDI',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'PEI',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TINI',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TAXI',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SISI',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TISI',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MSI',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MTI',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SASI',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TASI',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'PWI',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'W2I',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'W1I',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'GL1I',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'LL1I',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EI',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'GL2I',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'LL2I',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TE0I',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TE1I',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TE2I',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TE3I',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TE4I',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'CDTI',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'CDSI',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,163,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	71496
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,160,14,16,4,12
	.byte	'PDI_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'PEI_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TINI_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TAXI_IRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SISI_IRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TISI_IRQ_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MSI_IRQ_EN',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MTI_IRQ_EN',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SASI_IRQ_EN',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TASI_IRQ_EN',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'PWI_IRQ_EN',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'W2I_IRQ_EN',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'W1I_IRQ_EN',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'GL1I_IRQ_EN',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'LL1I_IRQ_EN',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EI_IRQ_EN',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'GL2I_IRQ_EN',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'LL2I_IRQ_EN',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TE0I_IRQ_EN',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TE1I_IRQ_EN',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TE2I_IRQ_EN',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TE3I_IRQ_EN',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TE4I_IRQ_EN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'CDTI_IRQ_EN',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'CDSI_IRQ_EN',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,139,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72035
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,194,14,16,4,12
	.byte	'TRG_PDI',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_PEI',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_TINI',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG_TAXI',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG_SISI',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG_TISI',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TRG_MSI',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TRG_MTI',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TRG_SASI',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TRG_TASI',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TRG_PWI',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TRG_W2I',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TRG_W1I',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TRG_GL1I',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TRG_LL1I',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TRG_EI',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'TRG_GL2I',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'TRG_LL2I',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TRG_TE0I',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TRG_TE1I',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TRG_TE2I',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TRG_TE3I',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TRG_TE4I',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'TRG_CDTI',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'TRG_CDSI',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TRG_TORI',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'TRG_SORI',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'TRG_DCGI',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,147,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	72745
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,228,14,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,155,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73397
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,218,13,16,4,12
	.byte	'PDI_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'PEI_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TINI_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TAXI_EIRQ_EN',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'SISI_EIRQ_EN',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TISI_EIRQ_EN',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MSI_EIRQ_EN',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MTI_EIRQ_EN',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SASI_EIRQ_EN',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TASI_EIRQ_EN',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'PWI_EIRQ_EN',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'W2I_EIRQ_EN',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'W1I_EIRQ_EN',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'GL1I_EIRQ_EN',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'LL1I_EIRQ_EN',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EI_EIRQ_EN',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'GL2I_EIRQ_EN',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'LL2I_EIRQ_EN',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'TE0I_EIRQ_EN',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'TE1I_EIRQ_EN',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'TE2I_EIRQ_EN',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'TE3I_EIRQ_EN',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'TE4I_EIRQ_EN',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'CDTI_EIRQ_EN',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'CDSI_EIRQ_EN',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'TORI',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'SORI',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'DCGI',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,218,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	73514
	.byte	4,2,35,0,0,15,92
	.word	520
	.byte	16,91,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,145,14,16,4,12
	.byte	'INC_CNT1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,250,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74259
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,153,14,16,4,12
	.byte	'INC_CNT2',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,131,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74377
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,204,11,16,4,12
	.byte	'APT_2B_EXT',0,4
	.word	10337
	.byte	6,26,2,35,0,12
	.byte	'APT_2B_STATUS',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10337
	.byte	7,18,2,35,0,12
	.byte	'APT_2B_OLD',0,4
	.word	10337
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,160,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74495
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,174,11,16,4,12
	.byte	'APS_1C2_EXT',0,4
	.word	10337
	.byte	6,26,2,35,0,12
	.byte	'APS_1C2_STATUS',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'reserved_7',0,4
	.word	10337
	.byte	7,18,2,35,0,12
	.byte	'APS_1C2_OLD',0,4
	.word	10337
	.byte	6,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,136,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74684
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,212,17,16,4,12
	.byte	'TBU_TS0_T',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,225,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74876
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,205,17,16,4,12
	.byte	'TBU_TS0_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,217,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	74996
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,251,10,16,4,12
	.byte	'ADD_IN_LD_1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,216,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75116
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,130,11,16,4,12
	.byte	'ADD_IN_LD_2',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,224,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75239
	.byte	4,2,35,0,0,15,44
	.word	520
	.byte	16,43,0,11
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,10,169,17,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'CSO',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'CTO',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'CRO',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'RCS',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'RCT',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'PSE',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SOR',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MS',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TOR',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MT',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'RAM2_ERR',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	2,17,2,35,0,12
	.byte	'LOW_RES',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'CSVS',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'CSVT',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'CAIP2',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'CAIP1',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'ISN',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'ITN',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'BWD2',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'BWD1',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'LOCK2',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'SYS',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'SYT',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'FSD',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'FTD',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'LOCK1',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'ERR',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,209,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75371
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,138,14,16,4,12
	.byte	'ID_PMTR_x',0,4
	.word	10337
	.byte	9,23,2,35,0,12
	.byte	'reserved_9',0,4
	.word	10337
	.byte	23,0,2,35,0,0,13,10,242,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	75958
	.byte	4,2,35,0,0,15,96
	.word	76035
	.byte	16,23,0,15,128,1
	.word	520
	.byte	16,127,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,173,12,16,4,12
	.byte	'MLT',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	15,6,2,35,0,12
	.byte	'AMT',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'IDT',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	2,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,240,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76094
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,160,12,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'IFP',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	14,7,2,35,0,12
	.byte	'AMS',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'reserved_26',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'IDS',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	3,1,2,35,0,12
	.byte	'RMO',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,232,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76318
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,213,12,16,4,12
	.byte	'DMO',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,128,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76555
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,128,12,16,4,12
	.byte	'DMO',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	2,29,2,35,0,12
	.byte	'COA',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'PIT',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'SGE1',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'DLM1',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'PCM1',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'SGE2',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'DLM2',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'PCM2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'SYN_NS',0,4
	.word	10337
	.byte	21,0,2,35,0,0,13,10,216,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	76780
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,10,228,16,16,4,12
	.byte	'INIT_1A',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'INIT_1B',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'INIT_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'INIT_RAM',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,135,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77047
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,10,165,16,16,4,12
	.byte	'PSA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,191,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77241
	.byte	4,2,35,0,0,15,96
	.word	77309
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,10,167,13,16,4,12
	.byte	'DLA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,160,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77358
	.byte	4,2,35,0,0,15,96
	.word	77426
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,10,189,15,16,4,12
	.byte	'DB',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10337
	.byte	10,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,223,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77475
	.byte	4,2,35,0,0,15,96
	.word	77555
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,10,195,13,16,4,12
	.byte	'DTA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,192,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77604
	.byte	4,2,35,0,0,15,96
	.word	77672
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_0_Bits',0,10,149,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,169,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77721
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_T_1_Bits',0,10,156,18,16,4,12
	.byte	'TRIGGER_TS',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,177,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77839
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,10,131,14,16,4,12
	.byte	'TRIGGER_FT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,234,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	77957
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_0_Bits',0,10,135,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,153,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78074
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TS_S_1_Bits',0,10,142,18,16,4,12
	.byte	'STATE_TS',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,161,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78190
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,10,252,13,16,4,12
	.byte	'STATE_FT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,226,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78306
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,10,226,17,16,4,12
	.byte	'THMI',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,241,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78421
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,10,219,17,16,4,12
	.byte	'THMA',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,233,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78531
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,10,233,17,16,4,12
	.byte	'THVAL',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,249,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78641
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,10,247,17,16,4,12
	.byte	'DB',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10337
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,137,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78753
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,10,255,17,16,4,12
	.byte	'DB',0,4
	.word	10337
	.byte	10,22,2,35,0,12
	.byte	'DW',0,4
	.word	10337
	.byte	6,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,145,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78874
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,237,10,16,4,12
	.byte	'ADD_IN_CAL_1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,200,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	78997
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,244,10,16,4,12
	.byte	'ADD_IN_CAL_2',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,208,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79122
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,10,172,15,16,4,12
	.byte	'MPVAL1',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'SIX1',0,4
	.word	10337
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,206,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79247
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,10,181,15,16,4,12
	.byte	'MPVAL2',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'SIX2',0,4
	.word	10337
	.byte	8,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,215,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79377
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,225,15,16,4,12
	.byte	'NMB_T_TAR',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,135,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79507
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,232,15,16,4,12
	.byte	'NMB_T_TAR_OLD',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,143,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79627
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,204,15,16,4,12
	.byte	'NMB_S_TAR',0,4
	.word	10337
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,239,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79755
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,211,15,16,4,12
	.byte	'NMB_S_TAR_OLD',0,4
	.word	10337
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,247,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	79875
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,254,16,16,4,12
	.byte	'RCDT_TX',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,160,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80003
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,239,16,16,4,12
	.byte	'RCDT_SX',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,143,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80119
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,134,17,16,4,12
	.byte	'RCDT_TX_NOM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,169,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80235
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,247,16,16,4,12
	.byte	'RCDT_SX_NOM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,152,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80359
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,155,17,16,4,12
	.byte	'RDT_T_ACT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,193,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80483
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,141,17,16,4,12
	.byte	'RDT_S_ACT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,185,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80603
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,188,13,16,4,12
	.byte	'DT_T_ACT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,184,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80723
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,174,13,16,4,12
	.byte	'DT_S_ACT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,176,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80841
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,10,211,13,16,4,12
	.byte	'EDT_T',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,210,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	80959
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,10,150,15,16,4,12
	.byte	'MEDT_T',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,181,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81071
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,10,203,13,16,4,12
	.byte	'EDT_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,201,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81185
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,10,142,15,16,4,12
	.byte	'MEDT_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,172,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81297
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,10,228,11,16,4,12
	.byte	'CDT_TX',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,184,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81411
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,10,214,11,16,4,12
	.byte	'CDT_SX',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,168,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81525
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,235,11,16,4,12
	.byte	'CDT_TX_NOM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,192,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81639
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,221,11,16,4,12
	.byte	'CDT_SX_NOM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,176,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81761
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,10,240,17,16,4,12
	.byte	'TLR',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,129,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81883
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,10,162,17,16,4,12
	.byte	'SLR',0,4
	.word	10337
	.byte	8,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,201,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	81990
	.byte	4,2,35,0,0,15,88
	.word	520
	.byte	16,87,0,11
	.byte	'_Ifx_GTM_DPLL_PDT_T_Bits',0,10,157,16,16,4,12
	.byte	'DB',0,4
	.word	10337
	.byte	14,18,2,35,0,12
	.byte	'DW',0,4
	.word	10337
	.byte	10,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,183,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82106
	.byte	4,2,35,0,0,15,96
	.word	82189
	.byte	16,23,0,15,96
	.word	520
	.byte	16,95,0,11
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,10,157,15,16,4,12
	.byte	'MLS1',0,4
	.word	10337
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10337
	.byte	14,0,2,35,0,0,13,10,189,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82247
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,10,164,15,16,4,12
	.byte	'MLS2',0,4
	.word	10337
	.byte	18,14,2,35,0,12
	.byte	'reserved_18',0,4
	.word	10337
	.byte	14,0,2,35,0,0,13,10,197,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82357
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,242,11,16,4,12
	.byte	'CNT_NUM_1',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,200,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82467
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,249,11,16,4,12
	.byte	'CNT_NUM_2',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,208,40,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82586
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,10,221,16,16,4,12
	.byte	'PVT',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,255,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82705
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,10,200,16,16,4,12
	.byte	'PSTC',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,231,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82813
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,10,179,16,16,4,12
	.byte	'PSSC',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,207,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	82923
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_0_Bits',0,10,207,16,16,4,12
	.byte	'PSTM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,239,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83033
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSTM_1_Bits',0,10,214,16,16,4,12
	.byte	'PSTM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,247,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83145
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_0_Bits',0,10,186,16,16,4,12
	.byte	'PSSM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,215,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83257
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_PSSM_1_Bits',0,10,193,16,16,4,12
	.byte	'PSSM',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,223,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83369
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,10,218,15,16,4,12
	.byte	'NMB_T',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,255,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83481
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,10,197,15,16,4,12
	.byte	'NMB_S',0,4
	.word	10337
	.byte	20,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,231,42,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83593
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,10,148,17,16,4,12
	.byte	'RDT_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,177,44,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83705
	.byte	4,2,35,0,0,15,128,2
	.word	83777
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,10,170,18,16,4,12
	.byte	'TSF_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,193,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83827
	.byte	4,2,35,0,0,15,128,2
	.word	83899
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,10,137,11,16,4,12
	.byte	'PD_S',0,4
	.word	10337
	.byte	16,16,2,35,0,12
	.byte	'NS',0,4
	.word	10337
	.byte	6,10,2,35,0,12
	.byte	'reserved_22',0,4
	.word	10337
	.byte	10,0,2,35,0,0,13,10,232,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	83949
	.byte	4,2,35,0,0,15,128,2
	.word	84034
	.byte	16,63,0,11
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,10,181,13,16,4,12
	.byte	'DT_S',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,168,41,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84084
	.byte	4,2,35,0,0,15,128,2
	.word	84154
	.byte	16,63,0,15,128,8
	.word	520
	.byte	16,255,7,0,11
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,10,163,18,16,4,12
	.byte	'TSAC',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,185,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84215
	.byte	4,2,35,0,0,15,96
	.word	84285
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,10,172,16,16,4,12
	.byte	'PSAC',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,199,43,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84334
	.byte	4,2,35,0,0,15,96
	.word	84404
	.byte	16,23,0,11
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,10,217,10,16,4,12
	.byte	'ACB_0',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'ACB_1',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'ACB_2',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'ACB_3',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,184,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	84453
	.byte	4,2,35,0,0,15,24
	.word	84642
	.byte	16,5,0,11
	.byte	'_Ifx_GTM_DPLL',0,10,254,57,25,152,30,14
	.byte	'CTRL_0',0
	.word	68166
	.byte	4,2,35,0,14
	.byte	'CTRL_1',0
	.word	68599
	.byte	4,2,35,4,14
	.byte	'CTRL_2',0
	.word	68973
	.byte	4,2,35,8,14
	.byte	'CTRL_3',0
	.word	69359
	.byte	4,2,35,12,14
	.byte	'CTRL_4',0
	.word	69749
	.byte	4,2,35,16,14
	.byte	'reserved_14',0
	.word	1947
	.byte	4,2,35,20,14
	.byte	'ACT_STA',0
	.word	69864
	.byte	4,2,35,24,14
	.byte	'OSW',0
	.word	70030
	.byte	4,2,35,28,14
	.byte	'AOSV_2',0
	.word	70179
	.byte	4,2,35,32,14
	.byte	'APT',0
	.word	70385
	.byte	4,2,35,36,14
	.byte	'APS',0
	.word	70592
	.byte	4,2,35,40,14
	.byte	'APT_2C',0
	.word	70728
	.byte	4,2,35,44,14
	.byte	'APS_1C3',0
	.word	70865
	.byte	4,2,35,48,14
	.byte	'NUTC',0
	.word	71114
	.byte	4,2,35,52,14
	.byte	'NUSC',0
	.word	71340
	.byte	4,2,35,56,14
	.byte	'NTI_CNT',0
	.word	71456
	.byte	4,2,35,60,14
	.byte	'IRQ_NOTIFY',0
	.word	71995
	.byte	4,2,35,64,14
	.byte	'IRQ_EN',0
	.word	72705
	.byte	4,2,35,68,14
	.byte	'IRQ_FORCINT',0
	.word	73357
	.byte	4,2,35,72,14
	.byte	'IRQ_MODE',0
	.word	73474
	.byte	4,2,35,76,14
	.byte	'EIRQ_EN',0
	.word	74210
	.byte	4,2,35,80,14
	.byte	'reserved_54',0
	.word	74250
	.byte	92,2,35,84,14
	.byte	'INC_CNT1',0
	.word	74337
	.byte	4,3,35,176,1,14
	.byte	'INC_CNT2',0
	.word	74455
	.byte	4,3,35,180,1,14
	.byte	'APT_SYNC',0
	.word	74644
	.byte	4,3,35,184,1,14
	.byte	'APS_SYNC',0
	.word	74836
	.byte	4,3,35,188,1,14
	.byte	'TBU_TS0_T',0
	.word	74956
	.byte	4,3,35,192,1,14
	.byte	'TBU_TS0_S',0
	.word	75076
	.byte	4,3,35,196,1,14
	.byte	'ADD_IN_LD1',0
	.word	75199
	.byte	4,3,35,200,1,14
	.byte	'ADD_IN_LD2',0
	.word	75322
	.byte	4,3,35,204,1,14
	.byte	'reserved_D0',0
	.word	75362
	.byte	44,3,35,208,1,14
	.byte	'STATUS',0
	.word	75918
	.byte	4,3,35,252,1,14
	.byte	'ID_PMTR',0
	.word	76075
	.byte	96,3,35,128,2,14
	.byte	'reserved_160',0
	.word	76084
	.byte	128,1,3,35,224,2,14
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	76278
	.byte	4,3,35,224,3,14
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	76515
	.byte	4,3,35,228,3,14
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	76740
	.byte	4,3,35,232,3,14
	.byte	'CRTL_1_SHADOW_STATE',0
	.word	77007
	.byte	4,3,35,236,3,14
	.byte	'reserved_1F0',0
	.word	4106
	.byte	12,3,35,240,3,14
	.byte	'RAM_INI',0
	.word	77201
	.byte	4,3,35,252,3,14
	.byte	'PSA',0
	.word	77349
	.byte	96,3,35,128,4,14
	.byte	'reserved_260',0
	.word	16229
	.byte	32,3,35,224,4,14
	.byte	'DLA',0
	.word	77466
	.byte	96,3,35,128,5,14
	.byte	'reserved_2E0',0
	.word	16229
	.byte	32,3,35,224,5,14
	.byte	'NA',0
	.word	77595
	.byte	96,3,35,128,6,14
	.byte	'reserved_360',0
	.word	16229
	.byte	32,3,35,224,6,14
	.byte	'DTA',0
	.word	77712
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	16229
	.byte	32,3,35,224,7,14
	.byte	'TS_T_0',0
	.word	77799
	.byte	4,3,35,128,8,14
	.byte	'TS_T_1',0
	.word	77917
	.byte	4,3,35,132,8,14
	.byte	'FTV_T',0
	.word	78034
	.byte	4,3,35,136,8,14
	.byte	'reserved_40C',0
	.word	1947
	.byte	4,3,35,140,8,14
	.byte	'TS_S_0',0
	.word	78150
	.byte	4,3,35,144,8,14
	.byte	'TS_S_1',0
	.word	78266
	.byte	4,3,35,148,8,14
	.byte	'FTV_S',0
	.word	78381
	.byte	4,3,35,152,8,14
	.byte	'reserved_41C',0
	.word	1947
	.byte	4,3,35,156,8,14
	.byte	'THMI',0
	.word	78491
	.byte	4,3,35,160,8,14
	.byte	'THMA',0
	.word	78601
	.byte	4,3,35,164,8,14
	.byte	'THVAL',0
	.word	78713
	.byte	4,3,35,168,8,14
	.byte	'reserved_42C',0
	.word	1947
	.byte	4,3,35,172,8,14
	.byte	'TOV',0
	.word	78834
	.byte	4,3,35,176,8,14
	.byte	'TOV_S',0
	.word	78957
	.byte	4,3,35,180,8,14
	.byte	'ADD_IN_CAL1',0
	.word	79082
	.byte	4,3,35,184,8,14
	.byte	'ADD_IN_CAL2',0
	.word	79207
	.byte	4,3,35,188,8,14
	.byte	'MPVAL1',0
	.word	79337
	.byte	4,3,35,192,8,14
	.byte	'MPVAL2',0
	.word	79467
	.byte	4,3,35,196,8,14
	.byte	'NMB_T_TAR',0
	.word	79587
	.byte	4,3,35,200,8,14
	.byte	'NMB_T_TAR_OLD',0
	.word	79715
	.byte	4,3,35,204,8,14
	.byte	'NMB_S_TAR',0
	.word	79835
	.byte	4,3,35,208,8,14
	.byte	'NMB_S_TAR_OLD',0
	.word	79963
	.byte	4,3,35,212,8,14
	.byte	'reserved_458',0
	.word	3766
	.byte	8,3,35,216,8,14
	.byte	'RCDT_TX',0
	.word	80079
	.byte	4,3,35,224,8,14
	.byte	'RCDT_SX',0
	.word	80195
	.byte	4,3,35,228,8,14
	.byte	'RCDT_TX_NOM',0
	.word	80319
	.byte	4,3,35,232,8,14
	.byte	'RCDT_SX_NOM',0
	.word	80443
	.byte	4,3,35,236,8,14
	.byte	'RDT_T_ACT',0
	.word	80563
	.byte	4,3,35,240,8,14
	.byte	'RDT_S_ACT',0
	.word	80683
	.byte	4,3,35,244,8,14
	.byte	'DT_T_ACT',0
	.word	80801
	.byte	4,3,35,248,8,14
	.byte	'DT_S_ACT',0
	.word	80919
	.byte	4,3,35,252,8,14
	.byte	'EDT_T',0
	.word	81031
	.byte	4,3,35,128,9,14
	.byte	'MEDT_T',0
	.word	81145
	.byte	4,3,35,132,9,14
	.byte	'EDT_S',0
	.word	81257
	.byte	4,3,35,136,9,14
	.byte	'MEDT_S',0
	.word	81371
	.byte	4,3,35,140,9,14
	.byte	'CDT_TX',0
	.word	81485
	.byte	4,3,35,144,9,14
	.byte	'CDT_SX',0
	.word	81599
	.byte	4,3,35,148,9,14
	.byte	'CDT_TX_NOM',0
	.word	81721
	.byte	4,3,35,152,9,14
	.byte	'CDT_SX_NOM',0
	.word	81843
	.byte	4,3,35,156,9,14
	.byte	'TLR',0
	.word	81950
	.byte	4,3,35,160,9,14
	.byte	'SLR',0
	.word	82057
	.byte	4,3,35,164,9,14
	.byte	'reserved_4A8',0
	.word	82097
	.byte	88,3,35,168,9,14
	.byte	'PDT_T',0
	.word	82229
	.byte	96,3,35,128,10,14
	.byte	'reserved_560',0
	.word	82238
	.byte	96,3,35,224,10,14
	.byte	'MLS1',0
	.word	82317
	.byte	4,3,35,192,11,14
	.byte	'MLS2',0
	.word	82427
	.byte	4,3,35,196,11,14
	.byte	'CNT_NUM1',0
	.word	82546
	.byte	4,3,35,200,11,14
	.byte	'CNT_NUM2',0
	.word	82665
	.byte	4,3,35,204,11,14
	.byte	'PVT',0
	.word	82773
	.byte	4,3,35,208,11,14
	.byte	'reserved_5D4',0
	.word	4106
	.byte	12,3,35,212,11,14
	.byte	'PSTC',0
	.word	82883
	.byte	4,3,35,224,11,14
	.byte	'PSSC',0
	.word	82993
	.byte	4,3,35,228,11,14
	.byte	'PSTM_0',0
	.word	83105
	.byte	4,3,35,232,11,14
	.byte	'PSTM_1',0
	.word	83217
	.byte	4,3,35,236,11,14
	.byte	'PSSM_0',0
	.word	83329
	.byte	4,3,35,240,11,14
	.byte	'PSSM_1',0
	.word	83441
	.byte	4,3,35,244,11,14
	.byte	'NMB_T',0
	.word	83553
	.byte	4,3,35,248,11,14
	.byte	'NMB_S',0
	.word	83665
	.byte	4,3,35,252,11,14
	.byte	'RDT_S',0
	.word	83817
	.byte	128,2,3,35,128,12,14
	.byte	'TSF_S',0
	.word	83939
	.byte	128,2,3,35,128,14,14
	.byte	'ADT_S',0
	.word	84074
	.byte	128,2,3,35,128,16,14
	.byte	'DT_S',0
	.word	84194
	.byte	128,2,3,35,128,18,14
	.byte	'reserved_A00',0
	.word	84204
	.byte	128,8,3,35,128,20,14
	.byte	'TSAC',0
	.word	84325
	.byte	96,3,35,128,28,14
	.byte	'reserved_E60',0
	.word	16229
	.byte	32,3,35,224,28,14
	.byte	'PSAC',0
	.word	84444
	.byte	96,3,35,128,29,14
	.byte	'reserved_EE0',0
	.word	16229
	.byte	32,3,35,224,29,14
	.byte	'ACB',0
	.word	84682
	.byte	24,3,35,128,30,0,10
	.word	84691
	.byte	15,232,225,1
	.word	520
	.byte	16,231,225,1,0,11
	.byte	'_Ifx_GTM_MCS_CH_R0_Bits',0,10,198,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,137,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86886
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R1_Bits',0,10,205,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,145,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	86996
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R2_Bits',0,10,212,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,153,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87106
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R3_Bits',0,10,219,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,161,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87216
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R4_Bits',0,10,226,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,169,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87326
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R5_Bits',0,10,233,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,177,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87436
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R6_Bits',0,10,240,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,185,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87546
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_R7_Bits',0,10,247,24,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,193,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87656
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,10,130,24,16,4,12
	.byte	'EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ERR',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'CY',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'Z',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'V',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'N',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'CAT',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'CWT',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	6,16,2,35,0,12
	.byte	'SP_CNT',0,4
	.word	10337
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10337
	.byte	13,0,2,35,0,0,13,10,209,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	87766
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,10,247,23,16,4,12
	.byte	'ACB0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ACB1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ACB2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ACB3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ACB4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	27,0,2,35,0,0,13,10,201,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88052
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,203,23,16,4,12
	.byte	'TRG0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,185,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88226
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0_STRG_Bits',0,10,225,23,16,4,12
	.byte	'TRG0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'TRG3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'TRG4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'TRG5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'TRG6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'TRG7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'TRG8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'TRG9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'TRG10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'TRG11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'TRG12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'TRG13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'TRG14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'TRG15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,193,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88585
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,10,191,24,16,4,12
	.byte	'PC',0,4
	.word	10337
	.byte	14,18,2,35,0,12
	.byte	'reserved_14',0,4
	.word	10337
	.byte	18,0,2,35,0,0,13,10,129,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	88944
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,182,24,16,4,12
	.byte	'MCS_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,249,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89052
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,157,24,16,4,12
	.byte	'MCS_IRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_IRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,225,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89218
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,166,24,16,4,12
	.byte	'TRG_MCS_IRQ',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'TRG_MEM_ERR_IRQ',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,233,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89389
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,175,24,16,4,12
	.byte	'IRQ_MODE',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,241,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89568
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,148,24,16,4,12
	.byte	'MCS_EIRQ_EN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MEM_ERR_EIRQ_EN',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	29,0,2,35,0,0,13,10,217,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	89687
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_CH0',0,10,197,56,25,88,14
	.byte	'R0',0
	.word	86956
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87066
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87176
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	87286
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	87396
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	87506
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	87616
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	87726
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88012
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88186
	.byte	4,2,35,36,14
	.byte	'CTRG',0
	.word	88545
	.byte	4,2,35,40,14
	.byte	'STRG',0
	.word	88904
	.byte	4,2,35,44,14
	.byte	'reserved_30',0
	.word	13521
	.byte	16,2,35,48,14
	.byte	'PC',0
	.word	89012
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89178
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	89349
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	89528
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	89647
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	89822
	.byte	4,2,35,84,0,10
	.word	89862
	.byte	15,28
	.word	520
	.byte	16,27,0,11
	.byte	'_Ifx_GTM_MCS_CTRL_Bits',0,10,254,24,16,4,12
	.byte	'SCHED',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'HLT_SP_OFL',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	14,16,2,35,0,12
	.byte	'RAM_RST',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'reserved_17',0,4
	.word	10337
	.byte	15,0,2,35,0,0,13,10,201,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90176
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_RST_Bits',0,10,150,25,16,4,12
	.byte	'RST0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'RST1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'RST2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'RST3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'RST4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'RST5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'RST6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'RST7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'CAT0',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'CAT1',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'CAT2',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'CAT3',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'CAT4',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'CAT5',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'CAT6',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'CAT7',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'CWT0',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'CWT1',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'CWT2',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'CWT3',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'CWT4',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'CWT5',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'CWT6',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'CWT7',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,217,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90349
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,10,136,25,16,4,12
	.byte	'ERR0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'ERR1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'ERR2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'ERR3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'ERR4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'ERR5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'ERR6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'ERR7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	24,0,2,35,0,0,13,10,209,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	90825
	.byte	4,2,35,0,0,15,40
	.word	520
	.byte	16,39,0,11
	.byte	'_Ifx_GTM_MCS_CH',0,10,174,56,25,128,1,14
	.byte	'R0',0
	.word	86956
	.byte	4,2,35,0,14
	.byte	'R1',0
	.word	87066
	.byte	4,2,35,4,14
	.byte	'R2',0
	.word	87176
	.byte	4,2,35,8,14
	.byte	'R3',0
	.word	87286
	.byte	4,2,35,12,14
	.byte	'R4',0
	.word	87396
	.byte	4,2,35,16,14
	.byte	'R5',0
	.word	87506
	.byte	4,2,35,20,14
	.byte	'R6',0
	.word	87616
	.byte	4,2,35,24,14
	.byte	'R7',0
	.word	87726
	.byte	4,2,35,28,14
	.byte	'CTRL',0
	.word	88012
	.byte	4,2,35,32,14
	.byte	'ACB',0
	.word	88186
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	3137
	.byte	24,2,35,40,14
	.byte	'PC',0
	.word	89012
	.byte	4,2,35,64,14
	.byte	'IRQ_NOTIFY',0
	.word	89178
	.byte	4,2,35,68,14
	.byte	'IRQ_EN',0
	.word	89349
	.byte	4,2,35,72,14
	.byte	'IRQ_FORCINT',0
	.word	89528
	.byte	4,2,35,76,14
	.byte	'IRQ_MODE',0
	.word	89647
	.byte	4,2,35,80,14
	.byte	'EIRQ_EN',0
	.word	89822
	.byte	4,2,35,84,14
	.byte	'reserved_58',0
	.word	91044
	.byte	40,2,35,88,0,10
	.word	91053
	.byte	10
	.word	91053
	.byte	10
	.word	91053
	.byte	10
	.word	91053
	.byte	10
	.word	91053
	.byte	10
	.word	91053
	.byte	10
	.word	91053
	.byte	15,128,24
	.word	520
	.byte	16,255,23,0,11
	.byte	'_Ifx_GTM_MCS',0,10,167,59,25,128,32,14
	.byte	'CH0',0
	.word	90162
	.byte	88,2,35,0,14
	.byte	'reserved_58',0
	.word	90167
	.byte	28,2,35,88,14
	.byte	'CTRL',0
	.word	90309
	.byte	4,2,35,116,14
	.byte	'RST',0
	.word	90785
	.byte	4,2,35,120,14
	.byte	'ERR',0
	.word	91004
	.byte	4,2,35,124,14
	.byte	'CH1',0
	.word	91346
	.byte	128,1,3,35,128,1,14
	.byte	'CH2',0
	.word	91351
	.byte	128,1,3,35,128,2,14
	.byte	'CH3',0
	.word	91356
	.byte	128,1,3,35,128,3,14
	.byte	'CH4',0
	.word	91361
	.byte	128,1,3,35,128,4,14
	.byte	'CH5',0
	.word	91366
	.byte	128,1,3,35,128,5,14
	.byte	'CH6',0
	.word	91371
	.byte	128,1,3,35,128,6,14
	.byte	'CH7',0
	.word	91376
	.byte	128,1,3,35,128,7,14
	.byte	'reserved_400',0
	.word	91381
	.byte	128,24,3,35,128,8,0,15,128,96
	.word	91392
	.byte	16,2,0,10
	.word	91616
	.byte	15,128,154,27
	.word	520
	.byte	16,255,153,27,0,11
	.byte	'_Ifx_GTM_CLC_Bits',0,10,214,8,16,4,12
	.byte	'DISR',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DISS',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EDIS',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	28,0,2,35,0,0,13,10,168,38,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91644
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,227,22,16,4,12
	.byte	'CH0SEL',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'CH1SEL',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'CH2SEL',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'CH3SEL',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'CH4SEL',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'CH5SEL',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'CH6SEL',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'CH7SEL',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,233,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	91801
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,10,168,56,25,4,14
	.byte	'INSEL',0
	.word	91985
	.byte	4,2,35,0,0,15,12
	.word	92025
	.byte	16,2,0,10
	.word	92069
	.byte	15,20
	.word	520
	.byte	16,19,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,206,22,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,225,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92092
	.byte	4,2,35,0,0,15,40
	.word	92393
	.byte	16,9,0,11
	.byte	'_Ifx_GTM_INOUTSEL_T',0,10,162,56,25,40,14
	.byte	'OUTSEL',0
	.word	92433
	.byte	40,2,35,0,0,10
	.word	92442
	.byte	15,36
	.word	520
	.byte	16,35,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,157,22,16,4,12
	.byte	'INSEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'INSEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'INSEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'INSEL3',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'INSEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'INSEL5',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'INSEL6',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'INSEL7',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,193,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92499
	.byte	4,2,35,0,0,15,12
	.word	92685
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,170,22,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	5,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	3,17,2,35,0,12
	.byte	'reserved_15',0,4
	.word	10337
	.byte	17,0,2,35,0,0,13,10,201,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	92734
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_DSADC',0,10,141,56,25,24,14
	.byte	'INSEL',0
	.word	92725
	.byte	12,2,35,0,14
	.byte	'OUTSEL00',0
	.word	92893
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	1947
	.byte	4,2,35,16,14
	.byte	'OUTSEL10',0
	.word	92893
	.byte	4,2,35,20,0,10
	.word	92933
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,144,22,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,185,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93041
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,10,135,56,25,4,14
	.byte	'OUTSEL',0
	.word	93210
	.byte	4,2,35,0,0,10
	.word	93250
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,181,22,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	8,0,2,35,0,0,13,10,209,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93300
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5',0,10,150,56,25,4,14
	.byte	'OUTSEL0',0
	.word	93462
	.byte	4,2,35,0,0,10
	.word	93502
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,193,22,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'reserved_28',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,217,47,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	93554
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S',0,10,156,56,25,4,14
	.byte	'OUTSEL',0
	.word	93739
	.byte	4,2,35,0,0,10
	.word	93779
	.byte	11
	.byte	'_Ifx_GTM_INOUTSEL',0,10,153,59,25,156,1,14
	.byte	'TIM',0
	.word	92078
	.byte	12,2,35,0,14
	.byte	'reserved_C',0
	.word	92083
	.byte	20,2,35,12,14
	.byte	'T',0
	.word	92485
	.byte	40,2,35,32,14
	.byte	'reserved_48',0
	.word	92490
	.byte	36,2,35,72,14
	.byte	'DSADC',0
	.word	93036
	.byte	24,2,35,108,14
	.byte	'reserved_84',0
	.word	4106
	.byte	12,3,35,132,1,14
	.byte	'CAN',0
	.word	93295
	.byte	4,3,35,144,1,14
	.byte	'PSI5',0
	.word	93549
	.byte	4,3,35,148,1,14
	.byte	'PSI5S',0
	.word	93826
	.byte	4,3,35,152,1,0,10
	.word	93831
	.byte	11
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,92,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,216,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94009
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,103,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,224,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94185
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,10,148,27,16,4,12
	.byte	'CV',0,4
	.word	10337
	.byte	27,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'CM',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,201,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94361
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,10,157,27,16,4,12
	.byte	'CV',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,209,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94503
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,10,166,27,16,4,12
	.byte	'CV',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'EN',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,217,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94645
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSS_Bits',0,10,202,27,16,4,12
	.byte	'OTGB0',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'reserved_4',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'OTGB1',0,4
	.word	10337
	.byte	4,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'OTGB2',0,4
	.word	10337
	.byte	4,12,2,35,0,12
	.byte	'reserved_20',0,4
	.word	10337
	.byte	12,0,2,35,0,0,13,10,241,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94787
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC0_Bits',0,10,175,27,16,4,12
	.byte	'B0LMT',0,4
	.word	10337
	.byte	3,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'B0LMI',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'B0HMT',0,4
	.word	10337
	.byte	3,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'B0HMI',0,4
	.word	10337
	.byte	4,16,2,35,0,12
	.byte	'B1LMT',0,4
	.word	10337
	.byte	3,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'B1LMI',0,4
	.word	10337
	.byte	4,8,2,35,0,12
	.byte	'B1HMT',0,4
	.word	10337
	.byte	3,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'B1HMI',0,4
	.word	10337
	.byte	4,0,2,35,0,0,13,10,225,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	94972
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OTSC1_Bits',0,10,192,27,16,4,12
	.byte	'MCS',0,4
	.word	10337
	.byte	4,28,2,35,0,12
	.byte	'MI',0,4
	.word	10337
	.byte	4,24,2,35,0,12
	.byte	'reserved_8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MOE',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'reserved_10',0,4
	.word	10337
	.byte	22,0,2,35,0,0,13,10,233,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95266
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ODA_Bits',0,10,140,27,16,4,12
	.byte	'DDREN',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'DREN',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,193,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95422
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_OCS_Bits',0,10,130,27,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	24,8,2,35,0,12
	.byte	'SUS',0,4
	.word	10337
	.byte	4,4,2,35,0,12
	.byte	'SUS_P',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'SUSSTA',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'reserved_30',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,185,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95542
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,10,164,23,16,4,12
	.byte	'CLR',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	31,0,2,35,0,0,13,10,161,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95702
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST1_Bits',0,10,157,23,16,4,12
	.byte	'RST',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'reserved_1',0,4
	.word	10337
	.byte	31,0,2,35,0,0,13,10,153,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95808
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_KRST0_Bits',0,10,149,23,16,4,12
	.byte	'RST',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'RSTSTAT',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'reserved_2',0,4
	.word	10337
	.byte	30,0,2,35,0,0,13,10,145,48,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	95912
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,10,86,16,4,12
	.byte	'reserved_0',0,4
	.word	10337
	.byte	32,0,2,35,0,0,13,10,208,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96035
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,10,49,16,4,12
	.byte	'EN0',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'EN1',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'EN2',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'EN3',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'EN4',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'EN5',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'EN6',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'EN7',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'EN8',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'EN9',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'EN10',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'EN11',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'EN12',0,4
	.word	10337
	.byte	1,19,2,35,0,12
	.byte	'EN13',0,4
	.word	10337
	.byte	1,18,2,35,0,12
	.byte	'EN14',0,4
	.word	10337
	.byte	1,17,2,35,0,12
	.byte	'EN15',0,4
	.word	10337
	.byte	1,16,2,35,0,12
	.byte	'EN16',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'EN17',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'EN18',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'EN19',0,4
	.word	10337
	.byte	1,12,2,35,0,12
	.byte	'EN20',0,4
	.word	10337
	.byte	1,11,2,35,0,12
	.byte	'EN21',0,4
	.word	10337
	.byte	1,10,2,35,0,12
	.byte	'EN22',0,4
	.word	10337
	.byte	1,9,2,35,0,12
	.byte	'EN23',0,4
	.word	10337
	.byte	1,8,2,35,0,12
	.byte	'EN24',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'EN25',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'EN26',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'EN27',0,4
	.word	10337
	.byte	1,4,2,35,0,12
	.byte	'EN28',0,4
	.word	10337
	.byte	1,3,2,35,0,12
	.byte	'EN29',0,4
	.word	10337
	.byte	1,2,2,35,0,12
	.byte	'EN30',0,4
	.word	10337
	.byte	1,1,2,35,0,12
	.byte	'EN31',0,4
	.word	10337
	.byte	1,0,2,35,0,0,13,10,200,33,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96124
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,10,198,18,16,4,12
	.byte	'OUT00',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'OUT01',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'OUT02',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	5,24,2,35,0,12
	.byte	'OUT10',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'OUT11',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'OUT12',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	21,0,2,35,0,0,13,10,209,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96693
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,10,181,33,16,4,12
	.byte	'INT0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'INT1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'TRIG0',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'TRIG1',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'TRIG2',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'TRIG3',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'TRIG4',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'TRIG5',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'reserved_16',0,4
	.word	10337
	.byte	16,0,2,35,0,0,13,10,137,55,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	96910
	.byte	4,2,35,0,0,15,12
	.word	97096
	.byte	16,2,0,15,52
	.word	520
	.byte	16,51,0,11
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,10,198,25,16,4,12
	.byte	'MCS000',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	20,0,2,35,0,0,13,10,233,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97154
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,10,180,25,16,4,12
	.byte	'MCS000',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'MCS001',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'MCS010',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'MCS011',0,4
	.word	10337
	.byte	1,28,2,35,0,12
	.byte	'MCS100',0,4
	.word	10337
	.byte	1,27,2,35,0,12
	.byte	'MCS101',0,4
	.word	10337
	.byte	1,26,2,35,0,12
	.byte	'MCS110',0,4
	.word	10337
	.byte	1,25,2,35,0,12
	.byte	'MCS111',0,4
	.word	10337
	.byte	1,24,2,35,0,12
	.byte	'MCS200',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'MCS201',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'MCS210',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'MCS211',0,4
	.word	10337
	.byte	1,20,2,35,0,12
	.byte	'reserved_12',0,4
	.word	10337
	.byte	20,0,2,35,0,0,13,10,225,49,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97465
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DXINCON_Bits',0,10,177,18,16,4,12
	.byte	'IN00',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'IN01',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'IN02',0,4
	.word	10337
	.byte	1,29,2,35,0,12
	.byte	'reserved_3',0,4
	.word	10337
	.byte	5,24,2,35,0,12
	.byte	'IN10',0,4
	.word	10337
	.byte	1,23,2,35,0,12
	.byte	'IN11',0,4
	.word	10337
	.byte	1,22,2,35,0,12
	.byte	'IN12',0,4
	.word	10337
	.byte	1,21,2,35,0,12
	.byte	'reserved_11',0,4
	.word	10337
	.byte	5,16,2,35,0,12
	.byte	'DSS00',0,4
	.word	10337
	.byte	1,15,2,35,0,12
	.byte	'DSS01',0,4
	.word	10337
	.byte	1,14,2,35,0,12
	.byte	'DSS02',0,4
	.word	10337
	.byte	1,13,2,35,0,12
	.byte	'reserved_19',0,4
	.word	10337
	.byte	5,8,2,35,0,12
	.byte	'DSS10',0,4
	.word	10337
	.byte	1,7,2,35,0,12
	.byte	'DSS11',0,4
	.word	10337
	.byte	1,6,2,35,0,12
	.byte	'DSS12',0,4
	.word	10337
	.byte	1,5,2,35,0,12
	.byte	'reserved_27',0,4
	.word	10337
	.byte	5,0,2,35,0,0,13,10,201,45,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	97775
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_DATAIN_Bits',0,10,211,10,16,4,12
	.byte	'DATA',0,4
	.word	10337
	.byte	32,0,2,35,0,0,13,10,176,39,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98133
	.byte	4,2,35,0,0,15,12
	.word	98177
	.byte	16,2,0,11
	.byte	'_Ifx_GTM_MSCSET_CON0_Bits',0,10,206,26,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,153,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98226
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON1_Bits',0,10,219,26,16,4,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,161,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98454
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON2_Bits',0,10,232,26,16,4,12
	.byte	'SEL8',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'SEL9',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'SEL10',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'SEL11',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,169,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98682
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET_CON3_Bits',0,10,245,26,16,4,12
	.byte	'SEL12',0,4
	.word	10337
	.byte	5,27,2,35,0,12
	.byte	'reserved_5',0,4
	.word	10337
	.byte	3,24,2,35,0,12
	.byte	'SEL13',0,4
	.word	10337
	.byte	5,19,2,35,0,12
	.byte	'reserved_13',0,4
	.word	10337
	.byte	3,16,2,35,0,12
	.byte	'SEL14',0,4
	.word	10337
	.byte	5,11,2,35,0,12
	.byte	'reserved_21',0,4
	.word	10337
	.byte	3,8,2,35,0,12
	.byte	'SEL15',0,4
	.word	10337
	.byte	5,3,2,35,0,12
	.byte	'reserved_29',0,4
	.word	10337
	.byte	3,0,2,35,0,0,13,10,177,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	98912
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCSET',0,10,199,59,25,16,14
	.byte	'CON0',0
	.word	98414
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	98642
	.byte	4,2,35,4,14
	.byte	'CON2',0
	.word	98872
	.byte	4,2,35,8,14
	.byte	'CON3',0
	.word	99104
	.byte	4,2,35,12,0,15,64
	.word	99144
	.byte	16,3,0,10
	.word	99223
	.byte	11
	.byte	'_Ifx_GTM_MSCIN_INLCON_Bits',0,10,185,26,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,145,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99237
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN_INHCON_Bits',0,10,164,26,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,137,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99573
	.byte	4,2,35,0,0,11
	.byte	'_Ifx_GTM_MSCIN',0,10,192,59,25,8,14
	.byte	'INLCON',0
	.word	99533
	.byte	4,2,35,0,14
	.byte	'INHCON',0
	.word	99869
	.byte	4,2,35,4,0,15,16
	.word	99909
	.byte	16,1,0,10
	.word	99963
	.byte	11
	.byte	'_Ifx_GTM_MSC0INLEXTCON_Bits',0,10,143,26,16,4,12
	.byte	'SEL0',0,4
	.word	10337
	.byte	2,30,2,35,0,12
	.byte	'SEL1',0,4
	.word	10337
	.byte	2,28,2,35,0,12
	.byte	'SEL2',0,4
	.word	10337
	.byte	2,26,2,35,0,12
	.byte	'SEL3',0,4
	.word	10337
	.byte	2,24,2,35,0,12
	.byte	'SEL4',0,4
	.word	10337
	.byte	2,22,2,35,0,12
	.byte	'SEL5',0,4
	.word	10337
	.byte	2,20,2,35,0,12
	.byte	'SEL6',0,4
	.word	10337
	.byte	2,18,2,35,0,12
	.byte	'SEL7',0,4
	.word	10337
	.byte	2,16,2,35,0,12
	.byte	'SEL8',0,4
	.word	10337
	.byte	2,14,2,35,0,12
	.byte	'SEL9',0,4
	.word	10337
	.byte	2,12,2,35,0,12
	.byte	'SEL10',0,4
	.word	10337
	.byte	2,10,2,35,0,12
	.byte	'SEL11',0,4
	.word	10337
	.byte	2,8,2,35,0,12
	.byte	'SEL12',0,4
	.word	10337
	.byte	2,6,2,35,0,12
	.byte	'SEL13',0,4
	.word	10337
	.byte	2,4,2,35,0,12
	.byte	'SEL14',0,4
	.word	10337
	.byte	2,2,2,35,0,12
	.byte	'SEL15',0,4
	.word	10337
	.byte	2,0,2,35,0,0,13,10,129,50,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	99977
	.byte	4,2,35,0,0,15,140,1
	.word	520
	.byte	16,139,1,0,11
	.byte	'_Ifx_GTM',0,10,190,60,25,128,128,40,14
	.byte	'REV',0
	.word	20405
	.byte	4,2,35,0,14
	.byte	'RST',0
	.word	20507
	.byte	4,2,35,4,14
	.byte	'CTRL',0
	.word	20673
	.byte	4,2,35,8,14
	.byte	'AEI_ADDR_XPT',0
	.word	20807
	.byte	4,2,35,12,14
	.byte	'IRQ_NOTIFY',0
	.word	20992
	.byte	4,2,35,16,14
	.byte	'IRQ_EN',0
	.word	21201
	.byte	4,2,35,20,14
	.byte	'IRQ_FORCINT',0
	.word	21403
	.byte	4,2,35,24,14
	.byte	'IRQ_MODE',0
	.word	21515
	.byte	4,2,35,28,14
	.byte	'EIRQ_EN',0
	.word	21729
	.byte	4,2,35,32,14
	.byte	'reserved_24',0
	.word	4106
	.byte	12,2,35,36,14
	.byte	'BRIDGE',0
	.word	22475
	.byte	12,2,35,48,14
	.byte	'reserved_3C',0
	.word	1947
	.byte	4,2,35,60,14
	.byte	'TIM_AUX_IN_SRC',0
	.word	22730
	.byte	12,2,35,64,14
	.byte	'reserved_4C',0
	.word	22739
	.byte	180,1,2,35,76,14
	.byte	'TBU',0
	.word	23797
	.byte	28,3,35,128,2,14
	.byte	'reserved_11C',0
	.word	23802
	.byte	100,3,35,156,2,14
	.byte	'MON',0
	.word	24912
	.byte	8,3,35,128,3,14
	.byte	'reserved_188',0
	.word	24917
	.byte	120,3,35,136,3,14
	.byte	'CMP',0
	.word	28235
	.byte	24,3,35,128,4,14
	.byte	'reserved_218',0
	.word	28240
	.byte	104,3,35,152,4,14
	.byte	'ARU',0
	.word	30229
	.byte	52,3,35,128,5,14
	.byte	'reserved_2B4',0
	.word	7423
	.byte	76,3,35,180,5,14
	.byte	'CMU',0
	.word	31945
	.byte	72,3,35,128,6,14
	.byte	'reserved_348',0
	.word	31950
	.byte	184,1,3,35,200,6,14
	.byte	'BRC',0
	.word	42896
	.byte	120,3,35,128,8,14
	.byte	'reserved_478',0
	.word	42901
	.byte	136,3,3,35,248,8,14
	.byte	'ICM',0
	.word	49671
	.byte	68,3,35,128,12,14
	.byte	'reserved_644',0
	.word	49676
	.byte	188,3,3,35,196,12,14
	.byte	'SPE',0
	.word	52120
	.byte	128,2,3,35,128,16,14
	.byte	'reserved_900',0
	.word	52125
	.byte	128,12,3,35,128,18,14
	.byte	'MAP_CTRL',0
	.word	52535
	.byte	4,3,35,128,30,14
	.byte	'reserved_F04',0
	.word	52575
	.byte	60,3,35,132,30,14
	.byte	'MCFG_CTRL',0
	.word	52685
	.byte	4,3,35,192,30,14
	.byte	'reserved_F44',0
	.word	52725
	.byte	188,1,3,35,196,30,14
	.byte	'TIM',0
	.word	56781
	.byte	128,48,3,35,128,32,14
	.byte	'reserved_2800',0
	.word	56786
	.byte	128,176,1,3,35,128,80,14
	.byte	'TOM',0
	.word	64482
	.byte	128,32,4,35,128,128,2,14
	.byte	'reserved_9000',0
	.word	64487
	.byte	128,128,1,4,35,128,160,2,14
	.byte	'ATOM',0
	.word	64509
	.byte	128,64,4,35,128,160,3,14
	.byte	'reserved_F000',0
	.word	64514
	.byte	128,160,2,4,35,128,224,3,14
	.byte	'F2A0',0
	.word	65238
	.byte	68,4,35,128,128,6,14
	.byte	'reserved_18044',0
	.word	52575
	.byte	60,4,35,196,128,6,14
	.byte	'AFD0',0
	.word	65466
	.byte	128,1,4,35,128,129,6,14
	.byte	'reserved_18100',0
	.word	65471
	.byte	128,6,4,35,128,130,6,14
	.byte	'FIFO0',0
	.word	67950
	.byte	128,4,4,35,128,136,6,14
	.byte	'reserved_18600',0
	.word	67955
	.byte	128,244,3,4,35,128,140,6,14
	.byte	'DPLL',0
	.word	86868
	.byte	152,30,4,35,128,128,10,14
	.byte	'reserved_28F18',0
	.word	86873
	.byte	232,225,1,4,35,152,158,10,14
	.byte	'MCS',0
	.word	91626
	.byte	128,96,4,35,128,128,12,14
	.byte	'reserved_33000',0
	.word	91631
	.byte	128,154,27,4,35,128,224,12,14
	.byte	'CLC',0
	.word	91761
	.byte	4,4,35,128,250,39,14
	.byte	'reserved_9FD04',0
	.word	4106
	.byte	12,4,35,132,250,39,14
	.byte	'INOUTSEL',0
	.word	94004
	.byte	156,1,4,35,144,250,39,14
	.byte	'reserved_9FDAC',0
	.word	1947
	.byte	4,4,35,172,251,39,14
	.byte	'ADCTRIG0OUT0',0
	.word	94145
	.byte	4,4,35,176,251,39,14
	.byte	'reserved_9FDB4',0
	.word	1947
	.byte	4,4,35,180,251,39,14
	.byte	'ADCTRIG1OUT0',0
	.word	94321
	.byte	4,4,35,184,251,39,14
	.byte	'reserved_9FDBC',0
	.word	3766
	.byte	8,4,35,188,251,39,14
	.byte	'OTBU0T',0
	.word	94463
	.byte	4,4,35,196,251,39,14
	.byte	'OTBU1T',0
	.word	94605
	.byte	4,4,35,200,251,39,14
	.byte	'OTBU2T',0
	.word	94747
	.byte	4,4,35,204,251,39,14
	.byte	'OTSS',0
	.word	94932
	.byte	4,4,35,208,251,39,14
	.byte	'OTSC0',0
	.word	95226
	.byte	4,4,35,212,251,39,14
	.byte	'OTSC1',0
	.word	95382
	.byte	4,4,35,216,251,39,14
	.byte	'ODA',0
	.word	95502
	.byte	4,4,35,220,251,39,14
	.byte	'reserved_9FDE0',0
	.word	3766
	.byte	8,4,35,224,251,39,14
	.byte	'OCS',0
	.word	95662
	.byte	4,4,35,232,251,39,14
	.byte	'KRSTCLR',0
	.word	95768
	.byte	4,4,35,236,251,39,14
	.byte	'KRST1',0
	.word	95872
	.byte	4,4,35,240,251,39,14
	.byte	'KRST0',0
	.word	95995
	.byte	4,4,35,244,251,39,14
	.byte	'ACCEN1',0
	.word	96084
	.byte	4,4,35,248,251,39,14
	.byte	'ACCEN0',0
	.word	96653
	.byte	4,4,35,252,251,39,14
	.byte	'DXOUTCON',0
	.word	96870
	.byte	4,4,35,128,252,39,14
	.byte	'TRIGOUT0',0
	.word	97136
	.byte	12,4,35,132,252,39,14
	.byte	'reserved_9FE10',0
	.word	97145
	.byte	52,4,35,144,252,39,14
	.byte	'TRIGOUT1',0
	.word	97136
	.byte	12,4,35,196,252,39,14
	.byte	'reserved_9FE50',0
	.word	16229
	.byte	32,4,35,208,252,39,14
	.byte	'MCSINTSTAT',0
	.word	97425
	.byte	4,4,35,240,252,39,14
	.byte	'MCSINTCLR',0
	.word	97735
	.byte	4,4,35,244,252,39,14
	.byte	'reserved_9FE78',0
	.word	3137
	.byte	24,4,35,248,252,39,14
	.byte	'DXINCON',0
	.word	98093
	.byte	4,4,35,144,253,39,14
	.byte	'DATAIN0',0
	.word	98217
	.byte	12,4,35,148,253,39,14
	.byte	'reserved_9FEA0',0
	.word	97145
	.byte	52,4,35,160,253,39,14
	.byte	'DATAIN1',0
	.word	98217
	.byte	12,4,35,212,253,39,14
	.byte	'reserved_9FEE0',0
	.word	16229
	.byte	32,4,35,224,253,39,14
	.byte	'MSCSET_1S',0
	.word	99232
	.byte	64,4,35,128,254,39,14
	.byte	'reserved_9FF40',0
	.word	16229
	.byte	32,4,35,192,254,39,14
	.byte	'MSCIN',0
	.word	99972
	.byte	16,4,35,224,254,39,14
	.byte	'MSC0INLEXTCON',0
	.word	100274
	.byte	4,4,35,240,254,39,14
	.byte	'reserved_9FF74',0
	.word	100314
	.byte	140,1,4,35,244,254,39,0,10
	.word	100325
	.byte	3
	.word	102180
	.byte	31,17,120,9,44,14
	.byte	'base',0
	.word	20170
	.byte	12,2,35,0,14
	.byte	'gtm',0
	.word	102185
	.byte	4,2,35,12,14
	.byte	'atom',0
	.word	16807
	.byte	4,2,35,16,14
	.byte	'agc',0
	.word	19000
	.byte	4,2,35,20,14
	.byte	'atomIndex',0
	.word	19441
	.byte	1,2,35,24,14
	.byte	'timerChannel',0
	.word	16812
	.byte	1,2,35,25,14
	.byte	'triggerChannel',0
	.word	16812
	.byte	1,2,35,26,14
	.byte	'channelsMask',0
	.word	919
	.byte	2,2,35,28,14
	.byte	'offset',0
	.word	8967
	.byte	4,2,35,30,14
	.byte	'agcDisableUpdate',0
	.word	8967
	.byte	4,2,35,34,14
	.byte	'agcApplyUpdate',0
	.word	8967
	.byte	4,2,35,38,0
.L347:
	.byte	3
	.word	102190
	.byte	32
	.byte	'IfxGtm_Atom_Timer_addToChannelMask',0,17,181,1,17,1,1,1,1,5
	.byte	'driver',0,17,181,1,71
	.word	102403
	.byte	5
	.byte	'channel',0,17,181,1,94
	.word	16812
	.byte	0,35
	.byte	'IfxGtm_Atom_Timer_stdIfTimerInit',0,17,147,2,20
	.word	520
	.byte	1,1,1,1,5
	.byte	'stdif',0,17,147,2,69
	.word	10041
	.byte	5
	.byte	'driver',0,17,147,2,95
	.word	102403
	.byte	0
.L366:
	.byte	17,13,178,1,9,1,18
	.byte	'Ifx_Pwm_Mode_centerAligned',0,0,18
	.byte	'Ifx_Pwm_Mode_centerAlignedInverted',0,1,18
	.byte	'Ifx_Pwm_Mode_leftAligned',0,2,18
	.byte	'Ifx_Pwm_Mode_rightAligned',0,3,18
	.byte	'Ifx_Pwm_Mode_off',0,4,18
	.byte	'Ifx_Pwm_Mode_init',0,5,18
	.byte	'Ifx_Pwm_Mode_count',0,6,0,7
	.byte	'char',0,1,6,31,18,131,1,9,20,14
	.byte	'deadtime',0
	.word	8967
	.byte	4,2,35,0,14
	.byte	'minPulse',0
	.word	8967
	.byte	4,2,35,4,14
	.byte	'maxPulse',0
	.word	8967
	.byte	4,2,35,8,14
	.byte	'mode',0
	.word	102564
	.byte	1,2,35,12,14
	.byte	'setMode',0
	.word	102752
	.byte	1,2,35,13,14
	.byte	'ccxActiveState',0
	.word	17185
	.byte	1,2,35,14,14
	.byte	'coutxActiveState',0
	.word	17185
	.byte	1,2,35,15,14
	.byte	'inverted',0
	.word	520
	.byte	1,2,35,16,14
	.byte	'channelCount',0
	.word	520
	.byte	1,2,35,17,0,3
	.word	.L649-.L161
	.byte	3
	.word	8967
	.byte	22,1,1,21
	.word	102942
	.byte	21
	.word	102947
	.byte	0,3
	.word	102952
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl_Update',0,18,117,36
	.word	102966
	.byte	22,1,1,21
	.word	102942
	.byte	21
	.word	102947
	.byte	21
	.word	102947
	.byte	0,3
	.word	103004
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl_UpdateShift',0,18,119,36
	.word	103023
	.byte	3
	.word	253
	.byte	22,1,1,21
	.word	102942
	.byte	21
	.word	103066
	.byte	21
	.word	103066
	.byte	0,3
	.word	103071
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl_UpdatePulse',0,18,121,36
	.word	103090
	.byte	15,8
	.word	16812
	.byte	16,7,0,3
	.word	16812
.L649:
	.byte	11
	.byte	'IfxGtm_Atom_PwmHl_s',0,18,174,1,8,68,14
	.byte	'base',0
	.word	102760
	.byte	20,2,35,0,14
	.byte	'timer',0
	.word	102403
	.byte	4,2,35,20,14
	.byte	'update',0
	.word	102971
	.byte	4,2,35,24,14
	.byte	'updateAndShift',0
	.word	103028
	.byte	4,2,35,28,14
	.byte	'updatePulse',0
	.word	103095
	.byte	4,2,35,32,14
	.byte	'atom',0
	.word	16807
	.byte	4,2,35,36,14
	.byte	'agc',0
	.word	19000
	.byte	4,2,35,40,14
	.byte	'ccx',0
	.word	103133
	.byte	8,2,35,44,14
	.byte	'coutx',0
	.word	103133
	.byte	8,2,35,52,14
	.byte	'ccxTemp',0
	.word	103142
	.byte	4,2,35,60,14
	.byte	'coutxTemp',0
	.word	103142
	.byte	4,2,35,64,0
.L338:
	.byte	3
	.word	103147
	.byte	3
	.word	102952
	.byte	3
	.word	103004
	.byte	3
	.word	103071
	.byte	19
	.byte	'IfxGtm_Atom_ToutMapP',0,16,116,30
	.word	19972
	.byte	25
	.word	103375
	.byte	3
	.word	103404
	.byte	31,18,150,1,9,36,14
	.byte	'base',0
	.word	18051
	.byte	16,2,35,0,14
	.byte	'timer',0
	.word	102403
	.byte	4,2,35,16,14
	.byte	'atom',0
	.word	19441
	.byte	1,2,35,20,14
	.byte	'ccx',0
	.word	103409
	.byte	4,2,35,24,14
	.byte	'coutx',0
	.word	103409
	.byte	4,2,35,28,14
	.byte	'initPins',0
	.word	520
	.byte	1,2,35,32,0,25
	.word	103414
.L340:
	.byte	3
	.word	103510
	.byte	25
	.word	19869
	.byte	3
	.word	103520
.L355:
	.byte	15,32
	.word	8967
	.byte	16,7,0
.L358:
	.byte	3
	.word	103414
.L381:
	.byte	3
	.word	102760
.L389:
	.byte	3
	.word	8967
.L397:
	.byte	3
	.word	253
.L402:
	.byte	3
	.word	520
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetDeadtime',0,14,89,19
	.word	9128
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetDeadtime',0,14,97,19
	.word	8926
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMinPulse',0,14,105,19
	.word	9128
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMinPulse',0,14,113,19
	.word	8926
	.byte	20
	.word	102564
	.byte	1,1,21
	.word	427
	.byte	0,3
	.word	103704
	.byte	19
	.byte	'IfxStdIf_PwmHl_GetMode',0,14,121,24
	.word	103717
	.byte	20
	.word	520
	.byte	1,1,21
	.word	427
	.byte	21
	.word	102564
	.byte	0,3
	.word	103753
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetMode',0,14,129,1,19
	.word	103771
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	102947
	.byte	0,3
	.word	103808
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTime',0,14,136,1,16
	.word	103822
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	102947
	.byte	21
	.word	102947
	.byte	0,3
	.word	103861
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetOnTimeAndShift',0,14,144,1,16
	.word	103880
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	103066
	.byte	21
	.word	103066
	.byte	0,3
	.word	103927
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetPulse',0,14,152,1,16
	.word	103946
	.byte	3
	.word	520
	.byte	22,1,1,21
	.word	427
	.byte	21
	.word	103984
	.byte	21
	.word	103984
	.byte	0,3
	.word	103989
	.byte	19
	.byte	'IfxStdIf_PwmHl_SetupChannels',0,14,171,1,16
	.word	104008
	.byte	11
	.byte	'IfxStdIf_PwmHl_',0,14,175,1,8,112,14
	.byte	'driver',0
	.word	8880
	.byte	4,2,35,0,14
	.byte	'setDeadtime',0
	.word	103564
	.byte	4,2,35,4,14
	.byte	'getDeadtime',0
	.word	103599
	.byte	4,2,35,8,14
	.byte	'setMinPulse',0
	.word	103634
	.byte	4,2,35,12,14
	.byte	'getMinPulse',0
	.word	103669
	.byte	4,2,35,16,14
	.byte	'getMode',0
	.word	103722
	.byte	4,2,35,20,14
	.byte	'setMode',0
	.word	103776
	.byte	4,2,35,24,14
	.byte	'setOnTime',0
	.word	103827
	.byte	4,2,35,28,14
	.byte	'setOnTimeAndShift',0
	.word	103885
	.byte	4,2,35,32,14
	.byte	'setPulse',0
	.word	103951
	.byte	4,2,35,36,14
	.byte	'setupChannels',0
	.word	104013
	.byte	4,2,35,40,14
	.byte	'timer',0
	.word	9662
	.byte	68,2,35,44,0
.L406:
	.byte	3
	.word	104051
	.byte	3
	.word	9110
	.byte	3
	.word	8913
	.byte	3
	.word	9110
	.byte	3
	.word	8913
	.byte	3
	.word	103704
	.byte	3
	.word	103753
	.byte	3
	.word	103808
	.byte	3
	.word	103861
	.byte	3
	.word	103927
	.byte	3
	.word	103989
	.byte	35
	.byte	'memset',0,19,56,17
	.word	427
	.byte	1,1,1,1,36,19,56,33
	.word	427
	.byte	36,19,56,36
	.word	513
	.byte	36,19,56,41
	.word	323
	.byte	0,29
	.word	17236
	.byte	30
	.word	17284
	.byte	6,0,37
	.byte	'__INDIRECT__',0,12,1,1,1,1,1,7
	.byte	'short int',0,2,5,19
	.byte	'__wchar_t',0,12,1,1
	.word	104441
	.byte	19
	.byte	'__size_t',0,12,1,1
	.word	323
	.byte	19
	.byte	'__ptrdiff_t',0,12,1,1
	.word	513
	.byte	38,1,3
	.word	104509
	.byte	19
	.byte	'__codeptr',0,12,1,1
	.word	104511
	.byte	19
	.byte	'size_t',0,20,24,25
	.word	323
	.byte	19
	.byte	'boolean',0,21,101,29
	.word	520
	.byte	19
	.byte	'uint8',0,21,105,29
	.word	520
	.byte	19
	.byte	'uint16',0,21,109,29
	.word	919
	.byte	19
	.byte	'uint32',0,21,113,29
	.word	8967
	.byte	19
	.byte	'uint64',0,21,118,29
	.word	401
	.byte	19
	.byte	'sint8',0,21,122,29
	.word	102752
	.byte	19
	.byte	'sint16',0,21,126,29
	.word	104441
	.byte	7
	.byte	'long int',0,4,5,19
	.byte	'sint32',0,21,131,1,29
	.word	104653
	.byte	7
	.byte	'long long int',0,8,5,19
	.byte	'sint64',0,21,139,1,29
	.word	104681
	.byte	19
	.byte	'float32',0,21,168,1,29
	.word	253
	.byte	19
	.byte	'pvoid',0,13,57,28
	.word	427
	.byte	19
	.byte	'Ifx_TickTime',0,13,79,28
	.word	104681
	.byte	19
	.byte	'Ifx_Priority',0,13,103,16
	.word	919
	.byte	19
	.byte	'Ifx_TimerValue',0,13,104,16
	.word	8967
	.byte	19
	.byte	'Ifx_ActiveState',0,13,120,3
	.word	17185
	.byte	19
	.byte	'Ifx_Pwm_Mode',0,13,187,1,3
	.word	102564
	.byte	17,22,69,9,1,18
	.byte	'IfxSrc_Tos_cpu0',0,0,18
	.byte	'IfxSrc_Tos_cpu1',0,1,18
	.byte	'IfxSrc_Tos_dma',0,3,0,19
	.byte	'IfxSrc_Tos',0,22,74,3
	.word	104856
	.byte	19
	.byte	'Ifx_SRC_SRCR_Bits',0,4,62,3
	.word	537
	.byte	19
	.byte	'Ifx_SRC_SRCR',0,4,75,3
	.word	827
	.byte	11
	.byte	'_Ifx_SRC_AGBT',0,4,86,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	104981
	.byte	19
	.byte	'Ifx_SRC_AGBT',0,4,89,3
	.word	105013
	.byte	11
	.byte	'_Ifx_SRC_ASCLIN',0,4,92,25,12,14
	.byte	'TX',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,8,0,10
	.word	105039
	.byte	19
	.byte	'Ifx_SRC_ASCLIN',0,4,97,3
	.word	105098
	.byte	11
	.byte	'_Ifx_SRC_BCUSPB',0,4,100,25,4,14
	.byte	'SBSRC',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	105126
	.byte	19
	.byte	'Ifx_SRC_BCUSPB',0,4,103,3
	.word	105163
	.byte	15,64
	.word	827
	.byte	16,15,0,11
	.byte	'_Ifx_SRC_CAN',0,4,106,25,64,14
	.byte	'INT',0
	.word	105191
	.byte	64,2,35,0,0,10
	.word	105200
	.byte	19
	.byte	'Ifx_SRC_CAN',0,4,109,3
	.word	105232
	.byte	11
	.byte	'_Ifx_SRC_CCU6',0,4,112,25,16,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	827
	.byte	4,2,35,12,0,10
	.word	105257
	.byte	19
	.byte	'Ifx_SRC_CCU6',0,4,118,3
	.word	105329
	.byte	15,8
	.word	827
	.byte	16,1,0,11
	.byte	'_Ifx_SRC_CERBERUS',0,4,121,25,8,14
	.byte	'SR',0
	.word	105355
	.byte	8,2,35,0,0,10
	.word	105364
	.byte	19
	.byte	'Ifx_SRC_CERBERUS',0,4,124,3
	.word	105400
	.byte	11
	.byte	'_Ifx_SRC_CIF',0,4,127,25,16,14
	.byte	'MI',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'MIEP',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'ISP',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'MJPEG',0
	.word	827
	.byte	4,2,35,12,0,10
	.word	105430
	.byte	19
	.byte	'Ifx_SRC_CIF',0,4,133,1,3
	.word	105503
	.byte	11
	.byte	'_Ifx_SRC_CPU',0,4,136,1,25,4,14
	.byte	'SBSRC',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	105529
	.byte	19
	.byte	'Ifx_SRC_CPU',0,4,139,1,3
	.word	105564
	.byte	15,192,1
	.word	827
	.byte	16,47,0,11
	.byte	'_Ifx_SRC_DMA',0,4,142,1,25,208,1,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'reserved_4',0
	.word	4106
	.byte	12,2,35,4,14
	.byte	'CH',0
	.word	105590
	.byte	192,1,2,35,16,0,10
	.word	105600
	.byte	19
	.byte	'Ifx_SRC_DMA',0,4,147,1,3
	.word	105667
	.byte	11
	.byte	'_Ifx_SRC_DSADC',0,4,150,1,25,8,14
	.byte	'SRM',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SRA',0
	.word	827
	.byte	4,2,35,4,0,10
	.word	105693
	.byte	19
	.byte	'Ifx_SRC_DSADC',0,4,154,1,3
	.word	105741
	.byte	11
	.byte	'_Ifx_SRC_EMEM',0,4,157,1,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	105769
	.byte	19
	.byte	'Ifx_SRC_EMEM',0,4,160,1,3
	.word	105802
	.byte	11
	.byte	'_Ifx_SRC_ERAY',0,4,163,1,25,80,14
	.byte	'INT',0
	.word	105355
	.byte	8,2,35,0,14
	.byte	'TINT',0
	.word	105355
	.byte	8,2,35,8,14
	.byte	'NDAT',0
	.word	105355
	.byte	8,2,35,16,14
	.byte	'MBSC',0
	.word	105355
	.byte	8,2,35,24,14
	.byte	'OBUSY',0
	.word	827
	.byte	4,2,35,32,14
	.byte	'IBUSY',0
	.word	827
	.byte	4,2,35,36,14
	.byte	'reserved_28',0
	.word	91044
	.byte	40,2,35,40,0,10
	.word	105829
	.byte	19
	.byte	'Ifx_SRC_ERAY',0,4,172,1,3
	.word	105956
	.byte	11
	.byte	'_Ifx_SRC_ETH',0,4,175,1,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	105983
	.byte	19
	.byte	'Ifx_SRC_ETH',0,4,178,1,3
	.word	106015
	.byte	11
	.byte	'_Ifx_SRC_FCE',0,4,181,1,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	106041
	.byte	19
	.byte	'Ifx_SRC_FCE',0,4,184,1,3
	.word	106073
	.byte	11
	.byte	'_Ifx_SRC_FFT',0,4,187,1,25,12,14
	.byte	'DONE',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'RFS',0
	.word	827
	.byte	4,2,35,8,0,10
	.word	106099
	.byte	19
	.byte	'Ifx_SRC_FFT',0,4,192,1,3
	.word	106159
	.byte	11
	.byte	'_Ifx_SRC_GPSR',0,4,195,1,25,32,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	827
	.byte	4,2,35,12,14
	.byte	'reserved_10',0
	.word	13521
	.byte	16,2,35,16,0,10
	.word	106185
	.byte	19
	.byte	'Ifx_SRC_GPSR',0,4,202,1,3
	.word	106279
	.byte	11
	.byte	'_Ifx_SRC_GPT12',0,4,205,1,25,48,14
	.byte	'CIRQ',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'T2',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'T3',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'T4',0
	.word	827
	.byte	4,2,35,12,14
	.byte	'T5',0
	.word	827
	.byte	4,2,35,16,14
	.byte	'T6',0
	.word	827
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	3137
	.byte	24,2,35,24,0,10
	.word	106306
	.byte	19
	.byte	'Ifx_SRC_GPT12',0,4,214,1,3
	.word	106423
	.byte	15,12
	.word	827
	.byte	16,2,0,15,32
	.word	827
	.byte	16,7,0,15,32
	.word	106460
	.byte	16,0,0,15,108
	.word	827
	.byte	16,26,0,15,96
	.word	106460
	.byte	16,2,0,15,160,3
	.word	520
	.byte	16,159,3,0,15,64
	.word	106460
	.byte	16,1,0,15,192,3
	.word	520
	.byte	16,191,3,0,15,16
	.word	827
	.byte	16,3,0,15,64
	.word	106527
	.byte	16,3,0,15,192,2
	.word	520
	.byte	16,191,2,0,11
	.byte	'_Ifx_SRC_GTM',0,4,217,1,25,204,18,14
	.byte	'AEIIRQ',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'ARUIRQ',0
	.word	106451
	.byte	12,2,35,4,14
	.byte	'reserved_10',0
	.word	1947
	.byte	4,2,35,16,14
	.byte	'BRCIRQ',0
	.word	827
	.byte	4,2,35,20,14
	.byte	'CMPIRQ',0
	.word	827
	.byte	4,2,35,24,14
	.byte	'SPEIRQ',0
	.word	105355
	.byte	8,2,35,28,14
	.byte	'reserved_24',0
	.word	3766
	.byte	8,2,35,36,14
	.byte	'PSM',0
	.word	106469
	.byte	32,2,35,44,14
	.byte	'reserved_4C',0
	.word	82097
	.byte	88,2,35,76,14
	.byte	'DPLL',0
	.word	106478
	.byte	108,3,35,164,1,14
	.byte	'reserved_110',0
	.word	82238
	.byte	96,3,35,144,2,14
	.byte	'ERR',0
	.word	827
	.byte	4,3,35,240,2,14
	.byte	'reserved_174',0
	.word	4106
	.byte	12,3,35,244,2,14
	.byte	'TIM',0
	.word	106487
	.byte	96,3,35,128,3,14
	.byte	'reserved_1E0',0
	.word	106496
	.byte	160,3,3,35,224,3,14
	.byte	'MCS',0
	.word	106487
	.byte	96,3,35,128,7,14
	.byte	'reserved_3E0',0
	.word	106496
	.byte	160,3,3,35,224,7,14
	.byte	'TOM',0
	.word	106507
	.byte	64,3,35,128,11,14
	.byte	'reserved_5C0',0
	.word	106516
	.byte	192,3,3,35,192,11,14
	.byte	'ATOM',0
	.word	106536
	.byte	64,3,35,128,15,14
	.byte	'reserved_7C0',0
	.word	106545
	.byte	192,2,3,35,192,15,14
	.byte	'MCSW0',0
	.word	106451
	.byte	12,3,35,128,18,14
	.byte	'reserved_90C',0
	.word	97145
	.byte	52,3,35,140,18,14
	.byte	'MCSW1',0
	.word	106451
	.byte	12,3,35,192,18,0,10
	.word	106556
	.byte	19
	.byte	'Ifx_SRC_GTM',0,4,243,1,3
	.word	107016
	.byte	11
	.byte	'_Ifx_SRC_HSCT',0,4,246,1,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	107042
	.byte	19
	.byte	'Ifx_SRC_HSCT',0,4,249,1,3
	.word	107075
	.byte	11
	.byte	'_Ifx_SRC_HSSL',0,4,252,1,25,16,14
	.byte	'COK',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'RDI',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'TRG',0
	.word	827
	.byte	4,2,35,12,0,10
	.word	107102
	.byte	19
	.byte	'Ifx_SRC_HSSL',0,4,130,2,3
	.word	107175
	.byte	11
	.byte	'_Ifx_SRC_I2C',0,4,133,2,25,80,14
	.byte	'BREQ',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'LBREQ',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SREQ',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'LSREQ',0
	.word	827
	.byte	4,2,35,12,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,16,14
	.byte	'P',0
	.word	827
	.byte	4,2,35,20,14
	.byte	'reserved_18',0
	.word	51874
	.byte	56,2,35,24,0,10
	.word	107202
	.byte	19
	.byte	'Ifx_SRC_I2C',0,4,142,2,3
	.word	107325
	.byte	11
	.byte	'_Ifx_SRC_LMU',0,4,145,2,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	107351
	.byte	19
	.byte	'Ifx_SRC_LMU',0,4,148,2,3
	.word	107383
	.byte	11
	.byte	'_Ifx_SRC_MSC',0,4,151,2,25,20,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	827
	.byte	4,2,35,12,14
	.byte	'SR4',0
	.word	827
	.byte	4,2,35,16,0,10
	.word	107409
	.byte	19
	.byte	'Ifx_SRC_MSC',0,4,158,2,3
	.word	107494
	.byte	11
	.byte	'_Ifx_SRC_PMU',0,4,161,2,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	107520
	.byte	19
	.byte	'Ifx_SRC_PMU',0,4,164,2,3
	.word	107552
	.byte	11
	.byte	'_Ifx_SRC_PSI5',0,4,167,2,25,32,14
	.byte	'SR',0
	.word	106460
	.byte	32,2,35,0,0,10
	.word	107578
	.byte	19
	.byte	'Ifx_SRC_PSI5',0,4,170,2,3
	.word	107611
	.byte	11
	.byte	'_Ifx_SRC_PSI5S',0,4,173,2,25,32,14
	.byte	'SR',0
	.word	106460
	.byte	32,2,35,0,0,10
	.word	107638
	.byte	19
	.byte	'Ifx_SRC_PSI5S',0,4,176,2,3
	.word	107672
	.byte	11
	.byte	'_Ifx_SRC_QSPI',0,4,179,2,25,24,14
	.byte	'TX',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'RX',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'ERR',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'PT',0
	.word	827
	.byte	4,2,35,12,14
	.byte	'HC',0
	.word	827
	.byte	4,2,35,16,14
	.byte	'U',0
	.word	827
	.byte	4,2,35,20,0,10
	.word	107700
	.byte	19
	.byte	'Ifx_SRC_QSPI',0,4,187,2,3
	.word	107793
	.byte	11
	.byte	'_Ifx_SRC_SCR',0,4,190,2,25,4,14
	.byte	'SR',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	107820
	.byte	19
	.byte	'Ifx_SRC_SCR',0,4,193,2,3
	.word	107852
	.byte	11
	.byte	'_Ifx_SRC_SCU',0,4,196,2,25,20,14
	.byte	'DTS',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'ERU',0
	.word	106527
	.byte	16,2,35,4,0,10
	.word	107878
	.byte	19
	.byte	'Ifx_SRC_SCU',0,4,200,2,3
	.word	107924
	.byte	15,24
	.word	827
	.byte	16,5,0,11
	.byte	'_Ifx_SRC_SENT',0,4,203,2,25,24,14
	.byte	'SR',0
	.word	107950
	.byte	24,2,35,0,0,10
	.word	107959
	.byte	19
	.byte	'Ifx_SRC_SENT',0,4,206,2,3
	.word	107992
	.byte	11
	.byte	'_Ifx_SRC_SMU',0,4,209,2,25,12,14
	.byte	'SR',0
	.word	106451
	.byte	12,2,35,0,0,10
	.word	108019
	.byte	19
	.byte	'Ifx_SRC_SMU',0,4,212,2,3
	.word	108051
	.byte	11
	.byte	'_Ifx_SRC_STM',0,4,215,2,25,8,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,0,10
	.word	108077
	.byte	19
	.byte	'Ifx_SRC_STM',0,4,219,2,3
	.word	108123
	.byte	11
	.byte	'_Ifx_SRC_VADCCG',0,4,222,2,25,16,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	827
	.byte	4,2,35,12,0,10
	.word	108149
	.byte	19
	.byte	'Ifx_SRC_VADCCG',0,4,228,2,3
	.word	108224
	.byte	11
	.byte	'_Ifx_SRC_VADCG',0,4,231,2,25,16,14
	.byte	'SR0',0
	.word	827
	.byte	4,2,35,0,14
	.byte	'SR1',0
	.word	827
	.byte	4,2,35,4,14
	.byte	'SR2',0
	.word	827
	.byte	4,2,35,8,14
	.byte	'SR3',0
	.word	827
	.byte	4,2,35,12,0,10
	.word	108253
	.byte	19
	.byte	'Ifx_SRC_VADCG',0,4,237,2,3
	.word	108327
	.byte	11
	.byte	'_Ifx_SRC_XBAR',0,4,240,2,25,4,14
	.byte	'SRC',0
	.word	827
	.byte	4,2,35,0,0,10
	.word	108355
	.byte	19
	.byte	'Ifx_SRC_XBAR',0,4,243,2,3
	.word	108389
	.byte	15,4
	.word	104981
	.byte	16,0,0,10
	.word	108416
	.byte	11
	.byte	'_Ifx_SRC_GAGBT',0,4,128,3,25,4,14
	.byte	'AGBT',0
	.word	108425
	.byte	4,2,35,0,0,10
	.word	108430
	.byte	19
	.byte	'Ifx_SRC_GAGBT',0,4,131,3,3
	.word	108466
	.byte	15,48
	.word	105039
	.byte	16,3,0,10
	.word	108494
	.byte	11
	.byte	'_Ifx_SRC_GASCLIN',0,4,134,3,25,48,14
	.byte	'ASCLIN',0
	.word	108503
	.byte	48,2,35,0,0,10
	.word	108508
	.byte	19
	.byte	'Ifx_SRC_GASCLIN',0,4,137,3,3
	.word	108548
	.byte	10
	.word	105126
	.byte	11
	.byte	'_Ifx_SRC_GBCU',0,4,140,3,25,4,14
	.byte	'SPB',0
	.word	108578
	.byte	4,2,35,0,0,10
	.word	108583
	.byte	19
	.byte	'Ifx_SRC_GBCU',0,4,143,3,3
	.word	108617
	.byte	15,64
	.word	105200
	.byte	16,0,0,10
	.word	108644
	.byte	11
	.byte	'_Ifx_SRC_GCAN',0,4,146,3,25,64,14
	.byte	'CAN',0
	.word	108653
	.byte	64,2,35,0,0,10
	.word	108658
	.byte	19
	.byte	'Ifx_SRC_GCAN',0,4,149,3,3
	.word	108692
	.byte	15,32
	.word	105257
	.byte	16,1,0,10
	.word	108719
	.byte	11
	.byte	'_Ifx_SRC_GCCU6',0,4,152,3,25,32,14
	.byte	'CCU6',0
	.word	108728
	.byte	32,2,35,0,0,10
	.word	108733
	.byte	19
	.byte	'Ifx_SRC_GCCU6',0,4,155,3,3
	.word	108769
	.byte	10
	.word	105364
	.byte	11
	.byte	'_Ifx_SRC_GCERBERUS',0,4,158,3,25,8,14
	.byte	'CERBERUS',0
	.word	108797
	.byte	8,2,35,0,0,10
	.word	108802
	.byte	19
	.byte	'Ifx_SRC_GCERBERUS',0,4,161,3,3
	.word	108846
	.byte	15,16
	.word	105430
	.byte	16,0,0,10
	.word	108878
	.byte	11
	.byte	'_Ifx_SRC_GCIF',0,4,164,3,25,16,14
	.byte	'CIF',0
	.word	108887
	.byte	16,2,35,0,0,10
	.word	108892
	.byte	19
	.byte	'Ifx_SRC_GCIF',0,4,167,3,3
	.word	108926
	.byte	15,8
	.word	105529
	.byte	16,1,0,10
	.word	108953
	.byte	11
	.byte	'_Ifx_SRC_GCPU',0,4,170,3,25,8,14
	.byte	'CPU',0
	.word	108962
	.byte	8,2,35,0,0,10
	.word	108967
	.byte	19
	.byte	'Ifx_SRC_GCPU',0,4,173,3,3
	.word	109001
	.byte	15,208,1
	.word	105600
	.byte	16,0,0,10
	.word	109028
	.byte	11
	.byte	'_Ifx_SRC_GDMA',0,4,176,3,25,208,1,14
	.byte	'DMA',0
	.word	109038
	.byte	208,1,2,35,0,0,10
	.word	109043
	.byte	19
	.byte	'Ifx_SRC_GDMA',0,4,179,3,3
	.word	109079
	.byte	10
	.word	105693
	.byte	10
	.word	105693
	.byte	10
	.word	105693
	.byte	11
	.byte	'_Ifx_SRC_GDSADC',0,4,182,3,25,32,14
	.byte	'DSADC0',0
	.word	109106
	.byte	8,2,35,0,14
	.byte	'reserved_8',0
	.word	3766
	.byte	8,2,35,8,14
	.byte	'DSADC2',0
	.word	109111
	.byte	8,2,35,16,14
	.byte	'DSADC3',0
	.word	109116
	.byte	8,2,35,24,0,10
	.word	109121
	.byte	19
	.byte	'Ifx_SRC_GDSADC',0,4,188,3,3
	.word	109212
	.byte	15,4
	.word	105769
	.byte	16,0,0,10
	.word	109241
	.byte	11
	.byte	'_Ifx_SRC_GEMEM',0,4,191,3,25,4,14
	.byte	'EMEM',0
	.word	109250
	.byte	4,2,35,0,0,10
	.word	109255
	.byte	19
	.byte	'Ifx_SRC_GEMEM',0,4,194,3,3
	.word	109291
	.byte	15,80
	.word	105829
	.byte	16,0,0,10
	.word	109319
	.byte	11
	.byte	'_Ifx_SRC_GERAY',0,4,197,3,25,80,14
	.byte	'ERAY',0
	.word	109328
	.byte	80,2,35,0,0,10
	.word	109333
	.byte	19
	.byte	'Ifx_SRC_GERAY',0,4,200,3,3
	.word	109369
	.byte	15,4
	.word	105983
	.byte	16,0,0,10
	.word	109397
	.byte	11
	.byte	'_Ifx_SRC_GETH',0,4,203,3,25,4,14
	.byte	'ETH',0
	.word	109406
	.byte	4,2,35,0,0,10
	.word	109411
	.byte	19
	.byte	'Ifx_SRC_GETH',0,4,206,3,3
	.word	109445
	.byte	15,4
	.word	106041
	.byte	16,0,0,10
	.word	109472
	.byte	11
	.byte	'_Ifx_SRC_GFCE',0,4,209,3,25,4,14
	.byte	'FCE',0
	.word	109481
	.byte	4,2,35,0,0,10
	.word	109486
	.byte	19
	.byte	'Ifx_SRC_GFCE',0,4,212,3,3
	.word	109520
	.byte	15,12
	.word	106099
	.byte	16,0,0,10
	.word	109547
	.byte	11
	.byte	'_Ifx_SRC_GFFT',0,4,215,3,25,12,14
	.byte	'FFT',0
	.word	109556
	.byte	12,2,35,0,0,10
	.word	109561
	.byte	19
	.byte	'Ifx_SRC_GFFT',0,4,218,3,3
	.word	109595
	.byte	15,64
	.word	106185
	.byte	16,1,0,10
	.word	109622
	.byte	11
	.byte	'_Ifx_SRC_GGPSR',0,4,221,3,25,64,14
	.byte	'GPSR',0
	.word	109631
	.byte	64,2,35,0,0,10
	.word	109636
	.byte	19
	.byte	'Ifx_SRC_GGPSR',0,4,224,3,3
	.word	109672
	.byte	15,48
	.word	106306
	.byte	16,0,0,10
	.word	109700
	.byte	11
	.byte	'_Ifx_SRC_GGPT12',0,4,227,3,25,48,14
	.byte	'GPT12',0
	.word	109709
	.byte	48,2,35,0,0,10
	.word	109714
	.byte	19
	.byte	'Ifx_SRC_GGPT12',0,4,230,3,3
	.word	109752
	.byte	15,204,18
	.word	106556
	.byte	16,0,0,10
	.word	109781
	.byte	11
	.byte	'_Ifx_SRC_GGTM',0,4,233,3,25,204,18,14
	.byte	'GTM',0
	.word	109791
	.byte	204,18,2,35,0,0,10
	.word	109796
	.byte	19
	.byte	'Ifx_SRC_GGTM',0,4,236,3,3
	.word	109832
	.byte	15,4
	.word	107042
	.byte	16,0,0,10
	.word	109859
	.byte	11
	.byte	'_Ifx_SRC_GHSCT',0,4,239,3,25,4,14
	.byte	'HSCT',0
	.word	109868
	.byte	4,2,35,0,0,10
	.word	109873
	.byte	19
	.byte	'Ifx_SRC_GHSCT',0,4,242,3,3
	.word	109909
	.byte	15,64
	.word	107102
	.byte	16,3,0,10
	.word	109937
	.byte	11
	.byte	'_Ifx_SRC_GHSSL',0,4,245,3,25,68,14
	.byte	'HSSL',0
	.word	109946
	.byte	64,2,35,0,14
	.byte	'EXI',0
	.word	827
	.byte	4,2,35,64,0,10
	.word	109951
	.byte	19
	.byte	'Ifx_SRC_GHSSL',0,4,249,3,3
	.word	110000
	.byte	15,80
	.word	107202
	.byte	16,0,0,10
	.word	110028
	.byte	11
	.byte	'_Ifx_SRC_GI2C',0,4,252,3,25,80,14
	.byte	'I2C',0
	.word	110037
	.byte	80,2,35,0,0,10
	.word	110042
	.byte	19
	.byte	'Ifx_SRC_GI2C',0,4,255,3,3
	.word	110076
	.byte	15,4
	.word	107351
	.byte	16,0,0,10
	.word	110103
	.byte	11
	.byte	'_Ifx_SRC_GLMU',0,4,130,4,25,4,14
	.byte	'LMU',0
	.word	110112
	.byte	4,2,35,0,0,10
	.word	110117
	.byte	19
	.byte	'Ifx_SRC_GLMU',0,4,133,4,3
	.word	110151
	.byte	15,40
	.word	107409
	.byte	16,1,0,10
	.word	110178
	.byte	11
	.byte	'_Ifx_SRC_GMSC',0,4,136,4,25,40,14
	.byte	'MSC',0
	.word	110187
	.byte	40,2,35,0,0,10
	.word	110192
	.byte	19
	.byte	'Ifx_SRC_GMSC',0,4,139,4,3
	.word	110226
	.byte	15,8
	.word	107520
	.byte	16,1,0,10
	.word	110253
	.byte	11
	.byte	'_Ifx_SRC_GPMU',0,4,142,4,25,8,14
	.byte	'PMU',0
	.word	110262
	.byte	8,2,35,0,0,10
	.word	110267
	.byte	19
	.byte	'Ifx_SRC_GPMU',0,4,145,4,3
	.word	110301
	.byte	15,32
	.word	107578
	.byte	16,0,0,10
	.word	110328
	.byte	11
	.byte	'_Ifx_SRC_GPSI5',0,4,148,4,25,32,14
	.byte	'PSI5',0
	.word	110337
	.byte	32,2,35,0,0,10
	.word	110342
	.byte	19
	.byte	'Ifx_SRC_GPSI5',0,4,151,4,3
	.word	110378
	.byte	15,32
	.word	107638
	.byte	16,0,0,10
	.word	110406
	.byte	11
	.byte	'_Ifx_SRC_GPSI5S',0,4,154,4,25,32,14
	.byte	'PSI5S',0
	.word	110415
	.byte	32,2,35,0,0,10
	.word	110420
	.byte	19
	.byte	'Ifx_SRC_GPSI5S',0,4,157,4,3
	.word	110458
	.byte	15,96
	.word	107700
	.byte	16,3,0,10
	.word	110487
	.byte	11
	.byte	'_Ifx_SRC_GQSPI',0,4,160,4,25,96,14
	.byte	'QSPI',0
	.word	110496
	.byte	96,2,35,0,0,10
	.word	110501
	.byte	19
	.byte	'Ifx_SRC_GQSPI',0,4,163,4,3
	.word	110537
	.byte	15,4
	.word	107820
	.byte	16,0,0,10
	.word	110565
	.byte	11
	.byte	'_Ifx_SRC_GSCR',0,4,166,4,25,4,14
	.byte	'SCR',0
	.word	110574
	.byte	4,2,35,0,0,10
	.word	110579
	.byte	19
	.byte	'Ifx_SRC_GSCR',0,4,169,4,3
	.word	110613
	.byte	10
	.word	107878
	.byte	11
	.byte	'_Ifx_SRC_GSCU',0,4,172,4,25,20,14
	.byte	'SCU',0
	.word	110640
	.byte	20,2,35,0,0,10
	.word	110645
	.byte	19
	.byte	'Ifx_SRC_GSCU',0,4,175,4,3
	.word	110679
	.byte	15,24
	.word	107959
	.byte	16,0,0,10
	.word	110706
	.byte	11
	.byte	'_Ifx_SRC_GSENT',0,4,178,4,25,24,14
	.byte	'SENT',0
	.word	110715
	.byte	24,2,35,0,0,10
	.word	110720
	.byte	19
	.byte	'Ifx_SRC_GSENT',0,4,181,4,3
	.word	110756
	.byte	15,12
	.word	108019
	.byte	16,0,0,10
	.word	110784
	.byte	11
	.byte	'_Ifx_SRC_GSMU',0,4,184,4,25,12,14
	.byte	'SMU',0
	.word	110793
	.byte	12,2,35,0,0,10
	.word	110798
	.byte	19
	.byte	'Ifx_SRC_GSMU',0,4,187,4,3
	.word	110832
	.byte	15,16
	.word	108077
	.byte	16,1,0,10
	.word	110859
	.byte	11
	.byte	'_Ifx_SRC_GSTM',0,4,190,4,25,16,14
	.byte	'STM',0
	.word	110868
	.byte	16,2,35,0,0,10
	.word	110873
	.byte	19
	.byte	'Ifx_SRC_GSTM',0,4,193,4,3
	.word	110907
	.byte	15,64
	.word	108253
	.byte	16,3,0,10
	.word	110934
	.byte	15,224,1
	.word	520
	.byte	16,223,1,0,15,32
	.word	108149
	.byte	16,1,0,10
	.word	110959
	.byte	11
	.byte	'_Ifx_SRC_GVADC',0,4,196,4,25,192,2,14
	.byte	'G',0
	.word	110943
	.byte	64,2,35,0,14
	.byte	'reserved_40',0
	.word	110948
	.byte	224,1,2,35,64,14
	.byte	'CG',0
	.word	110968
	.byte	32,3,35,160,2,0,10
	.word	110973
	.byte	19
	.byte	'Ifx_SRC_GVADC',0,4,201,4,3
	.word	111042
	.byte	10
	.word	108355
	.byte	11
	.byte	'_Ifx_SRC_GXBAR',0,4,204,4,25,4,14
	.byte	'XBAR',0
	.word	111070
	.byte	4,2,35,0,0,10
	.word	111075
	.byte	19
	.byte	'Ifx_SRC_GXBAR',0,4,207,4,3
	.word	111111
	.byte	19
	.byte	'Ifx_P_ACCEN0_Bits',0,6,79,3
	.word	7519
	.byte	19
	.byte	'Ifx_P_ACCEN1_Bits',0,6,85,3
	.word	7432
	.byte	19
	.byte	'Ifx_P_ESR_Bits',0,6,107,3
	.word	3775
	.byte	19
	.byte	'Ifx_P_ID_Bits',0,6,115,3
	.word	1828
	.byte	19
	.byte	'Ifx_P_IN_Bits',0,6,137,1,3
	.word	2823
	.byte	19
	.byte	'Ifx_P_IOCR0_Bits',0,6,150,1,3
	.word	1956
	.byte	19
	.byte	'Ifx_P_IOCR12_Bits',0,6,163,1,3
	.word	2603
	.byte	19
	.byte	'Ifx_P_IOCR4_Bits',0,6,176,1,3
	.word	2171
	.byte	19
	.byte	'Ifx_P_IOCR8_Bits',0,6,189,1,3
	.word	2386
	.byte	19
	.byte	'Ifx_P_LPCR0_Bits',0,6,197,1,3
	.word	6791
	.byte	19
	.byte	'Ifx_P_LPCR1_Bits',0,6,205,1,3
	.word	6915
	.byte	19
	.byte	'Ifx_P_LPCR1_P21_Bits',0,6,215,1,3
	.word	6999
	.byte	19
	.byte	'Ifx_P_LPCR2_Bits',0,6,229,1,3
	.word	7179
	.byte	19
	.byte	'Ifx_P_OMCR0_Bits',0,6,240,1,3
	.word	5430
	.byte	19
	.byte	'Ifx_P_OMCR12_Bits',0,6,250,1,3
	.word	5954
	.byte	19
	.byte	'Ifx_P_OMCR4_Bits',0,6,133,2,3
	.word	5604
	.byte	19
	.byte	'Ifx_P_OMCR8_Bits',0,6,144,2,3
	.word	5778
	.byte	19
	.byte	'Ifx_P_OMCR_Bits',0,6,166,2,3
	.word	6443
	.byte	19
	.byte	'Ifx_P_OMR_Bits',0,6,203,2,3
	.word	1257
	.byte	19
	.byte	'Ifx_P_OMSR0_Bits',0,6,213,2,3
	.word	4767
	.byte	19
	.byte	'Ifx_P_OMSR12_Bits',0,6,224,2,3
	.word	5255
	.byte	19
	.byte	'Ifx_P_OMSR4_Bits',0,6,235,2,3
	.word	4914
	.byte	19
	.byte	'Ifx_P_OMSR8_Bits',0,6,246,2,3
	.word	5083
	.byte	19
	.byte	'Ifx_P_OMSR_Bits',0,6,140,3,3
	.word	6110
	.byte	19
	.byte	'Ifx_P_OUT_Bits',0,6,162,3,3
	.word	941
	.byte	19
	.byte	'Ifx_P_PCSR_Bits',0,6,180,3,3
	.word	4481
	.byte	19
	.byte	'Ifx_P_PDISC_Bits',0,6,202,3,3
	.word	4115
	.byte	19
	.byte	'Ifx_P_PDR0_Bits',0,6,223,3,3
	.word	3146
	.byte	19
	.byte	'Ifx_P_PDR1_Bits',0,6,244,3,3
	.word	3450
	.byte	19
	.byte	'Ifx_P_ACCEN0',0,6,129,4,3
	.word	8046
	.byte	19
	.byte	'Ifx_P_ACCEN1',0,6,137,4,3
	.word	7479
	.byte	19
	.byte	'Ifx_P_ESR',0,6,145,4,3
	.word	4066
	.byte	19
	.byte	'Ifx_P_ID',0,6,153,4,3
	.word	1907
	.byte	19
	.byte	'Ifx_P_IN',0,6,161,4,3
	.word	3097
	.byte	19
	.byte	'Ifx_P_IOCR0',0,6,169,4,3
	.word	2131
	.byte	19
	.byte	'Ifx_P_IOCR12',0,6,177,4,3
	.word	2783
	.byte	19
	.byte	'Ifx_P_IOCR4',0,6,185,4,3
	.word	2346
	.byte	19
	.byte	'Ifx_P_IOCR8',0,6,193,4,3
	.word	2563
	.byte	19
	.byte	'Ifx_P_LPCR0',0,6,201,4,3
	.word	6875
	.byte	19
	.byte	'Ifx_P_LPCR1',0,6,210,4,3
	.word	7124
	.byte	19
	.byte	'Ifx_P_LPCR2',0,6,218,4,3
	.word	7383
	.byte	19
	.byte	'Ifx_P_OMCR',0,6,226,4,3
	.word	6751
	.byte	19
	.byte	'Ifx_P_OMCR0',0,6,234,4,3
	.word	5564
	.byte	19
	.byte	'Ifx_P_OMCR12',0,6,242,4,3
	.word	6070
	.byte	19
	.byte	'Ifx_P_OMCR4',0,6,250,4,3
	.word	5738
	.byte	19
	.byte	'Ifx_P_OMCR8',0,6,130,5,3
	.word	5914
	.byte	19
	.byte	'Ifx_P_OMR',0,6,138,5,3
	.word	1788
	.byte	19
	.byte	'Ifx_P_OMSR',0,6,146,5,3
	.word	6403
	.byte	19
	.byte	'Ifx_P_OMSR0',0,6,154,5,3
	.word	4874
	.byte	19
	.byte	'Ifx_P_OMSR12',0,6,162,5,3
	.word	5390
	.byte	19
	.byte	'Ifx_P_OMSR4',0,6,170,5,3
	.word	5043
	.byte	19
	.byte	'Ifx_P_OMSR8',0,6,178,5,3
	.word	5215
	.byte	19
	.byte	'Ifx_P_OUT',0,6,186,5,3
	.word	1217
	.byte	19
	.byte	'Ifx_P_PCSR',0,6,194,5,3
	.word	4727
	.byte	19
	.byte	'Ifx_P_PDISC',0,6,202,5,3
	.word	4441
	.byte	19
	.byte	'Ifx_P_PDR0',0,6,210,5,3
	.word	3410
	.byte	19
	.byte	'Ifx_P_PDR1',0,6,218,5,3
	.word	3726
	.byte	10
	.word	8086
	.byte	19
	.byte	'Ifx_P',0,6,139,6,3
	.word	112457
	.byte	17,23,250,10,9,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,18
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,18
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,19
	.byte	'IfxScu_WDTCON1_IR',0,23,255,10,3
	.word	112477
	.byte	11
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,24,45,16,4,12
	.byte	'EN0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'EN1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'EN2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'EN3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'EN4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'EN5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'EN6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'EN7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'EN8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'EN9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'EN10',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'EN11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'EN12',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'EN13',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'EN14',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'EN15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'EN16',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'EN17',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'EN18',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'EN19',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'EN20',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'EN21',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'EN22',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'EN23',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'EN24',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'EN25',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'EN26',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'EN27',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'EN28',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'EN29',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'EN30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'EN31',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_ACCEN0_Bits',0,24,79,3
	.word	112599
	.byte	11
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,24,82,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	32,0,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1_Bits',0,24,85,3
	.word	113156
	.byte	11
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,24,88,16,4,12
	.byte	'STM0DIS',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'STM1DIS',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'STM2DIS',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	323
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,24,94,3
	.word	113233
	.byte	11
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,24,97,16,4,12
	.byte	'BAUD1DIV',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'BAUD2DIV',0,1
	.word	520
	.byte	4,0,2,35,0,12
	.byte	'SRIDIV',0,1
	.word	520
	.byte	4,4,2,35,1,12
	.byte	'LPDIV',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'SPBDIV',0,1
	.word	520
	.byte	4,4,2,35,2,12
	.byte	'FSI2DIV',0,1
	.word	520
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	520
	.byte	2,0,2,35,2,12
	.byte	'FSIDIV',0,1
	.word	520
	.byte	2,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	2,4,2,35,3,12
	.byte	'CLKSEL',0,1
	.word	520
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON0_Bits',0,24,111,3
	.word	113369
	.byte	11
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,24,114,16,4,12
	.byte	'CANDIV',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'ERAYDIV',0,1
	.word	520
	.byte	4,0,2,35,0,12
	.byte	'STMDIV',0,1
	.word	520
	.byte	4,4,2,35,1,12
	.byte	'GTMDIV',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'ETHDIV',0,1
	.word	520
	.byte	4,4,2,35,2,12
	.byte	'ASCLINFDIV',0,1
	.word	520
	.byte	4,0,2,35,2,12
	.byte	'ASCLINSDIV',0,1
	.word	520
	.byte	4,4,2,35,3,12
	.byte	'INSEL',0,1
	.word	520
	.byte	2,2,2,35,3,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON1_Bits',0,24,126,3
	.word	113649
	.byte	11
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,24,129,1,16,4,12
	.byte	'BBBDIV',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON2_Bits',0,24,135,1,3
	.word	113887
	.byte	11
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,24,138,1,16,4,12
	.byte	'PLLDIV',0,1
	.word	520
	.byte	6,2,2,35,0,12
	.byte	'PLLSEL',0,1
	.word	520
	.byte	2,0,2,35,0,12
	.byte	'PLLERAYDIV',0,1
	.word	520
	.byte	6,2,2,35,1,12
	.byte	'PLLERAYSEL',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'SRIDIV',0,1
	.word	520
	.byte	6,2,2,35,2,12
	.byte	'SRISEL',0,1
	.word	520
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON3_Bits',0,24,150,1,3
	.word	114015
	.byte	11
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,24,153,1,16,4,12
	.byte	'SPBDIV',0,1
	.word	520
	.byte	6,2,2,35,0,12
	.byte	'SPBSEL',0,1
	.word	520
	.byte	2,0,2,35,0,12
	.byte	'GTMDIV',0,1
	.word	520
	.byte	6,2,2,35,1,12
	.byte	'GTMSEL',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'STMDIV',0,1
	.word	520
	.byte	6,2,2,35,2,12
	.byte	'STMSEL',0,1
	.word	520
	.byte	2,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	5,3,2,35,3,12
	.byte	'SLCK',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON4_Bits',0,24,165,1,3
	.word	114258
	.byte	11
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,24,168,1,16,4,12
	.byte	'MAXDIV',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	26,2,2,35,0,12
	.byte	'UP',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CCUCON5_Bits',0,24,174,1,3
	.word	114493
	.byte	11
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,24,177,1,16,4,12
	.byte	'CPU0DIV',0,1
	.word	520
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	323
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6_Bits',0,24,181,1,3
	.word	114621
	.byte	11
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,24,184,1,16,4,12
	.byte	'CPU1DIV',0,1
	.word	520
	.byte	6,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	323
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7_Bits',0,24,188,1,3
	.word	114721
	.byte	11
	.byte	'_Ifx_SCU_CHIPID_Bits',0,24,191,1,16,4,12
	.byte	'CHREV',0,1
	.word	520
	.byte	6,2,2,35,0,12
	.byte	'CHTEC',0,1
	.word	520
	.byte	2,0,2,35,0,12
	.byte	'CHID',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'EEA',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'UCODE',0,1
	.word	520
	.byte	7,0,2,35,2,12
	.byte	'FSIZE',0,1
	.word	520
	.byte	4,4,2,35,3,12
	.byte	'SP',0,1
	.word	520
	.byte	2,2,2,35,3,12
	.byte	'SEC',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_CHIPID_Bits',0,24,202,1,3
	.word	114821
	.byte	11
	.byte	'_Ifx_SCU_DTSCON_Bits',0,24,205,1,16,4,12
	.byte	'PWD',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'START',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	2,4,2,35,0,12
	.byte	'CAL',0,4
	.word	323
	.byte	20,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'SLCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSCON_Bits',0,24,213,1,3
	.word	115029
	.byte	11
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,24,216,1,16,4,12
	.byte	'LOWER',0,2
	.word	919
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	520
	.byte	5,1,2,35,1,12
	.byte	'LLU',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'UPPER',0,2
	.word	919
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	4,2,2,35,3,12
	.byte	'SLCK',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'UOF',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_DTSLIM_Bits',0,24,225,1,3
	.word	115194
	.byte	11
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,24,228,1,16,4,12
	.byte	'RESULT',0,2
	.word	919
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	520
	.byte	4,2,2,35,1,12
	.byte	'RDY',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'BUSY',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,24,235,1,3
	.word	115377
	.byte	11
	.byte	'_Ifx_SCU_EICR_Bits',0,24,238,1,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'EXIS0',0,1
	.word	520
	.byte	3,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'FEN0',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'REN0',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'LDEN0',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'EIEN0',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'INP0',0,1
	.word	520
	.byte	3,1,2,35,1,12
	.byte	'reserved_15',0,4
	.word	323
	.byte	5,12,2,35,0,12
	.byte	'EXIS1',0,1
	.word	520
	.byte	3,1,2,35,2,12
	.byte	'reserved_23',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'FEN1',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'REN1',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'LDEN1',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'EIEN1',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'INP1',0,1
	.word	520
	.byte	3,1,2,35,3,12
	.byte	'reserved_31',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EICR_Bits',0,24,129,2,3
	.word	115531
	.byte	11
	.byte	'_Ifx_SCU_EIFR_Bits',0,24,132,2,16,4,12
	.byte	'INTF0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'INTF1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'INTF2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'INTF3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'INTF4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'INTF5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'INTF6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'INTF7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR_Bits',0,24,143,2,3
	.word	115895
	.byte	11
	.byte	'_Ifx_SCU_EMSR_Bits',0,24,146,2,16,4,12
	.byte	'POL',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'MODE',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'ENON',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PSEL',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,2
	.word	919
	.byte	12,0,2,35,0,12
	.byte	'EMSF',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'SEMSF',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	520
	.byte	6,0,2,35,2,12
	.byte	'EMSFM',0,1
	.word	520
	.byte	2,6,2,35,3,12
	.byte	'SEMSFM',0,1
	.word	520
	.byte	2,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_EMSR_Bits',0,24,159,2,3
	.word	116106
	.byte	11
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,24,162,2,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	7,1,2,35,0,12
	.byte	'EDCON',0,2
	.word	919
	.byte	2,7,2,35,0,12
	.byte	'reserved_9',0,4
	.word	323
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG_Bits',0,24,167,2,3
	.word	116358
	.byte	11
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,24,170,2,16,4,12
	.byte	'ARI',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ARC',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG_Bits',0,24,175,2,3
	.word	116476
	.byte	11
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,24,178,2,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	28,4,2,35,0,12
	.byte	'EVR13OFF',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'BPEVR13OFF',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR13CON_Bits',0,24,185,2,3
	.word	116587
	.byte	11
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,24,188,2,16,4,12
	.byte	'reserved_0',0,4
	.word	323
	.byte	28,4,2,35,0,12
	.byte	'EVR33OFF',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'BPEVR33OFF',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVR33CON_Bits',0,24,195,2,3
	.word	116750
	.byte	11
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,24,198,2,16,4,12
	.byte	'ADC13V',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'ADC33V',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'ADCSWDV',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,24,205,2,3
	.word	116913
	.byte	11
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,24,208,2,16,4,12
	.byte	'DVS13TRIM',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'DVS33TRIM',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'VAL',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,24,215,2,3
	.word	117071
	.byte	11
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,24,218,2,16,4,12
	.byte	'EVR13OVMOD',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	2,4,2,35,0,12
	.byte	'EVR13UVMOD',0,1
	.word	520
	.byte	2,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	520
	.byte	2,0,2,35,0,12
	.byte	'EVR33OVMOD',0,1
	.word	520
	.byte	2,6,2,35,1,12
	.byte	'reserved_10',0,1
	.word	520
	.byte	2,4,2,35,1,12
	.byte	'EVR33UVMOD',0,1
	.word	520
	.byte	2,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'SWDOVMOD',0,1
	.word	520
	.byte	2,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	520
	.byte	2,4,2,35,2,12
	.byte	'SWDUVMOD',0,1
	.word	520
	.byte	2,2,2,35,2,12
	.byte	'reserved_22',0,2
	.word	919
	.byte	10,0,2,35,2,0,19
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,24,232,2,3
	.word	117236
	.byte	11
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,24,235,2,16,4,12
	.byte	'OSCTRIM',0,2
	.word	919
	.byte	10,6,2,35,0,12
	.byte	'OSCPTAT',0,1
	.word	520
	.byte	6,0,2,35,1,12
	.byte	'OSCANASEL',0,1
	.word	520
	.byte	4,4,2,35,2,12
	.byte	'HPBGTRIM',0,2
	.word	919
	.byte	7,5,2,35,2,12
	.byte	'HPBGCLKEN',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'OSC3V3',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	520
	.byte	2,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,24,245,2,3
	.word	117565
	.byte	11
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,24,248,2,16,4,12
	.byte	'EVR13OVVAL',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'EVR33OVVAL',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SWDOVVAL',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVROVMON_Bits',0,24,255,2,3
	.word	117786
	.byte	11
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,24,130,3,16,4,12
	.byte	'RST13TRIM',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	16,8,2,35,0,12
	.byte	'RST13OFF',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'BPRST13OFF',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'RST33OFF',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'BPRST33OFF',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'RSTSWDOFF',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'BPRSTSWDOFF',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,24,142,3,3
	.word	117949
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,24,145,3,16,4,12
	.byte	'SD5P',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SD5I',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SD5D',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,24,152,3,3
	.word	118221
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,24,155,3,16,4,12
	.byte	'SD33P',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SD33I',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SD33D',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,24,162,3,3
	.word	118374
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,24,165,3,16,4,12
	.byte	'CT5REG0',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'CT5REG1',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'CT5REG2',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,24,172,3,3
	.word	118530
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,24,175,3,16,4,12
	.byte	'CT5REG3',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'CT5REG4',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,24,181,3,3
	.word	118692
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,24,184,3,16,4,12
	.byte	'CT33REG0',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'CT33REG1',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'CT33REG2',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,24,191,3,3
	.word	118835
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,24,194,3,16,4,12
	.byte	'CT33REG3',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'CT33REG4',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,24,200,3,3
	.word	119000
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,24,203,3,16,4,12
	.byte	'SDFREQSPRD',0,2
	.word	919
	.byte	16,0,2,35,0,12
	.byte	'SDFREQ',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'SDSTEP',0,1
	.word	520
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	2,2,2,35,3,12
	.byte	'SDSAMPLE',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,24,211,3,3
	.word	119145
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,24,214,3,16,4,12
	.byte	'DRVP',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SDMINMAXDC',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'DRVN',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'SDLUT',0,1
	.word	520
	.byte	6,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,24,222,3,3
	.word	119326
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,24,225,3,16,4,12
	.byte	'SDPWMPRE',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SDPID',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SDVOKLVL',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,24,232,3,3
	.word	119500
	.byte	11
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,24,235,3,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SYNCDIV',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	323
	.byte	20,1,2,35,0,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,24,241,3,3
	.word	119660
	.byte	11
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,24,244,3,16,4,12
	.byte	'EVR13',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'OV13',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'EVR33',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'OV33',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'OVSWD',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'UV13',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'UV33',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'UVSWD',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'EXTPASS13',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'EXTPASS33',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'BGPROK',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	323
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,24,130,4,3
	.word	119804
	.byte	11
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,24,133,4,16,4,12
	.byte	'EVR13TRIM',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'SDVOUTSEL',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	15,1,2,35,2,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,24,139,4,3
	.word	120078
	.byte	11
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,24,142,4,16,4,12
	.byte	'EVR13UVVAL',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'EVR33UVVAL',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SWDUVVAL',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,24,149,4,3
	.word	120217
	.byte	11
	.byte	'_Ifx_SCU_EXTCON_Bits',0,24,152,4,16,4,12
	.byte	'EN0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'SEL0',0,1
	.word	520
	.byte	4,2,2,35,0,12
	.byte	'reserved_6',0,2
	.word	919
	.byte	10,0,2,35,0,12
	.byte	'EN1',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'NSEL',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'SEL1',0,1
	.word	520
	.byte	4,2,2,35,2,12
	.byte	'reserved_22',0,1
	.word	520
	.byte	2,0,2,35,2,12
	.byte	'DIV1',0,1
	.word	520
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_EXTCON_Bits',0,24,163,4,3
	.word	120380
	.byte	11
	.byte	'_Ifx_SCU_FDR_Bits',0,24,166,4,16,4,12
	.byte	'STEP',0,2
	.word	919
	.byte	10,6,2,35,0,12
	.byte	'reserved_10',0,1
	.word	520
	.byte	4,2,2,35,1,12
	.byte	'DM',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'RESULT',0,2
	.word	919
	.byte	10,6,2,35,2,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	5,1,2,35,3,12
	.byte	'DISCLK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_FDR_Bits',0,24,174,4,3
	.word	120598
	.byte	11
	.byte	'_Ifx_SCU_FMR_Bits',0,24,177,4,16,4,12
	.byte	'FS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'FS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'FS2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'FS3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'FS4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'FS5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'FS6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'FS7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'FC0',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'FC1',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'FC2',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'FC3',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'FC4',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'FC5',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'FC6',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'FC7',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	8,0,2,35,3,0,19
	.byte	'Ifx_SCU_FMR_Bits',0,24,197,4,3
	.word	120761
	.byte	11
	.byte	'_Ifx_SCU_ID_Bits',0,24,200,4,16,4,12
	.byte	'MODREV',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'MODTYPE',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'MODNUMBER',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_ID_Bits',0,24,205,4,3
	.word	121097
	.byte	11
	.byte	'_Ifx_SCU_IGCR_Bits',0,24,208,4,16,4,12
	.byte	'IPEN00',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'IPEN01',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'IPEN02',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'IPEN03',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'IPEN04',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'IPEN05',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'IPEN06',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'IPEN07',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	5,3,2,35,1,12
	.byte	'GEEN0',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'IGP0',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'IPEN10',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'IPEN11',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'IPEN12',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'IPEN13',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'IPEN14',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'IPEN15',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'IPEN16',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'IPEN17',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	5,3,2,35,3,12
	.byte	'GEEN1',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'IGP1',0,1
	.word	520
	.byte	2,0,2,35,3,0,19
	.byte	'Ifx_SCU_IGCR_Bits',0,24,232,4,3
	.word	121204
	.byte	11
	.byte	'_Ifx_SCU_IN_Bits',0,24,235,4,16,4,12
	.byte	'P0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_IN_Bits',0,24,240,4,3
	.word	121656
	.byte	11
	.byte	'_Ifx_SCU_IOCR_Bits',0,24,243,4,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	4,4,2,35,0,12
	.byte	'PC0',0,1
	.word	520
	.byte	4,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	4,4,2,35,1,12
	.byte	'PC1',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_IOCR_Bits',0,24,250,4,3
	.word	121755
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,24,253,4,16,4,12
	.byte	'LBISTREQ',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'LBISTREQP',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PATTERNS',0,2
	.word	919
	.byte	14,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,24,131,5,3
	.word	121905
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,24,134,5,16,4,12
	.byte	'SEED',0,4
	.word	323
	.byte	23,9,2,35,0,12
	.byte	'reserved_23',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'SPLITSH',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'BODY',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'LBISTFREQU',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,24,141,5,3
	.word	122054
	.byte	11
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,24,144,5,16,4,12
	.byte	'SIGNATURE',0,4
	.word	323
	.byte	24,8,2,35,0,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	7,1,2,35,3,12
	.byte	'LBISTDONE',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,24,149,5,3
	.word	122215
	.byte	11
	.byte	'_Ifx_SCU_LCLCON_Bits',0,24,152,5,16,4,12
	.byte	'reserved_0',0,2
	.word	919
	.byte	16,0,2,35,0,12
	.byte	'LS',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,2
	.word	919
	.byte	14,1,2,35,2,12
	.byte	'LSEN',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_LCLCON_Bits',0,24,158,5,3
	.word	122345
	.byte	11
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,24,161,5,16,4,12
	.byte	'LCLT0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'LCLT1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST_Bits',0,24,166,5,3
	.word	122477
	.byte	11
	.byte	'_Ifx_SCU_MANID_Bits',0,24,169,5,16,4,12
	.byte	'DEPT',0,1
	.word	520
	.byte	5,3,2,35,0,12
	.byte	'MANUF',0,2
	.word	919
	.byte	11,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_MANID_Bits',0,24,174,5,3
	.word	122592
	.byte	11
	.byte	'_Ifx_SCU_OMR_Bits',0,24,177,5,16,4,12
	.byte	'PS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	919
	.byte	14,0,2,35,0,12
	.byte	'PCL0',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'PCL1',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	919
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_OMR_Bits',0,24,185,5,3
	.word	122703
	.byte	11
	.byte	'_Ifx_SCU_OSCCON_Bits',0,24,188,5,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PLLLV',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'OSCRES',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'GAINSEL',0,1
	.word	520
	.byte	2,3,2,35,0,12
	.byte	'MODE',0,1
	.word	520
	.byte	2,1,2,35,0,12
	.byte	'SHBY',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'PLLHV',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'X1D',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'X1DEN',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'OSCVAL',0,1
	.word	520
	.byte	5,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	520
	.byte	2,1,2,35,2,12
	.byte	'APREN',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'CAP0EN',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'CAP1EN',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'CAP2EN',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'CAP3EN',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_OSCCON_Bits',0,24,209,5,3
	.word	122861
	.byte	11
	.byte	'_Ifx_SCU_OUT_Bits',0,24,212,5,16,4,12
	.byte	'P0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'P1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_OUT_Bits',0,24,217,5,3
	.word	123273
	.byte	11
	.byte	'_Ifx_SCU_OVCCON_Bits',0,24,220,5,16,4,12
	.byte	'CSEL0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'CSEL1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'CSEL2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,2
	.word	919
	.byte	13,0,2,35,0,12
	.byte	'OVSTRT',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'OVSTP',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'DCINVAL',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'OVCONF',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'POVCONF',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	6,0,2,35,3,0,19
	.byte	'Ifx_SCU_OVCCON_Bits',0,24,233,5,3
	.word	123374
	.byte	11
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,24,236,5,16,4,12
	.byte	'OVEN0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'OVEN1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'OVEN2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,4
	.word	323
	.byte	29,0,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,24,242,5,3
	.word	123641
	.byte	11
	.byte	'_Ifx_SCU_PDISC_Bits',0,24,245,5,16,4,12
	.byte	'PDIS0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PDIS1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC_Bits',0,24,250,5,3
	.word	123777
	.byte	11
	.byte	'_Ifx_SCU_PDR_Bits',0,24,253,5,16,4,12
	.byte	'PD0',0,1
	.word	520
	.byte	3,5,2,35,0,12
	.byte	'PL0',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PD1',0,1
	.word	520
	.byte	3,1,2,35,0,12
	.byte	'PL1',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDR_Bits',0,24,132,6,3
	.word	123888
	.byte	11
	.byte	'_Ifx_SCU_PDRR_Bits',0,24,135,6,16,4,12
	.byte	'PDR0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PDR1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PDR2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PDR3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PDR4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PDR5',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PDR6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PDR7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR_Bits',0,24,146,6,3
	.word	124021
	.byte	11
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,24,149,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'MODEN',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	919
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	520
	.byte	7,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	520
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLCON0_Bits',0,24,166,6,3
	.word	124224
	.byte	11
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,24,169,6,16,4,12
	.byte	'K2DIV',0,1
	.word	520
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	520
	.byte	7,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	520
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	919
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON1_Bits',0,24,177,6,3
	.word	124580
	.byte	11
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,24,180,6,16,4,12
	.byte	'MODCFG',0,2
	.word	919
	.byte	16,0,2,35,0,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLCON2_Bits',0,24,184,6,3
	.word	124758
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,24,187,6,16,4,12
	.byte	'VCOBYP',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'VCOPWD',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	2,4,2,35,0,12
	.byte	'SETFINDIS',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'CLRFINDIS',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'OSCDISCDIS',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'reserved_7',0,2
	.word	919
	.byte	2,7,2,35,0,12
	.byte	'NDIV',0,1
	.word	520
	.byte	5,2,2,35,1,12
	.byte	'reserved_14',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'PLLPWD',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'RESLD',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'reserved_19',0,1
	.word	520
	.byte	5,0,2,35,2,12
	.byte	'PDIV',0,1
	.word	520
	.byte	4,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,24,204,6,3
	.word	124858
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,24,207,6,16,4,12
	.byte	'K2DIV',0,1
	.word	520
	.byte	7,1,2,35,0,12
	.byte	'reserved_7',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'K3DIV',0,1
	.word	520
	.byte	4,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'K1DIV',0,1
	.word	520
	.byte	7,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	919
	.byte	9,0,2,35,2,0,19
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,24,215,6,3
	.word	125228
	.byte	11
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,24,218,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'PWDSTAT',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,4
	.word	323
	.byte	26,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,24,227,6,3
	.word	125414
	.byte	11
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,24,230,6,16,4,12
	.byte	'VCOBYST',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'VCOLOCK',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'FINDIS',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'K1RDY',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'K2RDY',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'reserved_6',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'MODRUN',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,4
	.word	323
	.byte	24,0,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,24,241,6,3
	.word	125612
	.byte	11
	.byte	'_Ifx_SCU_PMCSR_Bits',0,24,244,6,16,4,12
	.byte	'REQSLP',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'SMUSLP',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'reserved_3',0,1
	.word	520
	.byte	5,0,2,35,0,12
	.byte	'PMST',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,4
	.word	323
	.byte	21,0,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR_Bits',0,24,251,6,3
	.word	125845
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,24,254,6,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1WKEN',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'PINAWKEN',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'PINBWKEN',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'ESR0DFEN',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'ESR0EDCON',0,1
	.word	520
	.byte	2,1,2,35,0,12
	.byte	'ESR1DFEN',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'ESR1EDCON',0,1
	.word	520
	.byte	2,6,2,35,1,12
	.byte	'PINADFEN',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'PINAEDCON',0,1
	.word	520
	.byte	2,3,2,35,1,12
	.byte	'PINBDFEN',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'PINBEDCON',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'SCREN',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'STBYRAMSEL',0,1
	.word	520
	.byte	2,5,2,35,2,12
	.byte	'SCRCLKSEL',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'TRISTEN',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'TRISTREQ',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'PORSTDF',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'reserved_24',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'DCDCSYNC',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	3,3,2,35,3,12
	.byte	'ESR0TRIST',0,1
	.word	520
	.byte	1,2,2,35,3,12
	.byte	'reserved_30',0,1
	.word	520
	.byte	1,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,24,153,7,3
	.word	125997
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,24,156,7,16,4,12
	.byte	'SCRSTEN',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'SCRSTREQ',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	6,0,2,35,0,12
	.byte	'CPUIDLSEL',0,1
	.word	520
	.byte	3,5,2,35,1,12
	.byte	'reserved_11',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'IRADIS',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'reserved_13',0,1
	.word	520
	.byte	3,0,2,35,1,12
	.byte	'SCRCFG',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'CPUSEL',0,1
	.word	520
	.byte	3,5,2,35,3,12
	.byte	'STBYEVEN',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'STBYEV',0,1
	.word	520
	.byte	3,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,24,170,7,3
	.word	126564
	.byte	11
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,24,173,7,16,4,12
	.byte	'SCRINT',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'BUSY',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'SCRECC',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'SCRWDT',0,1
	.word	520
	.byte	1,5,2,35,1,12
	.byte	'SCRRST',0,1
	.word	520
	.byte	1,4,2,35,1,12
	.byte	'reserved_12',0,1
	.word	520
	.byte	4,0,2,35,1,12
	.byte	'TCINT',0,1
	.word	520
	.byte	8,0,2,35,2,12
	.byte	'TCINTREQ',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'SMURST',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'RST',0,1
	.word	520
	.byte	1,5,2,35,3,12
	.byte	'reserved_27',0,1
	.word	520
	.byte	4,1,2,35,3,12
	.byte	'LCK',0,1
	.word	520
	.byte	1,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,24,187,7,3
	.word	126858
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,24,190,7,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKP',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUN',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PINAWKP',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUN',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PINBWKP',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUN',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'PORSTDF',0,1
	.word	520
	.byte	1,6,2,35,1,12
	.byte	'HWCFGEVR',0,1
	.word	520
	.byte	3,3,2,35,1,12
	.byte	'STBYRAM',0,1
	.word	520
	.byte	2,1,2,35,1,12
	.byte	'TRIST',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'SCRST',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'SCRWKP',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'SCR',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'SCRWKEN',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'ESR1WKEN',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'PINAWKEN',0,1
	.word	520
	.byte	1,2,2,35,2,12
	.byte	'PINBWKEN',0,1
	.word	520
	.byte	1,1,2,35,2,12
	.byte	'reserved_23',0,2
	.word	919
	.byte	4,5,2,35,2,12
	.byte	'ESR0TRIST',0,1
	.word	520
	.byte	1,4,2,35,3,12
	.byte	'reserved_28',0,1
	.word	520
	.byte	4,0,2,35,3,0,19
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,24,214,7,3
	.word	127136
	.byte	11
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,24,217,7,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'ESR1WKPCLR',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'ESR1OVRUNCLR',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'PINAWKPCLR',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'PINAOVRUNCLR',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'PINBWKPCLR',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PINBOVRUNCLR',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'SCRSTCLR',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'SCRWKPCLR',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,2
	.word	919
	.byte	14,0,2,35,2,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,24,230,7,3
	.word	127632
	.byte	11
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,24,233,7,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'CLRC',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,2
	.word	919
	.byte	10,4,2,35,0,12
	.byte	'CSS0',0,1
	.word	520
	.byte	1,3,2,35,1,12
	.byte	'CSS1',0,1
	.word	520
	.byte	1,2,2,35,1,12
	.byte	'CSS2',0,1
	.word	520
	.byte	1,1,2,35,1,12
	.byte	'reserved_15',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'USRINFO',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON2_Bits',0,24,243,7,3
	.word	127945
	.byte	11
	.byte	'_Ifx_SCU_RSTCON_Bits',0,24,246,7,16,4,12
	.byte	'ESR0',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'ESR1',0,1
	.word	520
	.byte	2,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	520
	.byte	2,2,2,35,0,12
	.byte	'SMU',0,1
	.word	520
	.byte	2,0,2,35,0,12
	.byte	'SW',0,1
	.word	520
	.byte	2,6,2,35,1,12
	.byte	'STM0',0,1
	.word	520
	.byte	2,4,2,35,1,12
	.byte	'STM1',0,1
	.word	520
	.byte	2,2,2,35,1,12
	.byte	'STM2',0,1
	.word	520
	.byte	2,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_RSTCON_Bits',0,24,129,8,3
	.word	128154
	.byte	11
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,24,132,8,16,4,12
	.byte	'ESR0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SMU',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'SW',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'STM0',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'STM1',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'STM2',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'reserved_8',0,1
	.word	520
	.byte	8,0,2,35,1,12
	.byte	'PORST',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'reserved_17',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'CB0',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'CB1',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'CB3',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	520
	.byte	2,1,2,35,2,12
	.byte	'EVR13',0,1
	.word	520
	.byte	1,0,2,35,2,12
	.byte	'EVR33',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'SWD',0,1
	.word	520
	.byte	1,6,2,35,3,12
	.byte	'reserved_26',0,1
	.word	520
	.byte	2,4,2,35,3,12
	.byte	'STBYR',0,1
	.word	520
	.byte	1,3,2,35,3,12
	.byte	'reserved_29',0,1
	.word	520
	.byte	3,0,2,35,3,0,19
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,24,155,8,3
	.word	128365
	.byte	11
	.byte	'_Ifx_SCU_SAFECON_Bits',0,24,158,8,16,4,12
	.byte	'HBT',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,4
	.word	323
	.byte	31,0,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON_Bits',0,24,162,8,3
	.word	128797
	.byte	11
	.byte	'_Ifx_SCU_STSTAT_Bits',0,24,165,8,16,4,12
	.byte	'HWCFG',0,1
	.word	520
	.byte	8,0,2,35,0,12
	.byte	'FTM',0,1
	.word	520
	.byte	7,1,2,35,1,12
	.byte	'MODE',0,1
	.word	520
	.byte	1,0,2,35,1,12
	.byte	'FCBAE',0,1
	.word	520
	.byte	1,7,2,35,2,12
	.byte	'LUDIS',0,1
	.word	520
	.byte	1,6,2,35,2,12
	.byte	'reserved_18',0,1
	.word	520
	.byte	1,5,2,35,2,12
	.byte	'TRSTL',0,1
	.word	520
	.byte	1,4,2,35,2,12
	.byte	'SPDEN',0,1
	.word	520
	.byte	1,3,2,35,2,12
	.byte	'reserved_21',0,1
	.word	520
	.byte	3,0,2,35,2,12
	.byte	'RAMINT',0,1
	.word	520
	.byte	1,7,2,35,3,12
	.byte	'reserved_25',0,1
	.word	520
	.byte	7,0,2,35,3,0,19
	.byte	'Ifx_SCU_STSTAT_Bits',0,24,178,8,3
	.word	128893
	.byte	11
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,24,181,8,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'SWRSTREQ',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,4
	.word	323
	.byte	30,0,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,24,186,8,3
	.word	129153
	.byte	11
	.byte	'_Ifx_SCU_SYSCON_Bits',0,24,189,8,16,4,12
	.byte	'CCTRIG0',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'RAMINTM',0,1
	.word	520
	.byte	2,4,2,35,0,12
	.byte	'SETLUDIS',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'reserved_5',0,1
	.word	520
	.byte	3,0,2,35,0,12
	.byte	'DATM',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'reserved_9',0,4
	.word	323
	.byte	23,0,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON_Bits',0,24,198,8,3
	.word	129278
	.byte	11
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,24,201,8,16,4,12
	.byte	'ESR0T',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,24,208,8,3
	.word	129475
	.byte	11
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,24,211,8,16,4,12
	.byte	'ESR0T',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,24,218,8,3
	.word	129628
	.byte	11
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,24,221,8,16,4,12
	.byte	'ESR0T',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET_Bits',0,24,228,8,3
	.word	129781
	.byte	11
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,24,231,8,16,4,12
	.byte	'ESR0T',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'ESR1T',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'reserved_2',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'SMUT',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,4
	.word	323
	.byte	28,0,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,24,238,8,3
	.word	129934
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,24,241,8,16,4,12
	.byte	'ENDINIT',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10337
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10337
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,24,247,8,3
	.word	130089
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,24,250,8,16,4,12
	.byte	'reserved_0',0,1
	.word	520
	.byte	2,6,2,35,0,12
	.byte	'IR0',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	520
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,24,134,9,3
	.word	130219
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,24,137,9,16,4,12
	.byte	'AE',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	520
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,24,150,9,3
	.word	130457
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,24,153,9,16,4,12
	.byte	'ENDINIT',0,4
	.word	10337
	.byte	1,31,2,35,0,12
	.byte	'LCK',0,4
	.word	10337
	.byte	1,30,2,35,0,12
	.byte	'PW',0,4
	.word	10337
	.byte	14,16,2,35,0,12
	.byte	'REL',0,4
	.word	10337
	.byte	16,0,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,24,159,9,3
	.word	130680
	.byte	11
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,24,162,9,16,4,12
	.byte	'CLRIRF',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'reserved_1',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'IR0',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'DR',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'reserved_4',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'IR1',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'UR',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PAR',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'TCR',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'TCTR',0,1
	.word	520
	.byte	7,0,2,35,1,12
	.byte	'reserved_16',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,24,175,9,3
	.word	130806
	.byte	11
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,24,178,9,16,4,12
	.byte	'AE',0,1
	.word	520
	.byte	1,7,2,35,0,12
	.byte	'OE',0,1
	.word	520
	.byte	1,6,2,35,0,12
	.byte	'IS0',0,1
	.word	520
	.byte	1,5,2,35,0,12
	.byte	'DS',0,1
	.word	520
	.byte	1,4,2,35,0,12
	.byte	'TO',0,1
	.word	520
	.byte	1,3,2,35,0,12
	.byte	'IS1',0,1
	.word	520
	.byte	1,2,2,35,0,12
	.byte	'US',0,1
	.word	520
	.byte	1,1,2,35,0,12
	.byte	'PAS',0,1
	.word	520
	.byte	1,0,2,35,0,12
	.byte	'TCS',0,1
	.word	520
	.byte	1,7,2,35,1,12
	.byte	'TCT',0,1
	.word	520
	.byte	7,0,2,35,1,12
	.byte	'TIM',0,2
	.word	919
	.byte	16,0,2,35,2,0,19
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,24,191,9,3
	.word	131058
	.byte	13,24,199,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	112599
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN0',0,24,204,9,3
	.word	131277
	.byte	13,24,207,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113156
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ACCEN1',0,24,212,9,3
	.word	131341
	.byte	13,24,215,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113233
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ARSTDIS',0,24,220,9,3
	.word	131405
	.byte	13,24,223,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113369
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON0',0,24,228,9,3
	.word	131470
	.byte	13,24,231,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113649
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON1',0,24,236,9,3
	.word	131535
	.byte	13,24,239,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	113887
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON2',0,24,244,9,3
	.word	131600
	.byte	13,24,247,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114015
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON3',0,24,252,9,3
	.word	131665
	.byte	13,24,255,9,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114258
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON4',0,24,132,10,3
	.word	131730
	.byte	13,24,135,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114493
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON5',0,24,140,10,3
	.word	131795
	.byte	13,24,143,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114621
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON6',0,24,148,10,3
	.word	131860
	.byte	13,24,151,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114721
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CCUCON7',0,24,156,10,3
	.word	131925
	.byte	13,24,159,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	114821
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_CHIPID',0,24,164,10,3
	.word	131990
	.byte	13,24,167,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115029
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSCON',0,24,172,10,3
	.word	132054
	.byte	13,24,175,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115194
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSLIM',0,24,180,10,3
	.word	132118
	.byte	13,24,183,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115377
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_DTSSTAT',0,24,188,10,3
	.word	132182
	.byte	13,24,191,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115531
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EICR',0,24,196,10,3
	.word	132247
	.byte	13,24,199,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	115895
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EIFR',0,24,204,10,3
	.word	132309
	.byte	13,24,207,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116106
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EMSR',0,24,212,10,3
	.word	132371
	.byte	13,24,215,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116358
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESRCFG',0,24,220,10,3
	.word	132433
	.byte	13,24,223,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116476
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ESROCFG',0,24,228,10,3
	.word	132497
	.byte	13,24,231,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116587
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR13CON',0,24,236,10,3
	.word	132562
	.byte	13,24,239,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116750
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVR33CON',0,24,244,10,3
	.word	132628
	.byte	13,24,247,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	116913
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRADCSTAT',0,24,252,10,3
	.word	132694
	.byte	13,24,255,10,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117071
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRDVSTAT',0,24,132,11,3
	.word	132762
	.byte	13,24,135,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117236
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRMONCTRL',0,24,140,11,3
	.word	132829
	.byte	13,24,143,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117565
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROSCCTRL',0,24,148,11,3
	.word	132897
	.byte	13,24,151,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117786
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVROVMON',0,24,156,11,3
	.word	132965
	.byte	13,24,159,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	117949
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRRSTCON',0,24,164,11,3
	.word	133031
	.byte	13,24,167,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118221
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,24,172,11,3
	.word	133098
	.byte	13,24,175,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118374
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,24,180,11,3
	.word	133167
	.byte	13,24,183,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118530
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,24,188,11,3
	.word	133236
	.byte	13,24,191,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118692
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,24,196,11,3
	.word	133305
	.byte	13,24,199,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	118835
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,24,204,11,3
	.word	133374
	.byte	13,24,207,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119000
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,24,212,11,3
	.word	133443
	.byte	13,24,215,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119145
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL1',0,24,220,11,3
	.word	133512
	.byte	13,24,223,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119326
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL2',0,24,228,11,3
	.word	133580
	.byte	13,24,231,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119500
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL3',0,24,236,11,3
	.word	133648
	.byte	13,24,239,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119660
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSDCTRL4',0,24,244,11,3
	.word	133716
	.byte	13,24,247,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	119804
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRSTAT',0,24,252,11,3
	.word	133784
	.byte	13,24,255,11,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120078
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRTRIM',0,24,132,12,3
	.word	133849
	.byte	13,24,135,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120217
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EVRUVMON',0,24,140,12,3
	.word	133914
	.byte	13,24,143,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120380
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_EXTCON',0,24,148,12,3
	.word	133980
	.byte	13,24,151,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120598
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FDR',0,24,156,12,3
	.word	134044
	.byte	13,24,159,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	120761
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_FMR',0,24,164,12,3
	.word	134105
	.byte	13,24,167,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121097
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_ID',0,24,172,12,3
	.word	134166
	.byte	13,24,175,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121204
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IGCR',0,24,180,12,3
	.word	134226
	.byte	13,24,183,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121656
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IN',0,24,188,12,3
	.word	134288
	.byte	13,24,191,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121755
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_IOCR',0,24,196,12,3
	.word	134348
	.byte	13,24,199,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	121905
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL0',0,24,204,12,3
	.word	134410
	.byte	13,24,207,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122054
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL1',0,24,212,12,3
	.word	134478
	.byte	13,24,215,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122215
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LBISTCTRL2',0,24,220,12,3
	.word	134546
	.byte	13,24,223,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122345
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLCON',0,24,228,12,3
	.word	134614
	.byte	13,24,231,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122477
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_LCLTEST',0,24,236,12,3
	.word	134678
	.byte	13,24,239,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122592
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_MANID',0,24,244,12,3
	.word	134743
	.byte	13,24,247,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122703
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OMR',0,24,252,12,3
	.word	134806
	.byte	13,24,255,12,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	122861
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OSCCON',0,24,132,13,3
	.word	134867
	.byte	13,24,135,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123273
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OUT',0,24,140,13,3
	.word	134931
	.byte	13,24,143,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123374
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCCON',0,24,148,13,3
	.word	134992
	.byte	13,24,151,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123641
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_OVCENABLE',0,24,156,13,3
	.word	135056
	.byte	13,24,159,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123777
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDISC',0,24,164,13,3
	.word	135123
	.byte	13,24,167,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	123888
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDR',0,24,172,13,3
	.word	135186
	.byte	13,24,175,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124021
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PDRR',0,24,180,13,3
	.word	135247
	.byte	13,24,183,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124224
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON0',0,24,188,13,3
	.word	135309
	.byte	13,24,191,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124580
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON1',0,24,196,13,3
	.word	135374
	.byte	13,24,199,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124758
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLCON2',0,24,204,13,3
	.word	135439
	.byte	13,24,207,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	124858
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON0',0,24,212,13,3
	.word	135504
	.byte	13,24,215,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125228
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYCON1',0,24,220,13,3
	.word	135573
	.byte	13,24,223,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125414
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLERAYSTAT',0,24,228,13,3
	.word	135642
	.byte	13,24,231,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125612
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PLLSTAT',0,24,236,13,3
	.word	135711
	.byte	13,24,239,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125845
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMCSR',0,24,244,13,3
	.word	135776
	.byte	13,24,247,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	125997
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR0',0,24,252,13,3
	.word	135839
	.byte	13,24,255,13,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126564
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR1',0,24,132,14,3
	.word	135904
	.byte	13,24,135,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	126858
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWCR2',0,24,140,14,3
	.word	135969
	.byte	13,24,143,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127136
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTAT',0,24,148,14,3
	.word	136034
	.byte	13,24,151,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127632
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_PMSWSTATCLR',0,24,156,14,3
	.word	136100
	.byte	13,24,159,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128154
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON',0,24,164,14,3
	.word	136169
	.byte	13,24,167,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	127945
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTCON2',0,24,172,14,3
	.word	136233
	.byte	13,24,175,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128365
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_RSTSTAT',0,24,180,14,3
	.word	136298
	.byte	13,24,183,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128797
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SAFECON',0,24,188,14,3
	.word	136363
	.byte	13,24,191,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	128893
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_STSTAT',0,24,196,14,3
	.word	136428
	.byte	13,24,199,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129153
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SWRSTCON',0,24,204,14,3
	.word	136492
	.byte	13,24,207,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129278
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_SYSCON',0,24,212,14,3
	.word	136558
	.byte	13,24,215,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129475
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPCLR',0,24,220,14,3
	.word	136622
	.byte	13,24,223,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129628
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPDIS',0,24,228,14,3
	.word	136687
	.byte	13,24,231,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129781
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSET',0,24,236,14,3
	.word	136752
	.byte	13,24,239,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	129934
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_TRAPSTAT',0,24,244,14,3
	.word	136817
	.byte	13,24,247,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130089
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON0',0,24,252,14,3
	.word	136883
	.byte	13,24,255,14,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130219
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_CON1',0,24,132,15,3
	.word	136952
	.byte	13,24,135,15,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130457
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTCPU_SR',0,24,140,15,3
	.word	137021
	.byte	13,24,143,15,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130680
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON0',0,24,148,15,3
	.word	137088
	.byte	13,24,151,15,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	130806
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_CON1',0,24,156,15,3
	.word	137155
	.byte	13,24,159,15,9,4,14
	.byte	'U',0
	.word	323
	.byte	4,2,35,0,14
	.byte	'I',0
	.word	513
	.byte	4,2,35,0,14
	.byte	'B',0
	.word	131058
	.byte	4,2,35,0,0,19
	.byte	'Ifx_SCU_WDTS_SR',0,24,164,15,3
	.word	137222
	.byte	11
	.byte	'_Ifx_SCU_WDTCPU',0,24,175,15,25,12,14
	.byte	'CON0',0
	.word	136883
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	136952
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	137021
	.byte	4,2,35,8,0,10
	.word	137287
	.byte	19
	.byte	'Ifx_SCU_WDTCPU',0,24,180,15,3
	.word	137350
	.byte	11
	.byte	'_Ifx_SCU_WDTS',0,24,183,15,25,12,14
	.byte	'CON0',0
	.word	137088
	.byte	4,2,35,0,14
	.byte	'CON1',0
	.word	137155
	.byte	4,2,35,4,14
	.byte	'SR',0
	.word	137222
	.byte	4,2,35,8,0,10
	.word	137379
	.byte	19
	.byte	'Ifx_SCU_WDTS',0,24,188,15,3
	.word	137440
	.byte	17,5,83,9,1,18
	.byte	'IfxPort_InputMode_undefined',0,127,18
	.byte	'IfxPort_InputMode_noPullDevice',0,0,18
	.byte	'IfxPort_InputMode_pullDown',0,8,18
	.byte	'IfxPort_InputMode_pullUp',0,16,0,19
	.byte	'IfxPort_InputMode',0,5,89,3
	.word	137467
	.byte	19
	.byte	'IfxPort_OutputIdx',0,5,130,1,3
	.word	19652
	.byte	19
	.byte	'IfxPort_OutputMode',0,5,138,1,3
	.word	17566
	.byte	19
	.byte	'IfxPort_PadDriver',0,5,158,1,3
	.word	17636
	.byte	19
	.byte	'IfxPort_State',0,5,178,1,3
	.word	8699
	.byte	19
	.byte	'IfxPort_Pin',0,5,194,1,3
	.word	19613
	.byte	19
	.byte	'IfxStdIf_Timer_CountDir',0,7,93,3
	.word	20068
	.byte	19
	.byte	'IfxStdIf_Timer',0,7,96,32
	.word	9662
	.byte	31,7,134,2,9,16,14
	.byte	'enabled',0
	.word	520
	.byte	1,2,35,0,14
	.byte	'triggerPoint',0
	.word	8967
	.byte	4,2,35,2,14
	.byte	'isrPriority',0
	.word	919
	.byte	2,2,35,6,14
	.byte	'isrProvider',0
	.word	104856
	.byte	1,2,35,8,14
	.byte	'outputMode',0
	.word	17566
	.byte	1,2,35,9,14
	.byte	'outputDriver',0
	.word	17636
	.byte	1,2,35,10,14
	.byte	'risingEdgeAtPeriod',0
	.word	520
	.byte	1,2,35,11,14
	.byte	'outputEnabled',0
	.word	520
	.byte	1,2,35,12,0,19
	.byte	'IfxStdIf_Timer_TrigConfig',0,7,144,2,3
	.word	137799
	.byte	31,7,147,2,9,36,14
	.byte	'frequency',0
	.word	253
	.byte	4,2,35,0,14
	.byte	'isrPriority',0
	.word	919
	.byte	2,2,35,4,14
	.byte	'isrProvider',0
	.word	104856
	.byte	1,2,35,6,14
	.byte	'minResolution',0
	.word	253
	.byte	4,2,35,8,14
	.byte	'trigger',0
	.word	137799
	.byte	16,2,35,12,14
	.byte	'countDir',0
	.word	20068
	.byte	1,2,35,28,14
	.byte	'startOffset',0
	.word	253
	.byte	4,2,35,30,0,19
	.byte	'IfxStdIf_Timer_Config',0,7,156,2,3
	.word	138015
	.byte	19
	.byte	'IfxStdIf_PwmHl',0,14,81,32
	.word	104051
	.byte	19
	.byte	'IfxStdIf_PwmHl_Config',0,14,207,1,3
	.word	18051
	.byte	19
	.byte	'Ifx_GTM_ACCEN0_Bits',0,10,83,3
	.word	96124
	.byte	19
	.byte	'Ifx_GTM_ACCEN1_Bits',0,10,89,3
	.word	96035
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,10,100,3
	.word	94009
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,10,111,3
	.word	94185
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,10,119,3
	.word	20713
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,10,126,3
	.word	65243
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS_Bits',0,10,136,1,3
	.word	28249
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,10,143,1,3
	.word	28418
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,10,150,1,3
	.word	28529
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,10,157,1,3
	.word	28640
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,10,164,1,3
	.word	28987
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,10,171,1,3
	.word	28755
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,10,178,1,3
	.word	28871
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,10,185,1,3
	.word	29102
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,10,192,1,3
	.word	29218
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,10,201,1,3
	.word	29493
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,10,210,1,3
	.word	29669
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,10,217,1,3
	.word	29840
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,10,226,1,3
	.word	29334
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,10,235,1,3
	.word	14795
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,10,249,1,3
	.word	14219
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,10,135,2,3
	.word	14507
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,10,156,2,3
	.word	15527
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,10,179,2,3
	.word	13769
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,10,193,2,3
	.word	15959
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,10,207,2,3
	.word	14951
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,10,221,2,3
	.word	15239
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,10,228,2,3
	.word	12418
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,10,235,2,3
	.word	12529
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,10,242,2,3
	.word	12640
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,10,137,3,3
	.word	10512
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,10,145,3,3
	.word	13106
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,10,153,3,3
	.word	13254
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,10,160,3,3
	.word	13401
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,10,168,3,3
	.word	12968
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,10,177,3,3
	.word	10353
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,10,198,3,3
	.word	10925
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,10,210,3,3
	.word	11303
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,10,229,3,3
	.word	11508
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,10,244,3,3
	.word	11857
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,10,251,3,3
	.word	12196
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,10,130,4,3
	.word	12307
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,10,143,4,3
	.word	12751
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,10,162,4,3
	.word	41962
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,10,181,4,3
	.word	41026
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,10,200,4,3
	.word	41374
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,10,207,4,3
	.word	41740
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,10,226,4,3
	.word	40713
	.byte	19
	.byte	'Ifx_GTM_BRC_RST_Bits',0,10,233,4,3
	.word	41856
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR_Bits',0,10,242,4,3
	.word	31961
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST_Bits',0,10,143,5,3
	.word	32117
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR_Bits',0,10,152,5,3
	.word	39251
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST_Bits',0,10,181,5,3
	.word	39408
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR_Bits',0,10,190,5,3
	.word	39982
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST_Bits',0,10,219,5,3
	.word	40139
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR_Bits',0,10,228,5,3
	.word	32690
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST_Bits',0,10,129,6,3
	.word	32846
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR_Bits',0,10,138,6,3
	.word	33419
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST_Bits',0,10,167,6,3
	.word	33575
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR_Bits',0,10,176,6,3
	.word	34148
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST_Bits',0,10,205,6,3
	.word	34304
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR_Bits',0,10,214,6,3
	.word	34877
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST_Bits',0,10,243,6,3
	.word	35033
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR_Bits',0,10,252,6,3
	.word	35606
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST_Bits',0,10,153,7,3
	.word	35762
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR_Bits',0,10,162,7,3
	.word	36335
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST_Bits',0,10,191,7,3
	.word	36491
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR_Bits',0,10,200,7,3
	.word	37064
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST_Bits',0,10,229,7,3
	.word	37220
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR_Bits',0,10,238,7,3
	.word	37793
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST_Bits',0,10,139,8,3
	.word	37949
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR_Bits',0,10,148,8,3
	.word	38522
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST_Bits',0,10,177,8,3
	.word	38678
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,10,193,8,3
	.word	21769
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,10,204,8,3
	.word	22083
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,10,211,8,3
	.word	22291
	.byte	19
	.byte	'Ifx_GTM_CLC_Bits',0,10,221,8,3
	.word	91644
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,10,251,8,3
	.word	27411
	.byte	19
	.byte	'Ifx_GTM_CMP_EN_Bits',0,10,153,9,3
	.word	24926
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,10,183,9,3
	.word	26012
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,10,213,9,3
	.word	26687
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,10,220,9,3
	.word	27295
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,10,250,9,3
	.word	25501
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,10,129,10,3
	.word	30795
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,10,137,10,3
	.word	30969
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,10,145,10,3
	.word	31152
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,10,163,10,3
	.word	30234
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,10,170,10,3
	.word	31452
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,10,177,10,3
	.word	31335
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,10,184,10,3
	.word	31634
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,10,191,10,3
	.word	30678
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,10,198,10,3
	.word	30561
	.byte	19
	.byte	'Ifx_GTM_CTRL_Bits',0,10,208,10,3
	.word	20547
	.byte	19
	.byte	'Ifx_GTM_DATAIN_Bits',0,10,214,10,3
	.word	98133
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,10,227,10,3
	.word	84453
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,10,234,10,3
	.word	69789
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,10,241,10,3
	.word	78997
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,10,248,10,3
	.word	79122
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,10,255,10,3
	.word	75116
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,10,134,11,3
	.word	75239
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,10,142,11,3
	.word	83949
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,10,151,11,3
	.word	70070
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,10,159,11,3
	.word	70768
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,10,171,11,3
	.word	70425
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,10,181,11,3
	.word	74684
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,10,189,11,3
	.word	70632
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,10,201,11,3
	.word	70219
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,10,211,11,3
	.word	74495
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,10,218,11,3
	.word	81525
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,10,225,11,3
	.word	81761
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,10,232,11,3
	.word	81411
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,10,239,11,3
	.word	81639
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1_Bits',0,10,246,11,3
	.word	82467
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2_Bits',0,10,253,11,3
	.word	82586
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,10,141,12,3
	.word	76780
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,10,157,12,3
	.word	67968
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,10,170,12,3
	.word	76318
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,10,183,12,3
	.word	76094
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,10,210,12,3
	.word	68206
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,10,223,12,3
	.word	76555
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,10,246,12,3
	.word	68639
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,10,141,13,3
	.word	69013
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,10,164,13,3
	.word	69399
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,10,171,13,3
	.word	77358
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,10,178,13,3
	.word	80841
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,10,185,13,3
	.word	84084
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,10,192,13,3
	.word	80723
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,10,199,13,3
	.word	77604
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,10,207,13,3
	.word	81185
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,10,215,13,3
	.word	80959
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,10,249,13,3
	.word	73514
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,10,128,14,3
	.word	78306
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,10,135,14,3
	.word	77957
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,10,142,14,3
	.word	75958
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,10,149,14,3
	.word	74259
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,10,157,14,3
	.word	74377
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,10,191,14,3
	.word	72035
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,10,225,14,3
	.word	72745
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,10,232,14,3
	.word	73397
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,10,138,15,3
	.word	71496
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,10,146,15,3
	.word	81297
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,10,154,15,3
	.word	81071
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,10,161,15,3
	.word	82247
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,10,168,15,3
	.word	82357
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,10,177,15,3
	.word	79247
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,10,186,15,3
	.word	79377
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,10,194,15,3
	.word	77475
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,10,201,15,3
	.word	83593
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,10,208,15,3
	.word	79755
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,10,215,15,3
	.word	79875
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,10,222,15,3
	.word	83481
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,10,229,15,3
	.word	79507
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,10,236,15,3
	.word	79627
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,10,243,15,3
	.word	71380
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,10,129,16,3
	.word	71154
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,10,144,16,3
	.word	70905
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,10,154,16,3
	.word	69904
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T_Bits',0,10,162,16,3
	.word	82106
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,10,169,16,3
	.word	77241
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,10,176,16,3
	.word	84334
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,10,183,16,3
	.word	82923
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0_Bits',0,10,190,16,3
	.word	83257
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1_Bits',0,10,197,16,3
	.word	83369
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,10,204,16,3
	.word	82813
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0_Bits',0,10,211,16,3
	.word	83033
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1_Bits',0,10,218,16,3
	.word	83145
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,10,225,16,3
	.word	82705
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,10,236,16,3
	.word	77047
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,10,243,16,3
	.word	80119
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,10,251,16,3
	.word	80359
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,10,130,17,3
	.word	80003
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,10,138,17,3
	.word	80235
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,10,145,17,3
	.word	80603
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,10,152,17,3
	.word	83705
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,10,159,17,3
	.word	80483
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,10,166,17,3
	.word	81990
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,10,202,17,3
	.word	75371
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,10,209,17,3
	.word	74996
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,10,216,17,3
	.word	74876
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,10,223,17,3
	.word	78531
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,10,230,17,3
	.word	78421
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,10,237,17,3
	.word	78641
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,10,244,17,3
	.word	81883
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,10,252,17,3
	.word	78753
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,10,132,18,3
	.word	78874
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0_Bits',0,10,139,18,3
	.word	78074
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1_Bits',0,10,146,18,3
	.word	78190
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0_Bits',0,10,153,18,3
	.word	77721
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1_Bits',0,10,160,18,3
	.word	77839
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,10,167,18,3
	.word	84215
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,10,174,18,3
	.word	83827
	.byte	19
	.byte	'Ifx_GTM_DXINCON_Bits',0,10,195,18,3
	.word	97775
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,10,208,18,3
	.word	96693
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,10,218,18,3
	.word	21555
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE_Bits',0,10,232,18,3
	.word	64924
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,10,239,18,3
	.word	64527
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,10,248,18,3
	.word	64709
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL_Bits',0,10,130,19,3
	.word	65482
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,10,140,19,3
	.word	67395
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,10,147,19,3
	.word	65643
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,10,154,19,3
	.word	66279
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,10,164,19,3
	.word	66814
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,10,174,19,3
	.word	67023
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,10,183,19,3
	.word	67225
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,10,193,19,3
	.word	66629
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,10,200,19,3
	.word	65996
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,10,207,19,3
	.word	66514
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,10,214,19,3
	.word	65760
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS_Bits',0,10,224,19,3
	.word	66113
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,10,231,19,3
	.word	65879
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,10,238,19,3
	.word	66399
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,10,133,20,3
	.word	42912
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1_Bits',0,10,166,20,3
	.word	43403
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,10,196,20,3
	.word	44151
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4_Bits',0,10,226,20,3
	.word	44822
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,10,135,21,3
	.word	45493
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9_Bits',0,10,172,21,3
	.word	46345
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,10,186,21,3
	.word	47675
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,10,216,21,3
	.word	47980
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,10,246,21,3
	.word	48678
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,10,141,22,3
	.word	47217
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,10,154,22,3
	.word	93041
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,10,167,22,3
	.word	92499
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL_Bits',0,10,178,22,3
	.word	92734
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,10,190,22,3
	.word	93300
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,10,203,22,3
	.word	93554
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,10,224,22,3
	.word	92092
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,10,237,22,3
	.word	91801
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,10,247,22,3
	.word	21032
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,10,129,23,3
	.word	21241
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,10,136,23,3
	.word	21443
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,10,146,23,3
	.word	20847
	.byte	19
	.byte	'Ifx_GTM_KRST0_Bits',0,10,154,23,3
	.word	95912
	.byte	19
	.byte	'Ifx_GTM_KRST1_Bits',0,10,161,23,3
	.word	95808
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,10,168,23,3
	.word	95702
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,10,191,23,3
	.word	52136
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,10,200,23,3
	.word	52584
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG_Bits',0,10,222,23,3
	.word	88226
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG_Bits',0,10,244,23,3
	.word	88585
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,10,255,23,3
	.word	88052
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,10,145,24,3
	.word	87766
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,10,154,24,3
	.word	89687
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,10,163,24,3
	.word	89218
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,10,172,24,3
	.word	89389
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,10,179,24,3
	.word	89568
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,10,188,24,3
	.word	89052
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,10,195,24,3
	.word	88944
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0_Bits',0,10,202,24,3
	.word	86886
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1_Bits',0,10,209,24,3
	.word	86996
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2_Bits',0,10,216,24,3
	.word	87106
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3_Bits',0,10,223,24,3
	.word	87216
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4_Bits',0,10,230,24,3
	.word	87326
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5_Bits',0,10,237,24,3
	.word	87436
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6_Bits',0,10,244,24,3
	.word	87546
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7_Bits',0,10,251,24,3
	.word	87656
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL_Bits',0,10,133,25,3
	.word	90176
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,10,147,25,3
	.word	90825
	.byte	19
	.byte	'Ifx_GTM_MCS_RST_Bits',0,10,177,25,3
	.word	90349
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,10,195,25,3
	.word	97465
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,10,213,25,3
	.word	97154
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0_Bits',0,10,243,25,3
	.word	24301
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,10,140,26,3
	.word	23811
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON_Bits',0,10,161,26,3
	.word	99977
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON_Bits',0,10,182,26,3
	.word	99573
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON_Bits',0,10,203,26,3
	.word	99237
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0_Bits',0,10,216,26,3
	.word	98226
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1_Bits',0,10,229,26,3
	.word	98454
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2_Bits',0,10,242,26,3
	.word	98682
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3_Bits',0,10,255,26,3
	.word	98912
	.byte	19
	.byte	'Ifx_GTM_OCS_Bits',0,10,137,27,3
	.word	95542
	.byte	19
	.byte	'Ifx_GTM_ODA_Bits',0,10,145,27,3
	.word	95422
	.byte	19
	.byte	'Ifx_GTM_OTBU0T_Bits',0,10,154,27,3
	.word	94361
	.byte	19
	.byte	'Ifx_GTM_OTBU1T_Bits',0,10,163,27,3
	.word	94503
	.byte	19
	.byte	'Ifx_GTM_OTBU2T_Bits',0,10,172,27,3
	.word	94645
	.byte	19
	.byte	'Ifx_GTM_OTSC0_Bits',0,10,189,27,3
	.word	94972
	.byte	19
	.byte	'Ifx_GTM_OTSC1_Bits',0,10,199,27,3
	.word	95266
	.byte	19
	.byte	'Ifx_GTM_OTSS_Bits',0,10,210,27,3
	.word	94787
	.byte	19
	.byte	'Ifx_GTM_REV_Bits',0,10,222,27,3
	.word	20253
	.byte	19
	.byte	'Ifx_GTM_RST_Bits',0,10,229,27,3
	.word	20445
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP_Bits',0,10,236,27,3
	.word	51767
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT_Bits',0,10,243,27,3
	.word	51660
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,10,136,28,3
	.word	49687
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,10,147,28,3
	.word	51426
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,10,158,28,3
	.word	50864
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,10,169,28,3
	.word	51092
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,10,176,28,3
	.word	51310
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,10,187,28,3
	.word	50667
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,10,194,28,3
	.word	50546
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,10,201,28,3
	.word	50418
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,10,222,28,3
	.word	50045
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,10,229,28,3
	.word	23042
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,10,237,28,3
	.word	22905
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,10,244,28,3
	.word	23292
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,10,252,28,3
	.word	23155
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,10,131,29,3
	.word	23542
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,10,139,29,3
	.word	23405
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,10,148,29,3
	.word	22750
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,10,162,29,3
	.word	22480
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,10,169,29,3
	.word	52946
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,10,176,29,3
	.word	53168
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,10,205,29,3
	.word	53766
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,10,212,29,3
	.word	53056
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,10,219,29,3
	.word	54315
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,10,231,29,3
	.word	55252
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,10,238,29,3
	.word	53650
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,10,245,29,3
	.word	53534
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,10,252,29,3
	.word	52736
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,10,131,30,3
	.word	52841
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,10,143,30,3
	.word	54646
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,10,155,30,3
	.word	54896
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,10,162,30,3
	.word	55133
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,10,174,30,3
	.word	54434
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,10,181,30,3
	.word	53273
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,10,190,30,3
	.word	53386
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,10,211,30,3
	.word	55808
	.byte	19
	.byte	'Ifx_GTM_TIM_RST_Bits',0,10,225,30,3
	.word	56160
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,10,232,30,3
	.word	57345
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,10,239,30,3
	.word	57455
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,10,246,30,3
	.word	57565
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,10,136,31,3
	.word	56799
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,10,144,31,3
	.word	57921
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,10,152,31,3
	.word	58068
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,10,159,31,3
	.word	58216
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,10,167,31,3
	.word	57784
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,10,174,31,3
	.word	57125
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,10,181,31,3
	.word	57235
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,10,188,31,3
	.word	57675
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,10,197,31,3
	.word	59002
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,10,211,31,3
	.word	59865
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,10,225,31,3
	.word	60153
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,10,246,31,3
	.word	59158
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,10,141,32,3
	.word	58552
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,10,155,32,3
	.word	59590
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,10,169,32,3
	.word	60441
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,10,183,32,3
	.word	60729
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,10,192,32,3
	.word	61502
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,10,206,32,3
	.word	62365
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,10,220,32,3
	.word	62653
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,10,241,32,3
	.word	61658
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,10,136,33,3
	.word	61052
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,10,150,33,3
	.word	62090
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,10,164,33,3
	.word	62941
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,10,178,33,3
	.word	63229
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,10,192,33,3
	.word	96910
	.byte	19
	.byte	'Ifx_GTM_ACCEN0',0,10,205,33,3
	.word	96653
	.byte	19
	.byte	'Ifx_GTM_ACCEN1',0,10,213,33,3
	.word	96084
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,10,221,33,3
	.word	94145
	.byte	19
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,10,229,33,3
	.word	94321
	.byte	19
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,10,237,33,3
	.word	20807
	.byte	19
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC',0,10,245,33,3
	.word	65317
	.byte	19
	.byte	'Ifx_GTM_ARU_ARU_ACCESS',0,10,253,33,3
	.word	28378
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_H',0,10,133,34,3
	.word	28489
	.byte	19
	.byte	'Ifx_GTM_ARU_DATA_L',0,10,141,34,3
	.word	28600
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,10,149,34,3
	.word	28715
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,10,157,34,3
	.word	29062
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,10,165,34,3
	.word	28831
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,10,173,34,3
	.word	28947
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,10,181,34,3
	.word	29178
	.byte	19
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,10,189,34,3
	.word	29294
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,10,197,34,3
	.word	29629
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,10,205,34,3
	.word	29800
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,10,213,34,3
	.word	29916
	.byte	19
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,10,221,34,3
	.word	29453
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,10,229,34,3
	.word	14911
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,10,237,34,3
	.word	14467
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,10,245,34,3
	.word	14755
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,10,253,34,3
	.word	15919
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,10,133,35,3
	.word	14179
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,10,141,35,3
	.word	16189
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,10,149,35,3
	.word	15199
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,10,157,35,3
	.word	15487
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,10,165,35,3
	.word	12489
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,10,173,35,3
	.word	12600
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,10,181,35,3
	.word	12711
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,10,189,35,3
	.word	10885
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,10,197,35,3
	.word	13214
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,10,205,35,3
	.word	13361
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,10,213,35,3
	.word	13481
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,10,221,35,3
	.word	13066
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,10,229,35,3
	.word	10472
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,10,237,35,3
	.word	11263
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,10,245,35,3
	.word	11468
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,10,253,35,3
	.word	11817
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,10,133,36,3
	.word	12079
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,10,141,36,3
	.word	12267
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,10,149,36,3
	.word	12378
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,10,157,36,3
	.word	12928
	.byte	19
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,10,165,36,3
	.word	42271
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,10,173,36,3
	.word	41334
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,10,181,36,3
	.word	41700
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,10,189,36,3
	.word	41816
	.byte	19
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,10,197,36,3
	.word	40986
	.byte	19
	.byte	'Ifx_GTM_BRC_RST',0,10,205,36,3
	.word	41922
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_ADDR',0,10,213,36,3
	.word	32077
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC0_DEST',0,10,221,36,3
	.word	32650
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_ADDR',0,10,229,36,3
	.word	39368
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC10_DEST',0,10,237,36,3
	.word	39942
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_ADDR',0,10,245,36,3
	.word	40099
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC11_DEST',0,10,253,36,3
	.word	40673
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_ADDR',0,10,133,37,3
	.word	32806
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC1_DEST',0,10,141,37,3
	.word	33379
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_ADDR',0,10,149,37,3
	.word	33535
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC2_DEST',0,10,157,37,3
	.word	34108
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_ADDR',0,10,165,37,3
	.word	34264
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC3_DEST',0,10,173,37,3
	.word	34837
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_ADDR',0,10,181,37,3
	.word	34993
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC4_DEST',0,10,189,37,3
	.word	35566
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_ADDR',0,10,197,37,3
	.word	35722
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC5_DEST',0,10,205,37,3
	.word	36295
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_ADDR',0,10,213,37,3
	.word	36451
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC6_DEST',0,10,221,37,3
	.word	37024
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_ADDR',0,10,229,37,3
	.word	37180
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC7_DEST',0,10,237,37,3
	.word	37753
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_ADDR',0,10,245,37,3
	.word	37909
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC8_DEST',0,10,253,37,3
	.word	38482
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_ADDR',0,10,133,38,3
	.word	38638
	.byte	19
	.byte	'Ifx_GTM_BRC_SRC9_DEST',0,10,141,38,3
	.word	39211
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_MODE',0,10,149,38,3
	.word	22043
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,10,157,38,3
	.word	22251
	.byte	19
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,10,165,38,3
	.word	22370
	.byte	19
	.byte	'Ifx_GTM_CLC',0,10,173,38,3
	.word	91761
	.byte	19
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,10,181,38,3
	.word	28071
	.byte	19
	.byte	'Ifx_GTM_CMP_EN',0,10,189,38,3
	.word	25461
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,10,197,38,3
	.word	26647
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,10,205,38,3
	.word	27255
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,10,213,38,3
	.word	27371
	.byte	19
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,10,221,38,3
	.word	25972
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,10,229,38,3
	.word	30874
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,10,237,38,3
	.word	31067
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,10,245,38,3
	.word	31250
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_EN',0,10,253,38,3
	.word	30521
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,10,133,39,3
	.word	31529
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,10,141,39,3
	.word	31412
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,10,149,39,3
	.word	31713
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,10,157,39,3
	.word	30755
	.byte	19
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,10,165,39,3
	.word	30638
	.byte	19
	.byte	'Ifx_GTM_CTRL',0,10,173,39,3
	.word	20673
	.byte	19
	.byte	'Ifx_GTM_DATAIN',0,10,181,39,3
	.word	98177
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACB',0,10,189,39,3
	.word	84642
	.byte	19
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,10,197,39,3
	.word	69864
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,10,205,39,3
	.word	79082
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,10,213,39,3
	.word	79207
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,10,221,39,3
	.word	75199
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,10,229,39,3
	.word	75322
	.byte	19
	.byte	'Ifx_GTM_DPLL_ADT_S',0,10,237,39,3
	.word	84034
	.byte	19
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,10,245,39,3
	.word	70179
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS',0,10,253,39,3
	.word	70592
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,10,133,40,3
	.word	70865
	.byte	19
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,10,141,40,3
	.word	74836
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT',0,10,149,40,3
	.word	70385
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_2C',0,10,157,40,3
	.word	70728
	.byte	19
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,10,165,40,3
	.word	74644
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,10,173,40,3
	.word	81599
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,10,181,40,3
	.word	81843
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,10,189,40,3
	.word	81485
	.byte	19
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,10,197,40,3
	.word	81721
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM1',0,10,205,40,3
	.word	82546
	.byte	19
	.byte	'Ifx_GTM_DPLL_CNT_NUM2',0,10,213,40,3
	.word	82665
	.byte	19
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE',0,10,221,40,3
	.word	77007
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,10,229,40,3
	.word	68166
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,10,237,40,3
	.word	76515
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,10,245,40,3
	.word	76278
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,10,253,40,3
	.word	68599
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,10,133,41,3
	.word	76740
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,10,141,41,3
	.word	68973
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,10,149,41,3
	.word	69359
	.byte	19
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,10,157,41,3
	.word	69749
	.byte	19
	.byte	'Ifx_GTM_DPLL_DLA',0,10,165,41,3
	.word	77426
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S',0,10,173,41,3
	.word	84154
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,10,181,41,3
	.word	80919
	.byte	19
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,10,189,41,3
	.word	80801
	.byte	19
	.byte	'Ifx_GTM_DPLL_DTA',0,10,197,41,3
	.word	77672
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_S',0,10,206,41,3
	.word	81257
	.byte	19
	.byte	'Ifx_GTM_DPLL_EDT_T',0,10,215,41,3
	.word	81031
	.byte	19
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,10,223,41,3
	.word	74210
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_S',0,10,231,41,3
	.word	78381
	.byte	19
	.byte	'Ifx_GTM_DPLL_FTV_T',0,10,239,41,3
	.word	78034
	.byte	19
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,10,247,41,3
	.word	76035
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,10,255,41,3
	.word	74337
	.byte	19
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,10,136,42,3
	.word	74455
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,10,144,42,3
	.word	72705
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,10,152,42,3
	.word	73357
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,10,160,42,3
	.word	73474
	.byte	19
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,10,168,42,3
	.word	71995
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,10,177,42,3
	.word	81371
	.byte	19
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,10,186,42,3
	.word	81145
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS1',0,10,194,42,3
	.word	82317
	.byte	19
	.byte	'Ifx_GTM_DPLL_MLS2',0,10,202,42,3
	.word	82427
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,10,211,42,3
	.word	79337
	.byte	19
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,10,220,42,3
	.word	79467
	.byte	19
	.byte	'Ifx_GTM_DPLL_NA',0,10,228,42,3
	.word	77555
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S',0,10,236,42,3
	.word	83665
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,10,244,42,3
	.word	79835
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,10,252,42,3
	.word	79963
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T',0,10,132,43,3
	.word	83553
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,10,140,43,3
	.word	79587
	.byte	19
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,10,148,43,3
	.word	79715
	.byte	19
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,10,156,43,3
	.word	71456
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUSC',0,10,164,43,3
	.word	71340
	.byte	19
	.byte	'Ifx_GTM_DPLL_NUTC',0,10,172,43,3
	.word	71114
	.byte	19
	.byte	'Ifx_GTM_DPLL_OSW',0,10,180,43,3
	.word	70030
	.byte	19
	.byte	'Ifx_GTM_DPLL_PDT_T',0,10,188,43,3
	.word	82189
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSA',0,10,196,43,3
	.word	77309
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSAC',0,10,204,43,3
	.word	84404
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSC',0,10,212,43,3
	.word	82993
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_0',0,10,220,43,3
	.word	83329
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSSM_1',0,10,228,43,3
	.word	83441
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTC',0,10,236,43,3
	.word	82883
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_0',0,10,244,43,3
	.word	83105
	.byte	19
	.byte	'Ifx_GTM_DPLL_PSTM_1',0,10,252,43,3
	.word	83217
	.byte	19
	.byte	'Ifx_GTM_DPLL_PVT',0,10,132,44,3
	.word	82773
	.byte	19
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,10,140,44,3
	.word	77201
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,10,148,44,3
	.word	80195
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,10,157,44,3
	.word	80443
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,10,165,44,3
	.word	80079
	.byte	19
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,10,174,44,3
	.word	80319
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S',0,10,182,44,3
	.word	83777
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,10,190,44,3
	.word	80683
	.byte	19
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,10,198,44,3
	.word	80563
	.byte	19
	.byte	'Ifx_GTM_DPLL_SLR',0,10,206,44,3
	.word	82057
	.byte	19
	.byte	'Ifx_GTM_DPLL_STATUS',0,10,214,44,3
	.word	75918
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,10,222,44,3
	.word	75076
	.byte	19
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,10,230,44,3
	.word	74956
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMA',0,10,238,44,3
	.word	78601
	.byte	19
	.byte	'Ifx_GTM_DPLL_THMI',0,10,246,44,3
	.word	78491
	.byte	19
	.byte	'Ifx_GTM_DPLL_THVAL',0,10,254,44,3
	.word	78713
	.byte	19
	.byte	'Ifx_GTM_DPLL_TLR',0,10,134,45,3
	.word	81950
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV',0,10,142,45,3
	.word	78834
	.byte	19
	.byte	'Ifx_GTM_DPLL_TOV_S',0,10,150,45,3
	.word	78957
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_0',0,10,158,45,3
	.word	78150
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_S_1',0,10,166,45,3
	.word	78266
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_0',0,10,174,45,3
	.word	77799
	.byte	19
	.byte	'Ifx_GTM_DPLL_TS_T_1',0,10,182,45,3
	.word	77917
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSAC',0,10,190,45,3
	.word	84285
	.byte	19
	.byte	'Ifx_GTM_DPLL_TSF_S',0,10,198,45,3
	.word	83899
	.byte	19
	.byte	'Ifx_GTM_DXINCON',0,10,206,45,3
	.word	98093
	.byte	19
	.byte	'Ifx_GTM_DXOUTCON',0,10,214,45,3
	.word	96870
	.byte	19
	.byte	'Ifx_GTM_EIRQ_EN',0,10,222,45,3
	.word	21729
	.byte	19
	.byte	'Ifx_GTM_F2A_ENABLE',0,10,230,45,3
	.word	65131
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO',0,10,238,45,3
	.word	64608
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG',0,10,246,45,3
	.word	64826
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_CTRL',0,10,254,45,3
	.word	65603
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN',0,10,134,46,3
	.word	67567
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR',0,10,142,46,3
	.word	65720
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL',0,10,150,46,3
	.word	66359
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN',0,10,158,46,3
	.word	66983
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT',0,10,166,46,3
	.word	67185
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE',0,10,174,46,3
	.word	67355
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY',0,10,182,46,3
	.word	66774
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM',0,10,190,46,3
	.word	66073
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR',0,10,198,46,3
	.word	66589
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR',0,10,206,46,3
	.word	65839
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_STATUS',0,10,214,46,3
	.word	66239
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM',0,10,222,46,3
	.word	65956
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR',0,10,230,46,3
	.word	66474
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_0',0,10,238,46,3
	.word	43363
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_1',0,10,246,46,3
	.word	44111
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_2',0,10,254,46,3
	.word	44782
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_4',0,10,134,47,3
	.word	45453
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_6',0,10,142,47,3
	.word	46305
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_9',0,10,150,47,3
	.word	47177
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,10,158,47,3
	.word	47940
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,10,166,47,3
	.word	48638
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,10,174,47,3
	.word	49336
	.byte	19
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,10,182,47,3
	.word	47635
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,10,190,47,3
	.word	93210
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL',0,10,198,47,3
	.word	92685
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL',0,10,206,47,3
	.word	92893
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0',0,10,214,47,3
	.word	93462
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL',0,10,222,47,3
	.word	93739
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,10,230,47,3
	.word	92393
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,10,238,47,3
	.word	91985
	.byte	19
	.byte	'Ifx_GTM_IRQ_EN',0,10,246,47,3
	.word	21201
	.byte	19
	.byte	'Ifx_GTM_IRQ_FORCINT',0,10,254,47,3
	.word	21403
	.byte	19
	.byte	'Ifx_GTM_IRQ_MODE',0,10,134,48,3
	.word	21515
	.byte	19
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,10,142,48,3
	.word	20992
	.byte	19
	.byte	'Ifx_GTM_KRST0',0,10,150,48,3
	.word	95995
	.byte	19
	.byte	'Ifx_GTM_KRST1',0,10,158,48,3
	.word	95872
	.byte	19
	.byte	'Ifx_GTM_KRSTCLR',0,10,166,48,3
	.word	95768
	.byte	19
	.byte	'Ifx_GTM_MAP_CTRL',0,10,174,48,3
	.word	52535
	.byte	19
	.byte	'Ifx_GTM_MCFG_CTRL',0,10,182,48,3
	.word	52685
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_CTRG',0,10,190,48,3
	.word	88545
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0_STRG',0,10,198,48,3
	.word	88904
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_ACB',0,10,206,48,3
	.word	88186
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,10,214,48,3
	.word	88012
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,10,222,48,3
	.word	89822
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,10,230,48,3
	.word	89349
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,10,238,48,3
	.word	89528
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,10,246,48,3
	.word	89647
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,10,254,48,3
	.word	89178
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_PC',0,10,134,49,3
	.word	89012
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R0',0,10,142,49,3
	.word	86956
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R1',0,10,150,49,3
	.word	87066
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R2',0,10,158,49,3
	.word	87176
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R3',0,10,166,49,3
	.word	87286
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R4',0,10,174,49,3
	.word	87396
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R5',0,10,182,49,3
	.word	87506
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R6',0,10,190,49,3
	.word	87616
	.byte	19
	.byte	'Ifx_GTM_MCS_CH_R7',0,10,198,49,3
	.word	87726
	.byte	19
	.byte	'Ifx_GTM_MCS_CTRL',0,10,206,49,3
	.word	90309
	.byte	19
	.byte	'Ifx_GTM_MCS_ERR',0,10,214,49,3
	.word	91004
	.byte	19
	.byte	'Ifx_GTM_MCS_RST',0,10,222,49,3
	.word	90785
	.byte	19
	.byte	'Ifx_GTM_MCSINTCLR',0,10,230,49,3
	.word	97735
	.byte	19
	.byte	'Ifx_GTM_MCSINTSTAT',0,10,238,49,3
	.word	97425
	.byte	19
	.byte	'Ifx_GTM_MON_ACTIVITY_0',0,10,246,49,3
	.word	24816
	.byte	19
	.byte	'Ifx_GTM_MON_STATUS',0,10,254,49,3
	.word	24261
	.byte	19
	.byte	'Ifx_GTM_MSC0INLEXTCON',0,10,134,50,3
	.word	100274
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INHCON',0,10,142,50,3
	.word	99869
	.byte	19
	.byte	'Ifx_GTM_MSCIN_INLCON',0,10,150,50,3
	.word	99533
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON0',0,10,158,50,3
	.word	98414
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON1',0,10,166,50,3
	.word	98642
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON2',0,10,174,50,3
	.word	98872
	.byte	19
	.byte	'Ifx_GTM_MSCSET_CON3',0,10,182,50,3
	.word	99104
	.byte	19
	.byte	'Ifx_GTM_OCS',0,10,190,50,3
	.word	95662
	.byte	19
	.byte	'Ifx_GTM_ODA',0,10,198,50,3
	.word	95502
	.byte	19
	.byte	'Ifx_GTM_OTBU0T',0,10,206,50,3
	.word	94463
	.byte	19
	.byte	'Ifx_GTM_OTBU1T',0,10,214,50,3
	.word	94605
	.byte	19
	.byte	'Ifx_GTM_OTBU2T',0,10,222,50,3
	.word	94747
	.byte	19
	.byte	'Ifx_GTM_OTSC0',0,10,230,50,3
	.word	95226
	.byte	19
	.byte	'Ifx_GTM_OTSC1',0,10,238,50,3
	.word	95382
	.byte	19
	.byte	'Ifx_GTM_OTSS',0,10,246,50,3
	.word	94932
	.byte	19
	.byte	'Ifx_GTM_REV',0,10,254,50,3
	.word	20405
	.byte	19
	.byte	'Ifx_GTM_RST',0,10,134,51,3
	.word	20507
	.byte	19
	.byte	'Ifx_GTM_SPE_CMP',0,10,142,51,3
	.word	51834
	.byte	19
	.byte	'Ifx_GTM_SPE_CNT',0,10,150,51,3
	.word	51727
	.byte	19
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,10,158,51,3
	.word	50005
	.byte	19
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,10,166,51,3
	.word	51620
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,10,174,51,3
	.word	51052
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,10,182,51,3
	.word	51270
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,10,190,51,3
	.word	51386
	.byte	19
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,10,198,51,3
	.word	50824
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,10,206,51,3
	.word	50627
	.byte	19
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,10,214,51,3
	.word	50497
	.byte	19
	.byte	'Ifx_GTM_SPE_PAT',0,10,222,51,3
	.word	50378
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,10,230,51,3
	.word	23115
	.byte	19
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,10,238,51,3
	.word	23002
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,10,246,51,3
	.word	23365
	.byte	19
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,10,254,51,3
	.word	23252
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,10,134,52,3
	.word	23615
	.byte	19
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,10,142,52,3
	.word	23502
	.byte	19
	.byte	'Ifx_GTM_TBU_CHEN',0,10,150,52,3
	.word	22865
	.byte	19
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,10,158,52,3
	.word	22690
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNT',0,10,166,52,3
	.word	53016
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,10,174,52,3
	.word	53233
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,10,182,52,3
	.word	54275
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,10,190,52,3
	.word	53128
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,10,198,52,3
	.word	54394
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,10,206,52,3
	.word	55469
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,10,214,52,3
	.word	53726
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,10,222,52,3
	.word	53610
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,10,230,52,3
	.word	52801
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,10,238,52,3
	.word	52906
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,10,246,52,3
	.word	54856
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,10,254,52,3
	.word	55093
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,10,134,53,3
	.word	55212
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,10,142,53,3
	.word	54606
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,10,150,53,3
	.word	53346
	.byte	19
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,10,158,53,3
	.word	53494
	.byte	19
	.byte	'Ifx_GTM_TIM_IN_SRC',0,10,166,53,3
	.word	56120
	.byte	19
	.byte	'Ifx_GTM_TIM_RST',0,10,174,53,3
	.word	56363
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM0',0,10,182,53,3
	.word	57415
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CM1',0,10,190,53,3
	.word	57525
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CN0',0,10,198,53,3
	.word	57635
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,10,206,53,3
	.word	57085
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,10,214,53,3
	.word	58028
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,10,222,53,3
	.word	58176
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,10,230,53,3
	.word	58295
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,10,238,53,3
	.word	57881
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR0',0,10,246,53,3
	.word	57195
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_SR1',0,10,254,53,3
	.word	57305
	.byte	19
	.byte	'Ifx_GTM_TOM_CH_STAT',0,10,134,54,3
	.word	57744
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,10,142,54,3
	.word	59118
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,10,150,54,3
	.word	60113
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,10,158,54,3
	.word	60401
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,10,166,54,3
	.word	59550
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,10,174,54,3
	.word	58962
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,10,182,54,3
	.word	59820
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,10,190,54,3
	.word	60689
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,10,198,54,3
	.word	60977
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,10,206,54,3
	.word	61618
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,10,214,54,3
	.word	62613
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,10,222,54,3
	.word	62901
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,10,230,54,3
	.word	62050
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,10,238,54,3
	.word	61462
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,10,246,54,3
	.word	62320
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,10,254,54,3
	.word	63189
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,10,134,55,3
	.word	63477
	.byte	19
	.byte	'Ifx_GTM_TRIGOUT',0,10,142,55,3
	.word	97096
	.byte	10
	.word	65357
	.byte	19
	.byte	'Ifx_GTM_AFD_CH',0,10,157,55,3
	.word	160781
	.byte	10
	.word	16238
	.byte	19
	.byte	'Ifx_GTM_ATOM_AGC',0,10,171,55,3
	.word	160810
	.byte	10
	.word	13530
	.byte	19
	.byte	'Ifx_GTM_ATOM_CH',0,10,197,55,3
	.word	160841
	.byte	10
	.word	30914
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK0_5',0,10,203,55,3
	.word	160871
	.byte	10
	.word	31107
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_6',0,10,209,55,3
	.word	160904
	.byte	10
	.word	31290
	.byte	19
	.byte	'Ifx_GTM_CMU_CLK_7',0,10,215,55,3
	.word	160936
	.byte	10
	.word	31569
	.byte	19
	.byte	'Ifx_GTM_CMU_ECLK',0,10,222,55,3
	.word	160968
	.byte	10
	.word	31753
	.byte	19
	.byte	'Ifx_GTM_CMU_FXCLK',0,10,228,55,3
	.word	160999
	.byte	10
	.word	64648
	.byte	19
	.byte	'Ifx_GTM_F2A_RD_CH',0,10,234,55,3
	.word	161031
	.byte	10
	.word	64866
	.byte	19
	.byte	'Ifx_GTM_F2A_STR_CH',0,10,240,55,3
	.word	161063
	.byte	10
	.word	67607
	.byte	19
	.byte	'Ifx_GTM_FIFO_CH',0,10,132,56,3
	.word	161096
	.byte	10
	.word	93250
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,10,138,56,3
	.word	161126
	.byte	10
	.word	92933
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_DSADC',0,10,147,56,3
	.word	161161
	.byte	10
	.word	93502
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5',0,10,153,56,3
	.word	161198
	.byte	10
	.word	93779
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_PSI5S',0,10,159,56,3
	.word	161234
	.byte	10
	.word	92442
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_T',0,10,165,56,3
	.word	161271
	.byte	10
	.word	92025
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,10,171,56,3
	.word	161304
	.byte	10
	.word	91053
	.byte	19
	.byte	'Ifx_GTM_MCS_CH',0,10,194,56,3
	.word	161339
	.byte	10
	.word	89862
	.byte	19
	.byte	'Ifx_GTM_MCS_CH0',0,10,218,56,3
	.word	161368
	.byte	10
	.word	55509
	.byte	19
	.byte	'Ifx_GTM_TIM_CH',0,10,240,56,3
	.word	161398
	.byte	10
	.word	58335
	.byte	19
	.byte	'Ifx_GTM_TOM_CH',0,10,129,57,3
	.word	161427
	.byte	10
	.word	65432
	.byte	19
	.byte	'Ifx_GTM_AFD',0,10,145,57,3
	.word	161456
	.byte	10
	.word	29956
	.byte	19
	.byte	'Ifx_GTM_ARU',0,10,163,57,3
	.word	161482
	.byte	10
	.word	16495
	.byte	19
	.byte	'Ifx_GTM_ATOM',0,10,184,57,3
	.word	161508
	.byte	10
	.word	42311
	.byte	19
	.byte	'Ifx_GTM_BRC',0,10,219,57,3
	.word	161535
	.byte	10
	.word	22410
	.byte	19
	.byte	'Ifx_GTM_BRIDGE',0,10,227,57,3
	.word	161561
	.byte	10
	.word	28111
	.byte	19
	.byte	'Ifx_GTM_CMP',0,10,238,57,3
	.word	161590
	.byte	10
	.word	31798
	.byte	19
	.byte	'Ifx_GTM_CMU',0,10,251,57,3
	.word	161616
	.byte	10
	.word	84691
	.byte	19
	.byte	'Ifx_GTM_DPLL',0,10,244,58,3
	.word	161642
	.byte	10
	.word	65171
	.byte	19
	.byte	'Ifx_GTM_F2A',0,10,252,58,3
	.word	161669
	.byte	10
	.word	67915
	.byte	19
	.byte	'Ifx_GTM_FIFO',0,10,130,59,3
	.word	161695
	.byte	10
	.word	49376
	.byte	19
	.byte	'Ifx_GTM_ICM',0,10,150,59,3
	.word	161722
	.byte	10
	.word	93831
	.byte	19
	.byte	'Ifx_GTM_INOUTSEL',0,10,164,59,3
	.word	161748
	.byte	10
	.word	91392
	.byte	19
	.byte	'Ifx_GTM_MCS',0,10,182,59,3
	.word	161779
	.byte	10
	.word	24856
	.byte	19
	.byte	'Ifx_GTM_MON',0,10,189,59,3
	.word	161805
	.byte	10
	.word	99909
	.byte	19
	.byte	'Ifx_GTM_MSCIN',0,10,196,59,3
	.word	161831
	.byte	10
	.word	99144
	.byte	19
	.byte	'Ifx_GTM_MSCSET',0,10,205,59,3
	.word	161859
	.byte	10
	.word	51883
	.byte	19
	.byte	'Ifx_GTM_SPE',0,10,222,59,3
	.word	161888
	.byte	10
	.word	23655
	.byte	19
	.byte	'Ifx_GTM_TBU',0,10,234,59,3
	.word	161914
	.byte	10
	.word	56449
	.byte	19
	.byte	'Ifx_GTM_TIM',0,10,128,60,3
	.word	161940
	.byte	10
	.word	63558
	.byte	19
	.byte	'Ifx_GTM_TOM',0,10,177,60,3
	.word	161966
	.byte	10
	.word	100325
	.byte	19
	.byte	'Ifx_GTM',0,10,154,61,3
	.word	161992
	.byte	10
	.word	58335
	.byte	11
	.byte	'IfxGtm_Tom_TGC',0,11,197,2,8,80,14
	.byte	'GLB_CTRL',0
	.word	58962
	.byte	4,2,35,0,14
	.byte	'ACT_TB',0
	.word	59118
	.byte	4,2,35,4,14
	.byte	'FUPD_CTRL',0
	.word	59550
	.byte	4,2,35,8,14
	.byte	'INT_TRIG',0
	.word	59820
	.byte	4,2,35,12,14
	.byte	'xxxCH1',0
	.word	162014
	.byte	48,2,35,16,14
	.byte	'ENDIS_CTRL',0
	.word	60113
	.byte	4,2,35,64,14
	.byte	'ENDIS_STAT',0
	.word	60401
	.byte	4,2,35,68,14
	.byte	'OUTEN_CTRL',0
	.word	60689
	.byte	4,2,35,72,14
	.byte	'OUTEN_STAT',0
	.word	60977
	.byte	4,2,35,76,0,10
	.word	162019
	.byte	19
	.byte	'Ifx_GTM_TOM_TGC',0,11,202,1,40
	.word	162208
	.byte	19
	.byte	'IfxGtm_Atom',0,11,218,1,3
	.word	19441
	.byte	19
	.byte	'IfxGtm_Atom_Ch',0,11,233,1,3
	.word	16812
	.byte	17,11,255,1,9,1,18
	.byte	'IfxGtm_Tim_0',0,0,18
	.byte	'IfxGtm_Tim_1',0,1,18
	.byte	'IfxGtm_Tim_2',0,2,0,19
	.byte	'IfxGtm_Tim',0,11,132,2,3
	.word	162283
	.byte	17,11,136,2,9,1,18
	.byte	'IfxGtm_Tim_Ch_0',0,0,18
	.byte	'IfxGtm_Tim_Ch_1',0,1,18
	.byte	'IfxGtm_Tim_Ch_2',0,2,18
	.byte	'IfxGtm_Tim_Ch_3',0,3,18
	.byte	'IfxGtm_Tim_Ch_4',0,4,18
	.byte	'IfxGtm_Tim_Ch_5',0,5,18
	.byte	'IfxGtm_Tim_Ch_6',0,6,18
	.byte	'IfxGtm_Tim_Ch_7',0,7,0,19
	.byte	'IfxGtm_Tim_Ch',0,11,146,2,3
	.word	162355
	.byte	17,11,150,2,9,1,18
	.byte	'IfxGtm_Tom_0',0,0,18
	.byte	'IfxGtm_Tom_1',0,1,0,19
	.byte	'IfxGtm_Tom',0,11,154,2,3
	.word	162529
	.byte	17,11,158,2,9,1,18
	.byte	'IfxGtm_Tom_Ch_none',0,127,18
	.byte	'IfxGtm_Tom_Ch_0',0,0,18
	.byte	'IfxGtm_Tom_Ch_1',0,1,18
	.byte	'IfxGtm_Tom_Ch_2',0,2,18
	.byte	'IfxGtm_Tom_Ch_3',0,3,18
	.byte	'IfxGtm_Tom_Ch_4',0,4,18
	.byte	'IfxGtm_Tom_Ch_5',0,5,18
	.byte	'IfxGtm_Tom_Ch_6',0,6,18
	.byte	'IfxGtm_Tom_Ch_7',0,7,18
	.byte	'IfxGtm_Tom_Ch_8',0,8,18
	.byte	'IfxGtm_Tom_Ch_9',0,9,18
	.byte	'IfxGtm_Tom_Ch_10',0,10,18
	.byte	'IfxGtm_Tom_Ch_11',0,11,18
	.byte	'IfxGtm_Tom_Ch_12',0,12,18
	.byte	'IfxGtm_Tom_Ch_13',0,13,18
	.byte	'IfxGtm_Tom_Ch_14',0,14,18
	.byte	'IfxGtm_Tom_Ch_15',0,15,0,19
	.byte	'IfxGtm_Tom_Ch',0,11,177,2,3
	.word	162586
	.byte	17,25,67,9,1,18
	.byte	'IfxGtm_IrqMode_level',0,0,18
	.byte	'IfxGtm_IrqMode_pulse',0,1,18
	.byte	'IfxGtm_IrqMode_pulseNotify',0,2,18
	.byte	'IfxGtm_IrqMode_singlePulse',0,3,0,19
	.byte	'IfxGtm_IrqMode',0,25,73,3
	.word	162931
	.byte	17,25,77,9,1,18
	.byte	'IfxGtm_SuspendMode_none',0,0,18
	.byte	'IfxGtm_SuspendMode_hard',0,1,18
	.byte	'IfxGtm_SuspendMode_soft',0,2,0,19
	.byte	'IfxGtm_SuspendMode',0,25,82,3
	.word	163064
	.byte	17,26,69,9,1,18
	.byte	'IfxGtm_Tbu_Ts_0',0,0,18
	.byte	'IfxGtm_Tbu_Ts_1',0,1,18
	.byte	'IfxGtm_Tbu_Ts_2',0,2,0,19
	.byte	'IfxGtm_Tbu_Ts',0,26,74,3
	.word	163175
	.byte	19
	.byte	'IfxGtm_Cmu_Clk',0,15,77,3
	.word	18358
	.byte	19
	.byte	'IfxGtm_Atom_Ch_OutputTrigger',0,9,82,3
	.word	18594
	.byte	19
	.byte	'IfxGtm_Atom_Ch_ResetEvent',0,9,90,3
	.word	18516
	.byte	17,16,62,9,1,18
	.byte	'IfxGtm_ChXSel_a',0,0,18
	.byte	'IfxGtm_ChXSel_b',0,1,18
	.byte	'IfxGtm_ChXSel_c',0,2,18
	.byte	'IfxGtm_ChXSel_d',0,3,18
	.byte	'IfxGtm_ChXSel_e',0,4,18
	.byte	'IfxGtm_ChXSel_f',0,5,18
	.byte	'IfxGtm_ChXSel_g',0,6,18
	.byte	'IfxGtm_ChXSel_h',0,7,18
	.byte	'IfxGtm_ChXSel_i',0,8,18
	.byte	'IfxGtm_ChXSel_j',0,9,18
	.byte	'IfxGtm_ChXSel_k',0,10,18
	.byte	'IfxGtm_ChXSel_l',0,11,18
	.byte	'IfxGtm_ChXSel_m',0,12,18
	.byte	'IfxGtm_ChXSel_n',0,13,18
	.byte	'IfxGtm_ChXSel_o',0,14,18
	.byte	'IfxGtm_ChXSel_p',0,15,0,19
	.byte	'IfxGtm_ChXSel',0,16,83,3
	.word	163351
	.byte	19
	.byte	'IfxGtm_ToutSel',0,16,93,3
	.word	19512
	.byte	25
	.word	19869
	.byte	19
	.byte	'IfxGtm_Atom_ToutMap',0,16,113,3
	.word	163690
	.byte	31,16,119,15,20,14
	.byte	'tom',0
	.word	162529
	.byte	1,2,35,0,14
	.byte	'channel',0
	.word	162586
	.byte	1,2,35,1,14
	.byte	'toutSel',0
	.word	19512
	.byte	1,2,35,2,14
	.byte	'toutn',0
	.word	8967
	.byte	4,2,35,4,14
	.byte	'pin',0
	.word	19613
	.byte	8,2,35,8,14
	.byte	'select',0
	.word	19652
	.byte	1,2,35,16,0,25
	.word	163723
	.byte	19
	.byte	'IfxGtm_Tom_ToutMap',0,16,127,3
	.word	163820
	.byte	19
	.byte	'IfxGtm_Atom_Timer_Base',0,17,112,3
	.word	20170
	.byte	19
	.byte	'IfxGtm_Atom_Timer',0,17,133,1,3
	.word	102190
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl',0,18,115,36
	.word	103147
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl_Base',0,18,142,1,3
	.word	102760
	.byte	19
	.byte	'IfxGtm_Atom_PwmHl_Config',0,18,159,1,3
	.word	103414
	.byte	31,18,163,1,9,16,14
	.byte	'mode',0
	.word	102564
	.byte	1,2,35,0,14
	.byte	'inverted',0
	.word	520
	.byte	1,2,35,1,14
	.byte	'update',0
	.word	102971
	.byte	4,2,35,4,14
	.byte	'updateAndShift',0
	.word	103028
	.byte	4,2,35,8,14
	.byte	'updatePulse',0
	.word	103095
	.byte	4,2,35,12,0,19
	.byte	'IfxGtm_Atom_PwmHl_Mode',0,18,170,1,3
	.word	164002
	.byte	15,80
	.word	164002
	.byte	16,4,0
.L553:
	.byte	25
	.word	164134
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L162:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,53,0,73,19,0,0,11,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,13,23,1,58,15,59,15,57
	.byte	15,11,15,0,0,14,13,0,3,8,73,19,11,15,56,9,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,21,1,73,19,54,15,39
	.byte	12,0,0,21,5,0,73,19,0,0,22,21,1,54,15,39,12,0,0,23,13,0,73,19,11,15,56,9,0,0,24,11,1,0,0,25,38,0,73,19
	.byte	0,0,26,46,1,3,8,54,15,39,12,63,12,60,12,0,0,27,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,28,5,0,3,8,73
	.byte	19,0,0,29,46,1,49,19,0,0,30,5,0,49,19,0,0,31,19,1,58,15,59,15,57,15,11,15,0,0,32,46,1,3,8,58,15,59,15
	.byte	57,15,54,15,39,12,63,12,60,12,0,0,33,29,1,49,19,0,0,34,11,0,49,19,0,0,35,46,1,3,8,58,15,59,15,57,15,73
	.byte	19,54,15,39,12,63,12,60,12,0,0,36,5,0,58,15,59,15,57,15,73,19,0,0,37,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	63,12,60,12,0,0,38,21,0,54,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L163:
	.word	.L651-.L650
.L650:
	.half	3
	.word	.L653-.L652
.L652:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer',0
	.byte	'C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxSrc.h',0,2,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxPort.h',0,4,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxStdIf_Timer.h',0,5,0,0
	.byte	'IfxStdIf.h',0,5,0,0
	.byte	'IfxGtm_Atom.h',0,6,0,0
	.byte	'IfxGtm_regdef.h',0,3,0,0
	.byte	'IfxGtm_cfg.h',0,7,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxStdIf_PwmHl.h',0,5,0,0
	.byte	'IfxGtm_Cmu.h',0,6,0,0
	.byte	'IfxGtm_PinMap.h',0,8,0,0
	.byte	'IfxGtm_Atom_Timer.h',0,9,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.h',0,0,0,0
	.byte	'string.h',0,10,0,0
	.byte	'stddef.h',0,10,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,7,0,0
	.byte	'IfxScu_cfg.h',0,7,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxGtm.h',0,6,0,0
	.byte	'IfxGtm_Tbu.h',0,6,0,0,0
.L653:
.L651:
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_info'
.L164:
	.word	480
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L167,.L166
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_init',0,1,169,1,9
	.word	.L336
	.byte	1,1,1
	.word	.L101,.L337,.L100
	.byte	4
	.byte	'driver',0,1,169,1,51
	.word	.L338,.L339
	.byte	4
	.byte	'config',0,1,169,1,91
	.word	.L340,.L341
	.byte	5
	.word	.L101,.L337
	.byte	6
	.byte	'channelMask',0,1,172,1,24
	.word	.L342,.L343
	.byte	6
	.byte	'channelsMask',0,1,173,1,24
	.word	.L342,.L344
	.byte	6
	.byte	'channelIndex',0,1,174,1,24
	.word	.L345,.L346
	.byte	6
	.byte	'timer',0,1,176,1,24
	.word	.L347,.L348
	.byte	5
	.word	.L349,.L337
	.byte	6
	.byte	'clock',0,1,195,1,20
	.word	.L350,.L351
	.byte	5
	.word	.L6,.L12
	.byte	6
	.byte	'channel',0,1,199,1,24
	.word	.L352,.L353
	.byte	0,5
	.word	.L354,.L337
	.byte	6
	.byte	'tOn',0,1,245,1,20
	.word	.L355,.L356
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_line'
.L166:
	.word	.L655-.L654
.L654:
	.half	3
	.word	.L657-.L656
.L656:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L657:
	.byte	5,37,7,0,5,2
	.word	.L101
	.byte	3,177,1,1,5,9,3,119,1,5,37,9
	.half	.L558-.L101
	.byte	3,4,1,5,38,3,3,1,5,35,9
	.half	.L560-.L558
	.byte	3,2,1,5,37,9
	.half	.L658-.L560
	.byte	3,2,1,5,35,3,127,1,9
	.half	.L561-.L658
	.byte	3,1,1,9
	.half	.L659-.L561
	.byte	3,1,1,5,9,9
	.half	.L660-.L659
	.byte	3,116,1,5,49,9
	.half	.L555-.L660
	.byte	3,13,1,5,35,9
	.half	.L562-.L555
	.byte	1,5,49,9
	.half	.L661-.L562
	.byte	3,1,1,5,35,9
	.half	.L662-.L661
	.byte	1,5,49,9
	.half	.L663-.L662
	.byte	3,1,1,5,35,9
	.half	.L664-.L663
	.byte	1,5,55,9
	.half	.L665-.L664
	.byte	3,2,1,9
	.half	.L556-.L665
	.byte	3,1,1,5,27,9
	.half	.L564-.L556
	.byte	3,2,1,5,45,9
	.half	.L666-.L564
	.byte	1,5,38,9
	.half	.L667-.L666
	.byte	1,5,18,9
	.half	.L668-.L667
	.byte	1,5,53,9
	.half	.L669-.L668
	.byte	3,2,1,5,18,9
	.half	.L670-.L669
	.byte	1,5,63,9
	.half	.L349-.L670
	.byte	3,4,1,5,76,9
	.half	.L671-.L349
	.byte	1,5,26,9
	.half	.L565-.L671
	.byte	1,5,84,3,2,1,5,23,9
	.half	.L566-.L565
	.byte	1,5,68,1,5,43,9
	.half	.L6-.L566
	.byte	3,4,1,5,37,9
	.half	.L672-.L6
	.byte	3,2,1,5,48,9
	.half	.L673-.L672
	.byte	3,126,1,5,62,9
	.half	.L674-.L673
	.byte	1,5,35,9
	.half	.L568-.L674
	.byte	3,1,1,5,39,9
	.half	.L675-.L568
	.byte	3,1,1,5,25,9
	.half	.L676-.L675
	.byte	3,5,1,5,39,9
	.half	.L677-.L676
	.byte	3,123,1,5,49,3,5,1,5,34,9
	.half	.L570-.L677
	.byte	3,124,1,5,13,9
	.half	.L678-.L570
	.byte	3,4,1,5,24,7,9
	.half	.L679-.L678
	.byte	3,191,127,1,5,13,9
	.half	.L8-.L679
	.byte	3,195,0,1,5,47,3,125,1,5,50,9
	.half	.L572-.L8
	.byte	3,3,1,5,13,9
	.half	.L571-.L572
	.byte	1,5,19,9
	.half	.L569-.L571
	.byte	3,3,1,5,9,9
	.half	.L680-.L569
	.byte	1,5,45,7,9
	.half	.L681-.L680
	.byte	3,2,1,5,29,9
	.half	.L682-.L681
	.byte	3,1,1,5,54,9
	.half	.L683-.L682
	.byte	1,5,50,9
	.half	.L684-.L683
	.byte	3,127,1,5,54,9
	.half	.L685-.L684
	.byte	3,1,1,5,45,9
	.half	.L9-.L685
	.byte	3,4,1,5,39,9
	.half	.L686-.L9
	.byte	3,2,1,5,52,9
	.half	.L687-.L686
	.byte	3,126,1,5,66,9
	.half	.L688-.L687
	.byte	1,5,37,9
	.half	.L573-.L688
	.byte	3,1,1,5,41,9
	.half	.L689-.L573
	.byte	3,1,1,5,82,3,103,1,5,41,9
	.half	.L690-.L689
	.byte	3,25,1,5,61,3,6,1,5,36,9
	.half	.L575-.L690
	.byte	3,123,1,5,25,3,4,1,5,13,9
	.half	.L576-.L575
	.byte	1,5,24,7,9
	.half	.L691-.L576
	.byte	3,172,127,1,5,13,9
	.half	.L10-.L691
	.byte	3,215,0,1,5,47,3,124,1,5,50,9
	.half	.L577-.L10
	.byte	3,4,1,5,13,9
	.half	.L692-.L577
	.byte	1,5,19,9
	.half	.L574-.L692
	.byte	3,3,1,5,9,9
	.half	.L693-.L574
	.byte	1,5,45,7,9
	.half	.L694-.L693
	.byte	3,2,1,5,29,9
	.half	.L695-.L694
	.byte	3,1,1,5,54,9
	.half	.L696-.L695
	.byte	1,5,52,9
	.half	.L697-.L696
	.byte	3,127,1,5,54,9
	.half	.L698-.L697
	.byte	3,1,1,5,82,9
	.half	.L12-.L698
	.byte	3,89,1,5,55,9
	.half	.L5-.L12
	.byte	1,5,68,9
	.half	.L699-.L5
	.byte	1,5,72,7,9
	.half	.L700-.L699
	.byte	3,43,1,5,48,1,5,69,9
	.half	.L578-.L700
	.byte	1,5,72,9
	.half	.L701-.L578
	.byte	1,5,66,9
	.half	.L579-.L701
	.byte	3,1,1,5,42,1,5,63,9
	.half	.L580-.L579
	.byte	1,5,66,9
	.half	.L702-.L580
	.byte	1,5,39,9
	.half	.L581-.L702
	.byte	3,2,1,5,62,9
	.half	.L354-.L581
	.byte	3,2,1,5,60,9
	.half	.L703-.L354
	.byte	1,5,41,9
	.half	.L704-.L703
	.byte	3,1,1,5,71,9
	.half	.L584-.L704
	.byte	3,3,1,5,50,1,5,77,9
	.half	.L705-.L584
	.byte	1,5,74,9
	.half	.L585-.L705
	.byte	1,5,77,1,5,35,9
	.half	.L586-.L585
	.byte	3,1,1,5,57,9
	.half	.L706-.L586
	.byte	3,1,1,5,50,1,5,77,9
	.half	.L707-.L706
	.byte	1,5,74,9
	.half	.L587-.L707
	.byte	1,5,77,1,5,23,9
	.half	.L588-.L587
	.byte	3,4,1,5,84,1,5,68,9
	.half	.L567-.L588
	.byte	1,5,62,9
	.half	.L15-.L567
	.byte	3,2,1,5,64,9
	.half	.L590-.L15
	.byte	3,1,1,5,82,9
	.half	.L592-.L590
	.byte	3,125,1,5,55,9
	.half	.L14-.L592
	.byte	1,5,68,9
	.half	.L708-.L14
	.byte	1,5,12,7,9
	.half	.L709-.L708
	.byte	3,6,1,5,1,3,1,1,7,9
	.half	.L168-.L709
	.byte	0,1,1
.L655:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_ranges'
.L167:
	.word	-1,.L101,0,.L168-.L101,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_info'
.L169:
	.word	278
	.half	3
	.word	.L170
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L172,.L171
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_initConfig',0,1,137,2,6,1,1,1
	.word	.L103,.L357,.L102
	.byte	4
	.byte	'config',0,1,137,2,61
	.word	.L358,.L359
	.byte	5
	.word	.L103,.L357
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_line'
.L171:
	.word	.L711-.L710
.L710:
	.half	3
	.word	.L713-.L712
.L712:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L713:
	.byte	5,6,7,0,5,2
	.word	.L103
	.byte	3,136,2,1,5,38,9
	.half	.L594-.L103
	.byte	3,2,1,5,24,9
	.half	.L593-.L594
	.byte	3,1,1,5,22,9
	.half	.L714-.L593
	.byte	1,5,24,9
	.half	.L715-.L714
	.byte	3,1,1,5,22,1,9
	.half	.L716-.L715
	.byte	3,1,1,9
	.half	.L717-.L716
	.byte	3,1,1,5,24,9
	.half	.L718-.L717
	.byte	3,1,1,5,22,1,5,1,9
	.half	.L719-.L718
	.byte	3,1,1,7,9
	.half	.L173-.L719
	.byte	0,1,1
.L711:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_ranges'
.L172:
	.word	-1,.L103,0,.L173-.L103,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_info'
.L174:
	.word	279
	.half	3
	.word	.L175
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L177,.L176
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_getDeadtime',0,1,151,1,9
	.word	.L360
	.byte	1,1,1
	.word	.L93,.L361,.L92
	.byte	4
	.byte	'driver',0,1,151,1,58
	.word	.L338,.L362
	.byte	5
	.word	.L363
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_abbrev'
.L175:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_line'
.L176:
	.word	.L721-.L720
.L720:
	.half	3
	.word	.L723-.L722
.L722:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L723:
	.byte	5,78,7,0,5,2
	.word	.L93
	.byte	3,152,1,1,4,2,5,12,9
	.half	.L724-.L93
	.byte	3,159,2,1,4,1,5,1,9
	.half	.L554-.L724
	.byte	3,226,125,1,7,9
	.half	.L178-.L554
	.byte	0,1,1
.L721:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_ranges'
.L177:
	.word	-1,.L93,0,.L178-.L93,0,0
.L363:
	.word	-1,.L93,0,.L361-.L93,-1,.L95,0,.L288-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_info'
.L179:
	.word	283
	.half	3
	.word	.L180
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L182,.L181
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_getMinPulse',0,1,157,1,9
	.word	.L360
	.byte	1,1,1
	.word	.L97,.L364,.L96
	.byte	4
	.byte	'driver',0,1,157,1,58
	.word	.L338,.L365
	.byte	5
	.word	.L97,.L364
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_abbrev'
.L180:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_line'
.L181:
	.word	.L726-.L725
.L725:
	.half	3
	.word	.L728-.L727
.L727:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L728:
	.byte	5,78,7,0,5,2
	.word	.L97
	.byte	3,158,1,1,5,102,9
	.half	.L729-.L97
	.byte	1,5,88,9
	.half	.L730-.L729
	.byte	1,4,2,5,12,9
	.half	.L731-.L730
	.byte	3,153,2,1,4,1,5,1,9
	.half	.L732-.L731
	.byte	3,232,125,1,7,9
	.half	.L183-.L732
	.byte	0,1,1
.L726:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_ranges'
.L182:
	.word	-1,.L97,0,.L183-.L97,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_info'
.L184:
	.word	279
	.half	3
	.word	.L185
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L187,.L186
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_getMode',0,1,163,1,14
	.word	.L366
	.byte	1,1,1
	.word	.L99,.L367,.L98
	.byte	4
	.byte	'driver',0,1,163,1,59
	.word	.L338,.L368
	.byte	5
	.word	.L99,.L367
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_abbrev'
.L185:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_line'
.L186:
	.word	.L734-.L733
.L733:
	.half	3
	.word	.L736-.L735
.L735:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L736:
	.byte	5,24,7,0,5,2
	.word	.L99
	.byte	3,164,1,1,5,1,9
	.half	.L737-.L99
	.byte	3,1,1,7,9
	.half	.L188-.L737
	.byte	0,1,1
.L734:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_ranges'
.L187:
	.word	-1,.L99,0,.L188-.L99,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_info'
.L189:
	.word	301
	.half	3
	.word	.L190
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L192,.L191
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setDeadtime',0,1,148,2,9
	.word	.L336
	.byte	1,1,1
	.word	.L105,.L369,.L104
	.byte	4
	.byte	'driver',0,1,148,2,58
	.word	.L338,.L370
	.byte	4
	.byte	'deadtime',0,1,148,2,74
	.word	.L360,.L371
	.byte	5
	.word	.L372
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_abbrev'
.L190:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_line'
.L191:
	.word	.L739-.L738
.L738:
	.half	3
	.word	.L741-.L740
.L740:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L741:
	.byte	5,57,7,0,5,2
	.word	.L105
	.byte	3,149,2,1,5,27,9
	.half	.L742-.L105
	.byte	3,1,1,5,12,9
	.half	.L595-.L742
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L193-.L595
	.byte	0,1,1
.L739:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_ranges'
.L192:
	.word	-1,.L105,0,.L193-.L105,0,0
.L372:
	.word	-1,.L105,0,.L369-.L105,-1,.L107,0,.L293-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_info'
.L194:
	.word	305
	.half	3
	.word	.L195
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L197,.L196
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setMinPulse',0,1,157,2,9
	.word	.L336
	.byte	1,1,1
	.word	.L109,.L373,.L108
	.byte	4
	.byte	'driver',0,1,157,2,58
	.word	.L338,.L374
	.byte	4
	.byte	'minPulse',0,1,157,2,74
	.word	.L360,.L375
	.byte	5
	.word	.L109,.L373
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_abbrev'
.L195:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_line'
.L196:
	.word	.L744-.L743
.L743:
	.half	3
	.word	.L746-.L745
.L745:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L746:
	.byte	5,57,7,0,5,2
	.word	.L109
	.byte	3,158,2,1,5,49,9
	.half	.L596-.L109
	.byte	3,2,1,5,12,9
	.half	.L747-.L596
	.byte	3,3,1,5,35,9
	.half	.L748-.L747
	.byte	3,125,1,5,27,1,5,48,9
	.half	.L749-.L748
	.byte	3,1,1,5,56,9
	.half	.L750-.L749
	.byte	1,5,27,1,5,1,9
	.half	.L751-.L750
	.byte	3,3,1,7,9
	.half	.L198-.L751
	.byte	0,1,1
.L744:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_ranges'
.L197:
	.word	-1,.L109,0,.L198-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_info'
.L199:
	.word	399
	.half	3
	.word	.L200
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L202,.L201
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setMode',0,1,168,2,9
	.word	.L336
	.byte	1,1,1
	.word	.L111,.L376,.L110
	.byte	4
	.byte	'driver',0,1,168,2,54
	.word	.L338,.L377
	.byte	4
	.byte	'mode',0,1,168,2,75
	.word	.L366,.L378
	.byte	5
	.word	.L379
	.byte	6
	.byte	'result',0,1,170,2,29
	.word	.L336,.L380
	.byte	6
	.byte	'base',0,1,171,2,29
	.word	.L381,.L382
	.byte	7
	.word	.L383,.L19
	.byte	6
	.byte	'channelIndex',0,1,214,2,20
	.word	.L345,.L384
	.byte	7
	.word	.L26,.L385
	.byte	6
	.byte	'channel',0,1,218,2,32
	.word	.L352,.L386
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_abbrev'
.L200:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_line'
.L201:
	.word	.L753-.L752
.L752:
	.half	3
	.word	.L755-.L754
.L754:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L755:
	.byte	5,9,7,0,5,2
	.word	.L111
	.byte	3,167,2,1,5,13,9
	.half	.L598-.L111
	.byte	3,5,1,5,36,9
	.half	.L756-.L598
	.byte	3,125,1,5,5,9
	.half	.L599-.L756
	.byte	3,3,1,5,13,7,9
	.half	.L757-.L599
	.byte	3,2,1,5,67,7,9
	.half	.L758-.L757
	.byte	1,5,72,9
	.half	.L759-.L758
	.byte	1,5,80,9
	.half	.L760-.L759
	.byte	1,5,20,7,9
	.half	.L20-.L760
	.byte	3,2,1,9
	.half	.L761-.L20
	.byte	3,1,1,5,32,9
	.half	.L21-.L761
	.byte	3,5,1,5,58,9
	.half	.L762-.L21
	.byte	3,1,1,5,63,9
	.half	.L763-.L762
	.byte	1,5,32,9
	.half	.L597-.L763
	.byte	1,5,63,9
	.half	.L764-.L597
	.byte	3,1,1,5,32,9
	.half	.L765-.L764
	.byte	1,5,63,9
	.half	.L766-.L765
	.byte	3,1,1,5,32,9
	.half	.L767-.L766
	.byte	1,5,9,9
	.half	.L768-.L767
	.byte	3,2,1,5,59,7,9
	.half	.L769-.L768
	.byte	3,2,1,5,28,9
	.half	.L770-.L769
	.byte	1,5,17,9
	.half	.L22-.L770
	.byte	3,6,1,5,9,9
	.half	.L771-.L22
	.byte	1,5,39,7,9
	.half	.L772-.L771
	.byte	3,2,1,5,31,9
	.half	.L773-.L772
	.byte	1,5,39,9
	.half	.L774-.L773
	.byte	3,1,1,5,46,9
	.half	.L775-.L774
	.byte	3,127,1,5,39,9
	.half	.L23-.L775
	.byte	3,5,1,5,31,9
	.half	.L776-.L23
	.byte	1,5,39,9
	.half	.L777-.L776
	.byte	3,1,1,5,31,9
	.half	.L24-.L777
	.byte	1,9
	.half	.L383-.L24
	.byte	3,12,1,5,92,1,5,76,9
	.half	.L600-.L383
	.byte	1,5,74,9
	.half	.L26-.L600
	.byte	3,5,1,5,38,9
	.half	.L778-.L26
	.byte	3,127,1,5,70,9
	.half	.L601-.L778
	.byte	3,1,1,5,27,7,9
	.half	.L779-.L601
	.byte	3,1,1,5,21,9
	.half	.L780-.L779
	.byte	3,1,1,5,71,9
	.half	.L27-.L780
	.byte	1,5,24,9
	.half	.L781-.L27
	.byte	3,176,126,1,5,53,9
	.half	.L28-.L781
	.byte	3,206,1,1,5,21,9
	.half	.L782-.L28
	.byte	3,1,1,5,74,9
	.half	.L602-.L782
	.byte	3,4,1,5,40,9
	.half	.L783-.L602
	.byte	3,127,1,5,90,9
	.half	.L603-.L783
	.byte	3,119,1,5,70,9
	.half	.L784-.L603
	.byte	3,10,1,5,71,7,9
	.half	.L785-.L784
	.byte	3,1,1,5,24,9
	.half	.L786-.L785
	.byte	3,172,126,1,5,21,3,213,1,1,5,27,9
	.half	.L29-.L786
	.byte	1,5,53,9
	.half	.L30-.L29
	.byte	3,126,1,5,21,9
	.half	.L787-.L30
	.byte	3,1,1,5,90,9
	.half	.L385-.L787
	.byte	3,117,1,5,63,9
	.half	.L25-.L385
	.byte	1,5,76,9
	.half	.L788-.L25
	.byte	1,5,5,7,9
	.half	.L19-.L788
	.byte	3,17,1,5,1,3,1,1,7,9
	.half	.L203-.L19
	.byte	0,1,1
.L753:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_ranges'
.L202:
	.word	-1,.L111,0,.L203-.L111,0,0
.L379:
	.word	-1,.L111,0,.L376-.L111,-1,.L113,0,.L298-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_info'
.L204:
	.word	294
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L207,.L206
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setOnTime',0,1,237,2,6,1,1,1
	.word	.L115,.L387,.L114
	.byte	4
	.byte	'driver',0,1,237,2,53
	.word	.L338,.L388
	.byte	4
	.byte	'tOn',0,1,237,2,77
	.word	.L389,.L390
	.byte	5
	.word	.L115,.L387
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_line'
.L206:
	.word	.L790-.L789
.L789:
	.half	3
	.word	.L792-.L791
.L791:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L792:
	.byte	5,11,7,0,5,2
	.word	.L115
	.byte	3,238,2,1,5,28,9
	.half	.L793-.L115
	.byte	1,5,1,7,9
	.half	.L208-.L793
	.byte	3,1,0,1,1
.L790:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_ranges'
.L207:
	.word	-1,.L115,0,.L208-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_info'
.L209:
	.word	321
	.half	3
	.word	.L210
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L212,.L211
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setOnTimeAndShift',0,1,243,2,6,1,1,1
	.word	.L117,.L391,.L116
	.byte	4
	.byte	'driver',0,1,243,2,61
	.word	.L338,.L392
	.byte	4
	.byte	'tOn',0,1,243,2,85
	.word	.L389,.L393
	.byte	4
	.byte	'shift',0,1,243,2,106
	.word	.L389,.L394
	.byte	5
	.word	.L117,.L391
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_abbrev'
.L210:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_line'
.L211:
	.word	.L795-.L794
.L794:
	.half	3
	.word	.L797-.L796
.L796:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L797:
	.byte	5,11,7,0,5,2
	.word	.L117
	.byte	3,244,2,1,5,41,9
	.half	.L798-.L117
	.byte	1,5,1,7,9
	.half	.L213-.L798
	.byte	3,1,0,1,1
.L795:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_ranges'
.L212:
	.word	-1,.L117,0,.L213-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_info'
.L214:
	.word	313
	.half	3
	.word	.L215
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L217,.L216
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setPulse',0,1,249,2,6,1,1,1
	.word	.L119,.L395,.L118
	.byte	4
	.byte	'driver',0,1,249,2,52
	.word	.L338,.L396
	.byte	4
	.byte	'tOn',0,1,249,2,69
	.word	.L397,.L398
	.byte	4
	.byte	'offset',0,1,249,2,83
	.word	.L397,.L399
	.byte	5
	.word	.L119,.L395
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_abbrev'
.L215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_line'
.L216:
	.word	.L800-.L799
.L799:
	.half	3
	.word	.L802-.L801
.L801:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L802:
	.byte	5,11,7,0,5,2
	.word	.L119
	.byte	3,250,2,1,5,38,9
	.half	.L803-.L119
	.byte	1,5,1,7,9
	.half	.L218-.L803
	.byte	3,1,0,1,1
.L800:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_ranges'
.L217:
	.word	-1,.L119,0,.L218-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_info'
.L219:
	.word	324
	.half	3
	.word	.L220
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L222,.L221
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_setupChannels',0,1,255,2,6,1,1,1
	.word	.L121,.L400,.L120
	.byte	4
	.byte	'driver',0,1,255,2,57
	.word	.L338,.L401
	.byte	4
	.byte	'activeCh',0,1,255,2,74
	.word	.L402,.L403
	.byte	4
	.byte	'stuckSt',0,1,255,2,93
	.word	.L402,.L404
	.byte	5
	.word	.L121,.L400
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_abbrev'
.L220:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_line'
.L221:
	.word	.L805-.L804
.L804:
	.half	3
	.word	.L807-.L806
.L806:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L807:
	.byte	5,1,7,0,5,2
	.word	.L121
	.byte	3,132,3,1,7,9
	.half	.L223-.L121
	.byte	0,1,1
.L805:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_ranges'
.L222:
	.word	-1,.L121,0,.L223-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_info'
.L224:
	.word	305
	.half	3
	.word	.L225
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L227,.L226
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_stdIfPwmHlInit',0,1,136,3,9
	.word	.L336
	.byte	1,1,1
	.word	.L123,.L405,.L122
	.byte	4
	.byte	'stdif',0,1,136,3,58
	.word	.L406,.L407
	.byte	4
	.byte	'driver',0,1,136,3,84
	.word	.L338,.L408
	.byte	5
	.word	.L123,.L405
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_abbrev'
.L225:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_line'
.L226:
	.word	.L809-.L808
.L808:
	.half	3
	.word	.L811-.L810
.L810:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L811:
	.byte	5,19,7,0,5,2
	.word	.L123
	.byte	3,138,3,1,5,9,3,125,1,5,22,9
	.half	.L605-.L123
	.byte	3,3,1,5,9,3,125,1,5,22,9
	.half	.L606-.L605
	.byte	3,3,1,5,33,9
	.half	.L604-.L606
	.byte	3,4,1,5,35,9
	.half	.L812-.L604
	.byte	3,1,1,5,33,9
	.half	.L813-.L812
	.byte	1,5,35,9
	.half	.L814-.L813
	.byte	3,1,1,5,33,9
	.half	.L815-.L814
	.byte	1,5,35,9
	.half	.L816-.L815
	.byte	3,1,1,5,33,9
	.half	.L817-.L816
	.byte	1,5,35,9
	.half	.L818-.L817
	.byte	3,1,1,5,33,9
	.half	.L819-.L818
	.byte	1,5,35,9
	.half	.L820-.L819
	.byte	3,1,1,5,33,9
	.half	.L821-.L820
	.byte	1,5,35,9
	.half	.L822-.L821
	.byte	3,1,1,5,33,9
	.half	.L823-.L822
	.byte	1,5,35,9
	.half	.L824-.L823
	.byte	3,1,1,5,33,9
	.half	.L825-.L824
	.byte	1,5,35,9
	.half	.L826-.L825
	.byte	3,1,1,5,33,9
	.half	.L827-.L826
	.byte	1,5,35,9
	.half	.L828-.L827
	.byte	3,1,1,5,33,9
	.half	.L829-.L828
	.byte	1,5,35,9
	.half	.L830-.L829
	.byte	3,1,1,5,33,9
	.half	.L831-.L830
	.byte	1,5,44,9
	.half	.L832-.L831
	.byte	3,1,1,5,59,9
	.half	.L833-.L832
	.byte	1,5,12,9
	.half	.L834-.L833
	.byte	3,3,1,5,1,3,1,1,7,9
	.half	.L228-.L834
	.byte	0,1,1
.L809:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_ranges'
.L227:
	.word	-1,.L123,0,.L228-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_info'
.L229:
	.word	320
	.half	3
	.word	.L230
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L232,.L231
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updateAndShiftOff',0,1,161,3,17,1,1
	.word	.L125,.L409,.L124
	.byte	4
	.byte	'driver',0,1,161,3,72
	.word	.L338,.L410
	.byte	4
	.byte	'tOn',0,1,161,3,96
	.word	.L389,.L411
	.byte	4
	.byte	'shift',0,1,161,3,117
	.word	.L389,.L412
	.byte	5
	.word	.L125,.L409
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_abbrev'
.L230:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_line'
.L231:
	.word	.L836-.L835
.L835:
	.half	3
	.word	.L838-.L837
.L837:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L838:
	.byte	5,41,7,0,5,2
	.word	.L125
	.byte	3,162,3,1,5,1,9
	.half	.L233-.L125
	.byte	3,3,0,1,1
.L836:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_ranges'
.L232:
	.word	-1,.L125,0,.L233-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_info'
.L234:
	.word	591
	.half	3
	.word	.L235
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L237,.L236
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updateCenterAligned',0,1,169,3,17,1,1
	.word	.L127,.L413,.L126
	.byte	4
	.byte	'driver',0,1,169,3,74
	.word	.L338,.L414
	.byte	4
	.byte	'tOn',0,1,169,3,98
	.word	.L389,.L415
	.byte	5
	.word	.L416
	.byte	6
	.byte	'channelIndex',0,1,171,3,20
	.word	.L336,.L417
	.byte	6
	.byte	'period',0,1,172,3,20
	.word	.L345,.L418
	.byte	6
	.byte	'deadtime',0,1,173,3,20
	.word	.L345,.L419
	.byte	5
	.word	.L420
	.byte	6
	.byte	'x',0,1,179,3,24
	.word	.L345,.L421
	.byte	6
	.byte	'cm0',0,1,180,3,24
	.word	.L345,.L422
	.byte	6
	.byte	'cm1',0,1,180,3,29
	.word	.L345,.L423
	.byte	7
	.word	.L424,.L425,.L426
	.byte	8
	.word	.L427,.L428
	.byte	8
	.word	.L429,.L430
	.byte	8
	.word	.L431,.L432
	.byte	8
	.word	.L433,.L434
	.byte	9
	.word	.L435,.L425,.L426
	.byte	7
	.word	.L436,.L425,.L426
	.byte	8
	.word	.L437,.L438
	.byte	8
	.word	.L439,.L440
	.byte	10
	.word	.L441,.L442
	.byte	0,0,0,7
	.word	.L424,.L443,.L444
	.byte	8
	.word	.L427,.L428
	.byte	8
	.word	.L429,.L430
	.byte	8
	.word	.L431,.L432
	.byte	8
	.word	.L433,.L434
	.byte	11
	.word	.L435,.L443,.L444
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_abbrev'
.L235:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0,3,8,58,15,59
	.byte	15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0,10,11
	.byte	0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_line'
.L236:
	.word	.L840-.L839
.L839:
	.half	3
	.word	.L842-.L841
.L841:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L842:
	.byte	5,43,7,0,5,2
	.word	.L127
	.byte	3,172,3,1,5,68,9
	.half	.L619-.L127
	.byte	3,4,1,5,16,9
	.half	.L34-.L619
	.byte	3,4,1,5,25,9
	.half	.L610-.L34
	.byte	3,2,1,5,13,9
	.half	.L843-.L610
	.byte	3,7,1,5,47,7,9
	.half	.L844-.L843
	.byte	1,5,15,7,9
	.half	.L36-.L844
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L37-.L36
	.byte	3,2,1,5,14,9
	.half	.L845-.L37
	.byte	1,5,15,9
	.half	.L846-.L845
	.byte	3,2,1,5,51,9
	.half	.L38-.L846
	.byte	3,8,1,5,9,9
	.half	.L847-.L38
	.byte	3,126,1,5,51,7,9
	.half	.L425-.L847
	.byte	3,2,1,5,79,9
	.half	.L426-.L425
	.byte	3,2,1,5,14,9
	.half	.L40-.L426
	.byte	3,5,1,5,17,7,9
	.half	.L848-.L40
	.byte	3,2,1,4,2,5,19,9
	.half	.L443-.L848
	.byte	3,129,1,1,9
	.half	.L849-.L443
	.byte	3,1,1,4,1,5,20,9
	.half	.L444-.L849
	.byte	3,254,126,1,5,27,9
	.half	.L42-.L444
	.byte	3,7,1,9
	.half	.L621-.L42
	.byte	3,1,1,5,51,9
	.half	.L620-.L621
	.byte	3,1,1,9
	.half	.L43-.L620
	.byte	3,1,1,5,82,9
	.half	.L41-.L43
	.byte	3,82,1,5,55,9
	.half	.L33-.L41
	.byte	1,5,68,9
	.half	.L850-.L33
	.byte	1,5,1,7,9
	.half	.L851-.L850
	.byte	3,49,1,7,9
	.half	.L238-.L851
	.byte	0,1,1
.L840:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_ranges'
.L237:
	.word	-1,.L127,0,.L238-.L127,0,0
.L416:
	.word	-1,.L127,0,.L413-.L127,-1,.L129,0,.L323-.L129,-1,.L131,0,.L318-.L131,0,0
.L420:
	.word	-1,.L127,.L34-.L127,.L41-.L127,-1,.L135,0,.L308-.L135,-1,.L137,0,.L303-.L137,-1,.L139,0,.L278-.L139,-1
	.word	.L141,0,.L273-.L141,0,0
.L442:
	.word	-1,.L127,.L425-.L127,.L426-.L127,-1,.L143,0,.L268-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_info'
.L239:
	.word	723
	.half	3
	.word	.L240
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L242,.L241
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updateEdgeAligned',0,1,229,3,17,1,1
	.word	.L145,.L445,.L144
	.byte	4
	.byte	'driver',0,1,229,3,72
	.word	.L338,.L446
	.byte	4
	.byte	'tOn',0,1,229,3,96
	.word	.L389,.L447
	.byte	5
	.word	.L145,.L445
	.byte	6
	.byte	'channelIndex',0,1,231,3,20
	.word	.L336,.L448
	.byte	6
	.byte	'period',0,1,232,3,20
	.word	.L345,.L449
	.byte	6
	.byte	'deadtime',0,1,233,3,20
	.word	.L345,.L450
	.byte	7
	.word	.L451
	.byte	6
	.byte	'x',0,1,239,3,24
	.word	.L345,.L452
	.byte	6
	.byte	'cm0',0,1,240,3,24
	.word	.L345,.L453
	.byte	6
	.byte	'cm1',0,1,240,3,29
	.word	.L345,.L454
	.byte	8
	.word	.L424,.L455,.L456
	.byte	9
	.word	.L427,.L457
	.byte	9
	.word	.L429,.L458
	.byte	9
	.word	.L431,.L459
	.byte	9
	.word	.L433,.L460
	.byte	10
	.word	.L435,.L455,.L456
	.byte	8
	.word	.L436,.L455,.L456
	.byte	9
	.word	.L437,.L461
	.byte	9
	.word	.L439,.L462
	.byte	11
	.word	.L441,.L455,.L456
	.byte	0,0,0,8
	.word	.L424,.L463,.L464
	.byte	9
	.word	.L427,.L457
	.byte	9
	.word	.L429,.L458
	.byte	9
	.word	.L431,.L459
	.byte	9
	.word	.L433,.L460
	.byte	11
	.word	.L435,.L463,.L464
	.byte	0,8
	.word	.L424,.L465,.L54
	.byte	9
	.word	.L427,.L457
	.byte	9
	.word	.L429,.L458
	.byte	9
	.word	.L431,.L459
	.byte	9
	.word	.L433,.L460
	.byte	11
	.word	.L435,.L465,.L54
	.byte	0,8
	.word	.L424,.L466,.L52
	.byte	9
	.word	.L427,.L457
	.byte	9
	.word	.L429,.L458
	.byte	9
	.word	.L431,.L459
	.byte	9
	.word	.L433,.L460
	.byte	11
	.word	.L435,.L466,.L52
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_abbrev'
.L240:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11,1,49
	.byte	16,17,1,18,1,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_line'
.L241:
	.word	.L853-.L852
.L852:
	.half	3
	.word	.L855-.L854
.L854:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L855:
	.byte	5,43,7,0,5,2
	.word	.L145
	.byte	3,232,3,1,5,68,9
	.half	.L629-.L145
	.byte	3,4,1,5,16,9
	.half	.L45-.L629
	.byte	3,4,1,5,25,9
	.half	.L856-.L45
	.byte	3,2,1,5,16,9
	.half	.L857-.L856
	.byte	3,126,1,5,9,9
	.half	.L630-.L857
	.byte	3,2,1,5,24,7,9
	.half	.L858-.L630
	.byte	3,2,1,5,30,9
	.half	.L46-.L858
	.byte	3,5,1,5,13,9
	.half	.L859-.L46
	.byte	1,5,47,7,9
	.half	.L860-.L859
	.byte	1,5,15,7,9
	.half	.L47-.L860
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L48-.L47
	.byte	3,2,1,5,14,9
	.half	.L861-.L48
	.byte	1,5,15,9
	.half	.L862-.L861
	.byte	3,2,1,5,51,9
	.half	.L49-.L862
	.byte	3,8,1,5,9,9
	.half	.L863-.L49
	.byte	3,126,1,5,51,7,9
	.half	.L455-.L863
	.byte	3,2,1,5,79,9
	.half	.L456-.L455
	.byte	3,2,1,5,14,9
	.half	.L51-.L456
	.byte	3,5,1,5,17,7,9
	.half	.L864-.L51
	.byte	3,2,1,5,26,9
	.half	.L628-.L864
	.byte	3,1,1,5,51,3,1,1,4,2,5,19,9
	.half	.L463-.L628
	.byte	3,195,0,1,9
	.half	.L865-.L463
	.byte	3,1,1,4,1,5,20,9
	.half	.L464-.L865
	.byte	3,186,127,1,5,17,9
	.half	.L53-.L464
	.byte	3,7,1,5,51,3,2,1,4,2,5,19,9
	.half	.L465-.L53
	.byte	3,60,1,4,1,5,99,9
	.half	.L866-.L465
	.byte	3,68,1,4,2,5,19,3,61,1,4,1,5,51,9
	.half	.L54-.L866
	.byte	3,68,1,5,96,9
	.half	.L466-.L54
	.byte	1,4,2,5,19,3,59,1,9
	.half	.L631-.L466
	.byte	3,1,1,4,1,5,82,9
	.half	.L52-.L631
	.byte	3,150,127,1,5,55,9
	.half	.L44-.L52
	.byte	1,5,68,9
	.half	.L867-.L44
	.byte	1,5,1,7,9
	.half	.L868-.L867
	.byte	3,49,1,7,9
	.half	.L243-.L868
	.byte	0,1,1
.L853:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_ranges'
.L242:
	.word	-1,.L145,0,.L243-.L145,0,0
.L451:
	.word	-1,.L145,.L45-.L145,.L52-.L145,-1,.L149,0,.L328-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_info'
.L244:
	.word	518
	.half	3
	.word	.L245
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L247,.L246
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updateOff',0,1,161,4,17,1,1
	.word	.L151,.L467,.L150
	.byte	4
	.byte	'driver',0,1,161,4,64
	.word	.L338,.L468
	.byte	4
	.byte	'tOn',0,1,161,4,88
	.word	.L389,.L469
	.byte	5
	.word	.L151,.L467
	.byte	6
	.word	.L470
	.byte	7
	.byte	'channelIndex',0,1,164,4,11
	.word	.L336,.L471
	.byte	7
	.byte	'period',0,1,165,4,20
	.word	.L345,.L472
	.byte	8
	.word	.L424,.L473,.L474
	.byte	9
	.word	.L427,.L475
	.byte	9
	.word	.L429,.L476
	.byte	9
	.word	.L431,.L477
	.byte	9
	.word	.L433,.L478
	.byte	10
	.word	.L435,.L479
	.byte	0,8
	.word	.L424,.L480,.L481
	.byte	9
	.word	.L427,.L475
	.byte	9
	.word	.L429,.L476
	.byte	9
	.word	.L431,.L477
	.byte	9
	.word	.L433,.L478
	.byte	0,8
	.word	.L424,.L482,.L483
	.byte	9
	.word	.L427,.L475
	.byte	9
	.word	.L429,.L476
	.byte	9
	.word	.L431,.L477
	.byte	9
	.word	.L433,.L478
	.byte	11
	.word	.L435,.L482,.L483
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_abbrev'
.L245:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,11,1,85,6,0
	.byte	0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,8,29,1,49,16,17,1,18,1,0,0,9,5,0,49,16,2,6,0,0,10,11,0,49
	.byte	16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_line'
.L246:
	.word	.L870-.L869
.L869:
	.half	3
	.word	.L872-.L871
.L871:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L872:
	.byte	5,20,7,0,5,2
	.word	.L151
	.byte	3,165,4,1,5,23,9
	.half	.L873-.L151
	.byte	3,2,1,5,40,9
	.half	.L473-.L873
	.byte	3,126,1,5,33,9
	.half	.L474-.L473
	.byte	1,5,68,9
	.half	.L633-.L474
	.byte	3,2,1,5,47,9
	.half	.L56-.L633
	.byte	3,2,1,5,61,9
	.half	.L874-.L56
	.byte	1,5,70,9
	.half	.L875-.L874
	.byte	1,4,2,5,19,9
	.half	.L480-.L875
	.byte	3,44,1,4,1,5,59,9
	.half	.L876-.L480
	.byte	3,85,1,4,2,5,19,3,44,1,4,1,5,47,9
	.half	.L481-.L876
	.byte	3,85,1,5,61,9
	.half	.L877-.L481
	.byte	1,5,72,9
	.half	.L878-.L877
	.byte	1,5,95,9
	.half	.L482-.L878
	.byte	1,4,2,5,19,3,42,1,4,1,5,82,9
	.half	.L483-.L482
	.byte	3,82,1,4,2,5,19,3,47,1,4,1,5,82,9
	.half	.L632-.L483
	.byte	3,81,1,5,55,9
	.half	.L55-.L632
	.byte	1,5,68,9
	.half	.L879-.L55
	.byte	1,5,1,7,9
	.half	.L880-.L879
	.byte	3,6,1,7,9
	.half	.L248-.L880
	.byte	0,1,1
.L870:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_ranges'
.L247:
	.word	-1,.L151,0,.L248-.L151,0,0
.L470:
	.word	-1,.L151,0,.L467-.L151,-1,.L153,0,.L283-.L153,0,0
.L479:
	.word	-1,.L151,.L473-.L151,.L474-.L151,.L480-.L151,.L481-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_info'
.L249:
	.word	1152
	.half	3
	.word	.L250
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L252,.L251
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updatePulse',0,1,177,4,17,1,1
	.word	.L155,.L484,.L154
	.byte	4
	.byte	'driver',0,1,177,4,66
	.word	.L338,.L485
	.byte	4
	.byte	'tOn',0,1,177,4,83
	.word	.L397,.L486
	.byte	4
	.byte	'offset',0,1,177,4,97
	.word	.L397,.L487
	.byte	5
	.word	.L155,.L484
	.byte	6
	.byte	'channelIndex',0,1,179,4,20
	.word	.L336,.L488
	.byte	6
	.byte	'period',0,1,180,4,20
	.word	.L345,.L489
	.byte	5
	.word	.L58,.L490
	.byte	6
	.byte	'x',0,1,187,4,24
	.word	.L345,.L491
	.byte	6
	.byte	'cm0',0,1,189,4,24
	.word	.L345,.L492
	.byte	6
	.byte	'cm1',0,1,189,4,29
	.word	.L345,.L493
	.byte	7
	.word	.L494,.L495,.L496
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	9
	.word	.L501,.L502
	.byte	0,7
	.word	.L494,.L503,.L504
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	0,7
	.word	.L494,.L504,.L505
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	10
	.word	.L501,.L504,.L505
	.byte	0,7
	.word	.L424,.L506,.L65
	.byte	8
	.word	.L427,.L507
	.byte	8
	.word	.L429,.L508
	.byte	8
	.word	.L431,.L509
	.byte	8
	.word	.L433,.L510
	.byte	11
	.word	.L435,.L506,.L65
	.byte	7
	.word	.L436,.L506,.L511
	.byte	8
	.word	.L437,.L512
	.byte	8
	.word	.L439,.L513
	.byte	10
	.word	.L441,.L506,.L511
	.byte	0,0,0,7
	.word	.L424,.L68,.L490
	.byte	8
	.word	.L427,.L507
	.byte	8
	.word	.L429,.L508
	.byte	8
	.word	.L431,.L509
	.byte	8
	.word	.L433,.L510
	.byte	11
	.word	.L435,.L68,.L490
	.byte	7
	.word	.L436,.L68,.L514
	.byte	8
	.word	.L437,.L512
	.byte	8
	.word	.L439,.L513
	.byte	10
	.word	.L441,.L68,.L514
	.byte	0,0,0,0,5
	.word	.L70,.L515
	.byte	6
	.byte	'x',0,1,236,4,24
	.word	.L345,.L516
	.byte	6
	.byte	'cm0',0,1,238,4,24
	.word	.L345,.L517
	.byte	6
	.byte	'cm1',0,1,238,4,29
	.word	.L345,.L518
	.byte	7
	.word	.L494,.L519,.L520
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	9
	.word	.L501,.L521
	.byte	0,7
	.word	.L494,.L522,.L523
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	0,7
	.word	.L494,.L523,.L524
	.byte	8
	.word	.L497,.L498
	.byte	8
	.word	.L499,.L500
	.byte	10
	.word	.L501,.L523,.L524
	.byte	0,7
	.word	.L424,.L525,.L75
	.byte	8
	.word	.L427,.L507
	.byte	8
	.word	.L429,.L508
	.byte	8
	.word	.L431,.L509
	.byte	8
	.word	.L433,.L510
	.byte	11
	.word	.L435,.L525,.L75
	.byte	7
	.word	.L436,.L525,.L526
	.byte	8
	.word	.L437,.L512
	.byte	8
	.word	.L439,.L513
	.byte	10
	.word	.L441,.L525,.L526
	.byte	0,0,0,7
	.word	.L424,.L78,.L515
	.byte	8
	.word	.L427,.L507
	.byte	8
	.word	.L429,.L508
	.byte	8
	.word	.L431,.L509
	.byte	8
	.word	.L433,.L510
	.byte	11
	.word	.L435,.L78,.L515
	.byte	7
	.word	.L436,.L78,.L527
	.byte	8
	.word	.L437,.L512
	.byte	8
	.word	.L439,.L513
	.byte	10
	.word	.L441,.L78,.L527
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_abbrev'
.L250:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,85,6,0,0,10,11
	.byte	0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_line'
.L251:
	.word	.L882-.L881
.L881:
	.half	3
	.word	.L884-.L883
.L883:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0
	.byte	'IfxGtm_Atom.h',0,2,0,0,0
.L884:
	.byte	5,20,7,0,5,2
	.word	.L155
	.byte	3,181,4,1,5,23,9
	.half	.L885-.L155
	.byte	3,3,1,5,33,9
	.half	.L639-.L885
	.byte	3,125,1,5,68,9
	.half	.L640-.L639
	.byte	3,3,1,5,42,9
	.half	.L58-.L640
	.byte	3,6,1,5,25,9
	.half	.L886-.L58
	.byte	3,3,1,5,55,9
	.half	.L887-.L886
	.byte	3,125,1,5,70,9
	.half	.L888-.L887
	.byte	1,5,73,9
	.half	.L889-.L888
	.byte	3,1,1,4,2,5,20,9
	.half	.L495-.L889
	.byte	3,131,127,1,4,1,5,73,9
	.half	.L496-.L495
	.byte	3,253,0,1,4,2,5,20,9
	.half	.L503-.L496
	.byte	3,131,127,1,4,1,5,9,9
	.half	.L505-.L503
	.byte	3,255,0,1,5,24,7,9
	.half	.L890-.L505
	.byte	3,2,1,5,30,9
	.half	.L59-.L890
	.byte	3,5,1,5,13,9
	.half	.L891-.L59
	.byte	1,5,47,7,9
	.half	.L892-.L891
	.byte	1,5,15,7,9
	.half	.L60-.L892
	.byte	3,2,1,5,18,1,5,35,9
	.half	.L61-.L60
	.byte	3,2,1,5,18,9
	.half	.L893-.L61
	.byte	1,5,52,7,9
	.half	.L894-.L893
	.byte	1,5,56,9
	.half	.L895-.L894
	.byte	1,5,15,7,9
	.half	.L63-.L895
	.byte	3,2,1,5,65,9
	.half	.L62-.L63
	.byte	3,8,1,5,51,9
	.half	.L896-.L62
	.byte	1,5,74,9
	.half	.L897-.L896
	.byte	1,5,9,9
	.half	.L898-.L897
	.byte	3,126,1,5,51,7,9
	.half	.L506-.L898
	.byte	3,2,1,4,3,5,69,9
	.half	.L899-.L506
	.byte	3,119,1,5,60,9
	.half	.L900-.L899
	.byte	1,5,5,9
	.half	.L901-.L900
	.byte	1,4,1,5,24,9
	.half	.L511-.L901
	.byte	3,10,1,4,3,5,19,9
	.half	.L902-.L511
	.byte	3,126,1,5,21,9
	.half	.L903-.L902
	.byte	3,1,1,4,1,5,68,3,2,1,5,14,9
	.half	.L65-.L903
	.byte	3,2,1,5,17,7,9
	.half	.L904-.L65
	.byte	3,2,1,5,26,9
	.half	.L634-.L904
	.byte	3,1,1,5,20,3,127,1,5,21,9
	.half	.L67-.L634
	.byte	3,6,1,9
	.half	.L635-.L67
	.byte	3,1,1,5,51,9
	.half	.L68-.L635
	.byte	3,1,1,4,3,5,69,9
	.half	.L905-.L68
	.byte	3,105,1,5,60,9
	.half	.L906-.L905
	.byte	1,5,5,9
	.half	.L907-.L906
	.byte	1,5,19,9
	.half	.L514-.L907
	.byte	3,8,1,9
	.half	.L66-.L514
	.byte	3,1,1,4,1,5,82,9
	.half	.L490-.L66
	.byte	3,98,1,5,55,9
	.half	.L57-.L490
	.byte	1,5,68,9
	.half	.L908-.L57
	.byte	1,5,23,7,9
	.half	.L909-.L908
	.byte	3,49,1,5,68,1,5,42,9
	.half	.L70-.L909
	.byte	3,6,1,5,98,9
	.half	.L910-.L70
	.byte	1,5,84,9
	.half	.L911-.L910
	.byte	1,5,55,1,5,70,9
	.half	.L912-.L911
	.byte	1,5,73,9
	.half	.L913-.L912
	.byte	3,1,1,4,2,5,20,9
	.half	.L519-.L913
	.byte	3,210,126,1,4,1,5,73,9
	.half	.L520-.L519
	.byte	3,174,1,1,4,2,5,20,9
	.half	.L522-.L520
	.byte	3,210,126,1,4,1,5,25,9
	.half	.L914-.L522
	.byte	3,176,1,1,5,9,9
	.half	.L524-.L914
	.byte	3,7,1,5,15,7,9
	.half	.L915-.L524
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L72-.L915
	.byte	3,2,1,5,14,9
	.half	.L916-.L72
	.byte	1,5,15,9
	.half	.L917-.L916
	.byte	3,2,1,5,65,9
	.half	.L73-.L917
	.byte	3,8,1,5,51,9
	.half	.L918-.L73
	.byte	1,5,76,9
	.half	.L919-.L918
	.byte	1,5,9,9
	.half	.L920-.L919
	.byte	3,126,1,5,51,7,9
	.half	.L525-.L920
	.byte	3,2,1,4,3,5,69,9
	.half	.L921-.L525
	.byte	3,70,1,5,60,9
	.half	.L922-.L921
	.byte	1,5,5,9
	.half	.L923-.L922
	.byte	1,4,1,5,24,9
	.half	.L526-.L923
	.byte	3,59,1,4,3,5,19,9
	.half	.L924-.L526
	.byte	3,77,1,5,21,9
	.half	.L925-.L924
	.byte	3,1,1,4,1,5,68,3,51,1,5,14,9
	.half	.L75-.L925
	.byte	3,2,1,5,17,7,9
	.half	.L926-.L75
	.byte	3,2,1,5,26,9
	.half	.L637-.L926
	.byte	3,1,1,5,20,3,127,1,5,21,9
	.half	.L77-.L637
	.byte	3,6,1,9
	.half	.L638-.L77
	.byte	3,1,1,5,51,9
	.half	.L78-.L638
	.byte	3,1,1,4,3,5,69,9
	.half	.L927-.L78
	.byte	3,184,127,1,5,60,9
	.half	.L928-.L927
	.byte	1,5,5,9
	.half	.L929-.L928
	.byte	1,5,19,9
	.half	.L527-.L929
	.byte	3,8,1,9
	.half	.L76-.L527
	.byte	3,1,1,4,1,5,82,9
	.half	.L515-.L76
	.byte	3,19,1,5,55,9
	.half	.L69-.L515
	.byte	1,5,68,9
	.half	.L930-.L69
	.byte	1,5,1,7,9
	.half	.L931-.L930
	.byte	3,47,1,7,9
	.half	.L253-.L931
	.byte	0,1,1
.L882:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_ranges'
.L252:
	.word	-1,.L155,0,.L253-.L155,0,0
.L502:
	.word	-1,.L155,.L495-.L155,.L496-.L155,.L503-.L155,.L504-.L155,0,0
.L521:
	.word	-1,.L155,.L519-.L155,.L520-.L155,.L522-.L155,.L523-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_info'
.L254:
	.word	318
	.half	3
	.word	.L255
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L257,.L256
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updatePulseOff',0,1,156,5,17,1,1
	.word	.L157,.L528,.L156
	.byte	4
	.byte	'driver',0,1,156,5,69
	.word	.L338,.L529
	.byte	4
	.byte	'tOn',0,1,156,5,86
	.word	.L397,.L530
	.byte	4
	.byte	'offset',0,1,156,5,100
	.word	.L397,.L531
	.byte	5
	.word	.L157,.L528
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_abbrev'
.L255:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_line'
.L256:
	.word	.L933-.L932
.L932:
	.half	3
	.word	.L935-.L934
.L934:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L935:
	.byte	5,41,7,0,5,2
	.word	.L157
	.byte	3,160,5,1,5,1,9
	.half	.L258-.L157
	.byte	3,1,0,1,1
.L933:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_ranges'
.L257:
	.word	-1,.L157,0,.L258-.L157,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_info'
.L259:
	.word	642
	.half	3
	.word	.L260
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L262,.L261
	.byte	2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_updateShiftCenterAligned',0,1,165,5,17,1,1
	.word	.L159,.L532,.L158
	.byte	4
	.byte	'driver',0,1,165,5,79
	.word	.L338,.L533
	.byte	4
	.byte	'tOn',0,1,165,5,103
	.word	.L389,.L534
	.byte	4
	.byte	'shift',0,1,165,5,124
	.word	.L389,.L535
	.byte	5
	.word	.L159,.L532
	.byte	6
	.byte	'channelIndex',0,1,167,5,20
	.word	.L336,.L536
	.byte	6
	.byte	'period',0,1,168,5,20
	.word	.L345,.L537
	.byte	6
	.byte	'deadtime',0,1,169,5,20
	.word	.L345,.L538
	.byte	5
	.word	.L80,.L87
	.byte	6
	.byte	'x',0,1,175,5,24
	.word	.L345,.L539
	.byte	6
	.byte	's',0,1,176,5,24
	.word	.L345,.L540
	.byte	6
	.byte	'cm0',0,1,177,5,24
	.word	.L345,.L541
	.byte	6
	.byte	'cm1',0,1,177,5,29
	.word	.L345,.L542
	.byte	7
	.word	.L424,.L543,.L544
	.byte	8
	.word	.L427,.L545
	.byte	8
	.word	.L429,.L546
	.byte	8
	.word	.L431,.L547
	.byte	8
	.word	.L433,.L548
	.byte	9
	.word	.L435,.L543,.L544
	.byte	7
	.word	.L436,.L543,.L544
	.byte	8
	.word	.L437,.L549
	.byte	8
	.word	.L439,.L550
	.byte	10
	.word	.L441,.L543,.L544
	.byte	0,0,0,7
	.word	.L424,.L551,.L552
	.byte	8
	.word	.L427,.L545
	.byte	8
	.word	.L429,.L546
	.byte	8
	.word	.L431,.L547
	.byte	8
	.word	.L433,.L548
	.byte	10
	.word	.L435,.L551,.L552
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_abbrev'
.L260:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0
	.byte	10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_line'
.L261:
	.word	.L937-.L936
.L936:
	.half	3
	.word	.L939-.L938
.L938:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L939:
	.byte	5,43,7,0,5,2
	.word	.L159
	.byte	3,168,5,1,5,68,9
	.half	.L643-.L159
	.byte	3,4,1,5,16,9
	.half	.L80-.L643
	.byte	3,5,1,5,25,9
	.half	.L940-.L80
	.byte	3,2,1,5,16,9
	.half	.L941-.L940
	.byte	3,126,1,5,9,9
	.half	.L642-.L941
	.byte	3,2,1,5,24,7,9
	.half	.L942-.L642
	.byte	3,2,1,5,30,9
	.half	.L81-.L942
	.byte	3,5,1,5,13,9
	.half	.L943-.L81
	.byte	1,5,47,7,9
	.half	.L944-.L943
	.byte	1,5,15,7,9
	.half	.L82-.L944
	.byte	3,2,1,5,18,1,5,34,9
	.half	.L83-.L82
	.byte	3,2,1,5,14,9
	.half	.L945-.L83
	.byte	1,5,15,9
	.half	.L946-.L945
	.byte	3,2,1,5,51,9
	.half	.L84-.L946
	.byte	3,8,1,5,9,9
	.half	.L947-.L84
	.byte	3,126,1,5,51,7,9
	.half	.L543-.L947
	.byte	3,2,1,5,79,9
	.half	.L544-.L543
	.byte	3,2,1,5,14,9
	.half	.L86-.L544
	.byte	3,5,1,5,17,7,9
	.half	.L948-.L86
	.byte	3,2,1,4,2,5,21,9
	.half	.L551-.L948
	.byte	3,132,127,1,5,19,1,9
	.half	.L644-.L551
	.byte	3,1,1,4,1,5,20,9
	.half	.L552-.L644
	.byte	3,251,0,1,5,22,9
	.half	.L88-.L552
	.byte	3,7,1,5,21,9
	.half	.L949-.L88
	.byte	3,4,1,5,22,9
	.half	.L950-.L949
	.byte	3,124,1,5,21,9
	.half	.L645-.L950
	.byte	3,4,1,5,13,9
	.half	.L951-.L645
	.byte	3,126,1,5,21,7,9
	.half	.L952-.L951
	.byte	3,2,1,5,52,9
	.half	.L953-.L952
	.byte	1,5,21,9
	.half	.L90-.L953
	.byte	3,4,1,9
	.half	.L91-.L90
	.byte	3,3,1,5,31,9
	.half	.L954-.L91
	.byte	3,1,1,5,21,9
	.half	.L647-.L954
	.byte	1,5,51,3,1,1,9
	.half	.L89-.L647
	.byte	3,1,1,5,82,9
	.half	.L87-.L89
	.byte	3,70,1,5,55,9
	.half	.L79-.L87
	.byte	1,5,68,9
	.half	.L955-.L79
	.byte	1,5,1,7,9
	.half	.L956-.L955
	.byte	3,61,1,7,9
	.half	.L263-.L956
	.byte	0,1,1
.L937:
	.sdecl	'.debug_ranges',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_ranges'
.L262:
	.word	-1,.L159,0,.L263-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_2')
	.sect	'.debug_info'
.L264:
	.word	228
	.half	3
	.word	.L265
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L267,.L266
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_2',0,1,169,3,17,1
	.word	.L143,.L268,.L142
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_2')
	.sect	'.debug_abbrev'
.L265:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_2')
	.sect	'.debug_line'
.L266:
	.word	.L958-.L957
.L957:
	.half	3
	.word	.L960-.L959
.L959:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L960:
	.byte	5,51,7,0,5,2
	.word	.L143
	.byte	3,203,3,1,5,24,9
	.half	.L612-.L143
	.byte	3,1,1,4,2,5,19,3,137,1,1,4,1,5,68,9
	.half	.L961-.L612
	.byte	3,248,126,1,4,2,5,19,3,137,1,1,4,1,5,51,9
	.half	.L613-.L961
	.byte	3,248,126,1,5,24,9
	.half	.L615-.L613
	.byte	3,1,1,4,2,5,19,3,134,1,1,5,21,9
	.half	.L962-.L615
	.byte	3,1,1,5,19,1,9
	.half	.L268-.L962
	.byte	0,1,1,5,51,0,5,2
	.word	.L143
	.byte	3,203,3,1,5,24,9
	.half	.L612-.L143
	.byte	3,61,1,4,2,5,19,3,205,0,1,4,1,5,68,9
	.half	.L961-.L612
	.byte	3,180,127,1,4,2,5,19,3,205,0,1,4,1,5,51,9
	.half	.L613-.L961
	.byte	3,248,126,1,5,24,9
	.half	.L615-.L613
	.byte	3,61,1,4,2,5,19,3,202,0,1,5,21,9
	.half	.L962-.L615
	.byte	3,1,1,5,19,1,9
	.half	.L268-.L962
	.byte	0,1,1,5,51,0,5,2
	.word	.L143
	.byte	3,203,3,1,5,24,9
	.half	.L612-.L143
	.byte	3,254,1,1,4,2,5,19,3,140,127,1,4,1,5,68,9
	.half	.L961-.L612
	.byte	3,245,0,1,4,2,5,19,3,140,127,1,4,1,5,51,9
	.half	.L613-.L961
	.byte	3,248,126,1,5,24,9
	.half	.L615-.L613
	.byte	3,254,1,1,4,2,5,19,3,137,127,1,5,21,9
	.half	.L962-.L615
	.byte	3,1,1,5,19,1,9
	.half	.L268-.L962
	.byte	0,1,1
.L958:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_2')
	.sect	'.debug_ranges'
.L267:
	.word	-1,.L143,0,.L268-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L269:
	.word	228
	.half	3
	.word	.L270
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L272,.L271
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_3',0,1,169,3,17,1
	.word	.L141,.L273,.L140
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L270:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L271:
	.word	.L964-.L963
.L963:
	.half	3
	.word	.L966-.L965
.L965:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L966:
	.byte	5,51,7,0,5,2
	.word	.L141
	.byte	3,222,3,1,5,96,9
	.half	.L624-.L141
	.byte	1,4,2,5,19,3,247,0,1,9
	.half	.L625-.L624
	.byte	3,1,1,9
	.half	.L273-.L625
	.byte	0,1,1,5,51,0,5,2
	.word	.L141
	.byte	3,222,3,1,5,96,9
	.half	.L624-.L141
	.byte	3,136,2,1,4,2,5,19,3,239,126,1,9
	.half	.L625-.L624
	.byte	3,1,1,9
	.half	.L273-.L625
	.byte	0,1,1
.L964:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L272:
	.word	-1,.L141,0,.L273-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_4')
	.sect	'.debug_info'
.L274:
	.word	228
	.half	3
	.word	.L275
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L277,.L276
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_4',0,1,169,3,17,1
	.word	.L139,.L278,.L138
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_4')
	.sect	'.debug_abbrev'
.L275:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_4')
	.sect	'.debug_line'
.L276:
	.word	.L968-.L967
.L967:
	.half	3
	.word	.L970-.L969
.L969:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L970:
	.byte	5,65,7,0,5,2
	.word	.L139
	.byte	3,203,3,1,5,51,9
	.half	.L971-.L139
	.byte	1,5,74,9
	.half	.L972-.L971
	.byte	1,9
	.half	.L278-.L972
	.byte	0,1,1,5,65,0,5,2
	.word	.L139
	.byte	3,135,4,1,5,51,9
	.half	.L971-.L139
	.byte	1,5,74,9
	.half	.L972-.L971
	.byte	1,9
	.half	.L973-.L972
	.byte	3,68,1,7,9
	.half	.L278-.L973
	.byte	0,1,1,5,65,0,5,2
	.word	.L139
	.byte	3,200,5,1,5,51,9
	.half	.L971-.L139
	.byte	1,5,74,9
	.half	.L972-.L971
	.byte	1,9
	.half	.L973-.L972
	.byte	3,131,126,1,7,9
	.half	.L278-.L973
	.byte	0,1,1
.L968:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_4')
	.sect	'.debug_ranges'
.L277:
	.word	-1,.L139,0,.L278-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_5')
	.sect	'.debug_info'
.L279:
	.word	228
	.half	3
	.word	.L280
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L282,.L281
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_5',0,1,161,4,17,1
	.word	.L153,.L283,.L152
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_5')
	.sect	'.debug_abbrev'
.L280:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_5')
	.sect	'.debug_line'
.L281:
	.word	.L975-.L974
.L974:
	.half	3
	.word	.L977-.L976
.L976:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L977:
	.byte	5,70,7,0,5,2
	.word	.L153
	.byte	3,169,4,1,4,2,5,64,9
	.half	.L978-.L153
	.byte	3,42,1,5,69,9
	.half	.L979-.L978
	.byte	3,122,1,5,60,9
	.half	.L980-.L979
	.byte	1,5,5,9
	.half	.L981-.L980
	.byte	1,9
	.half	.L283-.L981
	.byte	0,1,1,5,72,0,5,2
	.word	.L153
	.byte	3,171,4,1,4,2,5,64,9
	.half	.L978-.L153
	.byte	3,40,1,5,69,9
	.half	.L979-.L978
	.byte	3,122,1,5,60,9
	.half	.L980-.L979
	.byte	1,5,5,9
	.half	.L981-.L980
	.byte	1,9
	.half	.L283-.L981
	.byte	0,1,1
.L975:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_5')
	.sect	'.debug_ranges'
.L282:
	.word	-1,.L153,0,.L283-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_6')
	.sect	'.debug_info'
.L284:
	.word	228
	.half	3
	.word	.L285
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L287,.L286
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_6',0,1,151,1,9,1
	.word	.L95,.L288,.L94
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_6')
	.sect	'.debug_abbrev'
.L285:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_6')
	.sect	'.debug_line'
.L286:
	.word	.L983-.L982
.L982:
	.half	3
	.word	.L985-.L984
.L984:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L985:
	.byte	5,41,7,0,5,2
	.word	.L95
	.byte	3,152,1,1,4,2,5,12,9
	.half	.L986-.L95
	.byte	3,159,2,1,4,1,5,54,9
	.half	.L987-.L986
	.byte	3,225,125,1,4,2,5,18,9
	.half	.L988-.L987
	.byte	3,159,2,1,9
	.half	.L288-.L988
	.byte	0,1,1,5,41,0,5,2
	.word	.L95
	.byte	3,158,1,1,4,2,5,12,9
	.half	.L986-.L95
	.byte	3,153,2,1,4,1,5,54,9
	.half	.L987-.L986
	.byte	3,231,125,1,4,2,5,18,9
	.half	.L988-.L987
	.byte	3,153,2,1,9
	.half	.L288-.L988
	.byte	0,1,1
.L983:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_6')
	.sect	'.debug_ranges'
.L287:
	.word	-1,.L95,0,.L288-.L95,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_7')
	.sect	'.debug_info'
.L289:
	.word	228
	.half	3
	.word	.L290
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L292,.L291
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_7',0,1,148,2,9,1
	.word	.L107,.L293,.L106
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_7')
	.sect	'.debug_abbrev'
.L290:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_7')
	.sect	'.debug_line'
.L291:
	.word	.L990-.L989
.L989:
	.half	3
	.word	.L992-.L991
.L991:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxStdIf_Timer.h',0,1,0,0,0
.L992:
	.byte	5,57,7,0,5,2
	.word	.L107
	.byte	3,149,2,1,5,70,9
	.half	.L993-.L107
	.byte	1,4,2,5,20,9
	.half	.L994-.L993
	.byte	3,173,1,1,9
	.half	.L293-.L994
	.byte	0,1,1,5,57,0,5,2
	.word	.L107
	.byte	3,158,2,1,5,70,9
	.half	.L993-.L107
	.byte	1,4,2,5,20,9
	.half	.L994-.L993
	.byte	3,164,1,1,9
	.half	.L293-.L994
	.byte	0,1,1
.L990:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_7')
	.sect	'.debug_ranges'
.L292:
	.word	-1,.L107,0,.L293-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_8')
	.sect	'.debug_info'
.L294:
	.word	228
	.half	3
	.word	.L295
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L297,.L296
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_8',0,1,168,2,9,1
	.word	.L113,.L298,.L112
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_8')
	.sect	'.debug_abbrev'
.L295:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_8')
	.sect	'.debug_line'
.L296:
	.word	.L996-.L995
.L995:
	.half	3
	.word	.L998-.L997
.L997:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L998:
	.byte	5,67,7,0,5,2
	.word	.L113
	.byte	3,174,2,1,5,43,1,5,66,9
	.half	.L999-.L113
	.byte	1,9
	.half	.L298-.L999
	.byte	0,1,1,5,58,0,5,2
	.word	.L113
	.byte	3,183,2,1,5,34,1,5,57,9
	.half	.L999-.L113
	.byte	1,5,66,9
	.half	.L1000-.L999
	.byte	3,119,1,7,9
	.half	.L298-.L1000
	.byte	0,1,1
.L996:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_8')
	.sect	'.debug_ranges'
.L297:
	.word	-1,.L113,0,.L298-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_9')
	.sect	'.debug_info'
.L299:
	.word	228
	.half	3
	.word	.L300
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L302,.L301
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_9',0,1,169,3,17,1
	.word	.L137,.L303,.L136
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_9')
	.sect	'.debug_abbrev'
.L300:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_9')
	.sect	'.debug_line'
.L301:
	.word	.L1002-.L1001
.L1001:
	.half	3
	.word	.L1004-.L1003
.L1003:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L1004:
	.byte	5,25,7,0,5,2
	.word	.L137
	.byte	3,182,3,1,5,9,9
	.half	.L636-.L137
	.byte	1,5,24,7,9
	.half	.L1005-.L636
	.byte	3,2,1,5,30,9
	.half	.L35-.L1005
	.byte	3,5,1,9
	.half	.L303-.L35
	.byte	0,1,1,5,25,0,5,2
	.word	.L137
	.byte	3,242,4,1,5,9,9
	.half	.L636-.L137
	.byte	1,5,24,7,9
	.half	.L1005-.L636
	.byte	3,2,1,5,29,9
	.half	.L35-.L1005
	.byte	3,5,1,5,30,9
	.half	.L1006-.L35
	.byte	3,196,126,1,7,9
	.half	.L303-.L1006
	.byte	0,1,1
.L1002:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_9')
	.sect	'.debug_ranges'
.L302:
	.word	-1,.L137,0,.L303-.L137,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_10')
	.sect	'.debug_info'
.L304:
	.word	229
	.half	3
	.word	.L305
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L307,.L306
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_10',0,1,169,3,17,1
	.word	.L135,.L308,.L134
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_10')
	.sect	'.debug_abbrev'
.L305:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_10')
	.sect	'.debug_line'
.L306:
	.word	.L1008-.L1007
.L1007:
	.half	3
	.word	.L1010-.L1009
.L1009:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L1010:
	.byte	5,17,7,0,5,2
	.word	.L135
	.byte	3,212,3,1,5,26,9
	.half	.L618-.L135
	.byte	3,1,1,5,51,3,1,1,4,2,5,5,9
	.half	.L617-.L618
	.byte	3,247,0,1,7,9
	.half	.L308-.L617
	.byte	0,1,1,5,17,0,5,2
	.word	.L135
	.byte	3,209,5,1,5,26,9
	.half	.L618-.L135
	.byte	3,1,1,5,51,3,132,126,1,4,2,5,5,9
	.half	.L617-.L618
	.byte	3,247,0,1,7,9
	.half	.L308-.L617
	.byte	0,1,1
.L1008:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_10')
	.sect	'.debug_ranges'
.L307:
	.word	-1,.L135,0,.L308-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_11')
	.sect	'.debug_info'
.L309:
	.word	239
	.half	3
	.word	.L310
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L312,.L311
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_11',0,1,169,3,17,1
	.word	.L133,.L313,.L132
	.byte	4
	.word	.L133,.L313
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_11')
	.sect	'.debug_abbrev'
.L310:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_11')
	.sect	'.debug_line'
.L311:
	.word	.L1012-.L1011
.L1011:
	.half	3
	.word	.L1014-.L1013
.L1013:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L1014:
	.byte	5,51,7,0,5,2
	.word	.L133
	.byte	3,221,3,1,4,2,5,19,9
	.half	.L622-.L133
	.byte	3,248,0,1,4,1,5,99,9
	.half	.L648-.L622
	.byte	3,136,127,1,4,2,5,19,3,249,0,1,9
	.half	.L313-.L648
	.byte	0,1,1,5,51,0,5,2
	.word	.L133
	.byte	3,221,3,1,4,2,5,19,9
	.half	.L622-.L133
	.byte	3,248,0,1,4,1,5,99,9
	.half	.L648-.L622
	.byte	3,144,1,1,4,2,5,19,3,241,126,1,9
	.half	.L313-.L648
	.byte	0,1,1
.L1012:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_11')
	.sect	'.debug_ranges'
.L312:
	.word	-1,.L133,0,.L313-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_12')
	.sect	'.debug_info'
.L314:
	.word	229
	.half	3
	.word	.L315
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L317,.L316
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_12',0,1,169,3,17,1
	.word	.L131,.L318,.L130
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_12')
	.sect	'.debug_abbrev'
.L315:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_12')
	.sect	'.debug_line'
.L316:
	.word	.L1016-.L1015
.L1015:
	.half	3
	.word	.L1018-.L1017
.L1017:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L1018:
	.byte	5,20,7,0,5,2
	.word	.L131
	.byte	3,174,3,1,5,23,9
	.half	.L627-.L131
	.byte	3,2,1,5,43,3,124,1,5,33,9
	.half	.L608-.L627
	.byte	3,2,1,5,23,9
	.half	.L609-.L608
	.byte	3,2,1,7,9
	.half	.L318-.L609
	.byte	0,1,1,5,20,0,5,2
	.word	.L131
	.byte	3,234,3,1,5,23,9
	.half	.L627-.L131
	.byte	3,2,1,5,43,3,124,1,5,33,9
	.half	.L608-.L627
	.byte	3,2,1,5,23,9
	.half	.L609-.L608
	.byte	3,70,1,7,9
	.half	.L318-.L609
	.byte	0,1,1,5,20,0,5,2
	.word	.L131
	.byte	3,170,5,1,5,23,9
	.half	.L627-.L131
	.byte	3,2,1,5,43,3,124,1,5,33,9
	.half	.L608-.L627
	.byte	3,2,1,5,23,9
	.half	.L609-.L608
	.byte	3,134,126,1,7,9
	.half	.L318-.L609
	.byte	0,1,1
.L1016:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_12')
	.sect	'.debug_ranges'
.L317:
	.word	-1,.L131,0,.L318-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_13')
	.sect	'.debug_info'
.L319:
	.word	229
	.half	3
	.word	.L320
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L322,.L321
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_13',0,1,169,3,17,1
	.word	.L129,.L323,.L128
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_13')
	.sect	'.debug_abbrev'
.L320:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_13')
	.sect	'.debug_line'
.L321:
	.word	.L1020-.L1019
.L1019:
	.half	3
	.word	.L1022-.L1021
.L1021:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0,0
.L1022:
	.byte	5,82,7,0,5,2
	.word	.L129
	.byte	3,176,3,1,9
	.half	.L323-.L129
	.byte	0,1,1,5,82,0,5,2
	.word	.L129
	.byte	3,236,3,1,9
	.half	.L626-.L129
	.byte	3,68,1,7,9
	.half	.L323-.L626
	.byte	0,1,1,5,82,0,5,2
	.word	.L129
	.byte	3,184,4,1,9
	.half	.L626-.L129
	.byte	3,248,126,1,7,9
	.half	.L323-.L626
	.byte	0,1,1,5,82,0,5,2
	.word	.L129
	.byte	3,233,4,1,9
	.half	.L626-.L129
	.byte	3,199,126,1,7,9
	.half	.L323-.L626
	.byte	0,1,1,5,82,0,5,2
	.word	.L129
	.byte	3,172,5,1,9
	.half	.L626-.L129
	.byte	3,132,126,1,7,9
	.half	.L323-.L626
	.byte	0,1,1
.L1020:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_13')
	.sect	'.debug_ranges'
.L322:
	.word	-1,.L129,0,.L323-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_14')
	.sect	'.debug_info'
.L324:
	.word	229
	.half	3
	.word	.L325
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L327,.L326
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_14',0,1,229,3,17,1
	.word	.L149,.L328,.L148
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_14')
	.sect	'.debug_abbrev'
.L325:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_14')
	.sect	'.debug_line'
.L326:
	.word	.L1024-.L1023
.L1023:
	.half	3
	.word	.L1026-.L1025
.L1025:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L1026:
	.byte	5,65,7,0,5,2
	.word	.L149
	.byte	3,154,4,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,57,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1,5,65,0,5,2
	.word	.L149
	.byte	3,222,3,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,245,0,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1,5,65,0,5,2
	.word	.L149
	.byte	3,230,5,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,237,126,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1,5,65,0,5,2
	.word	.L149
	.byte	3,206,3,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,133,1,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1,5,65,0,5,2
	.word	.L149
	.byte	3,138,4,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,201,0,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1,5,65,0,5,2
	.word	.L149
	.byte	3,203,5,1,5,51,9
	.half	.L1027-.L149
	.byte	1,5,76,9
	.half	.L1028-.L1027
	.byte	1,4,2,5,64,9
	.half	.L1029-.L1028
	.byte	3,136,127,1,5,5,9
	.half	.L614-.L1029
	.byte	3,122,1,7,9
	.half	.L328-.L614
	.byte	0,1,1
.L1024:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_14')
	.sect	'.debug_ranges'
.L327:
	.word	-1,.L149,0,.L328-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_15')
	.sect	'.debug_info'
.L329:
	.word	239
	.half	3
	.word	.L330
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L332,.L331
	.byte	2
	.word	.L160
	.byte	3
	.byte	'.cocofun_15',0,1,229,3,17,1
	.word	.L147,.L333,.L146
	.byte	4
	.word	.L147,.L333
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_15')
	.sect	'.debug_abbrev'
.L330:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_15')
	.sect	'.debug_line'
.L331:
	.word	.L1031-.L1030
.L1030:
	.half	3
	.word	.L1033-.L1032
.L1032:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0,0,0,0
	.byte	'IfxGtm_Atom.h',0,1,0,0,0
.L1033:
	.byte	5,51,7,0,5,2
	.word	.L147
	.byte	3,146,4,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,59,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,221,3,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,240,0,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,229,5,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,232,126,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,214,3,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,247,0,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,211,5,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,250,126,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,203,3,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,130,1,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,135,4,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,198,0,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,200,5,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,133,127,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,5,51,0,5,2
	.word	.L147
	.byte	3,153,4,1,4,2,5,69,9
	.half	.L611-.L147
	.byte	3,52,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1,4,2,5,64,0,5,2
	.word	.L147
	.byte	3,211,4,1,5,69,9
	.half	.L611-.L147
	.byte	3,122,1,5,60,9
	.half	.L1034-.L611
	.byte	1,5,5,9
	.half	.L1035-.L1034
	.byte	1,9
	.half	.L333-.L1035
	.byte	0,1,1
.L1031:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_15')
	.sect	'.debug_ranges'
.L332:
	.word	-1,.L147,0,.L333-.L147,0,0
	.sdecl	'.debug_info',debug,cluster('IfxGtm_Atom_PwmHl_modes')
	.sect	'.debug_info'
.L334:
	.word	230
	.half	3
	.word	.L335
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl\\IfxGtm_Atom_PwmHl.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1,2
	.word	.L160
	.byte	3
	.byte	'IfxGtm_Atom_PwmHl_modes',0,12,129,1,45
	.word	.L553
	.byte	5,3
	.word	IfxGtm_Atom_PwmHl_modes
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('IfxGtm_Atom_PwmHl_modes')
	.sect	'.debug_abbrev'
.L335:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_10')
	.sect	'.debug_loc'
.L134:
	.word	-1,.L135,0,.L308-.L135
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_11')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L133,0,.L313-.L133
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_12')
	.sect	'.debug_loc'
.L130:
	.word	-1,.L131,0,.L318-.L131
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_13')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L323-.L129
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_14')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L149,0,.L328-.L149
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_15')
	.sect	'.debug_loc'
.L146:
	.word	-1,.L147,0,.L333-.L147
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_2')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L143,0,.L268-.L143
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L273-.L141
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_4')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L278-.L139
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_5')
	.sect	'.debug_loc'
.L152:
	.word	-1,.L153,0,.L283-.L153
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_6')
	.sect	'.debug_loc'
.L94:
	.word	-1,.L95,0,.L288-.L95
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_7')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L107,0,.L293-.L107
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_8')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L298-.L113
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_9')
	.sect	'.debug_loc'
.L136:
	.word	-1,.L137,0,.L303-.L137
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L93,0,.L361-.L93
	.half	2
	.byte	138,0
	.word	0,0
.L362:
	.word	-1,.L93,0,.L554-.L93
	.half	1
	.byte	100
	.word	.L95-.L93,.L288-.L93
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L97,0,.L364-.L97
	.half	2
	.byte	138,0
	.word	0,0
.L365:
	.word	-1,.L97,.L95-.L97,.L288-.L97
	.half	1
	.byte	100
	.word	0,.L364-.L97
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L99,0,.L367-.L99
	.half	2
	.byte	138,0
	.word	0,0
.L368:
	.word	-1,.L99,0,.L367-.L99
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L101,0,.L555-.L101
	.half	2
	.byte	138,0
	.word	.L555-.L101,.L337-.L101
	.half	2
	.byte	138,40
	.word	.L337-.L101,.L337-.L101
	.half	2
	.byte	138,0
	.word	0,0
.L353:
	.word	-1,.L101,.L568-.L101,.L569-.L101
	.half	1
	.byte	84
	.word	.L573-.L101,.L574-.L101
	.half	1
	.byte	84
	.word	0,0
.L346:
	.word	-1,.L101,.L6-.L101,.L567-.L101
	.half	1
	.byte	90
	.word	.L567-.L101,.L337-.L101
	.half	1
	.byte	95
	.word	0,0
.L343:
	.word	-1,.L101,.L570-.L101,.L571-.L101
	.half	5
	.byte	144,32,157,32,0
	.word	.L575-.L101,.L576-.L101
	.half	1
	.byte	95
	.word	0,0
.L344:
	.word	-1,.L101,.L560-.L101,.L337-.L101
	.half	1
	.byte	88
	.word	.L561-.L101,.L562-.L101
	.half	1
	.byte	95
	.word	.L578-.L101,.L579-.L101
	.half	1
	.byte	84
	.word	.L580-.L101,.L581-.L101
	.half	1
	.byte	84
	.word	.L585-.L101,.L586-.L101
	.half	1
	.byte	84
	.word	.L587-.L101,.L588-.L101
	.half	1
	.byte	85
	.word	0,0
.L351:
	.word	-1,.L101,.L565-.L101,.L6-.L101
	.half	1
	.byte	82
	.word	.L566-.L101,.L337-.L101
	.half	1
	.byte	89
	.word	.L572-.L101,.L569-.L101
	.half	1
	.byte	85
	.word	.L577-.L101,.L574-.L101
	.half	1
	.byte	85
	.word	0,0
.L341:
	.word	-1,.L101,0,.L556-.L101
	.half	1
	.byte	101
	.word	.L558-.L101,.L559-.L101
	.half	1
	.byte	111
	.word	0,0
.L339:
	.word	-1,.L101,0,.L556-.L101
	.half	1
	.byte	100
	.word	.L557-.L101,.L337-.L101
	.half	1
	.byte	108
	.word	.L563-.L101,.L564-.L101
	.half	1
	.byte	100
	.word	.L582-.L101,.L354-.L101
	.half	1
	.byte	100
	.word	.L583-.L101,.L584-.L101
	.half	1
	.byte	100
	.word	0,0
.L356:
	.word	-1,.L101,0,.L337-.L101
	.half	2
	.byte	145,92
	.word	0,0
.L348:
	.word	-1,.L101,.L560-.L101,.L337-.L101
	.half	1
	.byte	109
	.word	.L589-.L101,.L590-.L101
	.half	1
	.byte	100
	.word	.L591-.L101,.L592-.L101
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_loc'
.L102:
	.word	-1,.L103,0,.L357-.L103
	.half	2
	.byte	138,0
	.word	0,0
.L359:
	.word	-1,.L103,0,.L593-.L103
	.half	1
	.byte	100
	.word	.L594-.L103,.L357-.L103
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L105,0,.L369-.L105
	.half	2
	.byte	138,0
	.word	0,0
.L371:
	.word	-1,.L105,.L107-.L105,.L293-.L105
	.half	1
	.byte	84
	.word	.L595-.L105,.L369-.L105
	.half	1
	.byte	84
	.word	0,0
.L370:
	.word	-1,.L105,.L107-.L105,.L293-.L105
	.half	1
	.byte	100
	.word	.L595-.L105,.L369-.L105
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L373-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L109,.L107-.L109,.L293-.L109
	.half	1
	.byte	100
	.word	.L596-.L109,.L373-.L109
	.half	1
	.byte	100
	.word	0,0
.L375:
	.word	-1,.L109,.L107-.L109,.L293-.L109
	.half	1
	.byte	84
	.word	.L596-.L109,.L373-.L109
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L376-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L382:
	.word	0,0
.L386:
	.word	-1,.L111,.L601-.L111,.L602-.L111
	.half	1
	.byte	84
	.word	.L603-.L111,.L385-.L111
	.half	1
	.byte	84
	.word	0,0
.L384:
	.word	-1,.L111,.L600-.L111,.L19-.L111
	.half	1
	.byte	88
	.word	0,0
.L377:
	.word	-1,.L111,.L113-.L111,.L298-.L111
	.half	1
	.byte	100
	.word	.L113-.L111,.L298-.L111
	.half	1
	.byte	111
	.word	0,.L597-.L111
	.half	1
	.byte	100
	.word	.L598-.L111,.L376-.L111
	.half	1
	.byte	111
	.word	0,0
.L378:
	.word	-1,.L111,.L113-.L111,.L298-.L111
	.half	1
	.byte	84
	.word	0,.L26-.L111
	.half	1
	.byte	84
	.word	0,0
.L380:
	.word	-1,.L111,.L113-.L111,.L298-.L111
	.half	1
	.byte	89
	.word	.L599-.L111,.L376-.L111
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L387-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L388:
	.word	-1,.L115,0,.L387-.L115
	.half	1
	.byte	100
	.word	0,0
.L390:
	.word	-1,.L115,0,.L387-.L115
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L391-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L392:
	.word	-1,.L117,0,.L391-.L117
	.half	1
	.byte	100
	.word	0,0
.L394:
	.word	-1,.L117,0,.L391-.L117
	.half	1
	.byte	102
	.word	0,0
.L393:
	.word	-1,.L117,0,.L391-.L117
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L395-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L396:
	.word	-1,.L119,0,.L395-.L119
	.half	1
	.byte	100
	.word	0,0
.L399:
	.word	-1,.L119,0,.L395-.L119
	.half	1
	.byte	102
	.word	0,0
.L398:
	.word	-1,.L119,0,.L395-.L119
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_loc'
.L120:
	.word	-1,.L121,0,.L400-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L403:
	.word	-1,.L121,0,.L400-.L121
	.half	1
	.byte	101
	.word	0,0
.L401:
	.word	-1,.L121,0,.L400-.L121
	.half	1
	.byte	100
	.word	0,0
.L404:
	.word	-1,.L121,0,.L400-.L121
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L405-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L408:
	.word	-1,.L123,0,.L604-.L123
	.half	1
	.byte	101
	.word	.L606-.L123,.L405-.L123
	.half	1
	.byte	108
	.word	0,0
.L407:
	.word	-1,.L123,0,.L604-.L123
	.half	1
	.byte	100
	.word	.L605-.L123,.L405-.L123
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L409-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L410:
	.word	-1,.L125,0,.L409-.L125
	.half	1
	.byte	100
	.word	0,0
.L412:
	.word	-1,.L125,0,.L409-.L125
	.half	1
	.byte	102
	.word	0,0
.L411:
	.word	-1,.L125,0,.L607-.L125
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L413-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L438:
	.word	0,0
.L428:
	.word	0,0
.L440:
	.word	0,0
.L430:
	.word	0,0
.L417:
	.word	-1,.L127,.L608-.L127,.L318-.L127
	.half	1
	.byte	84
	.word	.L137-.L127,.L303-.L127
	.half	1
	.byte	84
	.word	.L139-.L127,.L278-.L127
	.half	1
	.byte	84
	.word	.L147-.L127,.L333-.L127
	.half	1
	.byte	84
	.word	.L612-.L127,.L613-.L127
	.half	1
	.byte	84
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	84
	.word	.L615-.L127,.L616-.L127
	.half	1
	.byte	84
	.word	.L135-.L127,.L617-.L127
	.half	1
	.byte	84
	.word	.L619-.L127,.L43-.L127
	.half	1
	.byte	84
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	84
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	84
	.word	.L129-.L127,.L626-.L127
	.half	1
	.byte	84
	.word	.L626-.L127,.L323-.L127
	.half	1
	.byte	84
	.word	.L33-.L127,.L413-.L127
	.half	1
	.byte	84
	.word	0,0
.L422:
	.word	-1,.L127,.L618-.L127,.L617-.L127
	.half	1
	.byte	86
	.word	.L611-.L127,.L333-.L127
	.half	1
	.byte	86
	.word	.L443-.L127,.L42-.L127
	.half	1
	.byte	86
	.word	.L620-.L127,.L43-.L127
	.half	1
	.byte	86
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	86
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	86
	.word	.L624-.L127,.L625-.L127
	.half	1
	.byte	86
	.word	0,0
.L423:
	.word	-1,.L127,.L618-.L127,.L617-.L127
	.half	1
	.byte	85
	.word	.L611-.L127,.L333-.L127
	.half	1
	.byte	85
	.word	.L443-.L127,.L42-.L127
	.half	1
	.byte	85
	.word	.L621-.L127,.L43-.L127
	.half	1
	.byte	85
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	85
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	85
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	85
	.word	0,0
.L419:
	.word	-1,.L127,.L608-.L127,.L318-.L127
	.half	1
	.byte	82
	.word	.L137-.L127,.L303-.L127
	.half	1
	.byte	82
	.word	.L139-.L127,.L278-.L127
	.half	1
	.byte	82
	.word	.L147-.L127,.L333-.L127
	.half	1
	.byte	82
	.word	.L612-.L127,.L613-.L127
	.half	1
	.byte	82
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	82
	.word	.L615-.L127,.L616-.L127
	.half	1
	.byte	82
	.word	.L135-.L127,.L617-.L127
	.half	1
	.byte	82
	.word	.L619-.L127,.L43-.L127
	.half	1
	.byte	82
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	82
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	82
	.word	.L129-.L127,.L323-.L127
	.half	1
	.byte	82
	.word	.L33-.L127,.L413-.L127
	.half	1
	.byte	82
	.word	0,0
.L414:
	.word	-1,.L127,.L131-.L127,.L318-.L127
	.half	1
	.byte	100
	.word	.L137-.L127,.L303-.L127
	.half	1
	.byte	100
	.word	.L139-.L127,.L278-.L127
	.half	1
	.byte	100
	.word	.L147-.L127,.L333-.L127
	.half	1
	.byte	100
	.word	.L612-.L127,.L613-.L127
	.half	1
	.byte	100
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	100
	.word	.L615-.L127,.L616-.L127
	.half	1
	.byte	100
	.word	.L135-.L127,.L617-.L127
	.half	1
	.byte	100
	.word	.L619-.L127,.L43-.L127
	.half	1
	.byte	100
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	100
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	100
	.word	.L129-.L127,.L323-.L127
	.half	1
	.byte	100
	.word	.L33-.L127,.L413-.L127
	.half	1
	.byte	100
	.word	0,0
.L418:
	.word	-1,.L127,.L609-.L127,.L318-.L127
	.half	1
	.byte	83
	.word	.L137-.L127,.L303-.L127
	.half	1
	.byte	83
	.word	.L139-.L127,.L278-.L127
	.half	1
	.byte	83
	.word	.L147-.L127,.L333-.L127
	.half	1
	.byte	83
	.word	.L612-.L127,.L613-.L127
	.half	1
	.byte	83
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	83
	.word	.L615-.L127,.L616-.L127
	.half	1
	.byte	83
	.word	.L135-.L127,.L617-.L127
	.half	1
	.byte	83
	.word	.L619-.L127,.L43-.L127
	.half	1
	.byte	83
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	83
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	83
	.word	.L129-.L127,.L323-.L127
	.half	1
	.byte	83
	.word	.L33-.L127,.L413-.L127
	.half	1
	.byte	83
	.word	0,0
.L434:
	.word	0,0
.L432:
	.word	0,0
.L415:
	.word	-1,.L127,.L131-.L127,.L318-.L127
	.half	1
	.byte	101
	.word	.L137-.L127,.L303-.L127
	.half	1
	.byte	101
	.word	.L139-.L127,.L278-.L127
	.half	1
	.byte	101
	.word	.L147-.L127,.L333-.L127
	.half	1
	.byte	101
	.word	.L612-.L127,.L613-.L127
	.half	1
	.byte	101
	.word	.L149-.L127,.L614-.L127
	.half	1
	.byte	101
	.word	.L615-.L127,.L616-.L127
	.half	1
	.byte	101
	.word	.L135-.L127,.L617-.L127
	.half	1
	.byte	101
	.word	.L619-.L127,.L43-.L127
	.half	1
	.byte	101
	.word	.L622-.L127,.L623-.L127
	.half	1
	.byte	101
	.word	.L624-.L127,.L273-.L127
	.half	1
	.byte	101
	.word	.L129-.L127,.L323-.L127
	.half	1
	.byte	101
	.word	.L33-.L127,.L413-.L127
	.half	1
	.byte	101
	.word	0,0
.L421:
	.word	-1,.L127,.L137-.L127,.L303-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L139-.L127,.L278-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L610-.L127,.L426-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L147-.L127,.L611-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L40-.L127,.L443-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L135-.L127,.L617-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	.L42-.L127,.L620-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_loc'
.L144:
	.word	-1,.L145,0,.L445-.L145
	.half	2
	.byte	138,0
	.word	0,0
.L461:
	.word	0,0
.L457:
	.word	0,0
.L462:
	.word	0,0
.L458:
	.word	0,0
.L448:
	.word	-1,.L145,.L627-.L145,.L318-.L145
	.half	1
	.byte	84
	.word	.L139-.L145,.L278-.L145
	.half	1
	.byte	84
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	84
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	84
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	84
	.word	.L629-.L145,.L54-.L145
	.half	1
	.byte	84
	.word	.L129-.L145,.L626-.L145
	.half	1
	.byte	84
	.word	.L626-.L145,.L323-.L145
	.half	1
	.byte	84
	.word	.L466-.L145,.L445-.L145
	.half	1
	.byte	84
	.word	0,0
.L453:
	.word	0,0
.L454:
	.word	-1,.L145,.L611-.L145,.L333-.L145
	.half	1
	.byte	86
	.word	.L628-.L145,.L53-.L145
	.half	1
	.byte	86
	.word	.L53-.L145,.L54-.L145
	.half	1
	.byte	86
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	86
	.word	.L466-.L145,.L44-.L145
	.half	1
	.byte	86
	.word	0,0
.L450:
	.word	-1,.L145,.L608-.L145,.L318-.L145
	.half	1
	.byte	82
	.word	.L139-.L145,.L278-.L145
	.half	1
	.byte	82
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	82
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	82
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	82
	.word	.L629-.L145,.L54-.L145
	.half	1
	.byte	82
	.word	.L129-.L145,.L323-.L145
	.half	1
	.byte	82
	.word	.L466-.L145,.L445-.L145
	.half	1
	.byte	82
	.word	0,0
.L446:
	.word	-1,.L145,.L131-.L145,.L318-.L145
	.half	1
	.byte	100
	.word	.L139-.L145,.L278-.L145
	.half	1
	.byte	100
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	100
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	100
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	100
	.word	.L629-.L145,.L54-.L145
	.half	1
	.byte	100
	.word	.L129-.L145,.L323-.L145
	.half	1
	.byte	100
	.word	.L466-.L145,.L445-.L145
	.half	1
	.byte	100
	.word	0,0
.L449:
	.word	-1,.L145,.L609-.L145,.L318-.L145
	.half	1
	.byte	83
	.word	.L139-.L145,.L278-.L145
	.half	1
	.byte	83
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	83
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	83
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	83
	.word	.L629-.L145,.L54-.L145
	.half	1
	.byte	83
	.word	.L129-.L145,.L323-.L145
	.half	1
	.byte	83
	.word	.L466-.L145,.L445-.L145
	.half	1
	.byte	83
	.word	0,0
.L460:
	.word	0,0
.L459:
	.word	0,0
.L447:
	.word	-1,.L145,.L131-.L145,.L318-.L145
	.half	1
	.byte	101
	.word	.L139-.L145,.L278-.L145
	.half	1
	.byte	101
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	101
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	101
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	101
	.word	.L629-.L145,.L54-.L145
	.half	1
	.byte	101
	.word	.L129-.L145,.L323-.L145
	.half	1
	.byte	101
	.word	.L466-.L145,.L445-.L145
	.half	1
	.byte	101
	.word	0,0
.L452:
	.word	-1,.L145,.L139-.L145,.L278-.L145
	.half	1
	.byte	85
	.word	.L147-.L145,.L333-.L145
	.half	1
	.byte	85
	.word	.L149-.L145,.L614-.L145
	.half	1
	.byte	85
	.word	.L612-.L145,.L268-.L145
	.half	1
	.byte	85
	.word	.L630-.L145,.L54-.L145
	.half	1
	.byte	85
	.word	.L466-.L145,.L631-.L145
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L151,0,.L467-.L151
	.half	2
	.byte	138,0
	.word	0,0
.L475:
	.word	0,0
.L476:
	.word	0,0
.L471:
	.word	-1,.L151,.L153-.L151,.L283-.L151
	.half	1
	.byte	81
	.word	.L473-.L151,.L632-.L151
	.half	1
	.byte	81
	.word	.L55-.L151,.L467-.L151
	.half	1
	.byte	81
	.word	0,0
.L468:
	.word	-1,.L151,.L153-.L151,.L283-.L151
	.half	1
	.byte	100
	.word	0,.L467-.L151
	.half	1
	.byte	100
	.word	0,0
.L472:
	.word	-1,.L151,.L153-.L151,.L283-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	.L633-.L151,.L467-.L151
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L478:
	.word	0,0
.L477:
	.word	0,0
.L469:
	.word	-1,.L151,.L153-.L151,.L283-.L151
	.half	1
	.byte	101
	.word	0,.L467-.L151
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_loc'
.L154:
	.word	-1,.L155,0,.L484-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L512:
	.word	0,0
.L507:
	.word	0,0
.L513:
	.word	0,0
.L508:
	.word	0,0
.L488:
	.word	-1,.L155,.L129-.L155,.L626-.L155
	.half	1
	.byte	84
	.word	.L626-.L155,.L323-.L155
	.half	1
	.byte	84
	.word	.L636-.L155,.L303-.L155
	.half	1
	.byte	84
	.word	.L639-.L155,.L484-.L155
	.half	1
	.byte	84
	.word	0,0
.L498:
	.word	0,0
.L492:
	.word	-1,.L155,.L634-.L155,.L67-.L155
	.half	1
	.byte	81
	.word	.L635-.L155,.L66-.L155
	.half	1
	.byte	81
	.word	0,0
.L517:
	.word	-1,.L155,.L637-.L155,.L77-.L155
	.half	5
	.byte	144,32,157,32,0
	.word	.L638-.L155,.L76-.L155
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L493:
	.word	-1,.L155,.L635-.L155,.L57-.L155
	.half	1
	.byte	95
	.word	0,0
.L518:
	.word	-1,.L155,.L638-.L155,.L69-.L155
	.half	1
	.byte	95
	.word	0,0
.L485:
	.word	-1,.L155,.L129-.L155,.L323-.L155
	.half	1
	.byte	100
	.word	.L636-.L155,.L303-.L155
	.half	1
	.byte	100
	.word	0,.L484-.L155
	.half	1
	.byte	100
	.word	0,0
.L487:
	.word	-1,.L155,.L129-.L155,.L323-.L155
	.half	1
	.byte	102
	.word	.L636-.L155,.L303-.L155
	.half	1
	.byte	102
	.word	0,.L484-.L155
	.half	1
	.byte	102
	.word	0,0
.L489:
	.word	-1,.L155,.L129-.L155,.L323-.L155
	.half	1
	.byte	83
	.word	.L636-.L155,.L303-.L155
	.half	1
	.byte	83
	.word	.L640-.L155,.L484-.L155
	.half	1
	.byte	83
	.word	0,0
.L500:
	.word	0,0
.L510:
	.word	0,0
.L509:
	.word	0,0
.L486:
	.word	-1,.L155,.L129-.L155,.L323-.L155
	.half	1
	.byte	101
	.word	.L636-.L155,.L303-.L155
	.half	1
	.byte	101
	.word	0,.L484-.L155
	.half	1
	.byte	101
	.word	0,0
.L491:
	.word	-1,.L155,.L504-.L155,.L634-.L155
	.half	1
	.byte	81
	.word	.L67-.L155,.L68-.L155
	.half	1
	.byte	81
	.word	0,0
.L516:
	.word	-1,.L155,.L636-.L155,.L303-.L155
	.half	5
	.byte	144,32,157,32,0
	.word	.L523-.L155,.L637-.L155
	.half	5
	.byte	144,32,157,32,0
	.word	.L77-.L155,.L78-.L155
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_loc'
.L156:
	.word	-1,.L157,0,.L528-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L529:
	.word	-1,.L157,0,.L528-.L157
	.half	1
	.byte	100
	.word	0,0
.L531:
	.word	-1,.L157,0,.L528-.L157
	.half	1
	.byte	102
	.word	0,0
.L530:
	.word	-1,.L157,0,.L641-.L157
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_loc'
.L158:
	.word	-1,.L159,0,.L532-.L159
	.half	2
	.byte	138,0
	.word	0,0
.L549:
	.word	0,0
.L545:
	.word	0,0
.L550:
	.word	0,0
.L546:
	.word	0,0
.L536:
	.word	-1,.L159,.L627-.L159,.L318-.L159
	.half	1
	.byte	84
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	84
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	84
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	84
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	84
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	84
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	84
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	84
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	84
	.word	.L129-.L159,.L626-.L159
	.half	1
	.byte	84
	.word	.L626-.L159,.L323-.L159
	.half	1
	.byte	84
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	84
	.word	0,0
.L541:
	.word	-1,.L159,.L618-.L159,.L617-.L159
	.half	1
	.byte	86
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	86
	.word	.L551-.L159,.L88-.L159
	.half	1
	.byte	86
	.word	.L644-.L159,.L88-.L159
	.half	1
	.byte	95
	.word	.L647-.L159,.L89-.L159
	.half	1
	.byte	86
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	86
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	86
	.word	.L624-.L159,.L624-.L159
	.half	1
	.byte	86
	.word	0,0
.L542:
	.word	-1,.L159,.L618-.L159,.L617-.L159
	.half	1
	.byte	85
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	85
	.word	.L551-.L159,.L88-.L159
	.half	1
	.byte	85
	.word	.L91-.L159,.L89-.L159
	.half	1
	.byte	85
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	85
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	85
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	85
	.word	0,0
.L538:
	.word	-1,.L159,.L608-.L159,.L318-.L159
	.half	1
	.byte	82
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	82
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	82
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	82
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	82
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	82
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	82
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	82
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	82
	.word	.L129-.L159,.L323-.L159
	.half	1
	.byte	82
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	82
	.word	0,0
.L533:
	.word	-1,.L159,.L131-.L159,.L318-.L159
	.half	1
	.byte	100
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	100
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	100
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	100
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	100
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	100
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	100
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	100
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	100
	.word	.L129-.L159,.L323-.L159
	.half	1
	.byte	100
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	100
	.word	0,0
.L537:
	.word	-1,.L159,.L609-.L159,.L318-.L159
	.half	1
	.byte	83
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	83
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	83
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	83
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	83
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	83
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	83
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	83
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	83
	.word	.L129-.L159,.L323-.L159
	.half	1
	.byte	83
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	83
	.word	0,0
.L540:
	.word	-1,.L159,.L645-.L159,.L646-.L159
	.half	5
	.byte	144,32,157,32,0
	.word	.L91-.L159,.L89-.L159
	.half	1
	.byte	95
	.word	.L611-.L159,.L333-.L159
	.half	1
	.byte	95
	.word	.L622-.L159,.L648-.L159
	.half	1
	.byte	95
	.word	0,0
.L548:
	.word	0,0
.L547:
	.word	0,0
.L535:
	.word	-1,.L159,.L131-.L159,.L318-.L159
	.half	1
	.byte	102
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	102
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	102
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	102
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	102
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	102
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	102
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	102
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	102
	.word	.L129-.L159,.L323-.L159
	.half	1
	.byte	102
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	102
	.word	0,0
.L534:
	.word	-1,.L159,.L131-.L159,.L318-.L159
	.half	1
	.byte	101
	.word	.L139-.L159,.L278-.L159
	.half	1
	.byte	101
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	101
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	101
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	101
	.word	.L135-.L159,.L617-.L159
	.half	1
	.byte	101
	.word	.L643-.L159,.L89-.L159
	.half	1
	.byte	101
	.word	.L622-.L159,.L313-.L159
	.half	1
	.byte	101
	.word	.L624-.L159,.L273-.L159
	.half	1
	.byte	101
	.word	.L129-.L159,.L323-.L159
	.half	1
	.byte	101
	.word	.L79-.L159,.L532-.L159
	.half	1
	.byte	101
	.word	0,0
.L539:
	.word	-1,.L159,.L139-.L159,.L278-.L159
	.half	1
	.byte	86
	.word	.L147-.L159,.L333-.L159
	.half	1
	.byte	86
	.word	.L149-.L159,.L614-.L159
	.half	1
	.byte	86
	.word	.L612-.L159,.L268-.L159
	.half	1
	.byte	86
	.word	.L642-.L159,.L551-.L159
	.half	1
	.byte	86
	.word	.L135-.L159,.L618-.L159
	.half	1
	.byte	86
	.word	.L88-.L159,.L89-.L159
	.half	1
	.byte	86
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1036:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_getDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L93,.L361-.L93
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_getMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L97,.L364-.L97
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_getMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L99,.L367-.L99
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1036,.L101,.L337-.L101
	.byte	4
	.word	(.L555-.L101)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L337-.L555)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_initConfig')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L103,.L357-.L103
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setDeadtime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L105,.L369-.L105
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setMinPulse')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L109,.L373-.L109
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L111,.L376-.L111
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setOnTime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L115,.L387-.L115
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setOnTimeAndShift')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L117,.L391-.L117
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setPulse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L119,.L395-.L119
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_setupChannels')
	.sect	'.debug_frame'
	.word	24
	.word	.L1036,.L121,.L400-.L121
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_stdIfPwmHlInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L123,.L405-.L123
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updateAndShiftOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L125,.L409-.L125
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updateCenterAligned')
	.sect	'.debug_frame'
	.word	20
	.word	.L1036,.L127,.L413-.L127
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updateEdgeAligned')
	.sect	'.debug_frame'
	.word	20
	.word	.L1036,.L145,.L445-.L145
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updateOff')
	.sect	'.debug_frame'
	.word	20
	.word	.L1036,.L151,.L467-.L151
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updatePulse')
	.sect	'.debug_frame'
	.word	16
	.word	.L1036,.L155,.L484-.L155
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updatePulseOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1036,.L157,.L528-.L157
	.sdecl	'.debug_frame',debug,cluster('IfxGtm_Atom_PwmHl_updateShiftCenterAligned')
	.sect	'.debug_frame'
	.word	16
	.word	.L1036,.L159,.L532-.L159
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1037:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_6')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L95,.L288-.L95
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_7')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L107,.L293-.L107
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_8')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L113,.L298-.L113
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_13')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L129,.L323-.L129
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_12')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L131,.L318-.L131
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_11')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L133,.L313-.L133
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_10')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L135,.L308-.L135
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_9')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L137,.L303-.L137
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_4')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L139,.L278-.L139
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L141,.L273-.L141
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_2')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L143,.L268-.L143
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_15')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L147,.L333-.L147
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_14')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L149,.L328-.L149
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('.cocofun_5')
	.sect	'.debug_frame'
	.word	24
	.word	.L1037,.L153,.L283-.L153
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
