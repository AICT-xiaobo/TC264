	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\.IfxStm.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc27xd -D__CPU_TC27XD__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.src ..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c'

	
$TC16X
	
	.sdecl	'.text.IfxStm.IfxStm_clearCompareFlag',code,cluster('IfxStm_clearCompareFlag')
	.sect	'.text.IfxStm.IfxStm_clearCompareFlag'
	.align	2
	
	.global	IfxStm_clearCompareFlag

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     2   * \file IfxStm.c
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     3   * \brief STM  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     4   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     5   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     6   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     7   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	     9   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    10   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    12   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    13   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    14   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    15   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    16  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    19  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    20   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    21   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    22   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    23   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    24   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    25   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    26  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    27   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    28   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    29   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    30   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    31   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    32   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    33  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    40   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    41  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    42   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    43   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    44  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    45  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    46  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    47  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    48  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    49  #include "IfxStm.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    50  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    51  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    52  /*-------------------------Function Implementations---------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    53  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    54  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    55  void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator)
; Function IfxStm_clearCompareFlag
.L35:
IfxStm_clearCompareFlag:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    56  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    57      if (comparator == IfxStm_Comparator_0)
	jne	d4,#0,.L2
.L305:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    58      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    59          stm->ISCR.B.CMP0IRR = 1U;
	ld.bu	d15,[a4]64
.L306:
	or	d15,#1
	j	.L3
.L2:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    60      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    61      else if (comparator == IfxStm_Comparator_1)
	jne	d4,#1,.L4
.L307:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    62      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    63          stm->ISCR.B.CMP1IRR = 1U;
	ld.bu	d15,[a4]64
.L308:
	or	d15,#4
.L3:
	st.b	[a4]64,d15
.L4:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    64      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    65  }
	ret
.L147:
	
__IfxStm_clearCompareFlag_function_end:
	.size	IfxStm_clearCompareFlag,__IfxStm_clearCompareFlag_function_end-IfxStm_clearCompareFlag
.L88:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_disableComparatorInterrupt',code,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.text.IfxStm.IfxStm_disableComparatorInterrupt'
	.align	2
	
	.global	IfxStm_disableComparatorInterrupt

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    66  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    67  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    68  void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator)
; Function IfxStm_disableComparatorInterrupt
.L37:
IfxStm_disableComparatorInterrupt:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    69  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    70      if (comparator == IfxStm_Comparator_0)
	jne	d4,#0,.L5
.L313:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    71      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    72          stm->ICR.B.CMP0EN = 0U;
	ld.bu	d15,[a4]60
.L314:
	insert	d15,d15,#0,#0,#1
	j	.L6
.L5:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    73      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    74      else // if (comparator == IfxStm_Comparator_1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    75      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    76          stm->ICR.B.CMP1EN = 0U;
	ld.bu	d15,[a4]60
.L315:
	insert	d15,d15,#0,#4,#1
.L6:
	st.b	[a4]60,d15
.L316:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    77      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    78  }
	ret
.L151:
	
__IfxStm_disableComparatorInterrupt_function_end:
	.size	IfxStm_disableComparatorInterrupt,__IfxStm_disableComparatorInterrupt_function_end-IfxStm_disableComparatorInterrupt
.L93:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_disableModule',code,cluster('IfxStm_disableModule')
	.sect	'.text.IfxStm.IfxStm_disableModule'
	.align	2
	
	.global	IfxStm_disableModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    79  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    80  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    81  void IfxStm_disableModule(Ifx_STM *stm)
; Function IfxStm_disableModule
.L39:
IfxStm_disableModule:	.type	func
	mov.aa	a15,a4
.L240:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    82  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    83      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
	call	IfxScuWdt_getCpuWatchdogPassword
.L239:
	mov	d8,d2
.L242:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    84  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    85      IfxScuWdt_clearCpuEndinit(passwd);
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L241:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    86      stm->CLC.B.DISR = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    87      IfxScuWdt_setCpuEndinit(passwd);
	mov	d4,d8
	ld.bu	d15,[a15]
.L243:
	or	d15,#1
	st.b	[a15],d15
.L274:
	j	IfxScuWdt_setCpuEndinit
.L129:
	
__IfxStm_disableModule_function_end:
	.size	IfxStm_disableModule,__IfxStm_disableModule_function_end-IfxStm_disableModule
.L68:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_enableComparatorInterrupt',code,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.text.IfxStm.IfxStm_enableComparatorInterrupt'
	.align	2
	
	.global	IfxStm_enableComparatorInterrupt

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    88  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    89  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    90  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    91  void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator)
; Function IfxStm_enableComparatorInterrupt
.L41:
IfxStm_enableComparatorInterrupt:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    92  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    93      if (comparator == IfxStm_Comparator_0)
	jne	d4,#0,.L7
.L321:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    94      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    95          stm->ICR.B.CMP0EN = 1U;
	ld.bu	d15,[a4]60
.L322:
	or	d15,#1
	j	.L8
.L7:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    96      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    97      else if (comparator == IfxStm_Comparator_1)
	jne	d4,#1,.L9
.L323:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    98      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	    99          stm->ICR.B.CMP1EN = 1U;
	ld.bu	d15,[a4]60
.L324:
	or	d15,#16
.L8:
	st.b	[a4]60,d15
.L9:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   100      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   101  }
	ret
.L154:
	
__IfxStm_enableComparatorInterrupt_function_end:
	.size	IfxStm_enableComparatorInterrupt,__IfxStm_enableComparatorInterrupt_function_end-IfxStm_enableComparatorInterrupt
.L98:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_enableOcdsSuspend',code,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.text.IfxStm.IfxStm_enableOcdsSuspend'
	.align	2
	
	.global	IfxStm_enableOcdsSuspend

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   102  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   103  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   104  void IfxStm_enableOcdsSuspend(Ifx_STM *stm)
; Function IfxStm_enableOcdsSuspend
.L43:
IfxStm_enableOcdsSuspend:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   105  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   106      Ifx_STM_OCS ocs = stm->OCS;
	ld.w	d0,[a4]232
.L244:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   107  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   108      ocs.B.SUS_P      = 1;
	extr.u	d15,d0,#24,#8
.L279:
	or	d15,#16
.L280:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   109      ocs.B.SUS        = 2;
	insert	d15,d15,#2,#0,#4
.L281:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   110      stm->OCS         = ocs;
	insert	d0,d0,d15,#24,#8
	st.w	[a4]232,d0
.L282:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   111      stm->OCS.B.SUS_P = 0;
	ld.bu	d15,[a4]235
.L283:
	insert	d15,d15,#0,#4,#1
	st.b	[a4]235,d15
.L284:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   112  }
	ret
.L134:
	
__IfxStm_enableOcdsSuspend_function_end:
	.size	IfxStm_enableOcdsSuspend,__IfxStm_enableOcdsSuspend_function_end-IfxStm_enableOcdsSuspend
.L73:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_getAddress',code,cluster('IfxStm_getAddress')
	.sect	'.text.IfxStm.IfxStm_getAddress'
	.align	2
	
	.global	IfxStm_getAddress

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   113  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   114  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   115  Ifx_STM *IfxStm_getAddress(IfxStm_Index stm)
; Function IfxStm_getAddress
.L45:
IfxStm_getAddress:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   116  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   117      Ifx_STM *module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   118  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   119      if (stm < IFXSTM_NUM_MODULES)
	jge	d4,#2,.L10
.L289:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   120      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   121          module = (Ifx_STM *)IfxStm_cfg_indexMap[stm].module;
	movh.a	a15,#@his(IfxStm_cfg_indexMap)
	lea	a15,[a15]@los(IfxStm_cfg_indexMap)
.L290:
	addsc.a	a15,a15,d4,#3
.L291:
	ld.a	a2,[a15]
.L245:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   122      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   123      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   124      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   125          module = NULL_PTR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   126      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   127  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   128      return module;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   129  }
	ret
.L10:
	mov.a	a2,#0
.L246:
	ret
.L138:
	
__IfxStm_getAddress_function_end:
	.size	IfxStm_getAddress,__IfxStm_getAddress_function_end-IfxStm_getAddress
.L78:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_getIndex',code,cluster('IfxStm_getIndex')
	.sect	'.text.IfxStm.IfxStm_getIndex'
	.align	2
	
	.global	IfxStm_getIndex

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   130  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   132  IfxStm_Index IfxStm_getIndex(Ifx_STM *stm)
; Function IfxStm_getIndex
.L47:
IfxStm_getIndex:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   133  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   134      uint32       index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   135      IfxStm_Index result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   136  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   137      result = IfxStm_Index_none;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   139      for (index = 0; index < IFXSTM_NUM_MODULES; index++)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   140      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   141          if (IfxStm_cfg_indexMap[index].module == stm)
	mov	d2,#-1
	movh.a	a15,#@his(IfxStm_cfg_indexMap)
.L247:
	lea	a15,[a15]@los(IfxStm_cfg_indexMap)
.L296:
	mov.a	a2,#1
.L13:
	ld.a	a5,[a15]
.L297:
	jne.a	a5,a4,.L14
.L298:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   142          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   143              result = (IfxStm_Index)IfxStm_cfg_indexMap[index].index;
	ld.w	d15,[a15]4
.L299:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   144              break;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   145          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   146      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   147  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   148      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   149  }
	extr	d2,d15,#0,#8
	ret
.L14:
	lea	a15,[a15]8
	loop	a2,.L13
.L300:
	ret
.L142:
	
__IfxStm_getIndex_function_end:
	.size	IfxStm_getIndex,__IfxStm_getIndex_function_end-IfxStm_getIndex
.L83:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_getSrcPointer',code,cluster('IfxStm_getSrcPointer')
	.sect	'.text.IfxStm.IfxStm_getSrcPointer'
	.align	2
	
	.global	IfxStm_getSrcPointer

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   150  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   151  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   152  volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator)
; Function IfxStm_getSrcPointer
.L49:
IfxStm_getSrcPointer:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   153  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   154      IfxStm_Index index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   155      index = IfxStm_getIndex(stm);
	mov	d15,d4
	call	IfxStm_getIndex
.L248:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   156      return comparator == IfxStm_Comparator_0 ? &MODULE_SRC.STM.STM[index].SR0 : &MODULE_SRC.STM.STM[index].SR1;
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf0038490)
.L329:
	addsc.a	a2,a15,d2,#3
.L330:
	jeq	d15,#0,.L18
.L331:
	add.a	a2,#4
.L18:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   157  }
	ret
.L158:
	
__IfxStm_getSrcPointer_function_end:
	.size	IfxStm_getSrcPointer,__IfxStm_getSrcPointer_function_end-IfxStm_getSrcPointer
.L103:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_initCompare',code,cluster('IfxStm_initCompare')
	.sect	'.text.IfxStm.IfxStm_initCompare'
	.align	2
	
	.global	IfxStm_initCompare

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   158  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   159  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   160  boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config)
; Function IfxStm_initCompare
.L51:
IfxStm_initCompare:	.type	func
	mov.aa	a12,a4
.L250:
	mov.aa	a15,a5
.L251:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   161  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   162      sint32        index;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   163      boolean       result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   164      Ifx_STM_CMCON comcon = stm->CMCON;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   165      Ifx_STM_ICR   icr    = stm->ICR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   166  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   167      if (config->comparator == 0)
	ld.bu	d15,[a15]
.L336:
	ld.w	d0,[a12]56
.L252:
	ld.w	d1,[a12]60
.L253:
	jne	d15,#0,.L20
.L337:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   168      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   169          comcon.B.MSIZE0  = config->compareSize;
	ld.bu	d15,[a15]3
.L338:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   170          comcon.B.MSTART0 = config->compareOffset;
	insert	d0,d0,d15,#0,#5
	ld.bu	d15,[a15]2
.L339:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   171          icr.B.CMP0OS     = config->comparatorInterrupt;
	insert	d0,d0,d15,#8,#5
	ld.bu	d15,[a15]1
.L340:
	insert	d1,d1,d15,#2,#1
	j	.L21
.L20:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   172          result           = TRUE;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   173      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   174      else if (config->comparator == 1)
	jne	d15,#1,.L22
.L341:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   175      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   176          comcon.B.MSIZE1  = config->compareSize;
	ld.bu	d15,[a15]3
.L342:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   177          comcon.B.MSTART1 = config->compareOffset;
	insert	d0,d0,d15,#16,#5
	ld.bu	d15,[a15]2
.L343:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   178          icr.B.CMP1OS     = config->comparatorInterrupt;
	insert	d0,d0,d15,#24,#5
	ld.bu	d15,[a15]1
.L344:
	insert	d1,d1,d15,#6,#1
.L21:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   179          result           = TRUE;
	mov	d8,#1
	j	.L23
.L22:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   180      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   181      else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   182      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   183          /*Invalid value */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   184          result = FALSE;
	mov	d8,#0
.L23:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   185      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   186  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   187      stm->ICR.U   = icr.U;
	st.w	[a12]60,d1
.L345:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   188      stm->CMCON.U = comcon.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   189  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   190      /* configure interrupt */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   191      index = IfxStm_getIndex(stm);
	mov.aa	a4,a12
.L346:
	st.w	[a12]56,d0
.L347:
	call	IfxStm_getIndex
.L249:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   192  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   193      if (config->triggerPriority > 0)
	ld.hu	d0,[a15]8
.L348:
	jeq	d0,#0,.L24
.L174:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   194      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   195          volatile Ifx_SRC_SRCR *srcr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   196  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   197          if (config->comparatorInterrupt == IfxStm_ComparatorInterrupt_ir0)
	ld.bu	d15,[a15]1
.L349:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   198          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   199              srcr = &(MODULE_SRC.STM.STM[index].SR0);
	movh.a	a2,#61444
	lea	a2,[a2]@los(0xf0038490)
.L350:
	addsc.a	a2,a2,d2,#3
.L254:
	jeq	d15,#0,.L26
.L351:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   200          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   201          else
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   202          {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   203              srcr = &(MODULE_SRC.STM.STM[index].SR1);
	add.a	a2,#4
.L26:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   204          }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   205  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   206          IfxSrc_init(srcr, config->typeOfService, config->triggerPriority);
	ld.bu	d1,[a15]10
.L177:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     1  /**
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     2   * \file IfxSrc.h
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     3   * \brief SRC  basic functionality
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     4   * \ingroup IfxLld_Src
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     5   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     6   * \version iLLD_1_0_1_11_0
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     8   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	     9   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    10   *                                 IMPORTANT NOTICE
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    11   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    12   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    16   * terms of use are agreed, use of this file is subject to following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    17  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    18  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    20  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    21   * Permission is hereby granted, free of charge, to any person or 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    22   * organization obtaining a copy of the software and accompanying 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    26   * Software is furnished to do so, all subject to the following:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    27  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    28   * The copyright notices in the Software and this entire statement, including
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    29   * the above license grant, this restriction and the following disclaimer, must
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    30   * be included in all copies of the Software, in whole or in part, and all
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    31   * derivative works of the Software, unless such copies or derivative works are
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    32   * solely in the form of machine-executable object code generated by a source
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    33   * language processor.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    34  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    41   * DEALINGS IN THE SOFTWARE.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    42  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    43   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    44   * \defgroup IfxLld_Src SRC
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    45   * \addtogroup IfxLld_Src
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    46   * \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    47   * \defgroup IfxLld_Src_Usage How to use Service Request Mechanism?
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    48   * \addtogroup IfxLld_Src_Usage
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    49   * \{
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    50   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    51   * For Aurix controller peripherals that can generate service requests is connected to one
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    52   * or more Service Request Nodes (SRNs) in the central Interrupt Router(IR) module. Refer to Controller User Manual for more details\n
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    53   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    54   * IfxSrc driver provides the APIs to configure and control service requests. Refer \ref IfxLld_Src_Usage for
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    55   * details of these APIs.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    56   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    57   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    58   * \section Ifx_Src_UsageInit Initialize the Service Request Node
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    59   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    60   * Service request node is initialized to configure the following,\n
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    61   * 1) Route the interrupt trigger to service provider, which are:\n
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    62   *  __a. One of the available CPUs or\n
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    63   *  __b. DMA controller\n
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    64   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    65   * 2) Priority of CPU Interrupt or DMA Trigger.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    66   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    67   * For Interrupt or DMA to be correctly triggered, following steps are to be done in the user code:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    68   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    69   * \subsection Ifx_Src_UsageInitStep1 Step1: Configure the Node
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    70   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    71   * User must configure the service request node in the application / driver files.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    72   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    73   * \subsection Ifx_Src_UsageInitStep2 Step2: Enable the Trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    74   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    75   * Enable the service request node to connect the trigger event from the hardware to service provider.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    76   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    77   * Example:
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    78   * Following example show the configuration for STM0 Service request 0 trigger configured to trigger
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    79   * CPU1 with the priority specified by IFX_INTPRIO_STM0 (from the example at IfxCpu_Irq)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    80   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    81   * \code
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    82   * //file: myApplication.c
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    83   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    84   * #include "Ifx_IntPrioDef.h" // to get the priority numbers
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    85   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    86   * void myDriverInitFunction(void)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    87   * {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    88   *    // driver init code
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    89   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    90   *    // Step1: Call the function to route the trigger from for SRC_STM0_SR0 to CPU1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    91   *    // and priority specified at Ifx_IntPrioDef.h globally
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    92   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0, IfxSrc_Tos_cpu1, IFX_INTPRIO_STM0);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    93   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    94   *    // Step2: Enable the service request node
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    95   *  IfxSrc_init(&MODULE_SRC.STM.STM[0].SR0);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    96   * }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    97   * \endcode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    98   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	    99   * \}
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   100   * \}
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   101   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   102   * \defgroup IfxLld_Src_Std_Service_Request Service Request Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   103   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   104   * \defgroup IfxLld_Src_Std_Module Module Functions
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   105   * \ingroup IfxLld_Src_Std
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   106   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   107  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   108  #ifndef IFXSRC_H
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   109  #define IFXSRC_H 1
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   110  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   111  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   112  /*----------------------------------Includes----------------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   113  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   114  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   115  #include "_Impl/IfxSrc_cfg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   116  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   117  #include "IfxSrc_reg.h"
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   118  /** \addtogroup IfxLld_Src_Std_Service_Request
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   119   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   120  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   121  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   122  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   123  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   124  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   125  /** \brief Resets the overrun flag of the Service Request.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   126   * \param src pointer to the Service Request Control register which the overrun flag should be cleared.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   127   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   128   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   129   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   130   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   131   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   132  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   133  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   134  /** \brief Resets a specific interrupt service by software.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   135   * \param src pointer to the Service Request Control register which the request should be cleared.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   136   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   137   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   138   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   139   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   140   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   141  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   142  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   143  /** \brief Gets the current overrun status.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   144   * \param src pointer to the Service Request Control register for which the overrun status should be returned.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   145   * \return current service request control overrun status.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   146   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   147   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   148   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   149   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   150  IFX_INLINE boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   151  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   152  /** \brief Gets the current request status.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   153   * \param src pointer to the Service Request Control register for which the request status should be returned.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   154   * \return current service request control request status.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   155   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   156   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   157   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   158   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   159  IFX_INLINE boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   160  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   161  /** \brief Requests a specific interrupt service by software
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   162   * \param src pointer to the Service Request Control register which the interrupt has to be requested.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   163   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   164   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   165   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   166   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   167   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   168  IFX_INLINE void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   169  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   170  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   171  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   172  /** \addtogroup IfxLld_Src_Std_Module
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   173   * \{ */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   174  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   175  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   176  /*-------------------------Inline Function Prototypes-------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   177  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   178  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   179  /** \brief DeInitializes the service request control register.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   180   * \param src pointer to the Service Request Control register which should be deinitialised.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   181   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   182   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   183   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   184   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   185   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   186  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   187  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   188  /** \brief Disables a specific interrupt service request.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   189   * \param src pointer to the Service Request Control register for which the interrupt has to be disabled.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   190   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   191   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   192   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   193   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   194   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   195  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   196  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   197  /** \brief Enables a specific interrupt service request.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   198   * \param src pointer to the Service Request Control register for which the interrupt has to be enabled.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   199   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   200   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   201   * Usage example: see \ref IfxSrc_init
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   202   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   203   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   204  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   205  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   206  /** \brief Initializes the service request control register.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   207   * \param src pointer to the Service Request Control register which should be initialised.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   208   * \param typOfService type of interrupt service provider.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   209   * \param priority Interrupt priority.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   210   * \return None
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   211   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   212   * Get the peripheral service control register which request need to be serviced and assign this service to any of service providers.
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   213   * \code
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   214   * //define the interrupt priority
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   215   * #define IFXASCLIN0_TX_INTPRIO 2
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   216   * //get the service request
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   217   * volatile Ifx_SRC_SRCR *src = IfxAsclin_getSrcPointerRx( &MODULE_ASCLIN0 );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   218   * //initlaise the service request
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   219   * IfxSrc_init( src, IfxSrc_Tos_cpu0, IFXASCLIN0_TX_INTPRIO );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   220   * // enable the service
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   221   * IfxSrc_enable( src );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   222   * //check for service request flags and clear if they occur
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   223   * if ( IfxSrc_isRequested( src ) == TRUE )
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   224   * {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   225   *    IfxSrc_clearRequest( src );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   226   * }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   227   * if ( IfxSrc_isOverrun( src ) == TRUE )
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   228   * {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   229   *      IfxSrc_clearOverrun( src );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   230   * }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   231   * // Atlast deinitialise the service control
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   232   * IfxSrc_deinit( src );
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   233   * \endcode
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   234   *
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   235   */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   236  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   237  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   238  /** \} */
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   239  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   240  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   241  /*---------------------Inline Function Implementations------------------------*/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   242  /******************************************************************************/
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   243  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   244  IFX_INLINE void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   245  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   246      src->B.IOVCLR = 1;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   247  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   248  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   249  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   250  IFX_INLINE void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   251  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   252      src->B.CLRR = 1;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   253  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   254  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   255  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   256  IFX_INLINE void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   257  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   258      src->U = 0;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   259  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   260  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   261  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   262  IFX_INLINE void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   263  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   264      src->B.SRE = 0;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   265  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   266  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   267  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   268  IFX_INLINE void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   269  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   270      src->B.SRE = 1;
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   271  }
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   272  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   273  
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   274  IFX_INLINE void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   275  {
; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   276      src->B.SRPN = priority;
	st.b	[a2],d0
.L352:

; E:\tasking workspace\Copy of LQ_TC26xB_LIBtaskingAICTone\src\BaseSw\iLLD\TC26B\Tricore\Src\Std\IfxSrc.h	   277      src->B.TOS  = typOfService;
	ld.bu	d15,[a2]1
.L353:
	insert	d15,d15,d1,#3,#2
	st.b	[a2]1,d15
.L187:
	ld.bu	d15,[a2]3
.L354:
	or	d15,#2
	st.b	[a2]3,d15
.L178:
	ld.bu	d15,[a2]1
.L355:
	or	d15,#4
	st.b	[a2]1,d15
.L24:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
	ld.w	d4,[a12]16
.L203:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   207   ticks to current value to avoid any wrong triggering*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   208      stm->CMP[config->comparator].U = IfxStm_getOffsetTimer(stm, (uint8)config->compareOffset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   209  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   210      /* clear the interrupt flag of the selected comparator before enabling the interrupt */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   211      /* this is to avaoid the unneccesary interrupt for the compare match of reset values of the registers */
	ld.bu	d6,[a15]2
.L208:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d5,[a12]44
.L209:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   552  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   557  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   559      return stm->CMP[comparator].B.CMPVAL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   563  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   565      IFX_UNUSED_PARAMETER(stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   566      float32 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   568      result = IfxScuCcu_getStmFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   570      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   571  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   572  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   574  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   575  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   576      return stm->TIM0.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   577  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   579  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   580  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   581  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   582      return stm->TIM3.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   583  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   584  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   585  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   586  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   587  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   588      return stm->TIM4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   589  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   590  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   591  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   592  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   593  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   594      return stm->TIM5.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   595  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   597  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   598  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   599  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   600      return stm->TIM6.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   601  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   605  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM1.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   607  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   608  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   609  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   611  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   618      uint64 now;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   619  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   620      now = IfxStm_get(stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   622      return (uint32)(now >> offset);
	call	__ll_ushr64
.L196:
	ld.bu	d15,[a15]
.L356:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   212  eccesary interrupt for the compare match of reset values of the registers */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   213      IfxStm_clearCompareFlag(stm, config->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   214      /* enable the interrupt for the selected comparator */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   215      IfxStm_enableComparatorInterrupt(stm, config->comparator);
	mov.aa	a4,a12
.L255:
	addsc.a	a2,a12,d15,#2
.L357:
	st.w	[a2]48,d2
.L358:
	ld.bu	d4,[a15]
	call	IfxStm_clearCompareFlag
.L256:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   216  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   217      /*Configure the comparator ticks */
	ld.bu	d4,[a15]
	mov.aa	a4,a12
.L257:
	call	IfxStm_enableComparatorInterrupt
.L212:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
	ld.w	d4,[a12]16
.L214:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   218  rupt(stm, config->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   219  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   220      /*Configure the comparator ticks */
	ld.bu	d6,[a15]2
.L216:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     1  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     2   * \file IfxStm.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     3   * \brief STM  basic functionality
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     4   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     5   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     6   * \version iLLD_1_0_1_11_0
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     8   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	     9   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    11   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    12   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    17  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    18  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    20  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    27  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    33   * language processor.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    34  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    42  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    43   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    44   * \defgroup IfxLld_Stm_Usage How to use the Stm driver?
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    45   * \ingroup IfxLld_Stm
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    46   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    47   * The Stm Standard driver provides APIs to initialize, configure and control the Stm.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    48   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    49   * In the following sections it will be described, how to integrate the driver into the application framework.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    50   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    51   * \section IfxLld_Stm_Preparation Preparation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    52   * \subsection IfxLld_Stm_Include Include Files
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    53   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    54   * Include following header file into your C code:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    55   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    56   * #include <Stm/Std/IfxStm.h>
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    57   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    58   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    59   * \subsection IfxLld_Stm_Variables Variables
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    60   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    61   * Declare STM variables :
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    62   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    63   * Ifx_STM *stmSfr;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    64   * IfxStm_CompareConfig stmConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    65   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    66   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    67   * \subsection IfxLld_Stm_Interrupt Interrupt Handler Installation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    68   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    69   * See also \ref IfxLld_Cpu_Irq_Usage
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    70   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    71   * Define priorities for the Interrrupt handlers. This is normally done in the Ifx_IntPrioDef.h file:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    72   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    73   * // priorities are normally defined in Ifx_IntPrioDef.h
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    74   * #define IFX_INTPRIO_STM0_SR0  10
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    75   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    76   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    77   * Add the interrupt service routines to your C code. They have to call the Stm interrupt handlers:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    78   * please take care in choosing number of ticks, the below example code will raise an interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    79   * evry time the specified number of ticks have been elapsed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    80   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    81   * IFX_INTERRUPT(stm0Sr0ISR, 0, IFX_INTPRIO_STM0_SR0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    82   * {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    83   *     IfxStm_clearCompareFlag(stmSfr, stmConfig.comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    84   *     IfxStm_increaseCompare(stmSfr, stmConfig.comparator, stmConfig.ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    85   * }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    86   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    87   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    88   * Finally install the interrupt handlers in your initialisation function:
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    89   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    90   *     // install interrupt handlers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    91   *     IfxCpu_Irq_installInterruptHandler(&stm0Sr0ISR, IFX_INTPRIO_STM0_SR0);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    92   *     IfxCpu_enableInterrupts();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    93   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    94   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    95   * \subsection IfxLld_Stm_Init Module Initialisation
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    96   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    97   * The STM module can be configured to generate an interrupt at every compare match of the selected comaparator with the desired compare value, the interrupt can further be routed to other comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    98   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	    99   * The module initialisation can be done as followed.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   100   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   101   * \code
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   102   *     stmSfr = &MODULE_STM0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   103   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   104   *     IfxStm_initCompareConfig(&stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   105   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   106   *     // configure to generate interrupt every 10 us
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   107   *     sint32 ticks = IfxStm_getTicksFromMicroseconds(10);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   108   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   109   *     stmConfig.ticks = ticks;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   110   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   111   *     stmConfig.triggerPriority = IFX_INTPRIO_STM0_SR0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   112   *     stmConfig.typeOfService = IfxSrc_Tos_cpu0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   113   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   114   *     IfxStm_initCompare(stmSfr, &stmConfig);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   115   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   116   * \endcode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   117   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   118   * Now the Stm shall generate interrupts regularly based on the configured time !
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   119   *
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   120   * \defgroup IfxLld_Stm_Std_Enumerations Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   121   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   122   * \defgroup IfxLld_Stm_Std_Structures Data Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   123   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   124   * \defgroup IfxLld_Stm_Std_Module Module Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   125   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   126   * \defgroup IfxLld_Stm_Std_Timer Timer Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   127   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   128   * \defgroup IfxLld_Stm_Std_Comparator Comparator Functions
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   129   * \ingroup IfxLld_Stm_Std
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   130   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   131  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   132  #ifndef IFXSTM_H
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   133  #define IFXSTM_H 1
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   134  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   135  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   136  /*----------------------------------Includes----------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   137  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   138  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   139  #include "_Impl/IfxStm_cfg.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   140  #include "Scu/Std/IfxScuCcu.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   141  #include "Src/Std/IfxSrc.h"
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   142  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   143  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   144  /*--------------------------------Enumerations--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   145  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   146  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   147  /** \addtogroup IfxLld_Stm_Std_Enumerations
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   148   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   149  /** \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   150   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   151  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   152  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   153      IfxStm_Comparator_0 = 0,      /**< \brief Comparator Id 0  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   154      IfxStm_Comparator_1           /**< \brief Comparator Id 1  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   155  } IfxStm_Comparator;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   156  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   157  /** \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   158   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   159  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   160  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   161      IfxStm_ComparatorInterrupt_ir0 = 0,  /**< \brief Select STMIR0 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   162      IfxStm_ComparatorInterrupt_ir1 = 1   /**< \brief Select STMIR1 */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   163  } IfxStm_ComparatorInterrupt;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   164  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   165  /** \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   166   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   167  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   168  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   169      IfxStm_ComparatorOffset_0 = 0,      /**< \brief Comparator start bit position 0 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   170      IfxStm_ComparatorOffset_1,          /**< \brief Comparator start bit position 1 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   171      IfxStm_ComparatorOffset_2,          /**< \brief Comparator start bit position 2 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   172      IfxStm_ComparatorOffset_3,          /**< \brief Comparator start bit position 3 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   173      IfxStm_ComparatorOffset_4,          /**< \brief Comparator start bit position 4 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   174      IfxStm_ComparatorOffset_5,          /**< \brief Comparator start bit position 5 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   175      IfxStm_ComparatorOffset_6,          /**< \brief Comparator start bit position 6 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   176      IfxStm_ComparatorOffset_7,          /**< \brief Comparator start bit position 7 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   177      IfxStm_ComparatorOffset_8,          /**< \brief Comparator start bit position 8 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   178      IfxStm_ComparatorOffset_9,          /**< \brief Comparator start bit position 9 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   179      IfxStm_ComparatorOffset_10,         /**< \brief Comparator start bit position 10 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   180      IfxStm_ComparatorOffset_11,         /**< \brief Comparator start bit position 11 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   181      IfxStm_ComparatorOffset_12,         /**< \brief Comparator start bit position 12 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   182      IfxStm_ComparatorOffset_13,         /**< \brief Comparator start bit position 13 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   183      IfxStm_ComparatorOffset_14,         /**< \brief Comparator start bit position 14 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   184      IfxStm_ComparatorOffset_15,         /**< \brief Comparator start bit position 15 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   185      IfxStm_ComparatorOffset_16,         /**< \brief Comparator start bit position 16 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   186      IfxStm_ComparatorOffset_17,         /**< \brief Comparator start bit position 17 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   187      IfxStm_ComparatorOffset_18,         /**< \brief Comparator start bit position 18 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   188      IfxStm_ComparatorOffset_19,         /**< \brief Comparator start bit position 19 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   189      IfxStm_ComparatorOffset_20,         /**< \brief Comparator start bit position 20 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   190      IfxStm_ComparatorOffset_21,         /**< \brief Comparator start bit position 21 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   191      IfxStm_ComparatorOffset_22,         /**< \brief Comparator start bit position 22 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   192      IfxStm_ComparatorOffset_23,         /**< \brief Comparator start bit position 23 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   193      IfxStm_ComparatorOffset_24,         /**< \brief Comparator start bit position 24 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   194      IfxStm_ComparatorOffset_25,         /**< \brief Comparator start bit position 25 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   195      IfxStm_ComparatorOffset_26,         /**< \brief Comparator start bit position 26 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   196      IfxStm_ComparatorOffset_27,         /**< \brief Comparator start bit position 27 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   197      IfxStm_ComparatorOffset_28,         /**< \brief Comparator start bit position 28 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   198      IfxStm_ComparatorOffset_29,         /**< \brief Comparator start bit position 29 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   199      IfxStm_ComparatorOffset_30,         /**< \brief Comparator start bit position 30 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   200      IfxStm_ComparatorOffset_31          /**< \brief Comparator start bit position 31 with 64 bit timer  */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   201  } IfxStm_ComparatorOffset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   202  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   203  /** \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   204   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   205  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   206  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   207      IfxStm_ComparatorSize_1Bit   = 0,   /**< \brief Size of compare value to compare with timer: 1 bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   208      IfxStm_ComparatorSize_2Bits  = 1,   /**< \brief Size of compare value to compare with timer: 2 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   209      IfxStm_ComparatorSize_3Bits  = 2,   /**< \brief Size of compare value to compare with timer: 3 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   210      IfxStm_ComparatorSize_4Bits  = 3,   /**< \brief Size of compare value to compare with timer: 4 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   211      IfxStm_ComparatorSize_5Bits  = 4,   /**< \brief Size of compare value to compare with timer: 5 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   212      IfxStm_ComparatorSize_6Bits  = 5,   /**< \brief Size of compare value to compare with timer: 6 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   213      IfxStm_ComparatorSize_7Bits  = 6,   /**< \brief Size of compare value to compare with timer: 7 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   214      IfxStm_ComparatorSize_8Bits  = 7,   /**< \brief Size of compare value to compare with timer: 8 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   215      IfxStm_ComparatorSize_9Bits  = 8,   /**< \brief Size of compare value to compare with timer: 9 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   216      IfxStm_ComparatorSize_10Bits = 9,   /**< \brief Size of compare value to compare with timer: 10 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   217      IfxStm_ComparatorSize_11Bits = 10,  /**< \brief Size of compare value to compare with timer: 11 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   218      IfxStm_ComparatorSize_12Bits = 11,  /**< \brief Size of compare value to compare with timer: 12 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   219      IfxStm_ComparatorSize_13Bits = 12,  /**< \brief Size of compare value to compare with timer: 13 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   220      IfxStm_ComparatorSize_14Bits = 13,  /**< \brief Size of compare value to compare with timer: 14 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   221      IfxStm_ComparatorSize_15Bits = 14,  /**< \brief Size of compare value to compare with timer: 15 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   222      IfxStm_ComparatorSize_16Bits = 15,  /**< \brief Size of compare value to compare with timer: 16 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   223      IfxStm_ComparatorSize_17Bits = 16,  /**< \brief Size of compare value to compare with timer: 17 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   224      IfxStm_ComparatorSize_18Bits = 17,  /**< \brief Size of compare value to compare with timer: 18 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   225      IfxStm_ComparatorSize_19Bits = 18,  /**< \brief Size of compare value to compare with timer: 19 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   226      IfxStm_ComparatorSize_20Bits = 19,  /**< \brief Size of compare value to compare with timer: 20 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   227      IfxStm_ComparatorSize_21Bits = 20,  /**< \brief Size of compare value to compare with timer: 21 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   228      IfxStm_ComparatorSize_22Bits = 21,  /**< \brief Size of compare value to compare with timer: 22 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   229      IfxStm_ComparatorSize_23Bits = 22,  /**< \brief Size of compare value to compare with timer: 23 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   230      IfxStm_ComparatorSize_24Bits = 23,  /**< \brief Size of compare value to compare with timer: 24 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   231      IfxStm_ComparatorSize_25Bits = 24,  /**< \brief Size of compare value to compare with timer: 25 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   232      IfxStm_ComparatorSize_26Bits = 25,  /**< \brief Size of compare value to compare with timer: 26 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   233      IfxStm_ComparatorSize_27Bits = 26,  /**< \brief Size of compare value to compare with timer: 27 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   234      IfxStm_ComparatorSize_28Bits = 27,  /**< \brief Size of compare value to compare with timer: 28 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   235      IfxStm_ComparatorSize_29Bits = 28,  /**< \brief Size of compare value to compare with timer: 29 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   236      IfxStm_ComparatorSize_30Bits = 29,  /**< \brief Size of compare value to compare with timer: 30 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   237      IfxStm_ComparatorSize_31Bits = 30,  /**< \brief Size of compare value to compare with timer: 31 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   238      IfxStm_ComparatorSize_32Bits = 31   /**< \brief Size of compare value to compare with timer: 32 bits */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   239  } IfxStm_ComparatorSize;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   240  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   241  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   242   * Definition in Ifx_STM.CLC.B.EDIS
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   243   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   244  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   245  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   246      IfxStm_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   247      IfxStm_SleepMode_disable = 1  /**< \brief disables sleep mode */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   248  } IfxStm_SleepMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   249  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   250  /** \brief OCDS Suspend Control (OCDS.SUS)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   251   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   252  typedef enum
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   253  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   254      IfxStm_SuspendMode_none = 0,  /**< \brief No suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   255      IfxStm_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   256      IfxStm_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   257  } IfxStm_SuspendMode;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   258  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   259  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   260  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   261  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   262  /*-----------------------------Data Structures--------------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   263  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   264  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   265  /** \addtogroup IfxLld_Stm_Std_Structures
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   266   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   267  /** \brief Comparator Configuration Structure
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   268   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   269  typedef struct
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   270  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   271      IfxStm_Comparator          comparator;                /**< \brief Comparator Id defined in   MODULE_STMx.ISCR.B.CMP0IRR(x = 0, 1, 2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   272      IfxStm_ComparatorInterrupt comparatorInterrupt;       /**< \brief Comparator Interrupt request source defined in MODULE_SRC.STM.STM[index].SRx (x =0, 1). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   273      IfxStm_ComparatorOffset    compareOffset;             /**< \brief Comparator start bit position  defined in MODULE_STMx.CMCON.B.MSTART0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   274      IfxStm_ComparatorSize      compareSize;               /**< \brief Size of compare value to compare with timer defined in  MODULE_STMx.CMCON.B.MSIZE0(x = 0,1,2). */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   275      uint32                     ticks;                     /**< \brief count for next comparison from current timer count. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   276      Ifx_Priority               triggerPriority;           /**< \brief Interrupt priority. Range = 0 .. 255. 0 = interrupt is disabled. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   277      IfxSrc_Tos                 typeOfService;             /**< \brief Type of service. */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   278  } IfxStm_CompareConfig;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   279  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   280  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   281  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   282  /** \addtogroup IfxLld_Stm_Std_Module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   283   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   284  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   285  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   286  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   287  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   288  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   289  /** \brief Returns system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   290   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   291   * \return system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   292   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   293  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   294  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   295  /** \brief Returns the system timer frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   296   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   297   * \return the system timer frequency in Hz.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   298   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   299  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   300  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   301  /** \brief Returns the module's suspend state.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   302   * TRUE :if module is suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   303   * FALSE:if module is not yet suspended.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   304   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   305   * \return Suspend status (TRUE / FALSE)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   306   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   307  IFX_INLINE boolean IfxStm_isModuleSuspended(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   308  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   309  /** \brief Configure the Module to Hard/Soft suspend mode.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   310   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   311   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   312   * \param mode Module suspend mode
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   313   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   314   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   315  IFX_INLINE void IfxStm_setSuspendMode(Ifx_STM *stm, IfxStm_SuspendMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   316  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   317  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   318  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   319  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   320  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   321  /** \brief Disables the Stm module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   322   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   323   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   324   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   325  IFX_EXTERN void IfxStm_disableModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   326  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   327  /** \brief enable suspend by debugger.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   328   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   329   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   330   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   331  IFX_EXTERN void IfxStm_enableOcdsSuspend(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   332  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   333  /** \brief Returns the module index of the selected STM module
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   334   * \param stm Pointer to STM module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   335   * \return STM module register address
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   336   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   337  IFX_EXTERN Ifx_STM *IfxStm_getAddress(IfxStm_Index stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   338  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   339  /** \brief API to get the resource index of the STM specified.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   340   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   341   * \return system timer module index.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   342   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   343  IFX_EXTERN IfxStm_Index IfxStm_getIndex(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   344  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   345  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   346  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   347  /** \addtogroup IfxLld_Stm_Std_Timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   348   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   349  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   350  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   351  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   352  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   353  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   354  /** \brief Returns the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   355   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   356   * \return the lower system timer value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   357   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   358  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   359  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   360  /** \brief Gets the TIM3 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   361   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   362   * \return TIM3 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   363   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   364  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   365  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   366  /** \brief Gets the TIM4 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   367   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   368   * \return TIM4 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   369   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   370  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   371  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   372  /** \brief Gets the TIM5 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   373   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   374   * \return TIM5 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   375   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   376  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   377  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   378  /** \brief Gets the TIM6 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   379   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   380   * \return TIM6 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   381   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   382  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   383  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   384  /** \brief Gets the TIM1 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   385   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   386   * \return TIM1 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   387   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   388  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   389  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   390  /** \brief Gets the TIM2 couter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   391   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   392   * \return TIM2 counter value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   393   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   394  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   395  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   396  /** \brief Returns the timer value shifted right by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   397   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   398   * \param offset offset value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   399   * \return the lower system timer value shifted by offset.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   400   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   401  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   402  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   403  /** \brief Wait for requested time.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   404   * The macro waits in while loop for the specified time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   405   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   406   * \param ticks ticks Wait time in system timer ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   407   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   408   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   409  IFX_INLINE void IfxStm_waitTicks(Ifx_STM *stm, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   410  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   411  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   412  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   413  /** \addtogroup IfxLld_Stm_Std_Comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   414   * \{ */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   415  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   416  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   417  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   418  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   419  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   420  /** \brief Returns the updated compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   421   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   422   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   423   * \return The compare value
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   424   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   425  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   426  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   427  /** \brief Returns the number of ticks for the selected micro seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   428   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   429   * \param microSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   430   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   431   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   432  IFX_INLINE sint32 IfxStm_getTicksFromMicroseconds(Ifx_STM *stm, uint32 microSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   433  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   434  /** \brief Returns the number of ticks for the selected milli seconds based on the STM frequency.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   435   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   436   * \param milliSeconds Number of micro seconds that need to be converted to ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   437   * \return ticks
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   438   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   439  IFX_INLINE sint32 IfxStm_getTicksFromMilliseconds(Ifx_STM *stm, uint32 milliSeconds);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   440  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   441  /** \brief Update the compare register value increased with given ticks.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   442   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   443   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   444   * \param ticks count for next comparison from current timer count.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   445   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   446   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   447  IFX_INLINE void IfxStm_increaseCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   448  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   449  /** \brief Update the compare register value.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   450   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   451   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   452   * \param ticks count for next comparison.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   453   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   454   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   455  IFX_INLINE void IfxStm_updateCompare(Ifx_STM *stm, IfxStm_Comparator comparator, uint32 ticks);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   456  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   457  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   458  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   459  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   460  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   461  /** \brief Clear the compare interrupt flag.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   462   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   463   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   464   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   465   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   466  IFX_EXTERN void IfxStm_clearCompareFlag(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   467  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   468  /** \brief Disables the compare interrupt
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   469   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   470   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   471   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   472   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   473  IFX_EXTERN void IfxStm_disableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   474  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   475  /** \brief Enables the compare interrupt .
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   476   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   477   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   478   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   479   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   480  IFX_EXTERN void IfxStm_enableComparatorInterrupt(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   481  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   482  /** \brief get the interrupt source pointer for the comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   483   * \param stm pointer to the STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   484   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   485   * \return pointer to the interrupt source
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   486   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   487  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxStm_getSrcPointer(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   488  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   489  /** \brief Initialise stm compare register.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   490   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   491   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   492   * \return TRUE if Comparator successful otherwise FLASE.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   493   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   494  IFX_EXTERN boolean IfxStm_initCompare(Ifx_STM *stm, const IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   495  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   496  /** \brief Initialise compare configuration with default values.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   497   * \param config pointer to configuration structure.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   498   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   499   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   500  IFX_EXTERN void IfxStm_initCompareConfig(IfxStm_CompareConfig *config);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   501  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   502  /** \brief Indicates if the compare interrupt flag is set.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   503   * \param stm pointer to System timer module registers.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   504   * \param comparator comparator selection comparator.
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   505   * \return TRUE if the comparator flag is set
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   506   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   507  IFX_EXTERN boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   508  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   509  /** \brief Set the compare behavior
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   510   * \param stm pointer to System timer module registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   511   * \param comparator comparator selection comparator
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   512   * \param offset Comparator start bit position
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   513   * \param size Size of compare value to compare with timer
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   514   * \param interrupt Comparator Interrupt request source defined
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   515   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   516   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   517  IFX_EXTERN void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   518  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   519  /** \} */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   520  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   521  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   522  /*-------------------------Inline Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   523  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   524  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   525  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   526   * \param stm pointer STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   527   * \param mode mode selection (enable/ disable)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   528   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   529   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   530  IFX_INLINE void IfxStm_setSleepMode(Ifx_STM *stm, IfxStm_SleepMode mode);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   531  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   532  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   533  /*-------------------------Global Function Prototypes-------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   534  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   535  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   536  /**
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   537   * \param stm pointer to STM registers
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   538   * \return None
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   539   */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   540  IFX_EXTERN void IfxStm_resetModule(Ifx_STM *stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   541  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   542  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   543  /*---------------------Inline Function Implementations------------------------*/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   544  /******************************************************************************/
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   545  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   546  IFX_INLINE uint64 IfxStm_get(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   547  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   548      uint64 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   549  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   550      result  = stm->TIM0.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   551      result |= ((uint64)stm->CAP.U) << 32;
	ld.w	d5,[a12]44
.L217:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   552  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   553      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   554  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   555  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   556  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   557  IFX_INLINE uint32 IfxStm_getCompare(Ifx_STM *stm, IfxStm_Comparator comparator)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   558  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   559      return stm->CMP[comparator].B.CMPVAL;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   560  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   561  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   562  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   563  IFX_INLINE float32 IfxStm_getFrequency(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   564  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   565      IFX_UNUSED_PARAMETER(stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   566      float32 result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   567  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   568      result = IfxScuCcu_getStmFrequency();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   569  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   570      return result;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   571  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   572  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   573  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   574  IFX_INLINE uint32 IfxStm_getLower(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   575  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   576      return stm->TIM0.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   577  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   578  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   579  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   580  IFX_INLINE uint32 IfxStm_getOffset12Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   581  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   582      return stm->TIM3.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   583  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   584  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   585  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   586  IFX_INLINE uint32 IfxStm_getOffset16Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   587  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   588      return stm->TIM4.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   589  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   590  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   591  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   592  IFX_INLINE uint32 IfxStm_getOffset20Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   593  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   594      return stm->TIM5.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   595  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   596  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   597  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   598  IFX_INLINE uint32 IfxStm_getOffset32Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   599  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   600      return stm->TIM6.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   601  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   602  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   603  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   604  IFX_INLINE uint32 IfxStm_getOffset4Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   605  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   606      return stm->TIM1.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   607  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   608  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   609  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   610  IFX_INLINE uint32 IfxStm_getOffset8Timer(Ifx_STM *stm)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   611  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   612      return stm->TIM2.U;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   613  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   614  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   615  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   616  IFX_INLINE uint32 IfxStm_getOffsetTimer(Ifx_STM *stm, uint8 offset)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   617  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   618      uint64 now;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   619  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   620      now = IfxStm_get(stm);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   621  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.h	   622      return (uint32)(now >> offset);
	call	__ll_ushr64
.L213:
	ld.bu	d15,[a15]
.L359:
	addsc.a	a2,a12,d15,#2
.L360:
	ld.w	d15,[a15]4
.L361:
	add	d15,d2
	st.w	[a2]48,d15
.L362:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   221  rupt(stm, config->comparator);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   222  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   223      /*Configure the comparator ticks */
	mov	d2,d8
	ret
.L163:
	
__IfxStm_initCompare_function_end:
	.size	IfxStm_initCompare,__IfxStm_initCompare_function_end-IfxStm_initCompare
.L108:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_initCompareConfig',code,cluster('IfxStm_initCompareConfig')
	.sect	'.text.IfxStm.IfxStm_initCompareConfig'
	.align	2
	
	.global	IfxStm_initCompareConfig

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   224      stm->CMP[config->comparator].U = IfxStm_getOffsetTimer(stm, (uint8)config->compareOffset) + config->ticks;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   225  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   226      return result;
; Function IfxStm_initCompareConfig
.L53:
IfxStm_initCompareConfig:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   227  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   228  
	mov	d15,#0
	st.b	[a4],d15
.L367:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   229  
	st.b	[a4]2,d15
.L368:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   230  void IfxStm_initCompareConfig(IfxStm_CompareConfig *config)
	mov	d0,#31
	st.b	[a4]3,d0
.L369:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   231  {
	st.b	[a4]1,d15
.L370:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   232      config->comparator          = IfxStm_Comparator_0;
	mov	d0,#-1
	st.w	[a4]4,d0
.L371:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   233      config->compareOffset       = IfxStm_ComparatorOffset_0;
	st.h	[a4]8,d15
.L372:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   234      config->compareSize         = IfxStm_ComparatorSize_32Bits;
	st.b	[a4]10,d15
.L373:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   235      config->comparatorInterrupt = IfxStm_ComparatorInterrupt_ir0;     /*User must select the interrupt output */
	ret
.L219:
	
__IfxStm_initCompareConfig_function_end:
	.size	IfxStm_initCompareConfig,__IfxStm_initCompareConfig_function_end-IfxStm_initCompareConfig
.L113:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_isCompareFlagSet',code,cluster('IfxStm_isCompareFlagSet')
	.sect	'.text.IfxStm.IfxStm_isCompareFlagSet'
	.align	2
	
	.global	IfxStm_isCompareFlagSet

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   236      config->ticks               = 0xFFFFFFFF;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   237      config->triggerPriority     = 0;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   238      config->typeOfService       = IfxSrc_Tos_cpu0;
; Function IfxStm_isCompareFlagSet
.L55:
IfxStm_isCompareFlagSet:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   239  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   240  
	jne	d4,#0,.L28
.L378:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   241  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   242  boolean IfxStm_isCompareFlagSet(Ifx_STM *stm, IfxStm_Comparator comparator)
	ld.bu	d15,[a4]60
.L379:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   243  {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   244      if (comparator == IfxStm_Comparator_0)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   245      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   246          return stm->ICR.B.CMP0IR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   247      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   248      else // if (comparator == IfxStm_Comparator_1)
	extr.u	d2,d15,#1,#1
	ret
.L28:
	ld.bu	d15,[a4]60
.L380:
	extr.u	d2,d15,#5,#1
	ret
.L222:
	
__IfxStm_isCompareFlagSet_function_end:
	.size	IfxStm_isCompareFlagSet,__IfxStm_isCompareFlagSet_function_end-IfxStm_isCompareFlagSet
.L118:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_resetModule',code,cluster('IfxStm_resetModule')
	.sect	'.text.IfxStm.IfxStm_resetModule'
	.align	2
	
	.global	IfxStm_resetModule

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   249      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   250          return stm->ICR.B.CMP1IR;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   251      }
; Function IfxStm_resetModule
.L57:
IfxStm_resetModule:	.type	func
	mov.aa	a15,a4
.L259:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   252  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   253  
	call	IfxScuWdt_getCpuWatchdogPassword
.L258:
	mov	d8,d2
.L261:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   254  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   255  void IfxStm_resetModule(Ifx_STM *stm)
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L260:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   256  {
	ld.bu	d15,[a15]244
.L396:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   257      uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   258  
	mov	d4,d8
.L262:
	or	d15,#1
	st.b	[a15]244,d15
.L397:
	ld.bu	d15,[a15]240
.L398:
	or	d15,#1
	st.b	[a15]240,d15
.L399:
	call	IfxScuWdt_setCpuEndinit

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   259      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   260      stm->KRST0.B.RST = 1;           /* Only if both Kernel reset bits are set a reset is executed */
.L31:
	ld.bu	d15,[a15]244
.L400:
	jz.t	d15:1,.L31
.L401:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   261      stm->KRST1.B.RST = 1;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   262      IfxScuWdt_setCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   263  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   264      while (0 == stm->KRST0.B.RSTSTAT)   /* Wait until reset is executed */
	mov	d4,d8
	call	IfxScuWdt_clearCpuEndinit
.L402:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   265  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   266      {}
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   267  
	mov	d4,d8
	ld.bu	d15,[a15]236
.L263:
	or	d15,#1
	st.b	[a15]236,d15
.L403:
	j	IfxScuWdt_setCpuEndinit
.L236:
	
__IfxStm_resetModule_function_end:
	.size	IfxStm_resetModule,__IfxStm_resetModule_function_end-IfxStm_resetModule
.L128:
	; End of function
	
	.sdecl	'.text.IfxStm.IfxStm_setCompareControl',code,cluster('IfxStm_setCompareControl')
	.sect	'.text.IfxStm.IfxStm_setCompareControl'
	.align	2
	
	.global	IfxStm_setCompareControl

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   268      IfxScuWdt_clearCpuEndinit(passwd);
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   269      stm->KRSTCLR.B.CLR = 1;         /* Clear Kernel reset status bit */
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   270  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   271      IfxScuWdt_setCpuEndinit(passwd);
; Function IfxStm_setCompareControl
.L59:
IfxStm_setCompareControl:	.type	func

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   272  }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   273  
	ld.w	d15,[a4]56
.L264:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   274  
	ld.w	d0,[a4]60
.L265:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   275  void IfxStm_setCompareControl(Ifx_STM *stm, IfxStm_Comparator comparator, IfxStm_ComparatorOffset offset, IfxStm_ComparatorSize size, IfxStm_ComparatorInterrupt interrupt)
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   276  {
	jne	d4,#0,.L32
.L385:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   277      Ifx_STM_CMCON comcon = stm->CMCON;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   278      Ifx_STM_ICR   icr    = stm->ICR;
	insert	d15,d15,d6,#0,#5
.L386:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   279  
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   280      if (comparator == 0)
	insert	d1,d0,d7,#2,#1
.L387:
	insert	d15,d15,d5,#8,#5
	j	.L33
.L32:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   281      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   282          comcon.B.MSIZE0  = size;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   283          comcon.B.MSTART0 = offset;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   284          icr.B.CMP0OS     = interrupt;
	insert	d15,d15,d6,#16,#5
.L388:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   285      }
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   286      else // if (comparator == 1)
	insert	d1,d0,d7,#6,#1
.L389:
	insert	d15,d15,d5,#24,#5
.L33:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   287      {
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   288          comcon.B.MSIZE1  = size;
; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   289          comcon.B.MSTART1 = offset;
	insert	d0,d0,d1,#0,#8
	st.w	[a4]60,d0
.L390:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   290          icr.B.CMP1OS     = interrupt;
	st.w	[a4]56,d15
.L391:

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   291      }
	ret
.L225:
	
__IfxStm_setCompareControl_function_end:
	.size	IfxStm_setCompareControl,__IfxStm_setCompareControl_function_end-IfxStm_setCompareControl
.L123:
	; End of function
	
	.calls	'IfxStm_initCompare','__ll_ushr64'
	.calls	'IfxStm_disableModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxStm_disableModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxStm_disableModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxStm_getSrcPointer','IfxStm_getIndex'
	.calls	'IfxStm_initCompare','IfxStm_getIndex'
	.calls	'IfxStm_initCompare','IfxStm_clearCompareFlag'
	.calls	'IfxStm_initCompare','IfxStm_enableComparatorInterrupt'
	.calls	'IfxStm_resetModule','IfxScuWdt_getCpuWatchdogPassword'
	.calls	'IfxStm_resetModule','IfxScuWdt_clearCpuEndinit'
	.calls	'IfxStm_resetModule','IfxScuWdt_setCpuEndinit'
	.calls	'IfxStm_clearCompareFlag','',0
	.calls	'IfxStm_disableComparatorInterrupt','',0
	.calls	'IfxStm_disableModule','',0
	.calls	'IfxStm_enableComparatorInterrupt','',0
	.calls	'IfxStm_enableOcdsSuspend','',0
	.calls	'IfxStm_getAddress','',0
	.calls	'IfxStm_getIndex','',0
	.calls	'IfxStm_getSrcPointer','',0
	.calls	'IfxStm_initCompare','',0
	.calls	'IfxStm_initCompareConfig','',0
	.calls	'IfxStm_isCompareFlagSet','',0
	.calls	'IfxStm_resetModule','',0
	.extern	IfxStm_cfg_indexMap
	.extern	IfxScuWdt_clearCpuEndinit
	.extern	IfxScuWdt_setCpuEndinit
	.extern	IfxScuWdt_getCpuWatchdogPassword
	.extern	__ll_ushr64
	.calls	'IfxStm_setCompareControl','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L61:
	.word	81459
	.half	3
	.word	.L62
	.byte	4
.L60:
	.byte	1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L63
	.byte	2,1,1,3
	.word	175
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	178
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	223
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	235
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,172,2,17,1,1,6,0
.L210:
	.byte	7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	347
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	321
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	353
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	353
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	321
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,241,8,16,4,11
	.byte	'ENDINIT',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	462
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	462
	.byte	16,0,2,35,0,0,12,4,247,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	478
	.byte	4,2,35,0,0
.L162:
	.byte	7
	.byte	'unsigned char',0,1,8
.L132:
	.byte	7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,250,8,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'IR0',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,4,255,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	653
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,137,9,16,4,11
	.byte	'AE',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,4,135,15,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	897
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,175,15,25,12,13
	.byte	'CON0',0
	.word	574
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	857
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1088
	.byte	4,2,35,8,0,14
	.word	1128
	.byte	3
	.word	1191
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,181,3,17,1,1,5
	.byte	'watchdog',0,3,181,3,65
	.word	1196
	.byte	5
	.byte	'password',0,3,181,3,82
	.word	631
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,140,4,17,1,1,5
	.byte	'watchdog',0,3,140,4,63
	.word	1196
	.byte	5
	.byte	'password',0,3,140,4,80
	.word	631
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,227,3,19
	.word	631
	.byte	1,1,5
	.byte	'watchdog',0,3,227,3,74
	.word	1196
	.byte	6,0,15,6,156,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_none',0,2,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,141,6,31
	.word	1426
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,139,5,20
	.word	614
	.byte	1,1,6,0
.L144:
	.byte	7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,161,6,19
	.word	1581
	.byte	1,1,5
	.byte	'address',0,5,161,6,55
	.word	631
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,190,6,20
	.word	614
	.byte	1,1,5
	.byte	'address',0,5,190,6,70
	.word	631
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,172,8,17,1,1,5
	.byte	'address',0,5,172,8,56
	.word	1581
	.byte	5
	.byte	'count',0,5,172,8,72
	.word	1581
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,143,3,16,4,11
	.byte	'P0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,181,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	1812
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,169,2,16,4,11
	.byte	'PS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,133,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2128
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,110,16,4,11
	.byte	'MODREV',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,148,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2699
	.byte	4,2,35,0,0,18,4
	.word	614
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,140,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	614
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	614
	.byte	5,0,2,35,3,0,12,8,164,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2827
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,166,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	614
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	614
	.byte	5,0,2,35,3,0,12,8,180,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3042
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,179,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	614
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	614
	.byte	5,0,2,35,3,0,12,8,188,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3257
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,153,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	614
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	614
	.byte	5,0,2,35,3,0,12,8,172,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3474
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,118,16,4,11
	.byte	'P0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,156,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3694
	.byte	4,2,35,0,0,18,24
	.word	614
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,205,3,16,4,11
	.byte	'PD0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	614
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PD2',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PL2',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'PD3',0,1
	.word	614
	.byte	3,1,2,35,1,11
	.byte	'PL3',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'PD4',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PL4',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'PD5',0,1
	.word	614
	.byte	3,1,2,35,2,11
	.byte	'PL5',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'PD6',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PL6',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'PD7',0,1
	.word	614
	.byte	3,1,2,35,3,11
	.byte	'PL7',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,205,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4017
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,226,3,16,4,11
	.byte	'PD8',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PL8',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PD9',0,1
	.word	614
	.byte	3,1,2,35,0,11
	.byte	'PL9',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PD10',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'PL10',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'PD11',0,1
	.word	614
	.byte	3,1,2,35,1,11
	.byte	'PL11',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'PD12',0,1
	.word	614
	.byte	3,5,2,35,2,11
	.byte	'PL12',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'PD13',0,1
	.word	614
	.byte	3,1,2,35,2,11
	.byte	'PL13',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'PD14',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'PL14',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'PD15',0,1
	.word	614
	.byte	3,1,2,35,3,11
	.byte	'PL15',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,213,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4321
	.byte	4,2,35,0,0,18,8
	.word	614
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,88,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,140,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4646
	.byte	4,2,35,0,0,18,12
	.word	614
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,183,3,16,4,11
	.byte	'PDIS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,197,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4986
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,165,3,16,4,11
	.byte	'SEL0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	2,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	439
	.byte	19,1,2,35,0,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,189,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5352
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,206,2,16,4,11
	.byte	'PS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,12,8,149,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5638
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,227,2,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,12,8,165,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5785
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,238,2,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	439
	.byte	20,0,2,35,0,0,12,8,173,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5954
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,216,2,16,4,11
	.byte	'reserved_0',0,2
	.word	631
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,157,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6126
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,232,1,16,4,11
	.byte	'reserved_0',0,2
	.word	631
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	631
	.byte	12,0,2,35,2,0,12,8,229,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6301
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	8,0,2,35,3,0,12,8,245,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6475
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,136,2,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,12,8,253,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6649
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,237,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6825
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,249,2,16,4,11
	.byte	'PS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,141,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6981
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,147,2,16,4,11
	.byte	'reserved_0',0,2
	.word	631
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,221,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7314
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR0_Bits',0,8,192,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,12,8,196,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7662
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_Bits',0,8,200,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,10
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,8,208,1,16,4,11
	.byte	'RDIS_CTRL',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'RX_DIS',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,12,8,204,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7786
	.byte	4,2,35,0,13
	.byte	'B_P21',0
	.word	7870
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR2_Bits',0,8,218,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'LVDSR',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'LVDSRL',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	614
	.byte	2,4,2,35,1,11
	.byte	'TDIS_CTRL',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'TX_DIS',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,8,213,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8050
	.byte	4,2,35,0,0,18,76
	.word	614
	.byte	19,75,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,82,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,8,132,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8303
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,45,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,8,252,3,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8390
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,229,5,25,128,2,13
	.byte	'OUT',0
	.word	2088
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2659
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	2778
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2818
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3002
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3217
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3434
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3654
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	2818
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	3968
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4008
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4281
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4597
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4637
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	4937
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	4977
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5312
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5598
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4637
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	5745
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	5914
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6086
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6261
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6435
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6609
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	6785
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	6941
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7274
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7622
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4637
	.byte	8,3,35,152,1,13
	.byte	'LPCR0',0
	.word	7746
	.byte	4,3,35,160,1,13
	.byte	'LPCR1',0
	.word	7995
	.byte	4,3,35,164,1,13
	.byte	'LPCR2',0
	.word	8254
	.byte	4,3,35,168,1,13
	.byte	'reserved_A4',0
	.word	8294
	.byte	76,3,35,172,1,13
	.byte	'ACCEN1',0
	.word	8350
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8917
	.byte	4,3,35,252,1,0,14
	.word	8957
	.byte	3
	.word	9560
	.byte	15,7,172,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,208,4,17,1,1,5
	.byte	'port',0,7,208,4,44
	.word	9565
	.byte	5
	.byte	'pinIndex',0,7,208,4,56
	.word	614
	.byte	5
	.byte	'action',0,7,208,4,80
	.word	9570
	.byte	6,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,226,8,20
	.word	235
	.byte	1,1,6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,45,16,4,11
	.byte	'SRPN',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	614
	.byte	2,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	614
	.byte	3,0,2,35,1,11
	.byte	'ECC',0,1
	.word	614
	.byte	6,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'SRR',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,11,70,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9791
	.byte	4,2,35,0,0,14
	.word	10081
.L157:
	.byte	3
	.word	10120
.L186:
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,250,1,17,1,1
.L188:
	.byte	5
	.byte	'src',0,10,250,1,60
	.word	10125
.L190:
	.byte	6,0
.L191:
	.byte	4
	.byte	'IfxSrc_enable',0,3,10,140,2,17,1,1
.L192:
	.byte	5
	.byte	'src',0,10,140,2,54
	.word	10125
.L194:
	.byte	6,0,15,12,69,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_cpu1',0,1,16
	.byte	'IfxSrc_Tos_dma',0,3,0
.L176:
	.byte	4
	.byte	'IfxSrc_init',0,3,10,146,2,17,1,1
.L179:
	.byte	5
	.byte	'src',0,10,146,2,52
	.word	10125
.L181:
	.byte	5
	.byte	'typOfService',0,10,146,2,68
	.word	10210
.L183:
	.byte	5
	.byte	'priority',0,10,146,2,95
	.word	631
.L185:
	.byte	17,6,0,0,10
	.byte	'_Ifx_STM_CLC_Bits',0,14,100,16,4,11
	.byte	'DISR',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,12,14,149,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10346
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ID_Bits',0,14,142,1,16,4,11
	.byte	'MODREV',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	631
	.byte	16,0,2,35,2,0,12,14,181,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10502
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0_Bits',0,14,192,1,16,4,11
	.byte	'STM31_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,229,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10624
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM1_Bits',0,14,204,1,16,4,11
	.byte	'STM35_4',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,245,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10709
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM2_Bits',0,14,210,1,16,4,11
	.byte	'STM39_8',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,253,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10794
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM3_Bits',0,14,216,1,16,4,11
	.byte	'STM43_12',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,133,3,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10879
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM4_Bits',0,14,222,1,16,4,11
	.byte	'STM47_16',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,141,3,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10965
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM5_Bits',0,14,228,1,16,4,11
	.byte	'STM51_20',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,149,3,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11051
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM6_Bits',0,14,234,1,16,4,11
	.byte	'STM63_32',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,157,3,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11137
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAP_Bits',0,14,88,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,133,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11223
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CMP_Bits',0,14,123,16,4,11
	.byte	'CMPVAL',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,165,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11310
	.byte	4,2,35,0,0,18,8
	.word	11352
	.byte	19,1,0,10
	.byte	'_Ifx_STM_CMCON_Bits',0,14,110,16,4,11
	.byte	'MSIZE0',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	614
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	614
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	614
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	614
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	614
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	614
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	614
	.byte	3,0,2,35,3,0
.L170:
	.byte	12,14,157,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ICR_Bits',0,14,129,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	439
	.byte	25,0,2,35,0,0
.L172:
	.byte	12,14,173,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11632
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ISCR_Bits',0,14,150,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,12,14,189,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11849
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,14,198,1,16,4,11
	.byte	'STM31_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,237,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12013
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_CAPSV_Bits',0,14,94,16,4,11
	.byte	'STMCAP63_32',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,141,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12100
	.byte	4,2,35,0,0,18,144,1
	.word	614
	.byte	19,143,1,0,10
	.byte	'_Ifx_STM_OCS_Bits',0,14,182,1,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	2,0,2,35,3,0
.L136:
	.byte	12,14,221,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12200
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,14,175,1,16,4,11
	.byte	'CLR',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	439
	.byte	31,0,2,35,0,0,12,14,213,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12360
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST1_Bits',0,14,168,1,16,4,11
	.byte	'RST',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	439
	.byte	31,0,2,35,0,0,12,14,205,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12466
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_KRST0_Bits',0,14,160,1,16,4,11
	.byte	'RST',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,12,14,197,2,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12570
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,14,82,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,12,14,253,1,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12693
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,14,45,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	614
	.byte	1,0,2,35,3,0,12,14,245,1,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12782
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_STM',0,14,173,3,25,128,2,13
	.byte	'CLC',0
	.word	10462
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	2818
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	10584
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2818
	.byte	4,2,35,12,13
	.byte	'TIM0',0
	.word	10669
	.byte	4,2,35,16,13
	.byte	'TIM1',0
	.word	10754
	.byte	4,2,35,20,13
	.byte	'TIM2',0
	.word	10839
	.byte	4,2,35,24,13
	.byte	'TIM3',0
	.word	10925
	.byte	4,2,35,28,13
	.byte	'TIM4',0
	.word	11011
	.byte	4,2,35,32,13
	.byte	'TIM5',0
	.word	11097
	.byte	4,2,35,36,13
	.byte	'TIM6',0
	.word	11183
	.byte	4,2,35,40,13
	.byte	'CAP',0
	.word	11270
	.byte	4,2,35,44,13
	.byte	'CMP',0
	.word	11392
	.byte	8,2,35,48,13
	.byte	'CMCON',0
	.word	11592
	.byte	4,2,35,56,13
	.byte	'ICR',0
	.word	11809
	.byte	4,2,35,60,13
	.byte	'ISCR',0
	.word	11973
	.byte	4,2,35,64,13
	.byte	'reserved_44',0
	.word	4977
	.byte	12,2,35,68,13
	.byte	'TIM0SV',0
	.word	12060
	.byte	4,2,35,80,13
	.byte	'CAPSV',0
	.word	12149
	.byte	4,2,35,84,13
	.byte	'reserved_58',0
	.word	12189
	.byte	144,1,2,35,88,13
	.byte	'OCS',0
	.word	12320
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	12426
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	12530
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	12653
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	12742
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	13311
	.byte	4,3,35,252,1,0,14
	.word	13351
.L130:
	.byte	3
	.word	13771
.L202:
	.byte	8
	.byte	'IfxStm_get',0,3,13,162,4,19
	.word	321
	.byte	1,1
.L204:
	.byte	5
	.byte	'stm',0,13,162,4,39
	.word	13776
.L206:
	.byte	6,0,8
	.byte	'IfxStm_getFrequency',0,3,13,179,4,20
	.word	235
	.byte	1,1,5
	.byte	'stm',0,13,179,4,49
	.word	13776
	.byte	17,6,6,0,0,8
	.byte	'IfxStm_getLower',0,3,13,190,4,19
	.word	1581
	.byte	1,1,5
	.byte	'stm',0,13,190,4,44
	.word	13776
	.byte	6,0
.L195:
	.byte	8
	.byte	'IfxStm_getOffsetTimer',0,3,13,232,4,19
	.word	1581
	.byte	1,1
.L197:
	.byte	5
	.byte	'stm',0,13,232,4,50
	.word	13776
.L199:
	.byte	5
	.byte	'offset',0,13,232,4,61
	.word	614
.L201:
	.byte	17,6,0,0,20
	.word	455
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	13979
	.byte	0,14
	.word	439
	.byte	3
	.word	439
	.byte	23
	.byte	'__cmpswapw',0
	.word	14021
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	14026
	.byte	24
	.byte	'value',0
	.word	439
	.byte	24
	.byte	'compare',0
	.word	439
	.byte	0,25
	.word	183
	.byte	26
	.word	209
	.byte	6,0,25
	.word	244
	.byte	26
	.word	276
	.byte	6,0,25
	.word	289
	.byte	6,0,25
	.word	358
	.byte	26
	.word	377
	.byte	6,0,25
	.word	393
	.byte	26
	.word	408
	.byte	26
	.word	422
	.byte	6,0,25
	.word	1201
	.byte	26
	.word	1241
	.byte	26
	.word	1259
	.byte	6,0,25
	.word	1279
	.byte	26
	.word	1317
	.byte	26
	.word	1335
	.byte	6,0,27
	.byte	'IfxScuWdt_clearCpuEndinit',0,3,217,1,17,1,1,1,1,5
	.byte	'password',0,3,217,1,50
	.word	631
	.byte	0,27
	.byte	'IfxScuWdt_setCpuEndinit',0,3,239,1,17,1,1,1,1,5
	.byte	'password',0,3,239,1,48
	.word	631
	.byte	0,25
	.word	1355
	.byte	26
	.word	1406
	.byte	6,0,28
	.byte	'IfxScuWdt_getCpuWatchdogPassword',0,3,129,3,19
	.word	631
	.byte	1,1,1,1,25
	.word	1505
	.byte	6,0,25
	.word	1539
	.byte	6,0,25
	.word	1602
	.byte	26
	.word	1643
	.byte	6,0,25
	.word	1662
	.byte	26
	.word	1717
	.byte	6,0,25
	.word	1736
	.byte	26
	.word	1776
	.byte	26
	.word	1793
	.byte	17,6,0,0,25
	.word	9673
	.byte	26
	.word	9701
	.byte	26
	.word	9715
	.byte	26
	.word	9733
	.byte	6,0,25
	.word	9751
	.byte	6,0,25
	.word	10130
	.byte	26
	.word	10158
	.byte	6,0,25
	.word	10173
	.byte	26
	.word	10195
	.byte	6,0,25
	.word	10269
	.byte	26
	.word	10289
	.byte	26
	.word	10302
	.byte	26
	.word	10324
	.byte	17,29
	.word	10130
	.byte	26
	.word	10158
	.byte	30
	.word	10171
	.byte	0,6,0,0,25
	.word	13781
	.byte	26
	.word	13804
	.byte	6,0,25
	.word	13819
	.byte	26
	.word	13851
	.byte	17,17,29
	.word	9751
	.byte	30
	.word	9789
	.byte	0,0,6,0,0
.L139:
	.byte	15,15,87,9,1,16
	.byte	'IfxStm_Index_none',0,127,16
	.byte	'IfxStm_Index_0',0,0,16
	.byte	'IfxStm_Index_1',0,1,0,25
	.word	13869
	.byte	26
	.word	13897
	.byte	6,0,25
	.word	13912
	.byte	26
	.word	13946
	.byte	26
	.word	13959
	.byte	17,29
	.word	13781
	.byte	26
	.word	13804
	.byte	30
	.word	13817
	.byte	0,6,0,0
.L149:
	.byte	15,13,151,1,9,1,16
	.byte	'IfxStm_Comparator_0',0,0,16
	.byte	'IfxStm_Comparator_1',0,1,0
.L232:
	.byte	15,13,159,1,9,1,16
	.byte	'IfxStm_ComparatorInterrupt_ir0',0,0,16
	.byte	'IfxStm_ComparatorInterrupt_ir1',0,1,0
.L228:
	.byte	15,13,167,1,9,1,16
	.byte	'IfxStm_ComparatorOffset_0',0,0,16
	.byte	'IfxStm_ComparatorOffset_1',0,1,16
	.byte	'IfxStm_ComparatorOffset_2',0,2,16
	.byte	'IfxStm_ComparatorOffset_3',0,3,16
	.byte	'IfxStm_ComparatorOffset_4',0,4,16
	.byte	'IfxStm_ComparatorOffset_5',0,5,16
	.byte	'IfxStm_ComparatorOffset_6',0,6,16
	.byte	'IfxStm_ComparatorOffset_7',0,7,16
	.byte	'IfxStm_ComparatorOffset_8',0,8,16
	.byte	'IfxStm_ComparatorOffset_9',0,9,16
	.byte	'IfxStm_ComparatorOffset_10',0,10,16
	.byte	'IfxStm_ComparatorOffset_11',0,11,16
	.byte	'IfxStm_ComparatorOffset_12',0,12,16
	.byte	'IfxStm_ComparatorOffset_13',0,13,16
	.byte	'IfxStm_ComparatorOffset_14',0,14,16
	.byte	'IfxStm_ComparatorOffset_15',0,15,16
	.byte	'IfxStm_ComparatorOffset_16',0,16,16
	.byte	'IfxStm_ComparatorOffset_17',0,17,16
	.byte	'IfxStm_ComparatorOffset_18',0,18,16
	.byte	'IfxStm_ComparatorOffset_19',0,19,16
	.byte	'IfxStm_ComparatorOffset_20',0,20,16
	.byte	'IfxStm_ComparatorOffset_21',0,21,16
	.byte	'IfxStm_ComparatorOffset_22',0,22,16
	.byte	'IfxStm_ComparatorOffset_23',0,23,16
	.byte	'IfxStm_ComparatorOffset_24',0,24,16
	.byte	'IfxStm_ComparatorOffset_25',0,25,16
	.byte	'IfxStm_ComparatorOffset_26',0,26,16
	.byte	'IfxStm_ComparatorOffset_27',0,27,16
	.byte	'IfxStm_ComparatorOffset_28',0,28,16
	.byte	'IfxStm_ComparatorOffset_29',0,29,16
	.byte	'IfxStm_ComparatorOffset_30',0,30,16
	.byte	'IfxStm_ComparatorOffset_31',0,31,0
.L230:
	.byte	15,13,205,1,9,1,16
	.byte	'IfxStm_ComparatorSize_1Bit',0,0,16
	.byte	'IfxStm_ComparatorSize_2Bits',0,1,16
	.byte	'IfxStm_ComparatorSize_3Bits',0,2,16
	.byte	'IfxStm_ComparatorSize_4Bits',0,3,16
	.byte	'IfxStm_ComparatorSize_5Bits',0,4,16
	.byte	'IfxStm_ComparatorSize_6Bits',0,5,16
	.byte	'IfxStm_ComparatorSize_7Bits',0,6,16
	.byte	'IfxStm_ComparatorSize_8Bits',0,7,16
	.byte	'IfxStm_ComparatorSize_9Bits',0,8,16
	.byte	'IfxStm_ComparatorSize_10Bits',0,9,16
	.byte	'IfxStm_ComparatorSize_11Bits',0,10,16
	.byte	'IfxStm_ComparatorSize_12Bits',0,11,16
	.byte	'IfxStm_ComparatorSize_13Bits',0,12,16
	.byte	'IfxStm_ComparatorSize_14Bits',0,13,16
	.byte	'IfxStm_ComparatorSize_15Bits',0,14,16
	.byte	'IfxStm_ComparatorSize_16Bits',0,15,16
	.byte	'IfxStm_ComparatorSize_17Bits',0,16,16
	.byte	'IfxStm_ComparatorSize_18Bits',0,17,16
	.byte	'IfxStm_ComparatorSize_19Bits',0,18,16
	.byte	'IfxStm_ComparatorSize_20Bits',0,19,16
	.byte	'IfxStm_ComparatorSize_21Bits',0,20,16
	.byte	'IfxStm_ComparatorSize_22Bits',0,21,16
	.byte	'IfxStm_ComparatorSize_23Bits',0,22,16
	.byte	'IfxStm_ComparatorSize_24Bits',0,23,16
	.byte	'IfxStm_ComparatorSize_25Bits',0,24,16
	.byte	'IfxStm_ComparatorSize_26Bits',0,25,16
	.byte	'IfxStm_ComparatorSize_27Bits',0,26,16
	.byte	'IfxStm_ComparatorSize_28Bits',0,27,16
	.byte	'IfxStm_ComparatorSize_29Bits',0,28,16
	.byte	'IfxStm_ComparatorSize_30Bits',0,29,16
	.byte	'IfxStm_ComparatorSize_31Bits',0,30,16
	.byte	'IfxStm_ComparatorSize_32Bits',0,31,0,31,13,141,2,9,12,13
	.byte	'comparator',0
	.word	14637
	.byte	1,2,35,0,13
	.byte	'comparatorInterrupt',0
	.word	14688
	.byte	1,2,35,1,13
	.byte	'compareOffset',0
	.word	14761
	.byte	1,2,35,2,13
	.byte	'compareSize',0
	.word	15686
	.byte	1,2,35,3,13
	.byte	'ticks',0
	.word	1581
	.byte	4,2,35,4,13
	.byte	'triggerPriority',0
	.word	631
	.byte	2,2,35,8,13
	.byte	'typeOfService',0
	.word	10210
	.byte	1,2,35,10,0,20
	.word	16675
.L165:
	.byte	3
	.word	16838
.L167:
	.byte	7
	.byte	'long int',0,4,5
.L220:
	.byte	3
	.word	16675
	.byte	7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,16,1,1
	.word	16865
	.byte	32
	.byte	'__size_t',0,16,1,1
	.word	439
	.byte	32
	.byte	'__ptrdiff_t',0,16,1,1
	.word	455
	.byte	33,1,3
	.word	16933
	.byte	32
	.byte	'__codeptr',0,16,1,1
	.word	16935
	.byte	32
	.byte	'boolean',0,17,101,29
	.word	614
	.byte	32
	.byte	'uint8',0,17,105,29
	.word	614
	.byte	32
	.byte	'uint16',0,17,109,29
	.word	631
	.byte	32
	.byte	'uint32',0,17,113,29
	.word	1581
	.byte	32
	.byte	'uint64',0,17,118,29
	.word	321
	.byte	32
	.byte	'sint16',0,17,126,29
	.word	16865
	.byte	32
	.byte	'sint32',0,17,131,1,29
	.word	16848
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,17,139,1,29
	.word	17064
	.byte	32
	.byte	'float32',0,17,168,1,29
	.word	235
	.byte	32
	.byte	'pvoid',0,18,57,28
	.word	353
	.byte	32
	.byte	'Ifx_TickTime',0,18,79,28
	.word	17064
	.byte	32
	.byte	'Ifx_Priority',0,18,103,16
	.word	631
	.byte	15,18,130,1,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,32
	.byte	'Ifx_RxSel',0,18,140,1,3
	.word	17170
	.byte	14
	.word	347
	.byte	3
	.word	17308
	.byte	31,18,143,1,9,8,13
	.byte	'module',0
	.word	17313
	.byte	4,2,35,0,13
	.byte	'index',0
	.word	16848
	.byte	4,2,35,4,0,32
	.byte	'IfxModule_IndexMap',0,18,147,1,3
	.word	17318
	.byte	32
	.byte	'Ifx_STM_ACCEN0_Bits',0,14,79,3
	.word	12782
	.byte	32
	.byte	'Ifx_STM_ACCEN1_Bits',0,14,85,3
	.word	12693
	.byte	32
	.byte	'Ifx_STM_CAP_Bits',0,14,91,3
	.word	11223
	.byte	32
	.byte	'Ifx_STM_CAPSV_Bits',0,14,97,3
	.word	12100
	.byte	32
	.byte	'Ifx_STM_CLC_Bits',0,14,107,3
	.word	10346
	.byte	32
	.byte	'Ifx_STM_CMCON_Bits',0,14,120,3
	.word	11401
	.byte	32
	.byte	'Ifx_STM_CMP_Bits',0,14,126,3
	.word	11310
	.byte	32
	.byte	'Ifx_STM_ICR_Bits',0,14,139,1,3
	.word	11632
	.byte	32
	.byte	'Ifx_STM_ID_Bits',0,14,147,1,3
	.word	10502
	.byte	32
	.byte	'Ifx_STM_ISCR_Bits',0,14,157,1,3
	.word	11849
	.byte	32
	.byte	'Ifx_STM_KRST0_Bits',0,14,165,1,3
	.word	12570
	.byte	32
	.byte	'Ifx_STM_KRST1_Bits',0,14,172,1,3
	.word	12466
	.byte	32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,14,179,1,3
	.word	12360
	.byte	32
	.byte	'Ifx_STM_OCS_Bits',0,14,189,1,3
	.word	12200
	.byte	32
	.byte	'Ifx_STM_TIM0_Bits',0,14,195,1,3
	.word	10624
	.byte	32
	.byte	'Ifx_STM_TIM0SV_Bits',0,14,201,1,3
	.word	12013
	.byte	32
	.byte	'Ifx_STM_TIM1_Bits',0,14,207,1,3
	.word	10709
	.byte	32
	.byte	'Ifx_STM_TIM2_Bits',0,14,213,1,3
	.word	10794
	.byte	32
	.byte	'Ifx_STM_TIM3_Bits',0,14,219,1,3
	.word	10879
	.byte	32
	.byte	'Ifx_STM_TIM4_Bits',0,14,225,1,3
	.word	10965
	.byte	32
	.byte	'Ifx_STM_TIM5_Bits',0,14,231,1,3
	.word	11051
	.byte	32
	.byte	'Ifx_STM_TIM6_Bits',0,14,237,1,3
	.word	11137
	.byte	32
	.byte	'Ifx_STM_ACCEN0',0,14,250,1,3
	.word	13311
	.byte	32
	.byte	'Ifx_STM_ACCEN1',0,14,130,2,3
	.word	12742
	.byte	32
	.byte	'Ifx_STM_CAP',0,14,138,2,3
	.word	11270
	.byte	32
	.byte	'Ifx_STM_CAPSV',0,14,146,2,3
	.word	12149
	.byte	32
	.byte	'Ifx_STM_CLC',0,14,154,2,3
	.word	10462
	.byte	32
	.byte	'Ifx_STM_CMCON',0,14,162,2,3
	.word	11592
	.byte	32
	.byte	'Ifx_STM_CMP',0,14,170,2,3
	.word	11352
	.byte	32
	.byte	'Ifx_STM_ICR',0,14,178,2,3
	.word	11809
	.byte	32
	.byte	'Ifx_STM_ID',0,14,186,2,3
	.word	10584
	.byte	32
	.byte	'Ifx_STM_ISCR',0,14,194,2,3
	.word	11973
	.byte	32
	.byte	'Ifx_STM_KRST0',0,14,202,2,3
	.word	12653
	.byte	32
	.byte	'Ifx_STM_KRST1',0,14,210,2,3
	.word	12530
	.byte	32
	.byte	'Ifx_STM_KRSTCLR',0,14,218,2,3
	.word	12426
	.byte	32
	.byte	'Ifx_STM_OCS',0,14,226,2,3
	.word	12320
	.byte	32
	.byte	'Ifx_STM_TIM0',0,14,234,2,3
	.word	10669
	.byte	32
	.byte	'Ifx_STM_TIM0SV',0,14,242,2,3
	.word	12060
	.byte	32
	.byte	'Ifx_STM_TIM1',0,14,250,2,3
	.word	10754
	.byte	32
	.byte	'Ifx_STM_TIM2',0,14,130,3,3
	.word	10839
	.byte	32
	.byte	'Ifx_STM_TIM3',0,14,138,3,3
	.word	10925
	.byte	32
	.byte	'Ifx_STM_TIM4',0,14,146,3,3
	.word	11011
	.byte	32
	.byte	'Ifx_STM_TIM5',0,14,154,3,3
	.word	11097
	.byte	32
	.byte	'Ifx_STM_TIM6',0,14,162,3,3
	.word	11183
	.byte	14
	.word	13351
	.byte	32
	.byte	'Ifx_STM',0,14,201,3,3
	.word	18467
	.byte	32
	.byte	'IfxStm_Index',0,15,92,3
	.word	14530
	.byte	18,16
	.word	17318
	.byte	19,1,0,20
	.word	18510
	.byte	34
	.byte	'IfxStm_cfg_indexMap',0,15,103,41
	.word	18519
	.byte	1,1,15,19,236,10,9,1,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fBack',0,0,16
	.byte	'IfxScu_CCUCON0_CLKSEL_fPll',0,1,0,32
	.byte	'IfxScu_CCUCON0_CLKSEL',0,19,240,10,3
	.word	18554
	.byte	15,19,250,10,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,19,255,10,3
	.word	18651
	.byte	10
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,4,45,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN0_Bits',0,4,79,3
	.word	18773
	.byte	10
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,4,82,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1_Bits',0,4,85,3
	.word	19330
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,88,16,4,11
	.byte	'STM0DIS',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	439
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,94,3
	.word	19407
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,97,16,4,11
	.byte	'BAUD1DIV',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'BAUD2DIV',0,1
	.word	614
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	614
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	614
	.byte	4,4,2,35,2,11
	.byte	'FSI2DIV',0,1
	.word	614
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	614
	.byte	2,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	614
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,111,3
	.word	19543
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,114,16,4,11
	.byte	'CANDIV',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'ERAYDIV',0,1
	.word	614
	.byte	4,0,2,35,0,11
	.byte	'STMDIV',0,1
	.word	614
	.byte	4,4,2,35,1,11
	.byte	'GTMDIV',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'ETHDIV',0,1
	.word	614
	.byte	4,4,2,35,2,11
	.byte	'ASCLINFDIV',0,1
	.word	614
	.byte	4,0,2,35,2,11
	.byte	'ASCLINSDIV',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'INSEL',0,1
	.word	614
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,126,3
	.word	19823
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,129,1,16,4,11
	.byte	'BBBDIV',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,135,1,3
	.word	20061
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,138,1,16,4,11
	.byte	'PLLDIV',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'PLLSEL',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'PLLERAYDIV',0,1
	.word	614
	.byte	6,2,2,35,1,11
	.byte	'PLLERAYSEL',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'SRIDIV',0,1
	.word	614
	.byte	6,2,2,35,2,11
	.byte	'SRISEL',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,150,1,3
	.word	20189
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,153,1,16,4,11
	.byte	'SPBDIV',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'SPBSEL',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	614
	.byte	6,2,2,35,1,11
	.byte	'GTMSEL',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'STMDIV',0,1
	.word	614
	.byte	6,2,2,35,2,11
	.byte	'STMSEL',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	5,3,2,35,3,11
	.byte	'SLCK',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,165,1,3
	.word	20432
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,168,1,16,4,11
	.byte	'MAXDIV',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	26,2,2,35,0,11
	.byte	'UP',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,174,1,3
	.word	20667
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,177,1,16,4,11
	.byte	'CPU0DIV',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,181,1,3
	.word	20795
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,184,1,16,4,11
	.byte	'CPU1DIV',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,188,1,3
	.word	20895
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,191,1,16,4,11
	.byte	'CHREV',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'CHID',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'EEA',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	614
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'SP',0,1
	.word	614
	.byte	2,2,2,35,3,11
	.byte	'SEC',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,202,1,3
	.word	20995
	.byte	10
	.byte	'_Ifx_SCU_DTSCON_Bits',0,4,205,1,16,4,11
	.byte	'PWD',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'START',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'CAL',0,4
	.word	439
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'SLCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCON_Bits',0,4,213,1,3
	.word	21203
	.byte	10
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,4,216,1,16,4,11
	.byte	'LOWER',0,2
	.word	631
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	614
	.byte	5,1,2,35,1,11
	.byte	'LLU',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	631
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	4,2,2,35,3,11
	.byte	'SLCK',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSLIM_Bits',0,4,225,1,3
	.word	21368
	.byte	10
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,4,228,1,16,4,11
	.byte	'RESULT',0,2
	.word	631
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	614
	.byte	4,2,2,35,1,11
	.byte	'RDY',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'BUSY',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,4,235,1,3
	.word	21551
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,238,1,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	614
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	614
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	439
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	614
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	614
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,129,2,3
	.word	21705
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,132,2,16,4,11
	.byte	'INTF0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,143,2,3
	.word	22069
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,146,2,16,4,11
	.byte	'POL',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	631
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	614
	.byte	6,0,2,35,2,11
	.byte	'EMSFM',0,1
	.word	614
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	614
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,159,2,3
	.word	22280
	.byte	10
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,4,162,2,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	631
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	439
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG_Bits',0,4,167,2,3
	.word	22532
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,170,2,16,4,11
	.byte	'ARI',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,175,2,3
	.word	22650
	.byte	10
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,4,178,2,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	28,4,2,35,0,11
	.byte	'EVR13OFF',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'BPEVR13OFF',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR13CON_Bits',0,4,185,2,3
	.word	22761
	.byte	10
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,4,188,2,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	28,4,2,35,0,11
	.byte	'EVR33OFF',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'BPEVR33OFF',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVR33CON_Bits',0,4,195,2,3
	.word	22924
	.byte	10
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,4,198,2,16,4,11
	.byte	'ADC13V',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'ADC33V',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'ADCSWDV',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,4,205,2,3
	.word	23087
	.byte	10
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,4,208,2,16,4,11
	.byte	'DVS13TRIM',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'DVS33TRIM',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'VAL',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,4,215,2,3
	.word	23245
	.byte	10
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,4,218,2,16,4,11
	.byte	'EVR13OVMOD',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'EVR13UVMOD',0,1
	.word	614
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'EVR33OVMOD',0,1
	.word	614
	.byte	2,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	614
	.byte	2,4,2,35,1,11
	.byte	'EVR33UVMOD',0,1
	.word	614
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'SWDOVMOD',0,1
	.word	614
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	614
	.byte	2,4,2,35,2,11
	.byte	'SWDUVMOD',0,1
	.word	614
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	631
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,4,232,2,3
	.word	23410
	.byte	10
	.byte	'_Ifx_SCU_EVROSCCTRL_Bits',0,4,235,2,16,4,11
	.byte	'OSCTRIM',0,2
	.word	631
	.byte	10,6,2,35,0,11
	.byte	'OSCPTAT',0,1
	.word	614
	.byte	6,0,2,35,1,11
	.byte	'OSCANASEL',0,1
	.word	614
	.byte	4,4,2,35,2,11
	.byte	'HPBGTRIM',0,2
	.word	631
	.byte	7,5,2,35,2,11
	.byte	'HPBGCLKEN',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'OSC3V3',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	614
	.byte	2,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROSCCTRL_Bits',0,4,245,2,3
	.word	23739
	.byte	10
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,4,248,2,16,4,11
	.byte	'EVR13OVVAL',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'EVR33OVVAL',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SWDOVVAL',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVROVMON_Bits',0,4,255,2,3
	.word	23960
	.byte	10
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,4,130,3,16,4,11
	.byte	'RST13TRIM',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	16,8,2,35,0,11
	.byte	'RST13OFF',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'BPRST13OFF',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'RST33OFF',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'BPRST33OFF',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'RSTSWDOFF',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'BPRSTSWDOFF',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,4,142,3,3
	.word	24123
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,4,145,3,16,4,11
	.byte	'SD5P',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SD5I',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SD5D',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,4,152,3,3
	.word	24395
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,4,155,3,16,4,11
	.byte	'SD33P',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SD33I',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SD33D',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,4,162,3,3
	.word	24548
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,4,165,3,16,4,11
	.byte	'CT5REG0',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'CT5REG1',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'CT5REG2',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,4,172,3,3
	.word	24704
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,4,175,3,16,4,11
	.byte	'CT5REG3',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'CT5REG4',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,4,181,3,3
	.word	24866
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,4,184,3,16,4,11
	.byte	'CT33REG0',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'CT33REG1',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'CT33REG2',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,4,191,3,3
	.word	25009
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,4,194,3,16,4,11
	.byte	'CT33REG3',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'CT33REG4',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,4,200,3,3
	.word	25174
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,4,203,3,16,4,11
	.byte	'SDFREQSPRD',0,2
	.word	631
	.byte	16,0,2,35,0,11
	.byte	'SDFREQ',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'SDSTEP',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	2,2,2,35,3,11
	.byte	'SDSAMPLE',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,4,211,3,3
	.word	25319
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,4,214,3,16,4,11
	.byte	'DRVP',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SDMINMAXDC',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'DRVN',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'SDLUT',0,1
	.word	614
	.byte	6,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,4,222,3,3
	.word	25500
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,4,225,3,16,4,11
	.byte	'SDPWMPRE',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SDPID',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SDVOKLVL',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,4,232,3,3
	.word	25674
	.byte	10
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,4,235,3,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SYNCDIV',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	439
	.byte	20,1,2,35,0,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,4,241,3,3
	.word	25834
	.byte	10
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,4,244,3,16,4,11
	.byte	'EVR13',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'OV13',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EVR33',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'OV33',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'OVSWD',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'UV13',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'UV33',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'UVSWD',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EXTPASS13',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EXTPASS33',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'BGPROK',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	439
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,4,130,4,3
	.word	25978
	.byte	10
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,4,133,4,16,4,11
	.byte	'EVR13TRIM',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'SDVOUTSEL',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,4,139,4,3
	.word	26252
	.byte	10
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,4,142,4,16,4,11
	.byte	'EVR13UVVAL',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'EVR33UVVAL',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SWDUVVAL',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,4,149,4,3
	.word	26391
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,152,4,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	614
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	631
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	614
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	614
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,163,4,3
	.word	26554
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,166,4,16,4,11
	.byte	'STEP',0,2
	.word	631
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	614
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	631
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,174,4,3
	.word	26772
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,177,4,16,4,11
	.byte	'FS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,197,4,3
	.word	26935
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,200,4,16,4,11
	.byte	'MODREV',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,205,4,3
	.word	27271
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,208,4,16,4,11
	.byte	'IPEN00',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	614
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,232,4,3
	.word	27378
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,235,4,16,4,11
	.byte	'P0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,240,4,3
	.word	27830
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,243,4,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	614
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,250,4,3
	.word	27929
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,253,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'LBISTREQP',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,2
	.word	631
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,131,5,3
	.word	28079
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,134,5,16,4,11
	.byte	'SEED',0,4
	.word	439
	.byte	23,9,2,35,0,11
	.byte	'reserved_23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,141,5,3
	.word	28228
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,144,5,16,4,11
	.byte	'SIGNATURE',0,4
	.word	439
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	7,1,2,35,3,11
	.byte	'LBISTDONE',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,149,5,3
	.word	28389
	.byte	10
	.byte	'_Ifx_SCU_LCLCON_Bits',0,4,152,5,16,4,11
	.byte	'reserved_0',0,2
	.word	631
	.byte	16,0,2,35,0,11
	.byte	'LS',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	631
	.byte	14,1,2,35,2,11
	.byte	'LSEN',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON_Bits',0,4,158,5,3
	.word	28519
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,161,5,16,4,11
	.byte	'LCLT0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,166,5,3
	.word	28651
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,169,5,16,4,11
	.byte	'DEPT',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	631
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,174,5,3
	.word	28766
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,177,5,16,4,11
	.byte	'PS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	631
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	631
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,185,5,3
	.word	28877
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,188,5,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	614
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	614
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'X1D',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'X1DEN',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	614
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	614
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,209,5,3
	.word	29035
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,212,5,16,4,11
	.byte	'P0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,217,5,3
	.word	29447
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,220,5,16,4,11
	.byte	'CSEL0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	631
	.byte	13,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,233,5,3
	.word	29548
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,236,5,16,4,11
	.byte	'OVEN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	439
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,242,5,3
	.word	29815
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,245,5,16,4,11
	.byte	'PDIS0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,250,5,3
	.word	29951
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,253,5,16,4,11
	.byte	'PD0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'PL0',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PD1',0,1
	.word	614
	.byte	3,1,2,35,0,11
	.byte	'PL1',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,132,6,3
	.word	30062
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,135,6,16,4,11
	.byte	'PDR0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,146,6,3
	.word	30195
	.byte	10
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,4,149,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	631
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLCON0_Bits',0,4,166,6,3
	.word	30398
	.byte	10
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,4,169,6,16,4,11
	.byte	'K2DIV',0,1
	.word	614
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	614
	.byte	7,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	614
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	631
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON1_Bits',0,4,177,6,3
	.word	30754
	.byte	10
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,4,180,6,16,4,11
	.byte	'MODCFG',0,2
	.word	631
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLCON2_Bits',0,4,184,6,3
	.word	30932
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,4,187,6,16,4,11
	.byte	'VCOBYP',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'VCOPWD',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'SETFINDIS',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'CLRFINDIS',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'OSCDISCDIS',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	631
	.byte	2,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	614
	.byte	5,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	614
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	614
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,4,204,6,3
	.word	31032
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,4,207,6,16,4,11
	.byte	'K2DIV',0,1
	.word	614
	.byte	7,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	614
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'K1DIV',0,1
	.word	614
	.byte	7,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	631
	.byte	9,0,2,35,2,0,32
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,4,215,6,3
	.word	31402
	.byte	10
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,4,218,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,4,227,6,3
	.word	31588
	.byte	10
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,4,230,6,16,4,11
	.byte	'VCOBYST',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'VCOLOCK',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'FINDIS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'K1RDY',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,4,241,6,3
	.word	31786
	.byte	10
	.byte	'_Ifx_SCU_PMCSR_Bits',0,4,244,6,16,4,11
	.byte	'REQSLP',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'SMUSLP',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	614
	.byte	5,0,2,35,0,11
	.byte	'PMST',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	439
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR_Bits',0,4,251,6,3
	.word	32019
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,4,254,6,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1WKEN',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PINAWKEN',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PINBWKEN',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'ESR0DFEN',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'ESR0EDCON',0,1
	.word	614
	.byte	2,1,2,35,0,11
	.byte	'ESR1DFEN',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'ESR1EDCON',0,1
	.word	614
	.byte	2,6,2,35,1,11
	.byte	'PINADFEN',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'PINAEDCON',0,1
	.word	614
	.byte	2,3,2,35,1,11
	.byte	'PINBDFEN',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PINBEDCON',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'SCREN',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'STBYRAMSEL',0,1
	.word	614
	.byte	2,5,2,35,2,11
	.byte	'SCRCLKSEL',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'TRISTEN',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'TRISTREQ',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'PORSTDF',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'DCDCSYNC',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	3,3,2,35,3,11
	.byte	'ESR0TRIST',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,4,153,7,3
	.word	32171
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,156,7,16,4,11
	.byte	'SCRSTEN',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SCRSTREQ',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	6,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	614
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	614
	.byte	3,0,2,35,1,11
	.byte	'SCRCFG',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'CPUSEL',0,1
	.word	614
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	614
	.byte	3,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,170,7,3
	.word	32738
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR2_Bits',0,4,173,7,16,4,11
	.byte	'SCRINT',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'BUSY',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'SCRECC',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'SCRWDT',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'SCRRST',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	614
	.byte	4,0,2,35,1,11
	.byte	'TCINT',0,1
	.word	614
	.byte	8,0,2,35,2,11
	.byte	'TCINTREQ',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'SMURST',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'RST',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	614
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR2_Bits',0,4,187,7,3
	.word	33032
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,4,190,7,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKP',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUN',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PINAWKP',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUN',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PINBWKP',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUN',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PORSTDF',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'HWCFGEVR',0,1
	.word	614
	.byte	3,3,2,35,1,11
	.byte	'STBYRAM',0,1
	.word	614
	.byte	2,1,2,35,1,11
	.byte	'TRIST',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'SCRST',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'SCRWKP',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'SCR',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'SCRWKEN',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'ESR1WKEN',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'PINAWKEN',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'PINBWKEN',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	631
	.byte	4,5,2,35,2,11
	.byte	'ESR0TRIST',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	614
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,4,214,7,3
	.word	33310
	.byte	10
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,4,217,7,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'ESR1WKPCLR',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'ESR1OVRUNCLR',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PINAWKPCLR',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'PINAOVRUNCLR',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PINBWKPCLR',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PINBOVRUNCLR',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'SCRSTCLR',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'SCRWKPCLR',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	631
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,4,230,7,3
	.word	33806
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,233,7,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	631
	.byte	10,4,2,35,0,11
	.byte	'CSS0',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'CSS1',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'CSS2',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,243,7,3
	.word	34119
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,246,7,16,4,11
	.byte	'ESR0',0,1
	.word	614
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	614
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	614
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	614
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	614
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,129,8,3
	.word	34328
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,132,8,16,4,11
	.byte	'ESR0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'PORST',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	614
	.byte	2,1,2,35,2,11
	.byte	'EVR13',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	614
	.byte	2,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	614
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,155,8,3
	.word	34539
	.byte	10
	.byte	'_Ifx_SCU_SAFECON_Bits',0,4,158,8,16,4,11
	.byte	'HBT',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	439
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON_Bits',0,4,162,8,3
	.word	34971
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,165,8,16,4,11
	.byte	'HWCFG',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	614
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	614
	.byte	3,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	614
	.byte	7,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,178,8,3
	.word	35067
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,181,8,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	439
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,186,8,3
	.word	35327
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,189,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	614
	.byte	3,0,2,35,0,11
	.byte	'DATM',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,4
	.word	439
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,198,8,3
	.word	35452
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,201,8,16,4,11
	.byte	'ESR0T',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,208,8,3
	.word	35649
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,4,211,8,16,4,11
	.byte	'ESR0T',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,4,218,8,3
	.word	35802
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,221,8,16,4,11
	.byte	'ESR0T',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,228,8,3
	.word	35955
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,231,8,16,4,11
	.byte	'ESR0T',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,238,8,3
	.word	36108
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,247,8,3
	.word	478
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,134,9,3
	.word	653
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,150,9,3
	.word	897
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,153,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	462
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,159,9,3
	.word	36363
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,162,9,16,4,11
	.byte	'CLRIRF',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,175,9,3
	.word	36489
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,178,9,16,4,11
	.byte	'AE',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,191,9,3
	.word	36741
	.byte	12,4,199,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18773
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN0',0,4,204,9,3
	.word	36960
	.byte	12,4,207,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN1',0,4,212,9,3
	.word	37024
	.byte	12,4,215,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19407
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,220,9,3
	.word	37088
	.byte	12,4,223,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19543
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,228,9,3
	.word	37153
	.byte	12,4,231,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19823
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,236,9,3
	.word	37218
	.byte	12,4,239,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20061
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,244,9,3
	.word	37283
	.byte	12,4,247,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,252,9,3
	.word	37348
	.byte	12,4,255,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20432
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,132,10,3
	.word	37413
	.byte	12,4,135,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20667
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,140,10,3
	.word	37478
	.byte	12,4,143,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20795
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,148,10,3
	.word	37543
	.byte	12,4,151,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20895
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,156,10,3
	.word	37608
	.byte	12,4,159,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20995
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,164,10,3
	.word	37673
	.byte	12,4,167,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21203
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCON',0,4,172,10,3
	.word	37737
	.byte	12,4,175,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21368
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSLIM',0,4,180,10,3
	.word	37801
	.byte	12,4,183,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21551
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSSTAT',0,4,188,10,3
	.word	37865
	.byte	12,4,191,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21705
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,196,10,3
	.word	37930
	.byte	12,4,199,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22069
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,204,10,3
	.word	37992
	.byte	12,4,207,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22280
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,212,10,3
	.word	38054
	.byte	12,4,215,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22532
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFG',0,4,220,10,3
	.word	38116
	.byte	12,4,223,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22650
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,228,10,3
	.word	38180
	.byte	12,4,231,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22761
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR13CON',0,4,236,10,3
	.word	38245
	.byte	12,4,239,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22924
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVR33CON',0,4,244,10,3
	.word	38311
	.byte	12,4,247,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23087
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRADCSTAT',0,4,252,10,3
	.word	38377
	.byte	12,4,255,10,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23245
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRDVSTAT',0,4,132,11,3
	.word	38445
	.byte	12,4,135,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23410
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRMONCTRL',0,4,140,11,3
	.word	38512
	.byte	12,4,143,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23739
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROSCCTRL',0,4,148,11,3
	.word	38580
	.byte	12,4,151,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23960
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVROVMON',0,4,156,11,3
	.word	38648
	.byte	12,4,159,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24123
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRRSTCON',0,4,164,11,3
	.word	38714
	.byte	12,4,167,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24395
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,4,172,11,3
	.word	38781
	.byte	12,4,175,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24548
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,4,180,11,3
	.word	38850
	.byte	12,4,183,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24704
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,4,188,11,3
	.word	38919
	.byte	12,4,191,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24866
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,4,196,11,3
	.word	38988
	.byte	12,4,199,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25009
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,4,204,11,3
	.word	39057
	.byte	12,4,207,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25174
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,4,212,11,3
	.word	39126
	.byte	12,4,215,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25319
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL1',0,4,220,11,3
	.word	39195
	.byte	12,4,223,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25500
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL2',0,4,228,11,3
	.word	39263
	.byte	12,4,231,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25674
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL3',0,4,236,11,3
	.word	39331
	.byte	12,4,239,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25834
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSDCTRL4',0,4,244,11,3
	.word	39399
	.byte	12,4,247,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25978
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRSTAT',0,4,252,11,3
	.word	39467
	.byte	12,4,255,11,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26252
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRTRIM',0,4,132,12,3
	.word	39532
	.byte	12,4,135,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26391
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EVRUVMON',0,4,140,12,3
	.word	39597
	.byte	12,4,143,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26554
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,148,12,3
	.word	39663
	.byte	12,4,151,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26772
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,156,12,3
	.word	39727
	.byte	12,4,159,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26935
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,164,12,3
	.word	39788
	.byte	12,4,167,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27271
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,172,12,3
	.word	39849
	.byte	12,4,175,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27378
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,180,12,3
	.word	39909
	.byte	12,4,183,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27830
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,188,12,3
	.word	39971
	.byte	12,4,191,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27929
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,196,12,3
	.word	40031
	.byte	12,4,199,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,204,12,3
	.word	40093
	.byte	12,4,207,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28228
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,212,12,3
	.word	40161
	.byte	12,4,215,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28389
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,220,12,3
	.word	40229
	.byte	12,4,223,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28519
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON',0,4,228,12,3
	.word	40297
	.byte	12,4,231,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28651
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,236,12,3
	.word	40361
	.byte	12,4,239,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28766
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,244,12,3
	.word	40426
	.byte	12,4,247,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28877
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,252,12,3
	.word	40489
	.byte	12,4,255,12,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29035
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,132,13,3
	.word	40550
	.byte	12,4,135,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29447
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,140,13,3
	.word	40614
	.byte	12,4,143,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29548
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,148,13,3
	.word	40675
	.byte	12,4,151,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29815
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,156,13,3
	.word	40739
	.byte	12,4,159,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29951
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,164,13,3
	.word	40806
	.byte	12,4,167,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30062
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,172,13,3
	.word	40869
	.byte	12,4,175,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30195
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,180,13,3
	.word	40930
	.byte	12,4,183,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30398
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON0',0,4,188,13,3
	.word	40992
	.byte	12,4,191,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30754
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON1',0,4,196,13,3
	.word	41057
	.byte	12,4,199,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30932
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLCON2',0,4,204,13,3
	.word	41122
	.byte	12,4,207,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31032
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON0',0,4,212,13,3
	.word	41187
	.byte	12,4,215,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31402
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYCON1',0,4,220,13,3
	.word	41256
	.byte	12,4,223,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31588
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLERAYSTAT',0,4,228,13,3
	.word	41325
	.byte	12,4,231,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31786
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PLLSTAT',0,4,236,13,3
	.word	41394
	.byte	12,4,239,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32019
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR',0,4,244,13,3
	.word	41459
	.byte	12,4,247,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32171
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR0',0,4,252,13,3
	.word	41522
	.byte	12,4,255,13,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32738
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,132,14,3
	.word	41587
	.byte	12,4,135,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33032
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR2',0,4,140,14,3
	.word	41652
	.byte	12,4,143,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33310
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTAT',0,4,148,14,3
	.word	41717
	.byte	12,4,151,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33806
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWSTATCLR',0,4,156,14,3
	.word	41783
	.byte	12,4,159,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34328
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,164,14,3
	.word	41852
	.byte	12,4,167,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34119
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,172,14,3
	.word	41916
	.byte	12,4,175,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34539
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,180,14,3
	.word	41981
	.byte	12,4,183,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34971
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SAFECON',0,4,188,14,3
	.word	42046
	.byte	12,4,191,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35067
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,196,14,3
	.word	42111
	.byte	12,4,199,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35327
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,204,14,3
	.word	42175
	.byte	12,4,207,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35452
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,212,14,3
	.word	42241
	.byte	12,4,215,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35649
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,220,14,3
	.word	42305
	.byte	12,4,223,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35802
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS',0,4,228,14,3
	.word	42370
	.byte	12,4,231,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35955
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,236,14,3
	.word	42435
	.byte	12,4,239,14,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36108
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,244,14,3
	.word	42500
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,252,14,3
	.word	574
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,132,15,3
	.word	857
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,140,15,3
	.word	1088
	.byte	12,4,143,15,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36363
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,148,15,3
	.word	42651
	.byte	12,4,151,15,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36489
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,156,15,3
	.word	42718
	.byte	12,4,159,15,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36741
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,164,15,3
	.word	42785
	.byte	14
	.word	1128
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,180,15,3
	.word	42850
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,183,15,25,12,13
	.byte	'CON0',0
	.word	42651
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	42718
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	42785
	.byte	4,2,35,8,0,14
	.word	42879
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,188,15,3
	.word	42940
	.byte	18,8
	.word	38116
	.byte	19,1,0,18,20
	.word	614
	.byte	19,19,0,18,8
	.word	41459
	.byte	19,1,0,14
	.word	42879
	.byte	18,24
	.word	1128
	.byte	19,1,0,14
	.word	42999
	.byte	18,16
	.word	614
	.byte	19,15,0,18,28
	.word	614
	.byte	19,27,0,18,40
	.word	614
	.byte	19,39,0,18,16
	.word	37930
	.byte	19,3,0,18,16
	.word	39909
	.byte	19,3,0,18,180,3
	.word	614
	.byte	19,179,3,0,10
	.byte	'_Ifx_SCU',0,4,201,15,25,128,8,13
	.byte	'reserved_0',0
	.word	4637
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	39849
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	2818
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	40550
	.byte	4,2,35,16,13
	.byte	'PLLSTAT',0
	.word	41394
	.byte	4,2,35,20,13
	.byte	'PLLCON0',0
	.word	40992
	.byte	4,2,35,24,13
	.byte	'PLLCON1',0
	.word	41057
	.byte	4,2,35,28,13
	.byte	'PLLCON2',0
	.word	41122
	.byte	4,2,35,32,13
	.byte	'PLLERAYSTAT',0
	.word	41325
	.byte	4,2,35,36,13
	.byte	'PLLERAYCON0',0
	.word	41187
	.byte	4,2,35,40,13
	.byte	'PLLERAYCON1',0
	.word	41256
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	37153
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	37218
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	39727
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	39663
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	37283
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	37348
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	37413
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	37478
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	41981
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	2818
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	41852
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	37088
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	42175
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	41916
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	2818
	.byte	4,2,35,104,13
	.byte	'EVRRSTCON',0
	.word	38714
	.byte	4,2,35,108,13
	.byte	'ESRCFG',0
	.word	42967
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	38180
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	42241
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	37543
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	37608
	.byte	4,3,35,132,1,13
	.byte	'reserved_88',0
	.word	42976
	.byte	20,3,35,136,1,13
	.byte	'PDR',0
	.word	40869
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	40031
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	40614
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	40489
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	39971
	.byte	4,3,35,172,1,13
	.byte	'EVRSTAT',0
	.word	39467
	.byte	4,3,35,176,1,13
	.byte	'EVRDVSTAT',0
	.word	38445
	.byte	4,3,35,180,1,13
	.byte	'EVR13CON',0
	.word	38245
	.byte	4,3,35,184,1,13
	.byte	'EVR33CON',0
	.word	38311
	.byte	4,3,35,188,1,13
	.byte	'STSTAT',0
	.word	42111
	.byte	4,3,35,192,1,13
	.byte	'reserved_C4',0
	.word	2818
	.byte	4,3,35,196,1,13
	.byte	'PMSWCR0',0
	.word	41522
	.byte	4,3,35,200,1,13
	.byte	'PMSWSTAT',0
	.word	41717
	.byte	4,3,35,204,1,13
	.byte	'PMSWSTATCLR',0
	.word	41783
	.byte	4,3,35,208,1,13
	.byte	'PMCSR',0
	.word	42985
	.byte	8,3,35,212,1,13
	.byte	'reserved_DC',0
	.word	2818
	.byte	4,3,35,220,1,13
	.byte	'DTSSTAT',0
	.word	37865
	.byte	4,3,35,224,1,13
	.byte	'DTSCON',0
	.word	37737
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	41587
	.byte	4,3,35,232,1,13
	.byte	'PMSWCR2',0
	.word	41652
	.byte	4,3,35,236,1,13
	.byte	'WDTS',0
	.word	42994
	.byte	12,3,35,240,1,13
	.byte	'EMSR',0
	.word	38054
	.byte	4,3,35,252,1,13
	.byte	'WDTCPU',0
	.word	43008
	.byte	24,3,35,128,2,13
	.byte	'reserved_118',0
	.word	4977
	.byte	12,3,35,152,2,13
	.byte	'TRAPSTAT',0
	.word	42500
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	42435
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	42305
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS',0
	.word	42370
	.byte	4,3,35,176,2,13
	.byte	'reserved_134',0
	.word	2818
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	40297
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	40361
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	37673
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	40426
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	4637
	.byte	8,3,35,200,2,13
	.byte	'SAFECON',0
	.word	42046
	.byte	4,3,35,208,2,13
	.byte	'reserved_154',0
	.word	43013
	.byte	16,3,35,212,2,13
	.byte	'LBISTCTRL0',0
	.word	40093
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	40161
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	40229
	.byte	4,3,35,236,2,13
	.byte	'reserved_170',0
	.word	43022
	.byte	28,3,35,240,2,13
	.byte	'PDISC',0
	.word	40806
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4637
	.byte	8,3,35,144,3,13
	.byte	'EVRTRIM',0
	.word	39532
	.byte	4,3,35,152,3,13
	.byte	'EVRADCSTAT',0
	.word	38377
	.byte	4,3,35,156,3,13
	.byte	'EVRUVMON',0
	.word	39597
	.byte	4,3,35,160,3,13
	.byte	'EVROVMON',0
	.word	38648
	.byte	4,3,35,164,3,13
	.byte	'EVRMONCTRL',0
	.word	38512
	.byte	4,3,35,168,3,13
	.byte	'reserved_1AC',0
	.word	2818
	.byte	4,3,35,172,3,13
	.byte	'EVRSDCTRL1',0
	.word	39195
	.byte	4,3,35,176,3,13
	.byte	'EVRSDCTRL2',0
	.word	39263
	.byte	4,3,35,180,3,13
	.byte	'EVRSDCTRL3',0
	.word	39331
	.byte	4,3,35,184,3,13
	.byte	'EVRSDCTRL4',0
	.word	39399
	.byte	4,3,35,188,3,13
	.byte	'EVRSDCOEFF1',0
	.word	38781
	.byte	4,3,35,192,3,13
	.byte	'EVRSDCOEFF2',0
	.word	38850
	.byte	4,3,35,196,3,13
	.byte	'EVRSDCOEFF3',0
	.word	38919
	.byte	4,3,35,200,3,13
	.byte	'EVRSDCOEFF4',0
	.word	38988
	.byte	4,3,35,204,3,13
	.byte	'EVRSDCOEFF5',0
	.word	39057
	.byte	4,3,35,208,3,13
	.byte	'EVRSDCOEFF6',0
	.word	39126
	.byte	4,3,35,212,3,13
	.byte	'EVROSCCTRL',0
	.word	38580
	.byte	4,3,35,216,3,13
	.byte	'reserved_1DC',0
	.word	2818
	.byte	4,3,35,220,3,13
	.byte	'OVCENABLE',0
	.word	40739
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	40675
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	43031
	.byte	40,3,35,232,3,13
	.byte	'EICR',0
	.word	43040
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	37992
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	39788
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	40930
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	43049
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	2818
	.byte	4,3,35,188,4,13
	.byte	'DTSLIM',0
	.word	37801
	.byte	4,3,35,192,4,13
	.byte	'reserved_244',0
	.word	43058
	.byte	180,3,3,35,196,4,13
	.byte	'ACCEN1',0
	.word	37024
	.byte	4,3,35,248,7,13
	.byte	'ACCEN0',0
	.word	36960
	.byte	4,3,35,252,7,0,14
	.word	43069
	.byte	32
	.byte	'Ifx_SCU',0,4,181,16,3
	.word	45059
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,20,45,16,4,11
	.byte	'ADDR',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,20,48,3
	.word	45081
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,20,51,16,4,11
	.byte	'VSS',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	462
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,20,55,3
	.word	45142
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,20,58,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	462
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,20,62,3
	.word	45221
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,20,65,16,4,11
	.byte	'CountValue',0,4
	.word	462
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,20,69,3
	.word	45307
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,20,72,16,4,11
	.byte	'CM',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	462
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	462
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	462
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	462
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,20,80,3
	.word	45396
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,20,83,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	462
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,20,89,3
	.word	45542
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,20,92,16,4,11
	.byte	'CORE_ID',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,20,96,3
	.word	45669
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,20,99,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,20,103,3
	.word	45767
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,20,106,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,20,110,3
	.word	45860
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,20,113,16,4,11
	.byte	'MODREV',0,4
	.word	462
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	462
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,20,118,3
	.word	45953
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,20,121,16,4,11
	.byte	'XE',0,4
	.word	462
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,20,125,3
	.word	46060
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,20,128,1,16,4,11
	.byte	'EVTA',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	462
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,20,136,1,3
	.word	46147
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,20,139,1,16,4,11
	.byte	'CID',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,20,143,1,3
	.word	46301
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,20,146,1,16,4,11
	.byte	'DATA',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,20,149,1,3
	.word	46395
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,20,152,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	462
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	462
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	462
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	462
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	462
	.byte	1,17,2,35,0,11
	.byte	'SME',0,4
	.word	462
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,20,163,1,3
	.word	46458
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,20,166,1,16,4,11
	.byte	'DE',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	462
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	462
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	462
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	462
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	462
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,20,177,1,3
	.word	46676
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,20,180,1,16,4,11
	.byte	'DTA',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	462
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,20,184,1,3
	.word	46891
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,20,187,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	462
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,20,192,1,3
	.word	46985
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,20,195,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,20,199,1,3
	.word	47101
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,20,202,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	6,26,2,35,0,11
	.byte	'DCXValue',0,4
	.word	462
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,20,206,1,3
	.word	47202
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,20,209,1,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,20,212,1,3
	.word	47295
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,20,215,1,16,4,11
	.byte	'TA',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,20,218,1,3
	.word	47375
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,20,221,1,16,4,11
	.byte	'IED',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	462
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	462
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	462
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	462
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	462
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,20,233,1,3
	.word	47444
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,20,236,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'DMSValue',0,4
	.word	462
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,20,240,1,3
	.word	47673
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,20,243,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,20,247,1,3
	.word	47766
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,20,250,1,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	462
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,20,254,1,3
	.word	47861
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,20,129,2,16,4,11
	.byte	'RE',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,20,133,2,3
	.word	47956
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,20,136,2,16,4,11
	.byte	'WE',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,20,140,2,3
	.word	48046
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,20,143,2,16,4,11
	.byte	'SRE',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	3,26,2,35,0,11
	.byte	'CRE',0,4
	.word	462
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	462
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	462
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	462
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	462
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	462
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	462
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	462
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	462
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	462
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	462
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	462
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,20,161,2,3
	.word	48136
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,20,164,2,16,4,11
	.byte	'EVTA',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	462
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,20,172,2,3
	.word	48460
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,20,175,2,16,4,11
	.byte	'FCXO',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	462
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	462
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,20,180,2,3
	.word	48614
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,20,183,2,16,4,11
	.byte	'TST',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	462
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	462
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	462
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	462
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	462
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	462
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	462
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	462
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	462
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	462
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	462
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	462
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	462
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	462
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,20,202,2,3
	.word	48720
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,205,2,16,4,11
	.byte	'OPC',0,4
	.word	462
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	462
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	462
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	462
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	462
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,20,212,2,3
	.word	49069
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,20,215,2,16,4,11
	.byte	'PC',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,20,218,2,3
	.word	49229
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,221,2,16,4,11
	.byte	'SRC1',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,20,224,2,3
	.word	49310
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,227,2,16,4,11
	.byte	'SRC2',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,20,230,2,3
	.word	49397
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,233,2,16,4,11
	.byte	'SRC3',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,20,236,2,3
	.word	49484
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,20,239,2,16,4,11
	.byte	'CountValue',0,4
	.word	462
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,20,243,2,3
	.word	49571
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,20,246,2,16,4,11
	.byte	'CCPN',0,4
	.word	462
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	462
	.byte	5,17,2,35,0,11
	.byte	'IE',0,4
	.word	462
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	462
	.byte	10,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	462
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,20,253,2,3
	.word	49662
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,20,128,3,16,4,11
	.byte	'ISP',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,20,131,3,3
	.word	49805
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,20,134,3,16,4,11
	.byte	'LCXO',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	462
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	462
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,20,139,3,3
	.word	49871
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,20,142,3,16,4,11
	.byte	'CountValue',0,4
	.word	462
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,20,146,3,3
	.word	49977
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,20,149,3,16,4,11
	.byte	'CountValue',0,4
	.word	462
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,20,153,3,3
	.word	50070
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,20,156,3,16,4,11
	.byte	'CountValue',0,4
	.word	462
	.byte	31,1,2,35,0,11
	.byte	'SOvf',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,20,160,3,3
	.word	50163
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,20,163,3,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	462
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,20,167,3,3
	.word	50256
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,20,170,3,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	462
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,20,175,3,3
	.word	50341
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,20,178,3,16,4,11
	.byte	'PCINV',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	462
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,20,183,3,3
	.word	50457
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,20,186,3,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,20,190,3,3
	.word	50568
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,20,193,3,16,4,11
	.byte	'PCXO',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	462
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	462
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	462
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	462
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,20,200,3,3
	.word	50669
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,20,203,3,16,4,11
	.byte	'TA',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,20,206,3,3
	.word	50799
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,20,209,3,16,4,11
	.byte	'IED',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	462
	.byte	6,21,2,35,0,11
	.byte	'IE_DUAL',0,4
	.word	462
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	462
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	462
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	462
	.byte	18,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,20,221,3,3
	.word	50868
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,20,224,3,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	13,19,2,35,0,11
	.byte	'DAC',0,4
	.word	462
	.byte	3,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,20,229,3,3
	.word	51097
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,20,232,3,16,4,11
	.byte	'reserved_0',0,4
	.word	462
	.byte	14,18,2,35,0,11
	.byte	'CAC',0,4
	.word	462
	.byte	2,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,20,237,3,3
	.word	51210
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,20,240,3,16,4,11
	.byte	'PSI',0,4
	.word	462
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	462
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,20,244,3,3
	.word	51323
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,20,247,3,16,4,11
	.byte	'FRE',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	462
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	462
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	462
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	462
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,20,129,4,3
	.word	51414
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,20,132,4,16,4,11
	.byte	'CDC',0,4
	.word	462
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	462
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	462
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	462
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	462
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	462
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	462
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	462
	.byte	12,5,2,35,0,11
	.byte	'SAV',0,4
	.word	462
	.byte	1,4,2,35,0,11
	.byte	'AV',0,4
	.word	462
	.byte	1,3,2,35,0,11
	.byte	'SV',0,4
	.word	462
	.byte	1,2,2,35,0,11
	.byte	'V',0,4
	.word	462
	.byte	1,1,2,35,0,11
	.byte	'C',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,20,147,4,3
	.word	51617
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,20,150,4,16,4,11
	.byte	'ADFLIP',0,4
	.word	462
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	462
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	462
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	462
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,20,156,4,3
	.word	51860
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,20,159,4,16,4,11
	.byte	'PC',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'PT',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	5,24,2,35,0,11
	.byte	'DC',0,4
	.word	462
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	462
	.byte	1,22,2,35,0,11
	.byte	'DT',0,4
	.word	462
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	462
	.byte	13,8,2,35,0,11
	.byte	'IODT',0,4
	.word	462
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	462
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,20,171,4,3
	.word	51988
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENA_Bits',0,20,174,4,16,4,11
	.byte	'EN',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA_Bits',0,20,177,4,3
	.word	52229
	.byte	10
	.byte	'_Ifx_CPU_SPROT_ACCENB_Bits',0,20,180,4,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB_Bits',0,20,183,4,3
	.word	52312
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,186,4,16,4,11
	.byte	'EN',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA_Bits',0,20,189,4,3
	.word	52403
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,192,4,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB_Bits',0,20,195,4,3
	.word	52494
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_LA_Bits',0,20,198,4,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	439
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA_Bits',0,20,202,4,3
	.word	52593
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN_UA_Bits',0,20,205,4,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	439
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA_Bits',0,20,209,4,3
	.word	52700
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,20,212,4,16,4,11
	.byte	'EVTA',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	462
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,20,220,4,3
	.word	52807
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,20,223,4,16,4,11
	.byte	'FCDSF',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'IT',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	462
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,20,231,4,3
	.word	52961
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,20,234,4,16,4,11
	.byte	'ASI',0,4
	.word	462
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	462
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,20,238,4,3
	.word	53122
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,20,241,4,16,4,11
	.byte	'TEXP0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	462
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	462
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	462
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,20,249,4,3
	.word	53220
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,20,252,4,16,4,11
	.byte	'Timer',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,20,255,4,3
	.word	53392
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,20,130,5,16,4,11
	.byte	'ADDR',0,4
	.word	462
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,20,133,5,3
	.word	53472
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,20,136,5,16,4,11
	.byte	'EVTA',0,4
	.word	462
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	462
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	462
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	462
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	462
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	462
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	462
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	462
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	462
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	462
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	462
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,20,153,5,3
	.word	53545
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,20,156,5,16,4,11
	.byte	'T0',0,4
	.word	462
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	462
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	462
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	462
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	462
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	462
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	462
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	462
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	462
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,20,167,5,3
	.word	53863
	.byte	12,20,175,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45081
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,20,180,5,3
	.word	54058
	.byte	12,20,183,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45142
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,20,188,5,3
	.word	54117
	.byte	12,20,191,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45221
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,20,196,5,3
	.word	54178
	.byte	12,20,199,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45307
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,20,204,5,3
	.word	54239
	.byte	12,20,207,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45396
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,20,212,5,3
	.word	54301
	.byte	12,20,215,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45542
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,20,220,5,3
	.word	54364
	.byte	12,20,223,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45669
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,20,228,5,3
	.word	54428
	.byte	12,20,231,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45767
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,20,236,5,3
	.word	54493
	.byte	12,20,239,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45860
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,20,244,5,3
	.word	54556
	.byte	12,20,247,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45953
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,20,252,5,3
	.word	54619
	.byte	12,20,255,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,20,132,6,3
	.word	54683
	.byte	12,20,135,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46147
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,20,140,6,3
	.word	54745
	.byte	12,20,143,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46301
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,20,148,6,3
	.word	54808
	.byte	12,20,151,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46395
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,20,156,6,3
	.word	54872
	.byte	12,20,159,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46458
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,20,164,6,3
	.word	54931
	.byte	12,20,167,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46676
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,20,172,6,3
	.word	54993
	.byte	12,20,175,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46891
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,20,180,6,3
	.word	55056
	.byte	12,20,183,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46985
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,20,188,6,3
	.word	55120
	.byte	12,20,191,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47101
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,20,196,6,3
	.word	55183
	.byte	12,20,199,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47202
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,20,204,6,3
	.word	55246
	.byte	12,20,207,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47295
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,20,212,6,3
	.word	55307
	.byte	12,20,215,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47375
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,20,220,6,3
	.word	55370
	.byte	12,20,223,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47444
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,20,228,6,3
	.word	55433
	.byte	12,20,231,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47673
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,20,236,6,3
	.word	55496
	.byte	12,20,239,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47766
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,20,244,6,3
	.word	55557
	.byte	12,20,247,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47861
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,20,252,6,3
	.word	55620
	.byte	12,20,255,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47956
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,20,132,7,3
	.word	55683
	.byte	12,20,135,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48046
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,20,140,7,3
	.word	55745
	.byte	12,20,143,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48136
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,20,148,7,3
	.word	55807
	.byte	12,20,151,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48460
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,20,156,7,3
	.word	55869
	.byte	12,20,159,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48614
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,20,164,7,3
	.word	55932
	.byte	12,20,167,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	48720
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,20,172,7,3
	.word	55993
	.byte	12,20,175,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49069
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,20,180,7,3
	.word	56063
	.byte	12,20,183,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49229
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,20,188,7,3
	.word	56133
	.byte	12,20,191,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49310
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,20,196,7,3
	.word	56202
	.byte	12,20,199,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49397
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,20,204,7,3
	.word	56273
	.byte	12,20,207,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49484
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,20,212,7,3
	.word	56344
	.byte	12,20,215,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49571
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,20,220,7,3
	.word	56415
	.byte	12,20,223,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49662
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,20,228,7,3
	.word	56477
	.byte	12,20,231,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49805
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,20,236,7,3
	.word	56538
	.byte	12,20,239,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49871
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,20,244,7,3
	.word	56599
	.byte	12,20,247,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	49977
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,20,252,7,3
	.word	56660
	.byte	12,20,255,7,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50070
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,20,132,8,3
	.word	56723
	.byte	12,20,135,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50163
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,20,140,8,3
	.word	56786
	.byte	12,20,143,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50256
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,20,148,8,3
	.word	56849
	.byte	12,20,151,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50341
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,20,156,8,3
	.word	56909
	.byte	12,20,159,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50457
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,20,164,8,3
	.word	56972
	.byte	12,20,167,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50568
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,20,172,8,3
	.word	57035
	.byte	12,20,175,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50669
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,20,180,8,3
	.word	57098
	.byte	12,20,183,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50799
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,20,188,8,3
	.word	57160
	.byte	12,20,191,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	50868
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,20,196,8,3
	.word	57223
	.byte	12,20,199,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51097
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,20,204,8,3
	.word	57286
	.byte	12,20,207,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51210
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,20,212,8,3
	.word	57348
	.byte	12,20,215,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51323
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,20,220,8,3
	.word	57410
	.byte	12,20,223,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51414
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,20,228,8,3
	.word	57472
	.byte	12,20,231,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51617
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,20,236,8,3
	.word	57534
	.byte	12,20,239,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51860
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,20,244,8,3
	.word	57595
	.byte	12,20,247,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	51988
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,20,252,8,3
	.word	57658
	.byte	12,20,255,8,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52229
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENA',0,20,132,9,3
	.word	57722
	.byte	12,20,135,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52312
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_ACCENB',0,20,140,9,3
	.word	57792
	.byte	12,20,143,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52403
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENA',0,20,148,9,3
	.word	57862
	.byte	12,20,151,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52494
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_ACCENB',0,20,156,9,3
	.word	57936
	.byte	12,20,159,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52593
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_LA',0,20,164,9,3
	.word	58010
	.byte	12,20,167,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52700
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPROT_RGN_UA',0,20,172,9,3
	.word	58080
	.byte	12,20,175,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52807
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,20,180,9,3
	.word	58150
	.byte	12,20,183,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	52961
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,20,188,9,3
	.word	58213
	.byte	12,20,191,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,20,196,9,3
	.word	58277
	.byte	12,20,199,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53220
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,20,204,9,3
	.word	58343
	.byte	12,20,207,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53392
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,20,212,9,3
	.word	58408
	.byte	12,20,215,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53472
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,20,220,9,3
	.word	58475
	.byte	12,20,223,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53545
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,20,228,9,3
	.word	58539
	.byte	12,20,231,9,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	53863
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,20,236,9,3
	.word	58603
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,20,247,9,25,8,13
	.byte	'L',0
	.word	54493
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	54556
	.byte	4,2,35,4,0,14
	.word	58669
	.byte	32
	.byte	'Ifx_CPU_CPR',0,20,251,9,3
	.word	58711
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,20,254,9,25,8,13
	.byte	'L',0
	.word	55557
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	55620
	.byte	4,2,35,4,0,14
	.word	58737
	.byte	32
	.byte	'Ifx_CPU_DPR',0,20,130,10,3
	.word	58779
	.byte	10
	.byte	'_Ifx_CPU_SPROT_RGN',0,20,133,10,25,16,13
	.byte	'LA',0
	.word	58010
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	58080
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	57862
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	57936
	.byte	4,2,35,12,0,14
	.word	58805
	.byte	32
	.byte	'Ifx_CPU_SPROT_RGN',0,20,139,10,3
	.word	58887
	.byte	18,12
	.word	58408
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,20,142,10,25,16,13
	.byte	'CON',0
	.word	58343
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	58919
	.byte	12,2,35,4,0,14
	.word	58928
	.byte	32
	.byte	'Ifx_CPU_TPS',0,20,146,10,3
	.word	58976
	.byte	10
	.byte	'_Ifx_CPU_TR',0,20,149,10,25,8,13
	.byte	'EVT',0
	.word	58539
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	58475
	.byte	4,2,35,4,0,14
	.word	59002
	.byte	32
	.byte	'Ifx_CPU_TR',0,20,153,10,3
	.word	59047
	.byte	18,176,32
	.word	614
	.byte	19,175,32,0,18,208,223,1
	.word	614
	.byte	19,207,223,1,0,18,248,1
	.word	614
	.byte	19,247,1,0,18,244,29
	.word	614
	.byte	19,243,29,0,18,188,3
	.word	614
	.byte	19,187,3,0,18,232,3
	.word	614
	.byte	19,231,3,0,18,252,23
	.word	614
	.byte	19,251,23,0,18,228,63
	.word	614
	.byte	19,227,63,0,18,128,1
	.word	58737
	.byte	19,15,0,14
	.word	59162
	.byte	18,128,31
	.word	614
	.byte	19,255,30,0,18,64
	.word	58669
	.byte	19,7,0,14
	.word	59188
	.byte	18,192,31
	.word	614
	.byte	19,191,31,0,18,16
	.word	54683
	.byte	19,3,0,18,16
	.word	55683
	.byte	19,3,0,18,16
	.word	55745
	.byte	19,3,0,18,208,7
	.word	614
	.byte	19,207,7,0,14
	.word	58928
	.byte	18,240,23
	.word	614
	.byte	19,239,23,0,18,64
	.word	59002
	.byte	19,7,0,14
	.word	59267
	.byte	18,192,23
	.word	614
	.byte	19,191,23,0,18,232,1
	.word	614
	.byte	19,231,1,0,18,180,1
	.word	614
	.byte	19,179,1,0,18,172,1
	.word	614
	.byte	19,171,1,0,18,64
	.word	54872
	.byte	19,15,0,18,64
	.word	614
	.byte	19,63,0,18,64
	.word	54058
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,20,166,10,25,128,128,4,13
	.byte	'reserved_0',0
	.word	59072
	.byte	176,32,2,35,0,13
	.byte	'SEGEN',0
	.word	57595
	.byte	4,3,35,176,32,13
	.byte	'reserved_1034',0
	.word	59083
	.byte	208,223,1,3,35,180,32,13
	.byte	'TASK_ASI',0
	.word	58277
	.byte	4,4,35,132,128,2,13
	.byte	'reserved_8008',0
	.word	59096
	.byte	248,1,4,35,136,128,2,13
	.byte	'PMA0',0
	.word	57286
	.byte	4,4,35,128,130,2,13
	.byte	'PMA1',0
	.word	57348
	.byte	4,4,35,132,130,2,13
	.byte	'PMA2',0
	.word	57410
	.byte	4,4,35,136,130,2,13
	.byte	'reserved_810C',0
	.word	59107
	.byte	244,29,4,35,140,130,2,13
	.byte	'DCON2',0
	.word	55183
	.byte	4,4,35,128,160,2,13
	.byte	'reserved_9004',0
	.word	4637
	.byte	8,4,35,132,160,2,13
	.byte	'SMACON',0
	.word	57658
	.byte	4,4,35,140,160,2,13
	.byte	'DSTR',0
	.word	55807
	.byte	4,4,35,144,160,2,13
	.byte	'reserved_9014',0
	.word	2818
	.byte	4,4,35,148,160,2,13
	.byte	'DATR',0
	.word	54931
	.byte	4,4,35,152,160,2,13
	.byte	'DEADD',0
	.word	55307
	.byte	4,4,35,156,160,2,13
	.byte	'DIEAR',0
	.word	55370
	.byte	4,4,35,160,160,2,13
	.byte	'DIETR',0
	.word	55433
	.byte	4,4,35,164,160,2,13
	.byte	'reserved_9028',0
	.word	4008
	.byte	24,4,35,168,160,2,13
	.byte	'DCON0',0
	.word	55120
	.byte	4,4,35,192,160,2,13
	.byte	'reserved_9044',0
	.word	59118
	.byte	188,3,4,35,196,160,2,13
	.byte	'PSTR',0
	.word	57472
	.byte	4,4,35,128,164,2,13
	.byte	'PCON1',0
	.word	56972
	.byte	4,4,35,132,164,2,13
	.byte	'PCON2',0
	.word	57035
	.byte	4,4,35,136,164,2,13
	.byte	'PCON0',0
	.word	56909
	.byte	4,4,35,140,164,2,13
	.byte	'PIEAR',0
	.word	57160
	.byte	4,4,35,144,164,2,13
	.byte	'PIETR',0
	.word	57223
	.byte	4,4,35,148,164,2,13
	.byte	'reserved_9218',0
	.word	59129
	.byte	232,3,4,35,152,164,2,13
	.byte	'COMPAT',0
	.word	54364
	.byte	4,4,35,128,168,2,13
	.byte	'reserved_9404',0
	.word	59140
	.byte	252,23,4,35,132,168,2,13
	.byte	'FPU_TRAP_CON',0
	.word	55993
	.byte	4,4,35,128,192,2,13
	.byte	'FPU_TRAP_PC',0
	.word	56133
	.byte	4,4,35,132,192,2,13
	.byte	'FPU_TRAP_OPC',0
	.word	56063
	.byte	4,4,35,136,192,2,13
	.byte	'reserved_A00C',0
	.word	2818
	.byte	4,4,35,140,192,2,13
	.byte	'FPU_TRAP_SRC1',0
	.word	56202
	.byte	4,4,35,144,192,2,13
	.byte	'FPU_TRAP_SRC2',0
	.word	56273
	.byte	4,4,35,148,192,2,13
	.byte	'FPU_TRAP_SRC3',0
	.word	56344
	.byte	4,4,35,152,192,2,13
	.byte	'reserved_A01C',0
	.word	59151
	.byte	228,63,4,35,156,192,2,13
	.byte	'DPR',0
	.word	59172
	.byte	128,1,4,35,128,128,3,13
	.byte	'reserved_C080',0
	.word	59177
	.byte	128,31,4,35,128,129,3,13
	.byte	'CPR',0
	.word	59197
	.byte	64,4,35,128,160,3,13
	.byte	'reserved_D040',0
	.word	59202
	.byte	192,31,4,35,192,160,3,13
	.byte	'CPXE',0
	.word	59213
	.byte	16,4,35,128,192,3,13
	.byte	'DPRE',0
	.word	59222
	.byte	16,4,35,144,192,3,13
	.byte	'DPWE',0
	.word	59231
	.byte	16,4,35,160,192,3,13
	.byte	'reserved_E030',0
	.word	59240
	.byte	208,7,4,35,176,192,3,13
	.byte	'TPS',0
	.word	59251
	.byte	16,4,35,128,200,3,13
	.byte	'reserved_E410',0
	.word	59256
	.byte	240,23,4,35,144,200,3,13
	.byte	'TR',0
	.word	59276
	.byte	64,4,35,128,224,3,13
	.byte	'reserved_F040',0
	.word	59281
	.byte	192,23,4,35,192,224,3,13
	.byte	'CCTRL',0
	.word	54301
	.byte	4,4,35,128,248,3,13
	.byte	'CCNT',0
	.word	54239
	.byte	4,4,35,132,248,3,13
	.byte	'ICNT',0
	.word	56415
	.byte	4,4,35,136,248,3,13
	.byte	'M1CNT',0
	.word	56660
	.byte	4,4,35,140,248,3,13
	.byte	'M2CNT',0
	.word	56723
	.byte	4,4,35,144,248,3,13
	.byte	'M3CNT',0
	.word	56786
	.byte	4,4,35,148,248,3,13
	.byte	'reserved_FC18',0
	.word	59292
	.byte	232,1,4,35,152,248,3,13
	.byte	'DBGSR',0
	.word	54993
	.byte	4,4,35,128,250,3,13
	.byte	'reserved_FD04',0
	.word	2818
	.byte	4,4,35,132,250,3,13
	.byte	'EXEVT',0
	.word	55869
	.byte	4,4,35,136,250,3,13
	.byte	'CREVT',0
	.word	54745
	.byte	4,4,35,140,250,3,13
	.byte	'SWEVT',0
	.word	58150
	.byte	4,4,35,144,250,3,13
	.byte	'reserved_FD14',0
	.word	43022
	.byte	28,4,35,148,250,3,13
	.byte	'TRIG_ACC',0
	.word	58603
	.byte	4,4,35,176,250,3,13
	.byte	'reserved_FD34',0
	.word	4977
	.byte	12,4,35,180,250,3,13
	.byte	'DMS',0
	.word	55496
	.byte	4,4,35,192,250,3,13
	.byte	'DCX',0
	.word	55246
	.byte	4,4,35,196,250,3,13
	.byte	'DBGTCR',0
	.word	55056
	.byte	4,4,35,200,250,3,13
	.byte	'reserved_FD4C',0
	.word	59303
	.byte	180,1,4,35,204,250,3,13
	.byte	'PCXI',0
	.word	57098
	.byte	4,4,35,128,252,3,13
	.byte	'PSW',0
	.word	57534
	.byte	4,4,35,132,252,3,13
	.byte	'PC',0
	.word	56849
	.byte	4,4,35,136,252,3,13
	.byte	'reserved_FE0C',0
	.word	4637
	.byte	8,4,35,140,252,3,13
	.byte	'SYSCON',0
	.word	58213
	.byte	4,4,35,148,252,3,13
	.byte	'CPU_ID',0
	.word	54619
	.byte	4,4,35,152,252,3,13
	.byte	'CORE_ID',0
	.word	54428
	.byte	4,4,35,156,252,3,13
	.byte	'BIV',0
	.word	54117
	.byte	4,4,35,160,252,3,13
	.byte	'BTV',0
	.word	54178
	.byte	4,4,35,164,252,3,13
	.byte	'ISP',0
	.word	56538
	.byte	4,4,35,168,252,3,13
	.byte	'ICR',0
	.word	56477
	.byte	4,4,35,172,252,3,13
	.byte	'reserved_FE30',0
	.word	4637
	.byte	8,4,35,176,252,3,13
	.byte	'FCX',0
	.word	55932
	.byte	4,4,35,184,252,3,13
	.byte	'LCX',0
	.word	56599
	.byte	4,4,35,188,252,3,13
	.byte	'reserved_FE40',0
	.word	43013
	.byte	16,4,35,192,252,3,13
	.byte	'CUS_ID',0
	.word	54808
	.byte	4,4,35,208,252,3,13
	.byte	'reserved_FE54',0
	.word	59314
	.byte	172,1,4,35,212,252,3,13
	.byte	'D',0
	.word	59325
	.byte	64,4,35,128,254,3,13
	.byte	'reserved_FF40',0
	.word	59334
	.byte	64,4,35,192,254,3,13
	.byte	'A',0
	.word	59343
	.byte	64,4,35,128,255,3,13
	.byte	'reserved_FFC0',0
	.word	59334
	.byte	64,4,35,192,255,3,0,14
	.word	59352
	.byte	32
	.byte	'Ifx_CPU',0,20,130,11,3
	.word	61143
	.byte	15,6,127,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_none',0,2,0,32
	.byte	'IfxCpu_Id',0,6,132,1,3
	.word	61165
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,6,161,1,3
	.word	1426
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,11,62,3
	.word	9791
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,11,75,3
	.word	10081
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,86,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	61310
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,11,89,3
	.word	61342
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,92,25,12,13
	.byte	'TX',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,8,0,14
	.word	61368
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,11,97,3
	.word	61427
	.byte	10
	.byte	'_Ifx_SRC_BCUSPB',0,11,100,25,4,13
	.byte	'SBSRC',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	61455
	.byte	32
	.byte	'Ifx_SRC_BCUSPB',0,11,103,3
	.word	61492
	.byte	18,64
	.word	10081
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN',0,11,106,25,64,13
	.byte	'INT',0
	.word	61520
	.byte	64,2,35,0,0,14
	.word	61529
	.byte	32
	.byte	'Ifx_SRC_CAN',0,11,109,3
	.word	61561
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,112,25,16,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10081
	.byte	4,2,35,12,0,14
	.word	61586
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,11,118,3
	.word	61658
	.byte	18,8
	.word	10081
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS',0,11,121,25,8,13
	.byte	'SR',0
	.word	61684
	.byte	8,2,35,0,0,14
	.word	61693
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,11,124,3
	.word	61729
	.byte	10
	.byte	'_Ifx_SRC_CIF',0,11,127,25,16,13
	.byte	'MI',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'MIEP',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'ISP',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'MJPEG',0
	.word	10081
	.byte	4,2,35,12,0,14
	.word	61759
	.byte	32
	.byte	'Ifx_SRC_CIF',0,11,133,1,3
	.word	61832
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,136,1,25,4,13
	.byte	'SBSRC',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	61858
	.byte	32
	.byte	'Ifx_SRC_CPU',0,11,139,1,3
	.word	61893
	.byte	18,192,1
	.word	10081
	.byte	19,47,0,10
	.byte	'_Ifx_SRC_DMA',0,11,142,1,25,208,1,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'reserved_4',0
	.word	4977
	.byte	12,2,35,4,13
	.byte	'CH',0
	.word	61919
	.byte	192,1,2,35,16,0,14
	.word	61929
	.byte	32
	.byte	'Ifx_SRC_DMA',0,11,147,1,3
	.word	61996
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,150,1,25,8,13
	.byte	'SRM',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10081
	.byte	4,2,35,4,0,14
	.word	62022
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,11,154,1,3
	.word	62070
	.byte	10
	.byte	'_Ifx_SRC_EMEM',0,11,157,1,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	62098
	.byte	32
	.byte	'Ifx_SRC_EMEM',0,11,160,1,3
	.word	62131
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,163,1,25,80,13
	.byte	'INT',0
	.word	61684
	.byte	8,2,35,0,13
	.byte	'TINT',0
	.word	61684
	.byte	8,2,35,8,13
	.byte	'NDAT',0
	.word	61684
	.byte	8,2,35,16,13
	.byte	'MBSC',0
	.word	61684
	.byte	8,2,35,24,13
	.byte	'OBUSY',0
	.word	10081
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10081
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	43031
	.byte	40,2,35,40,0,14
	.word	62158
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,11,172,1,3
	.word	62285
	.byte	10
	.byte	'_Ifx_SRC_ETH',0,11,175,1,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	62312
	.byte	32
	.byte	'Ifx_SRC_ETH',0,11,178,1,3
	.word	62344
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,181,1,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	62370
	.byte	32
	.byte	'Ifx_SRC_FCE',0,11,184,1,3
	.word	62402
	.byte	10
	.byte	'_Ifx_SRC_FFT',0,11,187,1,25,12,13
	.byte	'DONE',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'RFS',0
	.word	10081
	.byte	4,2,35,8,0,14
	.word	62428
	.byte	32
	.byte	'Ifx_SRC_FFT',0,11,192,1,3
	.word	62488
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,195,1,25,32,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10081
	.byte	4,2,35,12,13
	.byte	'reserved_10',0
	.word	43013
	.byte	16,2,35,16,0,14
	.word	62514
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,11,202,1,3
	.word	62608
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,205,1,25,48,13
	.byte	'CIRQ',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10081
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10081
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10081
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	4008
	.byte	24,2,35,24,0,14
	.word	62635
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,11,214,1,3
	.word	62752
	.byte	18,12
	.word	10081
	.byte	19,2,0,18,32
	.word	10081
	.byte	19,7,0,18,32
	.word	62789
	.byte	19,0,0,18,88
	.word	614
	.byte	19,87,0,18,108
	.word	10081
	.byte	19,26,0,18,96
	.word	614
	.byte	19,95,0,18,96
	.word	62789
	.byte	19,2,0,18,160,3
	.word	614
	.byte	19,159,3,0,18,64
	.word	62789
	.byte	19,1,0,18,192,3
	.word	614
	.byte	19,191,3,0,18,16
	.word	10081
	.byte	19,3,0,18,64
	.word	62874
	.byte	19,3,0,18,192,2
	.word	614
	.byte	19,191,2,0,18,52
	.word	614
	.byte	19,51,0,10
	.byte	'_Ifx_SRC_GTM',0,11,217,1,25,204,18,13
	.byte	'AEIIRQ',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'ARUIRQ',0
	.word	62780
	.byte	12,2,35,4,13
	.byte	'reserved_10',0
	.word	2818
	.byte	4,2,35,16,13
	.byte	'BRCIRQ',0
	.word	10081
	.byte	4,2,35,20,13
	.byte	'CMPIRQ',0
	.word	10081
	.byte	4,2,35,24,13
	.byte	'SPEIRQ',0
	.word	61684
	.byte	8,2,35,28,13
	.byte	'reserved_24',0
	.word	4637
	.byte	8,2,35,36,13
	.byte	'PSM',0
	.word	62798
	.byte	32,2,35,44,13
	.byte	'reserved_4C',0
	.word	62807
	.byte	88,2,35,76,13
	.byte	'DPLL',0
	.word	62816
	.byte	108,3,35,164,1,13
	.byte	'reserved_110',0
	.word	62825
	.byte	96,3,35,144,2,13
	.byte	'ERR',0
	.word	10081
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	4977
	.byte	12,3,35,244,2,13
	.byte	'TIM',0
	.word	62834
	.byte	96,3,35,128,3,13
	.byte	'reserved_1E0',0
	.word	62843
	.byte	160,3,3,35,224,3,13
	.byte	'MCS',0
	.word	62834
	.byte	96,3,35,128,7,13
	.byte	'reserved_3E0',0
	.word	62843
	.byte	160,3,3,35,224,7,13
	.byte	'TOM',0
	.word	62854
	.byte	64,3,35,128,11,13
	.byte	'reserved_5C0',0
	.word	62863
	.byte	192,3,3,35,192,11,13
	.byte	'ATOM',0
	.word	62883
	.byte	64,3,35,128,15,13
	.byte	'reserved_7C0',0
	.word	62892
	.byte	192,2,3,35,192,15,13
	.byte	'MCSW0',0
	.word	62780
	.byte	12,3,35,128,18,13
	.byte	'reserved_90C',0
	.word	62903
	.byte	52,3,35,140,18,13
	.byte	'MCSW1',0
	.word	62780
	.byte	12,3,35,192,18,0,14
	.word	62912
	.byte	32
	.byte	'Ifx_SRC_GTM',0,11,243,1,3
	.word	63372
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,246,1,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	63398
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,11,249,1,3
	.word	63431
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,252,1,25,16,13
	.byte	'COK',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10081
	.byte	4,2,35,12,0,14
	.word	63458
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,11,130,2,3
	.word	63531
	.byte	18,56
	.word	614
	.byte	19,55,0,10
	.byte	'_Ifx_SRC_I2C',0,11,133,2,25,80,13
	.byte	'BREQ',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'LBREQ',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SREQ',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'LSREQ',0
	.word	10081
	.byte	4,2,35,12,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,16,13
	.byte	'P',0
	.word	10081
	.byte	4,2,35,20,13
	.byte	'reserved_18',0
	.word	63558
	.byte	56,2,35,24,0,14
	.word	63567
	.byte	32
	.byte	'Ifx_SRC_I2C',0,11,142,2,3
	.word	63690
	.byte	10
	.byte	'_Ifx_SRC_LMU',0,11,145,2,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	63716
	.byte	32
	.byte	'Ifx_SRC_LMU',0,11,148,2,3
	.word	63748
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,151,2,25,20,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10081
	.byte	4,2,35,12,13
	.byte	'SR4',0
	.word	10081
	.byte	4,2,35,16,0,14
	.word	63774
	.byte	32
	.byte	'Ifx_SRC_MSC',0,11,158,2,3
	.word	63859
	.byte	10
	.byte	'_Ifx_SRC_PMU',0,11,161,2,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	63885
	.byte	32
	.byte	'Ifx_SRC_PMU',0,11,164,2,3
	.word	63917
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,167,2,25,32,13
	.byte	'SR',0
	.word	62789
	.byte	32,2,35,0,0,14
	.word	63943
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,11,170,2,3
	.word	63976
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,173,2,25,32,13
	.byte	'SR',0
	.word	62789
	.byte	32,2,35,0,0,14
	.word	64003
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,11,176,2,3
	.word	64037
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,179,2,25,24,13
	.byte	'TX',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10081
	.byte	4,2,35,12,13
	.byte	'HC',0
	.word	10081
	.byte	4,2,35,16,13
	.byte	'U',0
	.word	10081
	.byte	4,2,35,20,0,14
	.word	64065
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,11,187,2,3
	.word	64158
	.byte	10
	.byte	'_Ifx_SRC_SCR',0,11,190,2,25,4,13
	.byte	'SR',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	64185
	.byte	32
	.byte	'Ifx_SRC_SCR',0,11,193,2,3
	.word	64217
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,196,2,25,20,13
	.byte	'DTS',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'ERU',0
	.word	62874
	.byte	16,2,35,4,0,14
	.word	64243
	.byte	32
	.byte	'Ifx_SRC_SCU',0,11,200,2,3
	.word	64289
	.byte	18,24
	.word	10081
	.byte	19,5,0,10
	.byte	'_Ifx_SRC_SENT',0,11,203,2,25,24,13
	.byte	'SR',0
	.word	64315
	.byte	24,2,35,0,0,14
	.word	64324
	.byte	32
	.byte	'Ifx_SRC_SENT',0,11,206,2,3
	.word	64357
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,209,2,25,12,13
	.byte	'SR',0
	.word	62780
	.byte	12,2,35,0,0,14
	.word	64384
	.byte	32
	.byte	'Ifx_SRC_SMU',0,11,212,2,3
	.word	64416
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,215,2,25,8,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,0,14
	.word	64442
	.byte	32
	.byte	'Ifx_SRC_STM',0,11,219,2,3
	.word	64488
	.byte	10
	.byte	'_Ifx_SRC_VADCCG',0,11,222,2,25,16,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10081
	.byte	4,2,35,12,0,14
	.word	64514
	.byte	32
	.byte	'Ifx_SRC_VADCCG',0,11,228,2,3
	.word	64589
	.byte	10
	.byte	'_Ifx_SRC_VADCG',0,11,231,2,25,16,13
	.byte	'SR0',0
	.word	10081
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10081
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10081
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10081
	.byte	4,2,35,12,0,14
	.word	64618
	.byte	32
	.byte	'Ifx_SRC_VADCG',0,11,237,2,3
	.word	64692
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,240,2,25,4,13
	.byte	'SRC',0
	.word	10081
	.byte	4,2,35,0,0,14
	.word	64720
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,11,243,2,3
	.word	64754
	.byte	18,4
	.word	61310
	.byte	19,0,0,14
	.word	64781
	.byte	10
	.byte	'_Ifx_SRC_GAGBT',0,11,128,3,25,4,13
	.byte	'AGBT',0
	.word	64790
	.byte	4,2,35,0,0,14
	.word	64795
	.byte	32
	.byte	'Ifx_SRC_GAGBT',0,11,131,3,3
	.word	64831
	.byte	18,48
	.word	61368
	.byte	19,3,0,14
	.word	64859
	.byte	10
	.byte	'_Ifx_SRC_GASCLIN',0,11,134,3,25,48,13
	.byte	'ASCLIN',0
	.word	64868
	.byte	48,2,35,0,0,14
	.word	64873
	.byte	32
	.byte	'Ifx_SRC_GASCLIN',0,11,137,3,3
	.word	64913
	.byte	14
	.word	61455
	.byte	10
	.byte	'_Ifx_SRC_GBCU',0,11,140,3,25,4,13
	.byte	'SPB',0
	.word	64943
	.byte	4,2,35,0,0,14
	.word	64948
	.byte	32
	.byte	'Ifx_SRC_GBCU',0,11,143,3,3
	.word	64982
	.byte	18,64
	.word	61529
	.byte	19,0,0,14
	.word	65009
	.byte	10
	.byte	'_Ifx_SRC_GCAN',0,11,146,3,25,64,13
	.byte	'CAN',0
	.word	65018
	.byte	64,2,35,0,0,14
	.word	65023
	.byte	32
	.byte	'Ifx_SRC_GCAN',0,11,149,3,3
	.word	65057
	.byte	18,32
	.word	61586
	.byte	19,1,0,14
	.word	65084
	.byte	10
	.byte	'_Ifx_SRC_GCCU6',0,11,152,3,25,32,13
	.byte	'CCU6',0
	.word	65093
	.byte	32,2,35,0,0,14
	.word	65098
	.byte	32
	.byte	'Ifx_SRC_GCCU6',0,11,155,3,3
	.word	65134
	.byte	14
	.word	61693
	.byte	10
	.byte	'_Ifx_SRC_GCERBERUS',0,11,158,3,25,8,13
	.byte	'CERBERUS',0
	.word	65162
	.byte	8,2,35,0,0,14
	.word	65167
	.byte	32
	.byte	'Ifx_SRC_GCERBERUS',0,11,161,3,3
	.word	65211
	.byte	18,16
	.word	61759
	.byte	19,0,0,14
	.word	65243
	.byte	10
	.byte	'_Ifx_SRC_GCIF',0,11,164,3,25,16,13
	.byte	'CIF',0
	.word	65252
	.byte	16,2,35,0,0,14
	.word	65257
	.byte	32
	.byte	'Ifx_SRC_GCIF',0,11,167,3,3
	.word	65291
	.byte	18,8
	.word	61858
	.byte	19,1,0,14
	.word	65318
	.byte	10
	.byte	'_Ifx_SRC_GCPU',0,11,170,3,25,8,13
	.byte	'CPU',0
	.word	65327
	.byte	8,2,35,0,0,14
	.word	65332
	.byte	32
	.byte	'Ifx_SRC_GCPU',0,11,173,3,3
	.word	65366
	.byte	18,208,1
	.word	61929
	.byte	19,0,0,14
	.word	65393
	.byte	10
	.byte	'_Ifx_SRC_GDMA',0,11,176,3,25,208,1,13
	.byte	'DMA',0
	.word	65403
	.byte	208,1,2,35,0,0,14
	.word	65408
	.byte	32
	.byte	'Ifx_SRC_GDMA',0,11,179,3,3
	.word	65444
	.byte	14
	.word	62022
	.byte	14
	.word	62022
	.byte	14
	.word	62022
	.byte	10
	.byte	'_Ifx_SRC_GDSADC',0,11,182,3,25,32,13
	.byte	'DSADC0',0
	.word	65471
	.byte	8,2,35,0,13
	.byte	'reserved_8',0
	.word	4637
	.byte	8,2,35,8,13
	.byte	'DSADC2',0
	.word	65476
	.byte	8,2,35,16,13
	.byte	'DSADC3',0
	.word	65481
	.byte	8,2,35,24,0,14
	.word	65486
	.byte	32
	.byte	'Ifx_SRC_GDSADC',0,11,188,3,3
	.word	65577
	.byte	18,4
	.word	62098
	.byte	19,0,0,14
	.word	65606
	.byte	10
	.byte	'_Ifx_SRC_GEMEM',0,11,191,3,25,4,13
	.byte	'EMEM',0
	.word	65615
	.byte	4,2,35,0,0,14
	.word	65620
	.byte	32
	.byte	'Ifx_SRC_GEMEM',0,11,194,3,3
	.word	65656
	.byte	18,80
	.word	62158
	.byte	19,0,0,14
	.word	65684
	.byte	10
	.byte	'_Ifx_SRC_GERAY',0,11,197,3,25,80,13
	.byte	'ERAY',0
	.word	65693
	.byte	80,2,35,0,0,14
	.word	65698
	.byte	32
	.byte	'Ifx_SRC_GERAY',0,11,200,3,3
	.word	65734
	.byte	18,4
	.word	62312
	.byte	19,0,0,14
	.word	65762
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,203,3,25,4,13
	.byte	'ETH',0
	.word	65771
	.byte	4,2,35,0,0,14
	.word	65776
	.byte	32
	.byte	'Ifx_SRC_GETH',0,11,206,3,3
	.word	65810
	.byte	18,4
	.word	62370
	.byte	19,0,0,14
	.word	65837
	.byte	10
	.byte	'_Ifx_SRC_GFCE',0,11,209,3,25,4,13
	.byte	'FCE',0
	.word	65846
	.byte	4,2,35,0,0,14
	.word	65851
	.byte	32
	.byte	'Ifx_SRC_GFCE',0,11,212,3,3
	.word	65885
	.byte	18,12
	.word	62428
	.byte	19,0,0,14
	.word	65912
	.byte	10
	.byte	'_Ifx_SRC_GFFT',0,11,215,3,25,12,13
	.byte	'FFT',0
	.word	65921
	.byte	12,2,35,0,0,14
	.word	65926
	.byte	32
	.byte	'Ifx_SRC_GFFT',0,11,218,3,3
	.word	65960
	.byte	18,64
	.word	62514
	.byte	19,1,0,14
	.word	65987
	.byte	10
	.byte	'_Ifx_SRC_GGPSR',0,11,221,3,25,64,13
	.byte	'GPSR',0
	.word	65996
	.byte	64,2,35,0,0,14
	.word	66001
	.byte	32
	.byte	'Ifx_SRC_GGPSR',0,11,224,3,3
	.word	66037
	.byte	18,48
	.word	62635
	.byte	19,0,0,14
	.word	66065
	.byte	10
	.byte	'_Ifx_SRC_GGPT12',0,11,227,3,25,48,13
	.byte	'GPT12',0
	.word	66074
	.byte	48,2,35,0,0,14
	.word	66079
	.byte	32
	.byte	'Ifx_SRC_GGPT12',0,11,230,3,3
	.word	66117
	.byte	18,204,18
	.word	62912
	.byte	19,0,0,14
	.word	66146
	.byte	10
	.byte	'_Ifx_SRC_GGTM',0,11,233,3,25,204,18,13
	.byte	'GTM',0
	.word	66156
	.byte	204,18,2,35,0,0,14
	.word	66161
	.byte	32
	.byte	'Ifx_SRC_GGTM',0,11,236,3,3
	.word	66197
	.byte	18,4
	.word	63398
	.byte	19,0,0,14
	.word	66224
	.byte	10
	.byte	'_Ifx_SRC_GHSCT',0,11,239,3,25,4,13
	.byte	'HSCT',0
	.word	66233
	.byte	4,2,35,0,0,14
	.word	66238
	.byte	32
	.byte	'Ifx_SRC_GHSCT',0,11,242,3,3
	.word	66274
	.byte	18,64
	.word	63458
	.byte	19,3,0,14
	.word	66302
	.byte	10
	.byte	'_Ifx_SRC_GHSSL',0,11,245,3,25,68,13
	.byte	'HSSL',0
	.word	66311
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10081
	.byte	4,2,35,64,0,14
	.word	66316
	.byte	32
	.byte	'Ifx_SRC_GHSSL',0,11,249,3,3
	.word	66365
	.byte	18,80
	.word	63567
	.byte	19,0,0,14
	.word	66393
	.byte	10
	.byte	'_Ifx_SRC_GI2C',0,11,252,3,25,80,13
	.byte	'I2C',0
	.word	66402
	.byte	80,2,35,0,0,14
	.word	66407
	.byte	32
	.byte	'Ifx_SRC_GI2C',0,11,255,3,3
	.word	66441
	.byte	18,4
	.word	63716
	.byte	19,0,0,14
	.word	66468
	.byte	10
	.byte	'_Ifx_SRC_GLMU',0,11,130,4,25,4,13
	.byte	'LMU',0
	.word	66477
	.byte	4,2,35,0,0,14
	.word	66482
	.byte	32
	.byte	'Ifx_SRC_GLMU',0,11,133,4,3
	.word	66516
	.byte	18,40
	.word	63774
	.byte	19,1,0,14
	.word	66543
	.byte	10
	.byte	'_Ifx_SRC_GMSC',0,11,136,4,25,40,13
	.byte	'MSC',0
	.word	66552
	.byte	40,2,35,0,0,14
	.word	66557
	.byte	32
	.byte	'Ifx_SRC_GMSC',0,11,139,4,3
	.word	66591
	.byte	18,8
	.word	63885
	.byte	19,1,0,14
	.word	66618
	.byte	10
	.byte	'_Ifx_SRC_GPMU',0,11,142,4,25,8,13
	.byte	'PMU',0
	.word	66627
	.byte	8,2,35,0,0,14
	.word	66632
	.byte	32
	.byte	'Ifx_SRC_GPMU',0,11,145,4,3
	.word	66666
	.byte	18,32
	.word	63943
	.byte	19,0,0,14
	.word	66693
	.byte	10
	.byte	'_Ifx_SRC_GPSI5',0,11,148,4,25,32,13
	.byte	'PSI5',0
	.word	66702
	.byte	32,2,35,0,0,14
	.word	66707
	.byte	32
	.byte	'Ifx_SRC_GPSI5',0,11,151,4,3
	.word	66743
	.byte	18,32
	.word	64003
	.byte	19,0,0,14
	.word	66771
	.byte	10
	.byte	'_Ifx_SRC_GPSI5S',0,11,154,4,25,32,13
	.byte	'PSI5S',0
	.word	66780
	.byte	32,2,35,0,0,14
	.word	66785
	.byte	32
	.byte	'Ifx_SRC_GPSI5S',0,11,157,4,3
	.word	66823
	.byte	18,96
	.word	64065
	.byte	19,3,0,14
	.word	66852
	.byte	10
	.byte	'_Ifx_SRC_GQSPI',0,11,160,4,25,96,13
	.byte	'QSPI',0
	.word	66861
	.byte	96,2,35,0,0,14
	.word	66866
	.byte	32
	.byte	'Ifx_SRC_GQSPI',0,11,163,4,3
	.word	66902
	.byte	18,4
	.word	64185
	.byte	19,0,0,14
	.word	66930
	.byte	10
	.byte	'_Ifx_SRC_GSCR',0,11,166,4,25,4,13
	.byte	'SCR',0
	.word	66939
	.byte	4,2,35,0,0,14
	.word	66944
	.byte	32
	.byte	'Ifx_SRC_GSCR',0,11,169,4,3
	.word	66978
	.byte	14
	.word	64243
	.byte	10
	.byte	'_Ifx_SRC_GSCU',0,11,172,4,25,20,13
	.byte	'SCU',0
	.word	67005
	.byte	20,2,35,0,0,14
	.word	67010
	.byte	32
	.byte	'Ifx_SRC_GSCU',0,11,175,4,3
	.word	67044
	.byte	18,24
	.word	64324
	.byte	19,0,0,14
	.word	67071
	.byte	10
	.byte	'_Ifx_SRC_GSENT',0,11,178,4,25,24,13
	.byte	'SENT',0
	.word	67080
	.byte	24,2,35,0,0,14
	.word	67085
	.byte	32
	.byte	'Ifx_SRC_GSENT',0,11,181,4,3
	.word	67121
	.byte	18,12
	.word	64384
	.byte	19,0,0,14
	.word	67149
	.byte	10
	.byte	'_Ifx_SRC_GSMU',0,11,184,4,25,12,13
	.byte	'SMU',0
	.word	67158
	.byte	12,2,35,0,0,14
	.word	67163
	.byte	32
	.byte	'Ifx_SRC_GSMU',0,11,187,4,3
	.word	67197
	.byte	18,16
	.word	64442
	.byte	19,1,0,14
	.word	67224
	.byte	10
	.byte	'_Ifx_SRC_GSTM',0,11,190,4,25,16,13
	.byte	'STM',0
	.word	67233
	.byte	16,2,35,0,0,14
	.word	67238
	.byte	32
	.byte	'Ifx_SRC_GSTM',0,11,193,4,3
	.word	67272
	.byte	18,64
	.word	64618
	.byte	19,3,0,14
	.word	67299
	.byte	18,224,1
	.word	614
	.byte	19,223,1,0,18,32
	.word	64514
	.byte	19,1,0,14
	.word	67324
	.byte	10
	.byte	'_Ifx_SRC_GVADC',0,11,196,4,25,192,2,13
	.byte	'G',0
	.word	67308
	.byte	64,2,35,0,13
	.byte	'reserved_40',0
	.word	67313
	.byte	224,1,2,35,64,13
	.byte	'CG',0
	.word	67333
	.byte	32,3,35,160,2,0,14
	.word	67338
	.byte	32
	.byte	'Ifx_SRC_GVADC',0,11,201,4,3
	.word	67407
	.byte	14
	.word	64720
	.byte	10
	.byte	'_Ifx_SRC_GXBAR',0,11,204,4,25,4,13
	.byte	'XBAR',0
	.word	67435
	.byte	4,2,35,0,0,14
	.word	67440
	.byte	32
	.byte	'Ifx_SRC_GXBAR',0,11,207,4,3
	.word	67476
	.byte	15,5,144,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,5,148,1,3
	.word	67504
	.byte	31,5,160,1,9,6,13
	.byte	'counter',0
	.word	1581
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	614
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,5,164,1,3
	.word	67593
	.byte	31,5,172,1,9,32,13
	.byte	'instruction',0
	.word	67593
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	67593
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	67593
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	67593
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	67593
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,5,179,1,3
	.word	67659
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,21,45,16,4,11
	.byte	'EN0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,21,79,3
	.word	67777
	.byte	10
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,21,82,16,4,11
	.byte	'reserved_0',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,21,85,3
	.word	68338
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,21,88,16,4,11
	.byte	'SEL',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	439
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,21,95,3
	.word	68419
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,21,98,16,4,11
	.byte	'VLD0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'VLD1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'VLD2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'VLD3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'VLD4',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'VLD5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'VLD6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'VLD7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'VLD8',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'VLD9',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	439
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,21,111,3
	.word	68572
	.byte	10
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,21,114,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	439
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	614
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,21,121,3
	.word	68820
	.byte	10
	.byte	'_Ifx_FLASH_COMM0_Bits',0,21,124,16,4,11
	.byte	'STATUS',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	439
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0_Bits',0,21,128,1,3
	.word	68966
	.byte	10
	.byte	'_Ifx_FLASH_COMM1_Bits',0,21,131,1,16,4,11
	.byte	'STATUS',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM1_Bits',0,21,136,1,3
	.word	69064
	.byte	10
	.byte	'_Ifx_FLASH_COMM2_Bits',0,21,139,1,16,4,11
	.byte	'STATUS',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'DATA',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_COMM2_Bits',0,21,144,1,3
	.word	69180
	.byte	10
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,21,147,1,16,4,11
	.byte	'RCODE',0,4
	.word	439
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	631
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRD_Bits',0,21,153,1,3
	.word	69296
	.byte	10
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,21,156,1,16,4,11
	.byte	'RCODE',0,4
	.word	439
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	631
	.byte	8,2,2,35,2,11
	.byte	'EDCERRINJ',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'ECCORDIS',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCRP_Bits',0,21,162,1,3
	.word	69436
	.byte	10
	.byte	'_Ifx_FLASH_ECCW_Bits',0,21,165,1,16,4,11
	.byte	'WCODE',0,4
	.word	439
	.byte	22,10,2,35,0,11
	.byte	'reserved_22',0,2
	.word	631
	.byte	8,2,2,35,2,11
	.byte	'DECENCDIS',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'PECENCDIS',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_ECCW_Bits',0,21,171,1,3
	.word	69576
	.byte	10
	.byte	'_Ifx_FLASH_FCON_Bits',0,21,174,1,16,4,11
	.byte	'WSPFLASH',0,1
	.word	614
	.byte	4,4,2,35,0,11
	.byte	'WSECPF',0,1
	.word	614
	.byte	2,2,2,35,0,11
	.byte	'WSDFLASH',0,2
	.word	631
	.byte	6,4,2,35,0,11
	.byte	'WSECDF',0,1
	.word	614
	.byte	3,1,2,35,1,11
	.byte	'IDLE',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'ESLDIS',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'SLEEP',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'NSAFECC',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'STALL',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'RES21',0,1
	.word	614
	.byte	2,2,2,35,2,11
	.byte	'RES23',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'VOPERM',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'SQERM',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'PROERM',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	614
	.byte	3,2,2,35,3,11
	.byte	'PR5V',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'EOBM',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FCON_Bits',0,21,193,1,3
	.word	69715
	.byte	10
	.byte	'_Ifx_FLASH_FPRO_Bits',0,21,196,1,16,4,11
	.byte	'PROINP',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'PRODISP',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'PROIND',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'PRODISD',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'PROINHSMCOTP',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'PROINOTP',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'RES7',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'PROINDBG',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PRODISDBG',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'PROINHSM',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	614
	.byte	5,0,2,35,1,11
	.byte	'DCFP',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'DDFP',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'DDFPX',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'DDFD',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'ENPE',0,1
	.word	614
	.byte	2,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	614
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FPRO_Bits',0,21,218,1,3
	.word	70077
	.byte	10
	.byte	'_Ifx_FLASH_FSR_Bits',0,21,221,1,16,4,11
	.byte	'FABUSY',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'D0BUSY',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'RES1',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'P0BUSY',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'P1BUSY',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'RES5',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'RES6',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'PROG',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'ERASE',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'PFPAGE',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'DFPAGE',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'OPER',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'SQER',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'PROER',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'PFSBER',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'PFDBER',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'PFMBER',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'RES17',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'DFSBER',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'DFDBER',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'DFTBER',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'DFMBER',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'SRIADDERR',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,2
	.word	631
	.byte	2,7,2,35,2,11
	.byte	'PVER',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'EVER',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'SPND',0,1
	.word	614
	.byte	1,4,2,35,3,11
	.byte	'SLM',0,1
	.word	614
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	614
	.byte	1,2,2,35,3,11
	.byte	'ORIER',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_FSR_Bits',0,21,254,1,3
	.word	70518
	.byte	10
	.byte	'_Ifx_FLASH_ID_Bits',0,21,129,2,16,4,11
	.byte	'MODREV',0,1
	.word	614
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	614
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_ID_Bits',0,21,134,2,3
	.word	71124
	.byte	10
	.byte	'_Ifx_FLASH_MARD_Bits',0,21,137,2,16,4,11
	.byte	'HMARGIN',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SELD0',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'SPND',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'SPNDERR',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,2
	.word	631
	.byte	10,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARD_Bits',0,21,147,2,3
	.word	71235
	.byte	10
	.byte	'_Ifx_FLASH_MARP_Bits',0,21,150,2,16,4,11
	.byte	'SELP0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SELP1',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'RES2',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'RES3',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	631
	.byte	11,1,2,35,0,11
	.byte	'TRAPDIS',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_MARP_Bits',0,21,159,2,3
	.word	71449
	.byte	10
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,21,162,2,16,4,11
	.byte	'L',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'NSAFECC',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'RAMIN',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'RAMINSEL',0,1
	.word	614
	.byte	4,0,2,35,0,11
	.byte	'OSCCFG',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'MODE',0,1
	.word	614
	.byte	2,5,2,35,1,11
	.byte	'APREN',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'CAP0EN',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'CAP1EN',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'CAP2EN',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'CAP3EN',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'ESR0CNT',0,2
	.word	631
	.byte	12,4,2,35,2,11
	.byte	'RES29',0,1
	.word	614
	.byte	2,2,2,35,3,11
	.byte	'RES30',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCOND_Bits',0,21,179,2,3
	.word	71636
	.byte	10
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,21,182,2,16,4,11
	.byte	'OCDSDIS',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'EDM',0,1
	.word	614
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	439
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,21,188,2,3
	.word	71960
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,21,191,2,16,4,11
	.byte	'HSMDBGDIS',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'DBGIFLCK',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'TSTIFLCK',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'HSMTSTDIS',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'RES15',0,2
	.word	631
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,21,199,2,3
	.word	72103
	.byte	10
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,21,202,2,16,4,11
	.byte	'HSMBOOTEN',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'SSWWAIT',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'HSMDX',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'HSM6X',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'HSM16X',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'HSM17X',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'HSMENPINS',0,2
	.word	631
	.byte	2,7,2,35,0,11
	.byte	'HSMENRES',0,1
	.word	614
	.byte	2,5,2,35,1,11
	.byte	'DESTDBG',0,1
	.word	614
	.byte	2,3,2,35,1,11
	.byte	'BLKFLAN',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	614
	.byte	2,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	631
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,21,219,2,3
	.word	72292
	.byte	10
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,21,222,2,16,4,11
	.byte	'S0ROM',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'S1ROM',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'S2ROM',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'S3ROM',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'S4ROM',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'S5ROM',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'S6ROM',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'S7ROM',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'S8ROM',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'S9ROM',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'S10ROM',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'S11ROM',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'S12ROM',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'S13ROM',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'S14ROM',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'S15ROM',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'S16ROM',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'S17ROM',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'S18ROM',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'S19ROM',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'S20ROM',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'S21ROM',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'S22ROM',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'S23ROM',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'S24ROM',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'S25ROM',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'S26ROM',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	614
	.byte	2,3,2,35,3,11
	.byte	'BML',0,1
	.word	614
	.byte	2,1,2,35,3,11
	.byte	'TP',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,21,254,2,3
	.word	72655
	.byte	10
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,21,129,3,16,4,11
	.byte	'S0L',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'S1L',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'S2L',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'S3L',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'S4L',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'S5L',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'S6L',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'S7L',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'S8L',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'S9L',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'S10L',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'S11L',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'S12L',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'S13L',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'S14L',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'S15L',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'S16L',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'S17L',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'S18L',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'S19L',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'S20L',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'S21L',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'S22L',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'S23L',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'S24L',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'S25L',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'S26L',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	614
	.byte	4,1,2,35,3,11
	.byte	'RPRO',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONP_Bits',0,21,160,3,3
	.word	73250
	.byte	10
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,21,163,3,16,4,11
	.byte	'S0WOP',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'S1WOP',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'S2WOP',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'S3WOP',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'S4WOP',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'S5WOP',0,1
	.word	614
	.byte	1,2,2,35,0,11
	.byte	'S6WOP',0,1
	.word	614
	.byte	1,1,2,35,0,11
	.byte	'S7WOP',0,1
	.word	614
	.byte	1,0,2,35,0,11
	.byte	'S8WOP',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'S9WOP',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'S10WOP',0,1
	.word	614
	.byte	1,5,2,35,1,11
	.byte	'S11WOP',0,1
	.word	614
	.byte	1,4,2,35,1,11
	.byte	'S12WOP',0,1
	.word	614
	.byte	1,3,2,35,1,11
	.byte	'S13WOP',0,1
	.word	614
	.byte	1,2,2,35,1,11
	.byte	'S14WOP',0,1
	.word	614
	.byte	1,1,2,35,1,11
	.byte	'S15WOP',0,1
	.word	614
	.byte	1,0,2,35,1,11
	.byte	'S16WOP',0,1
	.word	614
	.byte	1,7,2,35,2,11
	.byte	'S17WOP',0,1
	.word	614
	.byte	1,6,2,35,2,11
	.byte	'S18WOP',0,1
	.word	614
	.byte	1,5,2,35,2,11
	.byte	'S19WOP',0,1
	.word	614
	.byte	1,4,2,35,2,11
	.byte	'S20WOP',0,1
	.word	614
	.byte	1,3,2,35,2,11
	.byte	'S21WOP',0,1
	.word	614
	.byte	1,2,2,35,2,11
	.byte	'S22WOP',0,1
	.word	614
	.byte	1,1,2,35,2,11
	.byte	'S23WOP',0,1
	.word	614
	.byte	1,0,2,35,2,11
	.byte	'S24WOP',0,1
	.word	614
	.byte	1,7,2,35,3,11
	.byte	'S25WOP',0,1
	.word	614
	.byte	1,6,2,35,3,11
	.byte	'S26WOP',0,1
	.word	614
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	614
	.byte	4,1,2,35,3,11
	.byte	'DATM',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,21,194,3,3
	.word	73774
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,21,197,3,16,4,11
	.byte	'TAG',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,21,201,3,3
	.word	74356
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,21,204,3,16,4,11
	.byte	'TAG',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,21,208,3,3
	.word	74458
	.byte	10
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,21,211,3,16,4,11
	.byte	'TAG',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	439
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,21,215,3,3
	.word	74560
	.byte	10
	.byte	'_Ifx_FLASH_RRAD_Bits',0,21,218,3,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	3,5,2,35,0,11
	.byte	'ADD',0,4
	.word	439
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD_Bits',0,21,222,3,3
	.word	74662
	.byte	10
	.byte	'_Ifx_FLASH_RRCT_Bits',0,21,225,3,16,4,11
	.byte	'STRT',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'STP',0,1
	.word	614
	.byte	1,6,2,35,0,11
	.byte	'BUSY',0,1
	.word	614
	.byte	1,5,2,35,0,11
	.byte	'DONE',0,1
	.word	614
	.byte	1,4,2,35,0,11
	.byte	'ERR',0,1
	.word	614
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	614
	.byte	3,0,2,35,0,11
	.byte	'EOBM',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	614
	.byte	7,0,2,35,1,11
	.byte	'CNT',0,2
	.word	631
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_FLASH_RRCT_Bits',0,21,236,3,3
	.word	74756
	.byte	10
	.byte	'_Ifx_FLASH_RRD0_Bits',0,21,239,3,16,4,11
	.byte	'DATA',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0_Bits',0,21,242,3,3
	.word	74966
	.byte	10
	.byte	'_Ifx_FLASH_RRD1_Bits',0,21,245,3,16,4,11
	.byte	'DATA',0,4
	.word	439
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1_Bits',0,21,248,3,3
	.word	75039
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,21,251,3,16,4,11
	.byte	'SEL',0,1
	.word	614
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	614
	.byte	2,0,2,35,0,11
	.byte	'CLR',0,1
	.word	614
	.byte	1,7,2,35,1,11
	.byte	'DIS',0,1
	.word	614
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,4
	.word	439
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,21,130,4,3
	.word	75112
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,21,133,4,16,4,11
	.byte	'VLD0',0,1
	.word	614
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	439
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,21,137,4,3
	.word	75267
	.byte	10
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,21,140,4,16,4,11
	.byte	'reserved_0',0,1
	.word	614
	.byte	5,3,2,35,0,11
	.byte	'ADDR',0,4
	.word	439
	.byte	19,8,2,35,0,11
	.byte	'ERR',0,1
	.word	614
	.byte	6,2,2,35,3,11
	.byte	'VLD',0,1
	.word	614
	.byte	1,1,2,35,3,11
	.byte	'CLR',0,1
	.word	614
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,21,147,4,3
	.word	75372
	.byte	12,21,155,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67777
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN0',0,21,160,4,3
	.word	75520
	.byte	12,21,163,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68338
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ACCEN1',0,21,168,4,3
	.word	75586
	.byte	12,21,171,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68419
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_CFG',0,21,176,4,3
	.word	75652
	.byte	12,21,179,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68572
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_STAT',0,21,184,4,3
	.word	75720
	.byte	12,21,187,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68820
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_CBAB_TOP',0,21,192,4,3
	.word	75789
	.byte	12,21,195,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68966
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM0',0,21,200,4,3
	.word	75857
	.byte	12,21,203,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69064
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM1',0,21,208,4,3
	.word	75922
	.byte	12,21,211,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69180
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_COMM2',0,21,216,4,3
	.word	75987
	.byte	12,21,219,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69296
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRD',0,21,224,4,3
	.word	76052
	.byte	12,21,227,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69436
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCRP',0,21,232,4,3
	.word	76117
	.byte	12,21,235,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69576
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ECCW',0,21,240,4,3
	.word	76182
	.byte	12,21,243,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69715
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FCON',0,21,248,4,3
	.word	76246
	.byte	12,21,251,4,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70077
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FPRO',0,21,128,5,3
	.word	76310
	.byte	12,21,131,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70518
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_FSR',0,21,136,5,3
	.word	76374
	.byte	12,21,139,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71124
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_ID',0,21,144,5,3
	.word	76437
	.byte	12,21,147,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71235
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARD',0,21,152,5,3
	.word	76499
	.byte	12,21,155,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71449
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_MARP',0,21,160,5,3
	.word	76563
	.byte	12,21,163,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71636
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCOND',0,21,168,5,3
	.word	76627
	.byte	12,21,171,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71960
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONDBG',0,21,176,5,3
	.word	76694
	.byte	12,21,179,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72103
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSM',0,21,184,5,3
	.word	76763
	.byte	12,21,187,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72292
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,21,192,5,3
	.word	76832
	.byte	12,21,195,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72655
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONOTP',0,21,200,5,3
	.word	76905
	.byte	12,21,203,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73250
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONP',0,21,208,5,3
	.word	76974
	.byte	12,21,211,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73774
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_PROCONWOP',0,21,216,5,3
	.word	77041
	.byte	12,21,219,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG0',0,21,224,5,3
	.word	77110
	.byte	12,21,227,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74458
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG1',0,21,232,5,3
	.word	77178
	.byte	12,21,235,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74560
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RDB_CFG2',0,21,240,5,3
	.word	77246
	.byte	12,21,243,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74662
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRAD',0,21,248,5,3
	.word	77314
	.byte	12,21,251,5,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74756
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRCT',0,21,128,6,3
	.word	77378
	.byte	12,21,131,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74966
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD0',0,21,136,6,3
	.word	77442
	.byte	12,21,139,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75039
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_RRD1',0,21,144,6,3
	.word	77506
	.byte	12,21,147,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75112
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_CFG',0,21,152,6,3
	.word	77570
	.byte	12,21,155,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75267
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_STAT',0,21,160,6,3
	.word	77638
	.byte	12,21,163,6,9,4,13
	.byte	'U',0
	.word	439
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	455
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75372
	.byte	4,2,35,0,0,32
	.byte	'Ifx_FLASH_UBAB_TOP',0,21,168,6,3
	.word	77707
	.byte	10
	.byte	'_Ifx_FLASH_CBAB',0,21,179,6,25,12,13
	.byte	'CFG',0
	.word	75652
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	75720
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	75789
	.byte	4,2,35,8,0,14
	.word	77775
	.byte	32
	.byte	'Ifx_FLASH_CBAB',0,21,184,6,3
	.word	77838
	.byte	10
	.byte	'_Ifx_FLASH_RDB',0,21,187,6,25,12,13
	.byte	'CFG0',0
	.word	77110
	.byte	4,2,35,0,13
	.byte	'CFG1',0
	.word	77178
	.byte	4,2,35,4,13
	.byte	'CFG2',0
	.word	77246
	.byte	4,2,35,8,0,14
	.word	77867
	.byte	32
	.byte	'Ifx_FLASH_RDB',0,21,192,6,3
	.word	77931
	.byte	10
	.byte	'_Ifx_FLASH_UBAB',0,21,195,6,25,12,13
	.byte	'CFG',0
	.word	77570
	.byte	4,2,35,0,13
	.byte	'STAT',0
	.word	77638
	.byte	4,2,35,4,13
	.byte	'TOP',0
	.word	77707
	.byte	4,2,35,8,0,14
	.word	77959
	.byte	32
	.byte	'Ifx_FLASH_UBAB',0,21,200,6,3
	.word	78022
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,8,79,3
	.word	8390
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,8,85,3
	.word	8303
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,8,107,3
	.word	4646
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,8,115,3
	.word	2699
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,8,137,1,3
	.word	3694
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,8,150,1,3
	.word	2827
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,8,163,1,3
	.word	3474
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,8,176,1,3
	.word	3042
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,8,189,1,3
	.word	3257
	.byte	32
	.byte	'Ifx_P_LPCR0_Bits',0,8,197,1,3
	.word	7662
	.byte	32
	.byte	'Ifx_P_LPCR1_Bits',0,8,205,1,3
	.word	7786
	.byte	32
	.byte	'Ifx_P_LPCR1_P21_Bits',0,8,215,1,3
	.word	7870
	.byte	32
	.byte	'Ifx_P_LPCR2_Bits',0,8,229,1,3
	.word	8050
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,8,240,1,3
	.word	6301
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,8,250,1,3
	.word	6825
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,8,133,2,3
	.word	6475
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,8,144,2,3
	.word	6649
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,8,166,2,3
	.word	7314
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,8,203,2,3
	.word	2128
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,8,213,2,3
	.word	5638
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,8,224,2,3
	.word	6126
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,8,235,2,3
	.word	5785
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,8,246,2,3
	.word	5954
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,8,140,3,3
	.word	6981
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,8,162,3,3
	.word	1812
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,8,180,3,3
	.word	5352
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,8,202,3,3
	.word	4986
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,8,223,3,3
	.word	4017
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,8,244,3,3
	.word	4321
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,8,129,4,3
	.word	8917
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,8,137,4,3
	.word	8350
	.byte	32
	.byte	'Ifx_P_ESR',0,8,145,4,3
	.word	4937
	.byte	32
	.byte	'Ifx_P_ID',0,8,153,4,3
	.word	2778
	.byte	32
	.byte	'Ifx_P_IN',0,8,161,4,3
	.word	3968
	.byte	32
	.byte	'Ifx_P_IOCR0',0,8,169,4,3
	.word	3002
	.byte	32
	.byte	'Ifx_P_IOCR12',0,8,177,4,3
	.word	3654
	.byte	32
	.byte	'Ifx_P_IOCR4',0,8,185,4,3
	.word	3217
	.byte	32
	.byte	'Ifx_P_IOCR8',0,8,193,4,3
	.word	3434
	.byte	32
	.byte	'Ifx_P_LPCR0',0,8,201,4,3
	.word	7746
	.byte	32
	.byte	'Ifx_P_LPCR1',0,8,210,4,3
	.word	7995
	.byte	32
	.byte	'Ifx_P_LPCR2',0,8,218,4,3
	.word	8254
	.byte	32
	.byte	'Ifx_P_OMCR',0,8,226,4,3
	.word	7622
	.byte	32
	.byte	'Ifx_P_OMCR0',0,8,234,4,3
	.word	6435
	.byte	32
	.byte	'Ifx_P_OMCR12',0,8,242,4,3
	.word	6941
	.byte	32
	.byte	'Ifx_P_OMCR4',0,8,250,4,3
	.word	6609
	.byte	32
	.byte	'Ifx_P_OMCR8',0,8,130,5,3
	.word	6785
	.byte	32
	.byte	'Ifx_P_OMR',0,8,138,5,3
	.word	2659
	.byte	32
	.byte	'Ifx_P_OMSR',0,8,146,5,3
	.word	7274
	.byte	32
	.byte	'Ifx_P_OMSR0',0,8,154,5,3
	.word	5745
	.byte	32
	.byte	'Ifx_P_OMSR12',0,8,162,5,3
	.word	6261
	.byte	32
	.byte	'Ifx_P_OMSR4',0,8,170,5,3
	.word	5914
	.byte	32
	.byte	'Ifx_P_OMSR8',0,8,178,5,3
	.word	6086
	.byte	32
	.byte	'Ifx_P_OUT',0,8,186,5,3
	.word	2088
	.byte	32
	.byte	'Ifx_P_PCSR',0,8,194,5,3
	.word	5598
	.byte	32
	.byte	'Ifx_P_PDISC',0,8,202,5,3
	.word	5312
	.byte	32
	.byte	'Ifx_P_PDR0',0,8,210,5,3
	.word	4281
	.byte	32
	.byte	'Ifx_P_PDR1',0,8,218,5,3
	.word	4597
	.byte	14
	.word	8957
	.byte	32
	.byte	'Ifx_P',0,8,139,6,3
	.word	79369
	.byte	15,7,83,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,32
	.byte	'IfxPort_InputMode',0,7,89,3
	.word	79389
	.byte	15,7,120,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,32
	.byte	'IfxPort_OutputIdx',0,7,130,1,3
	.word	79540
	.byte	15,7,134,1,9,1,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,32
	.byte	'IfxPort_OutputMode',0,7,138,1,3
	.word	79784
	.byte	15,7,144,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_lvdsSpeed1',0,4,16
	.byte	'IfxPort_PadDriver_lvdsSpeed2',0,5,16
	.byte	'IfxPort_PadDriver_lvdsSpeed3',0,6,16
	.byte	'IfxPort_PadDriver_lvdsSpeed4',0,7,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,0,32
	.byte	'IfxPort_PadDriver',0,7,158,1,3
	.word	79882
	.byte	32
	.byte	'IfxPort_State',0,7,178,1,3
	.word	9570
	.byte	31,7,190,1,9,8,13
	.byte	'port',0
	.word	9565
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	614
	.byte	1,2,35,4,0,32
	.byte	'IfxPort_Pin',0,7,194,1,3
	.word	80347
	.byte	32
	.byte	'IfxScuCcu_PllStepsFunctionHook',0,9,148,1,16
	.word	178
	.byte	31,9,212,5,9,8,13
	.byte	'value',0
	.word	1581
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1581
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,216,5,3
	.word	80447
	.byte	31,9,221,5,9,8,13
	.byte	'pDivider',0
	.word	614
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	614
	.byte	1,2,35,1,13
	.byte	'k2Initial',0
	.word	614
	.byte	1,2,35,2,13
	.byte	'waitTime',0
	.word	235
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,9,227,5,3
	.word	80518
	.byte	31,9,231,5,9,12,13
	.byte	'k2Step',0
	.word	614
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	235
	.byte	4,2,35,2,13
	.byte	'hookFunction',0
	.word	80407
	.byte	4,2,35,8,0,32
	.byte	'IfxScuCcu_PllStepsConfig',0,9,236,5,3
	.word	80635
	.byte	3
	.word	175
	.byte	31,9,244,5,9,48,13
	.byte	'ccucon0',0
	.word	80447
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	80447
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	80447
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	80447
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	80447
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	80447
	.byte	8,2,35,40,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,252,5,3
	.word	80737
	.byte	31,9,128,6,9,8,13
	.byte	'value',0
	.word	1581
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1581
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,132,6,3
	.word	80889
	.byte	3
	.word	80635
	.byte	31,9,137,6,9,16,13
	.byte	'numOfPllDividerSteps',0
	.word	614
	.byte	1,2,35,0,13
	.byte	'pllDividerStep',0
	.word	80965
	.byte	4,2,35,4,13
	.byte	'pllInitialStep',0
	.word	80518
	.byte	8,2,35,8,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,9,142,6,3
	.word	80970
	.byte	32
	.byte	'IfxSrc_Tos',0,12,74,3
	.word	10210
	.byte	32
	.byte	'IfxStm_Comparator',0,13,155,1,3
	.word	14637
	.byte	32
	.byte	'IfxStm_ComparatorInterrupt',0,13,163,1,3
	.word	14688
	.byte	32
	.byte	'IfxStm_ComparatorOffset',0,13,201,1,3
	.word	14761
	.byte	32
	.byte	'IfxStm_ComparatorSize',0,13,239,1,3
	.word	15686
	.byte	15,13,244,1,9,1,16
	.byte	'IfxStm_SleepMode_enable',0,0,16
	.byte	'IfxStm_SleepMode_disable',0,1,0,32
	.byte	'IfxStm_SleepMode',0,13,248,1,3
	.word	81233
	.byte	15,13,252,1,9,1,16
	.byte	'IfxStm_SuspendMode_none',0,0,16
	.byte	'IfxStm_SuspendMode_hard',0,1,16
	.byte	'IfxStm_SuspendMode_soft',0,2,0,32
	.byte	'IfxStm_SuspendMode',0,13,129,2,3
	.word	81319
	.byte	32
	.byte	'IfxStm_CompareConfig',0,13,150,2,3
	.word	16675
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,28,46,0,3,8,58,15,59
	.byte	15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,29,29,1,49,19,0,0,30,11,0,49,19,0,0,31,19,1,58,15,59,15,57
	.byte	15,11,15,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,34,52,0,3,8,58,15,59,15,57,15,73
	.byte	19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L63:
	.word	.L267-.L266
.L266:
	.half	3
	.word	.L269-.L268
.L268:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxStm_cfg.h',0,4,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxFlash_regdef.h',0,3,0,0,0
.L269:
.L267:
	.sdecl	'.debug_info',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_info'
.L64:
	.word	267
	.half	3
	.word	.L65
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L67,.L66
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_disableModule',0,1,81,6,1,1,1
	.word	.L39,.L129,.L38
	.byte	4
	.byte	'stm',0,1,81,36
	.word	.L130,.L131
	.byte	5
	.word	.L39,.L129
	.byte	6
	.byte	'passwd',0,1,83,12
	.word	.L132,.L133
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_abbrev'
.L65:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_line'
.L66:
	.word	.L271-.L270
.L270:
	.half	3
	.word	.L273-.L272
.L272:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L273:
	.byte	5,6,7,0,5,2
	.word	.L39
	.byte	3,208,0,1,5,53,9
	.half	.L240-.L39
	.byte	3,2,1,5,19,9
	.half	.L239-.L240
	.byte	1,5,31,9
	.half	.L242-.L239
	.byte	3,2,1,5,29,9
	.half	.L241-.L242
	.byte	3,2,1,5,15,3,127,1,5,21,9
	.half	.L243-.L241
	.byte	1,5,29,9
	.half	.L274-.L243
	.byte	3,1,1,5,1,7,9
	.half	.L68-.L274
	.byte	3,1,0,1,1
.L271:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_ranges'
.L67:
	.word	-1,.L39,0,.L68-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_info'
.L69:
	.word	268
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L72,.L71
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_enableOcdsSuspend',0,1,104,6,1,1,1
	.word	.L43,.L134,.L42
	.byte	4
	.byte	'stm',0,1,104,40
	.word	.L130,.L135
	.byte	5
	.word	.L43,.L134
	.byte	6
	.byte	'ocs',0,1,106,17
	.word	.L136,.L137
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_line'
.L71:
	.word	.L276-.L275
.L275:
	.half	3
	.word	.L278-.L277
.L277:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L278:
	.byte	5,26,7,0,5,2
	.word	.L43
	.byte	3,233,0,1,5,10,9
	.half	.L244-.L43
	.byte	3,2,1,5,22,9
	.half	.L279-.L244
	.byte	1,9
	.half	.L280-.L279
	.byte	3,1,1,9
	.half	.L281-.L280
	.byte	3,1,1,5,15,9
	.half	.L282-.L281
	.byte	3,1,1,5,22,9
	.half	.L283-.L282
	.byte	1,5,1,9
	.half	.L284-.L283
	.byte	3,1,1,7,9
	.half	.L73-.L284
	.byte	0,1,1
.L276:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_ranges'
.L72:
	.word	-1,.L43,0,.L73-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_info'
.L74:
	.word	268
	.half	3
	.word	.L75
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L77,.L76
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_getAddress',0,1,115,10
	.word	.L130
	.byte	1,1,1
	.word	.L45,.L138,.L44
	.byte	4
	.byte	'stm',0,1,115,41
	.word	.L139,.L140
	.byte	5
	.word	.L45,.L138
	.byte	6
	.byte	'module',0,1,117,14
	.word	.L130,.L141
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_abbrev'
.L75:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_line'
.L76:
	.word	.L286-.L285
.L285:
	.half	3
	.word	.L288-.L287
.L287:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L288:
	.byte	5,5,7,0,5,2
	.word	.L45
	.byte	3,246,0,1,5,29,7,9
	.half	.L289-.L45
	.byte	3,2,1,5,48,9
	.half	.L290-.L289
	.byte	1,5,53,9
	.half	.L291-.L290
	.byte	1,5,1,9
	.half	.L245-.L291
	.byte	3,8,1,5,16,7,9
	.half	.L10-.L245
	.byte	3,124,1,5,1,9
	.half	.L246-.L10
	.byte	3,4,1,7,9
	.half	.L78-.L246
	.byte	0,1,1
.L286:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_ranges'
.L77:
	.word	-1,.L45,0,.L78-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_info'
.L79:
	.word	288
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L82,.L81
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_getIndex',0,1,132,1,14
	.word	.L139
	.byte	1,1,1
	.word	.L47,.L142,.L46
	.byte	4
	.byte	'stm',0,1,132,1,39
	.word	.L130,.L143
	.byte	5
	.word	.L47,.L142
	.byte	6
	.byte	'index',0,1,134,1,18
	.word	.L144,.L145
	.byte	6
	.byte	'result',0,1,135,1,18
	.word	.L139,.L146
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_line'
.L81:
	.word	.L293-.L292
.L292:
	.half	3
	.word	.L295-.L294
.L294:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L295:
	.byte	5,12,7,0,5,2
	.word	.L47
	.byte	3,136,1,1,5,13,3,4,1,5,47,9
	.half	.L296-.L47
	.byte	3,126,1,5,39,9
	.half	.L13-.L296
	.byte	3,2,1,5,9,9
	.half	.L297-.L13
	.byte	1,5,62,7,9
	.half	.L298-.L297
	.byte	3,2,1,5,22,9
	.half	.L299-.L298
	.byte	1,5,1,3,6,1,5,54,7,9
	.half	.L14-.L299
	.byte	3,118,1,5,47,1,5,1,7,9
	.half	.L300-.L14
	.byte	3,10,1,7,9
	.half	.L83-.L300
	.byte	0,1,1
.L293:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_ranges'
.L82:
	.word	-1,.L47,0,.L83-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_info'
.L84:
	.word	273
	.half	3
	.word	.L85
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L87,.L86
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_clearCompareFlag',0,1,55,6,1,1,1
	.word	.L35,.L147,.L34
	.byte	4
	.byte	'stm',0,1,55,39
	.word	.L130,.L148
	.byte	4
	.byte	'comparator',0,1,55,62
	.word	.L149,.L150
	.byte	5
	.word	.L35,.L147
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_abbrev'
.L85:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_line'
.L86:
	.word	.L302-.L301
.L301:
	.half	3
	.word	.L304-.L303
.L303:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L304:
	.byte	5,5,7,0,5,2
	.word	.L35
	.byte	3,56,1,5,20,7,9
	.half	.L305-.L35
	.byte	3,2,1,5,29,9
	.half	.L306-.L305
	.byte	1,5,33,1,5,10,9
	.half	.L2-.L306
	.byte	3,2,1,5,20,7,9
	.half	.L307-.L2
	.byte	3,2,1,5,29,9
	.half	.L308-.L307
	.byte	1,5,1,9
	.half	.L4-.L308
	.byte	3,2,1,7,9
	.half	.L88-.L4
	.byte	0,1,1
.L302:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_ranges'
.L87:
	.word	-1,.L35,0,.L88-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_info'
.L89:
	.word	283
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L92,.L91
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_disableComparatorInterrupt',0,1,68,6,1,1,1
	.word	.L37,.L151,.L36
	.byte	4
	.byte	'stm',0,1,68,49
	.word	.L130,.L152
	.byte	4
	.byte	'comparator',0,1,68,72
	.word	.L149,.L153
	.byte	5
	.word	.L37,.L151
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_line'
.L91:
	.word	.L310-.L309
.L309:
	.half	3
	.word	.L312-.L311
.L311:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L312:
	.byte	5,5,7,0,5,2
	.word	.L37
	.byte	3,197,0,1,5,19,7,9
	.half	.L313-.L37
	.byte	3,2,1,5,27,9
	.half	.L314-.L313
	.byte	1,5,31,1,5,19,9
	.half	.L5-.L314
	.byte	3,4,1,5,27,9
	.half	.L315-.L5
	.byte	1,5,1,9
	.half	.L316-.L315
	.byte	3,2,1,7,9
	.half	.L93-.L316
	.byte	0,1,1
.L310:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_ranges'
.L92:
	.word	-1,.L37,0,.L93-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_info'
.L94:
	.word	282
	.half	3
	.word	.L95
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L97,.L96
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_enableComparatorInterrupt',0,1,91,6,1,1,1
	.word	.L41,.L154,.L40
	.byte	4
	.byte	'stm',0,1,91,48
	.word	.L130,.L155
	.byte	4
	.byte	'comparator',0,1,91,71
	.word	.L149,.L156
	.byte	5
	.word	.L41,.L154
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_abbrev'
.L95:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_line'
.L96:
	.word	.L318-.L317
.L317:
	.half	3
	.word	.L320-.L319
.L319:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L320:
	.byte	5,5,7,0,5,2
	.word	.L41
	.byte	3,220,0,1,5,19,7,9
	.half	.L321-.L41
	.byte	3,2,1,5,27,9
	.half	.L322-.L321
	.byte	1,5,31,1,5,10,9
	.half	.L7-.L322
	.byte	3,2,1,5,19,7,9
	.half	.L323-.L7
	.byte	3,2,1,5,27,9
	.half	.L324-.L323
	.byte	1,5,1,9
	.half	.L9-.L324
	.byte	3,2,1,7,9
	.half	.L98-.L9
	.byte	0,1,1
.L318:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_ranges'
.L97:
	.word	-1,.L41,0,.L98-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_info'
.L99:
	.word	297
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L102,.L101
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_getSrcPointer',0,1,152,1,24
	.word	.L157
	.byte	1,1,1
	.word	.L49,.L158,.L48
	.byte	4
	.byte	'stm',0,1,152,1,54
	.word	.L130,.L159
	.byte	4
	.byte	'comparator',0,1,152,1,77
	.word	.L149,.L160
	.byte	5
	.word	.L49,.L158
	.byte	6
	.byte	'index',0,1,154,1,18
	.word	.L139,.L161
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_line'
.L101:
	.word	.L326-.L325
.L325:
	.half	3
	.word	.L328-.L327
.L327:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L328:
	.byte	5,24,7,0,5,2
	.word	.L49
	.byte	3,151,1,1,5,29,3,3,1,5,63,9
	.half	.L248-.L49
	.byte	3,1,1,5,67,9
	.half	.L329-.L248
	.byte	1,5,12,9
	.half	.L330-.L329
	.byte	1,5,107,7,9
	.half	.L331-.L330
	.byte	1,5,1,9
	.half	.L18-.L331
	.byte	3,1,1,7,9
	.half	.L103-.L18
	.byte	0,1,1
.L326:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_ranges'
.L102:
	.word	-1,.L49,0,.L103-.L49,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_info'
.L104:
	.word	747
	.half	3
	.word	.L105
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L107,.L106
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_initCompare',0,1,160,1,9
	.word	.L162
	.byte	1,1,1
	.word	.L51,.L163,.L50
	.byte	4
	.byte	'stm',0,1,160,1,37
	.word	.L130,.L164
	.byte	4
	.byte	'config',0,1,160,1,70
	.word	.L165,.L166
	.byte	5
	.word	.L51,.L163
	.byte	6
	.byte	'index',0,1,162,1,19
	.word	.L167,.L168
	.byte	6
	.byte	'result',0,1,163,1,19
	.word	.L162,.L169
	.byte	6
	.byte	'comcon',0,1,164,1,19
	.word	.L170,.L171
	.byte	6
	.byte	'icr',0,1,165,1,19
	.word	.L172,.L173
	.byte	5
	.word	.L174,.L24
	.byte	6
	.byte	'srcr',0,1,195,1,32
	.word	.L157,.L175
	.byte	7
	.word	.L176,.L177,.L178
	.byte	8
	.word	.L179,.L180
	.byte	8
	.word	.L181,.L182
	.byte	8
	.word	.L183,.L184
	.byte	9
	.word	.L185,.L177,.L178
	.byte	7
	.word	.L186,.L187,.L178
	.byte	8
	.word	.L188,.L189
	.byte	10
	.word	.L190,.L187,.L178
	.byte	0,0,0,7
	.word	.L191,.L178,.L24
	.byte	8
	.word	.L192,.L193
	.byte	10
	.word	.L194,.L178,.L24
	.byte	0,0,7
	.word	.L195,.L24,.L196
	.byte	8
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L200
	.byte	9
	.word	.L201,.L24,.L196
	.byte	7
	.word	.L202,.L24,.L203
	.byte	8
	.word	.L204,.L205
	.byte	11
	.word	.L206,.L207
	.byte	6
	.byte	'result',0,2,164,4,12
	.word	.L210,.L211
	.byte	0,0,7
	.word	.L202,.L208,.L209
	.byte	8
	.word	.L204,.L205
	.byte	0,0,0,7
	.word	.L195,.L212,.L213
	.byte	8
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L200
	.byte	9
	.word	.L201,.L212,.L213
	.byte	7
	.word	.L202,.L212,.L214
	.byte	8
	.word	.L204,.L205
	.byte	11
	.word	.L206,.L215
	.byte	6
	.byte	'result',0,2,164,4,12
	.word	.L210,.L218
	.byte	0,0,7
	.word	.L202,.L216,.L217
	.byte	8
	.word	.L204,.L205
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_abbrev'
.L105:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_line'
.L106:
	.word	.L333-.L332
.L332:
	.half	3
	.word	.L335-.L334
.L334:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std',0
	.byte	0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.h',0,0,0,0
	.byte	'IfxSrc.h',0,1,0,0,0
.L335:
	.byte	5,9,7,0,5,2
	.word	.L51
	.byte	3,159,1,1,5,15,9
	.half	.L251-.L51
	.byte	3,7,1,5,31,9
	.half	.L336-.L251
	.byte	3,125,1,9
	.half	.L252-.L336
	.byte	3,1,1,5,5,9
	.half	.L253-.L252
	.byte	3,2,1,5,34,7,9
	.half	.L337-.L253
	.byte	3,2,1,5,26,9
	.half	.L338-.L337
	.byte	1,5,34,3,1,1,5,26,9
	.half	.L339-.L338
	.byte	1,5,34,3,1,1,5,26,9
	.half	.L340-.L339
	.byte	1,5,47,3,126,1,5,10,9
	.half	.L20-.L340
	.byte	3,5,1,5,34,7,9
	.half	.L341-.L20
	.byte	3,2,1,5,26,9
	.half	.L342-.L341
	.byte	1,5,34,3,1,1,5,26,9
	.half	.L343-.L342
	.byte	1,5,34,3,1,1,5,26,9
	.half	.L344-.L343
	.byte	1,9
	.half	.L21-.L344
	.byte	3,1,1,5,47,3,125,1,5,16,9
	.half	.L22-.L21
	.byte	3,8,1,5,18,9
	.half	.L23-.L22
	.byte	3,3,1,5,29,9
	.half	.L345-.L23
	.byte	3,4,1,5,18,9
	.half	.L346-.L345
	.byte	3,125,1,5,29,9
	.half	.L347-.L346
	.byte	3,3,1,5,15,9
	.half	.L249-.L347
	.byte	3,2,1,5,5,9
	.half	.L348-.L249
	.byte	1,5,19,7,9
	.half	.L174-.L348
	.byte	3,4,1,5,36,9
	.half	.L349-.L174
	.byte	3,2,1,5,40,9
	.half	.L350-.L349
	.byte	1,5,9,9
	.half	.L254-.L350
	.byte	3,126,1,5,47,7,9
	.half	.L351-.L254
	.byte	3,6,1,5,33,9
	.half	.L26-.L351
	.byte	3,3,1,4,3,5,17,9
	.half	.L177-.L26
	.byte	3,198,0,1,5,11,9
	.half	.L352-.L177
	.byte	3,1,1,5,17,9
	.half	.L353-.L352
	.byte	1,5,11,9
	.half	.L187-.L353
	.byte	3,103,1,5,17,9
	.half	.L354-.L187
	.byte	1,5,11,9
	.half	.L178-.L354
	.byte	3,18,1,5,16,9
	.half	.L355-.L178
	.byte	1,4,2,5,24,9
	.half	.L24-.L355
	.byte	3,152,2,1,4,1,5,78,9
	.half	.L203-.L24
	.byte	3,173,125,1,4,2,5,32,9
	.half	.L208-.L203
	.byte	3,212,2,1,5,25,9
	.half	.L209-.L208
	.byte	3,199,0,1,4,1,5,20,9
	.half	.L196-.L209
	.byte	3,229,124,1,5,40,9
	.half	.L356-.L196
	.byte	3,4,1,5,13,9
	.half	.L255-.L356
	.byte	3,124,1,5,36,9
	.half	.L357-.L255
	.byte	1,5,40,9
	.half	.L358-.L357
	.byte	3,4,1,5,49,9
	.half	.L256-.L358
	.byte	3,2,1,4,2,5,24,9
	.half	.L212-.L256
	.byte	3,205,2,1,4,1,5,78,9
	.half	.L214-.L212
	.byte	3,182,125,1,4,2,5,32,9
	.half	.L216-.L214
	.byte	3,203,2,1,5,25,9
	.half	.L217-.L216
	.byte	3,199,0,1,4,1,5,20,9
	.half	.L213-.L217
	.byte	3,238,124,1,5,13,9
	.half	.L359-.L213
	.byte	1,5,103,9
	.half	.L360-.L359
	.byte	1,5,95,9
	.half	.L361-.L360
	.byte	1,5,36,1,5,5,9
	.half	.L362-.L361
	.byte	3,2,1,5,1,3,1,1,7,9
	.half	.L108-.L362
	.byte	0,1,1
.L333:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_ranges'
.L107:
	.word	-1,.L51,0,.L108-.L51,0,0
.L207:
	.word	-1,.L51,.L24-.L51,.L203-.L51,.L208-.L51,.L209-.L51,0,0
.L215:
	.word	-1,.L51,.L212-.L51,.L214-.L51,.L216-.L51,.L217-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_info'
.L109:
	.word	256
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L112,.L111
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_initCompareConfig',0,1,226,1,6,1,1,1
	.word	.L53,.L219,.L52
	.byte	4
	.byte	'config',0,1,226,1,53
	.word	.L220,.L221
	.byte	5
	.word	.L53,.L219
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_line'
.L111:
	.word	.L364-.L363
.L363:
	.half	3
	.word	.L366-.L365
.L365:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L366:
	.byte	5,35,7,0,5,2
	.word	.L53
	.byte	3,227,1,1,5,33,1,9
	.half	.L367-.L53
	.byte	3,1,1,5,35,9
	.half	.L368-.L367
	.byte	3,1,1,5,33,1,9
	.half	.L369-.L368
	.byte	3,1,1,5,35,9
	.half	.L370-.L369
	.byte	3,1,1,5,33,1,9
	.half	.L371-.L370
	.byte	3,1,1,9
	.half	.L372-.L371
	.byte	3,1,1,5,1,9
	.half	.L373-.L372
	.byte	3,1,1,7,9
	.half	.L113-.L373
	.byte	0,1,1
.L364:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_ranges'
.L112:
	.word	-1,.L53,0,.L113-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_info'
.L114:
	.word	280
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L117,.L116
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_isCompareFlagSet',0,1,238,1,9
	.word	.L162
	.byte	1,1,1
	.word	.L55,.L222,.L54
	.byte	4
	.byte	'stm',0,1,238,1,42
	.word	.L130,.L223
	.byte	4
	.byte	'comparator',0,1,238,1,65
	.word	.L149,.L224
	.byte	5
	.word	.L55,.L222
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_line'
.L116:
	.word	.L375-.L374
.L374:
	.half	3
	.word	.L377-.L376
.L376:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L377:
	.byte	5,5,7,0,5,2
	.word	.L55
	.byte	3,239,1,1,5,26,7,9
	.half	.L378-.L55
	.byte	3,2,1,5,1,9
	.half	.L379-.L378
	.byte	3,6,1,5,26,7,9
	.half	.L28-.L379
	.byte	3,126,1,5,1,9
	.half	.L380-.L28
	.byte	3,2,1,7,9
	.half	.L118-.L380
	.byte	0,1,1
.L375:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_ranges'
.L117:
	.word	-1,.L55,0,.L118-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_info'
.L119:
	.word	378
	.half	3
	.word	.L120
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L122,.L121
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_setCompareControl',0,1,143,2,6,1,1,1
	.word	.L59,.L225,.L58
	.byte	4
	.byte	'stm',0,1,143,2,40
	.word	.L130,.L226
	.byte	4
	.byte	'comparator',0,1,143,2,63
	.word	.L149,.L227
	.byte	4
	.byte	'offset',0,1,143,2,99
	.word	.L228,.L229
	.byte	4
	.byte	'size',0,1,143,2,129,1
	.word	.L230,.L231
	.byte	4
	.byte	'interrupt',0,1,143,2,162,1
	.word	.L232,.L233
	.byte	5
	.word	.L59,.L225
	.byte	6
	.byte	'comcon',0,1,145,2,19
	.word	.L170,.L234
	.byte	6
	.byte	'icr',0,1,146,2,19
	.word	.L172,.L235
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_abbrev'
.L120:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_line'
.L121:
	.word	.L382-.L381
.L381:
	.half	3
	.word	.L384-.L383
.L383:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L384:
	.byte	5,31,7,0,5,2
	.word	.L59
	.byte	3,144,2,1,9
	.half	.L264-.L59
	.byte	3,1,1,5,5,9
	.half	.L265-.L264
	.byte	3,2,1,5,26,7,9
	.half	.L385-.L265
	.byte	3,2,1,9
	.half	.L386-.L385
	.byte	3,2,1,9
	.half	.L387-.L386
	.byte	3,127,1,5,32,3,127,1,5,26,9
	.half	.L32-.L387
	.byte	3,6,1,9
	.half	.L388-.L32
	.byte	3,2,1,9
	.half	.L389-.L388
	.byte	3,127,1,5,25,9
	.half	.L33-.L389
	.byte	3,4,1,5,18,1,9
	.half	.L390-.L33
	.byte	3,1,1,5,1,9
	.half	.L391-.L390
	.byte	3,1,1,7,9
	.half	.L123-.L391
	.byte	0,1,1
.L382:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_ranges'
.L122:
	.word	-1,.L59,0,.L123-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_info'
.L124:
	.word	268
	.half	3
	.word	.L125
	.byte	4,1
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L127,.L126
	.byte	2
	.word	.L60
	.byte	3
	.byte	'IfxStm_resetModule',0,1,251,1,6,1,1,1
	.word	.L57,.L236,.L56
	.byte	4
	.byte	'stm',0,1,251,1,34
	.word	.L130,.L237
	.byte	5
	.word	.L57,.L236
	.byte	6
	.byte	'passwd',0,1,253,1,12
	.word	.L132,.L238
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_abbrev'
.L125:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_line'
.L126:
	.word	.L393-.L392
.L392:
	.half	3
	.word	.L395-.L394
.L394:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std\\IfxStm.c',0,0,0,0,0
.L395:
	.byte	5,6,7,0,5,2
	.word	.L57
	.byte	3,250,1,1,5,53,9
	.half	.L259-.L57
	.byte	3,2,1,5,19,9
	.half	.L258-.L259
	.byte	1,5,31,9
	.half	.L261-.L258
	.byte	3,2,1,5,17,9
	.half	.L260-.L261
	.byte	3,1,1,5,29,9
	.half	.L396-.L260
	.byte	3,2,1,5,22,9
	.half	.L262-.L396
	.byte	3,126,1,5,17,9
	.half	.L397-.L262
	.byte	3,1,1,5,22,9
	.half	.L398-.L397
	.byte	1,5,29,9
	.half	.L399-.L398
	.byte	3,1,1,9
	.half	.L31-.L399
	.byte	3,2,1,5,37,9
	.half	.L400-.L31
	.byte	1,5,31,7,9
	.half	.L401-.L400
	.byte	3,4,1,5,29,9
	.half	.L402-.L401
	.byte	3,3,1,5,19,3,126,1,5,24,9
	.half	.L263-.L402
	.byte	1,5,29,9
	.half	.L403-.L263
	.byte	3,2,1,5,1,7,9
	.half	.L128-.L403
	.byte	3,1,0,1,1
.L393:
	.sdecl	'.debug_ranges',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_ranges'
.L127:
	.word	-1,.L57,0,.L128-.L57,0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L147-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L150:
	.word	-1,.L35,0,.L147-.L35
	.half	1
	.byte	84
	.word	0,0
.L148:
	.word	-1,.L35,0,.L147-.L35
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L151-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L153:
	.word	-1,.L37,0,.L151-.L37
	.half	1
	.byte	84
	.word	0,0
.L152:
	.word	-1,.L37,0,.L151-.L37
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L129-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L133:
	.word	-1,.L39,.L239-.L39,.L241-.L39
	.half	1
	.byte	82
	.word	.L242-.L39,.L129-.L39
	.half	1
	.byte	88
	.word	.L243-.L39,.L129-.L39
	.half	1
	.byte	84
	.word	0,0
.L131:
	.word	-1,.L39,0,.L239-.L39
	.half	1
	.byte	100
	.word	.L240-.L39,.L129-.L39
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L154-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L156:
	.word	-1,.L41,0,.L154-.L41
	.half	1
	.byte	84
	.word	0,0
.L155:
	.word	-1,.L41,0,.L154-.L41
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_loc'
.L42:
	.word	-1,.L43,0,.L134-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L137:
	.word	-1,.L43,.L244-.L43,.L134-.L43
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L135:
	.word	-1,.L43,0,.L134-.L43
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_loc'
.L44:
	.word	-1,.L45,0,.L138-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L141:
	.word	-1,.L45,.L245-.L45,.L10-.L45
	.half	1
	.byte	98
	.word	.L246-.L45,.L138-.L45
	.half	1
	.byte	98
	.word	0,0
.L140:
	.word	-1,.L45,0,.L138-.L45
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_loc'
.L46:
	.word	-1,.L47,0,.L142-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L145:
	.word	0,0
.L146:
	.word	-1,.L47,.L247-.L47,.L142-.L47
	.half	1
	.byte	82
	.word	0,0
.L143:
	.word	-1,.L47,0,.L142-.L47
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_loc'
.L48:
	.word	-1,.L49,0,.L158-.L49
	.half	2
	.byte	138,0
	.word	0,0
.L160:
	.word	-1,.L49,0,.L248-.L49
	.half	1
	.byte	84
	.word	.L248-.L49,.L158-.L49
	.half	1
	.byte	95
	.word	0,0
.L161:
	.word	-1,.L49,.L248-.L49,.L158-.L49
	.half	1
	.byte	82
	.word	0,0
.L159:
	.word	-1,.L49,0,.L248-.L49
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L163-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L171:
	.word	-1,.L51,.L252-.L51,.L249-.L51
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L166:
	.word	-1,.L51,0,.L249-.L51
	.half	1
	.byte	101
	.word	.L251-.L51,.L163-.L51
	.half	1
	.byte	111
	.word	0,0
.L173:
	.word	-1,.L51,.L253-.L51,.L249-.L51
	.half	1
	.byte	81
	.word	0,0
.L168:
	.word	-1,.L51,.L249-.L51,.L196-.L51
	.half	1
	.byte	82
	.word	0,0
.L200:
	.word	0,0
.L184:
	.word	0,0
.L169:
	.word	-1,.L51,.L23-.L51,.L163-.L51
	.half	1
	.byte	88
	.word	0,0
.L211:
	.word	0,0
.L218:
	.word	0,0
.L189:
	.word	0,0
.L193:
	.word	0,0
.L180:
	.word	0,0
.L175:
	.word	-1,.L51,.L254-.L51,.L24-.L51
	.half	1
	.byte	98
	.word	0,0
.L164:
	.word	-1,.L51,0,.L249-.L51
	.half	1
	.byte	100
	.word	.L250-.L51,.L163-.L51
	.half	1
	.byte	108
	.word	.L255-.L51,.L256-.L51
	.half	1
	.byte	100
	.word	.L257-.L51,.L212-.L51
	.half	1
	.byte	100
	.word	0,0
.L205:
	.word	0,0
.L198:
	.word	0,0
.L182:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L219-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L221:
	.word	-1,.L53,0,.L219-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L222-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L224:
	.word	-1,.L55,0,.L222-.L55
	.half	1
	.byte	84
	.word	0,0
.L223:
	.word	-1,.L55,0,.L222-.L55
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L236-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L57,.L258-.L57,.L260-.L57
	.half	1
	.byte	82
	.word	.L261-.L57,.L236-.L57
	.half	1
	.byte	88
	.word	.L262-.L57,.L31-.L57
	.half	1
	.byte	84
	.word	.L263-.L57,.L236-.L57
	.half	1
	.byte	84
	.word	0,0
.L237:
	.word	-1,.L57,0,.L258-.L57
	.half	1
	.byte	100
	.word	.L259-.L57,.L236-.L57
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_loc'
.L58:
	.word	-1,.L59,0,.L225-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L234:
	.word	-1,.L59,.L264-.L59,.L225-.L59
	.half	1
	.byte	95
	.word	0,0
.L227:
	.word	-1,.L59,0,.L225-.L59
	.half	1
	.byte	84
	.word	0,0
.L235:
	.word	-1,.L59,.L265-.L59,.L225-.L59
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L233:
	.word	-1,.L59,0,.L225-.L59
	.half	1
	.byte	87
	.word	0,0
.L229:
	.word	-1,.L59,0,.L225-.L59
	.half	1
	.byte	85
	.word	0,0
.L231:
	.word	-1,.L59,0,.L225-.L59
	.half	1
	.byte	86
	.word	0,0
.L226:
	.word	-1,.L59,0,.L225-.L59
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L404:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('IfxStm_clearCompareFlag')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L35,.L147-.L35
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_disableComparatorInterrupt')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L37,.L151-.L37
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_disableModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L404,.L39,.L129-.L39
	.sdecl	'.debug_frame',debug,cluster('IfxStm_enableComparatorInterrupt')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L41,.L154-.L41
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_enableOcdsSuspend')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L43,.L134-.L43
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_getAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L45,.L138-.L45
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_getIndex')
	.sect	'.debug_frame'
	.word	20
	.word	.L404,.L47,.L142-.L47
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_getSrcPointer')
	.sect	'.debug_frame'
	.word	12
	.word	.L404,.L49,.L158-.L49
	.sdecl	'.debug_frame',debug,cluster('IfxStm_initCompare')
	.sect	'.debug_frame'
	.word	12
	.word	.L404,.L51,.L163-.L51
	.sdecl	'.debug_frame',debug,cluster('IfxStm_initCompareConfig')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L53,.L219-.L53
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_isCompareFlagSet')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L55,.L222-.L55
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('IfxStm_resetModule')
	.sect	'.debug_frame'
	.word	12
	.word	.L404,.L57,.L236-.L57
	.sdecl	'.debug_frame',debug,cluster('IfxStm_setCompareControl')
	.sect	'.debug_frame'
	.word	24
	.word	.L404,.L59,.L225-.L59
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; ..\src\BaseSw\iLLD\TC26B\Tricore\Stm\Std\IfxStm.c	   292  
	; Module end
