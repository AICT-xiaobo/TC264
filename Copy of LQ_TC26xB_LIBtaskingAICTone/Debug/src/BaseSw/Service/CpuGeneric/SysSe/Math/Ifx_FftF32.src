	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 99293038"
	.compiler_invocation	"ctc --dep-file=src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\.Ifx_FftF32.o.d --fp-model=c,f,l,n,r,S,T,z -D__CPU__=tc27xd -D__CPU_TC27XD__ --core=tc1.6.x --iso=99 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\APP -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Main -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\AppSw\\Tricore\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Build -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Impl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\DataHandling -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_Lib\\InternalMux -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\_PinMap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Asc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Lin -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Spi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Asclin\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Icu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmBc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TimerWithTrigger -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Ccu6\\TPwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Cam -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cif\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\CStart -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Irq -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Trap -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Dma -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dma\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Dsadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Rdc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dsadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Dts -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Dts\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Emem\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Eray -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eray\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Phy_Pef7071 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Eth\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Crc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fce\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Fft -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Fft\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Flash\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\IncrEnc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gpt12\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Atom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tim\\In -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Pwm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\PwmHl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Tom\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Gtm\\Trig -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Hssl -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Hssl\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\I2c -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\I2c\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Driver -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Iom\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Msc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Msc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Mtu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Can -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Multican\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Io -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Port\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Psi5 -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Psi5s -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Psi5s\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiMaster -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\SpiSlave -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Qspi\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Scu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Sent -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Sent\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Smu\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Src\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Stm\\Timer -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Adc -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Vadc\\Std -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Platform\\Tricore\\Compilers -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Infra\\Sfr\\TC26B\\_Reg -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\_Utilities -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\If\\Ccu6If -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\StdIf -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Bsp -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Comm -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\General -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math -IE:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Time -g2 --make-target=src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.src ..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c"
	.compiler_name		"ctc"
	;source	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c'

	
$TC16X
	
	.sdecl	'.text.Ifx_FftF32.Ifx_FftF32_generateTwiddleFactor',code,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.text.Ifx_FftF32.Ifx_FftF32_generateTwiddleFactor'
	.align	2
	
	.global	Ifx_FftF32_generateTwiddleFactor

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     2   * \file Ifx_FftF32.c
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     6   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	     9   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    12   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    18  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    27  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    33   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    34  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    42  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    43   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    44   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    45  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    46  #include "Ifx_FftF32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    47  #include <math.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    48  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    49  //#include "Compiler.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    50  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    51  cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, short nX)
; Function Ifx_FftF32_generateTwiddleFactor
.L21:
Ifx_FftF32_generateTwiddleFactor:	.type	func
	mov	d10,d4
	mov.aa	a12,a4
.L143:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    52  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    53      int    i;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    54      double Theta;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    55  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    56      // prepare twiddle coefficients
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    57      for (i = 0; i < nX / 2; i++)
	mov	d15,#2
	mov.aa	a15,a12
.L183:
	mov	d11,#0
.L144:
	div	e8,d10,d15
	j	.L2
.L3:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    58      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    59          Theta      = 2 * IFX_PI * i / nX;
	itof	d15,d11
.L184:
	mov	d0,#4059
	addih	d0,d0,#16585
.L185:
	mul.f	d15,d15,d0
.L186:
	itof	d0,d10
.L187:
	div.f	d15,d15,d0
.L145:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    61          TF[i].real = (float32)(cosf(Theta));
	mov	d4,d15
	call	cosf
.L188:
	st.w	[a15],d2
.L189:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    62          TF[i].imag = (float32)(-sinf(Theta));
	mov	d4,d15
	call	sinf
.L190:
	insn.t	d15,d2:31,d2:31
	st.w	[a15]4,d15
.L146:
	add	d11,#1
	lea	a15,[a15]8
.L2:
	jlt	d11,d8,.L3
.L191:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    63      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    65      return TF;
	mov.aa	a2,a12
.L147:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    66  }
	ret
.L67:
	
__Ifx_FftF32_generateTwiddleFactor_function_end:
	.size	Ifx_FftF32_generateTwiddleFactor,__Ifx_FftF32_generateTwiddleFactor_function_end-Ifx_FftF32_generateTwiddleFactor
.L40:
	; End of function
	
	.sdecl	'.text.Ifx_FftF32.Ifx_FftF32_reverseBits',code,cluster('Ifx_FftF32_reverseBits')
	.sect	'.text.Ifx_FftF32.Ifx_FftF32_reverseBits'
	.align	2
	
	.global	Ifx_FftF32_reverseBits

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    68  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    69  /******************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    70  unsigned short Ifx_FftF32_reverseBits(unsigned short n, unsigned bits)
; Function Ifx_FftF32_reverseBits
.L23:
Ifx_FftF32_reverseBits:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    71  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    72      /* This code is from:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    73       * http://graphics.stanford.edu/~seander/bithacks.html
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    74       * */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    75      unsigned long v = n; // 32-bit word to reverse bit order
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    76  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    77      // swap odd and even bits
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    78      v = ((v >> 1) & 0x55555555UL) | ((v & 0x55555555UL) << 1);
	mov	d15,#21845
	addih	d15,d15,#21845
.L225:
	sh	d0,d4,#-1
.L226:
	and	d0,d15
.L227:
	and	d4,d15
.L148:
	sh	d4,#1
.L149:
	or	d0,d4
.L228:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    79      // swap consecutive pairs
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    80      v = ((v >> 2) & 0x33333333UL) | ((v & 0x33333333UL) << 2);
	mov	d15,#13107
	addih	d15,d15,#13107
.L229:
	sh	d1,d0,#-2
.L230:
	and	d1,d15
.L231:
	and	d0,d15
.L150:
	sh	d0,#2
.L151:
	or	d1,d0
.L232:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    81      // swap nibbles ...
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    82      v = ((v >> 4) & 0x0F0F0F0FUL) | ((v & 0x0F0F0F0FUL) << 4);
	mov	d15,#3855
	addih	d15,d15,#3855
.L233:
	sh	d0,d1,#-4
.L234:
	and	d0,d15
.L235:
	and	d1,d15
.L152:
	sh	d1,#4
.L153:
	or	d0,d1
.L236:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    83      // swap bytes
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    84      v = ((v >> 8) & 0x00FF00FFUL) | ((v & 0x00FF00FFUL) << 8);
	sh	d15,d0,#-8
.L237:
	mov	d1,#255
	addih	d1,d1,#255
.L238:
	and	d0,d1
.L154:
	sh	d0,d0,#8
.L239:
	or	d15,d0
.L240:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    85      // swap 2-byte long pairs
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    86      v = (v >> 16) | (v << 16);
	sh	d15,d15,#16
.L241:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    87  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    88      v = v >> (32 - bits);
	rsub	d0,d5,#32
.L242:
	rsub	d0,#0
	sh	d15,d15,d0
.L155:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    89      return (unsigned short)v;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    90  }
	extr.u	d2,d15,#0,#16
	ret
.L98:
	
__Ifx_FftF32_reverseBits_function_end:
	.size	Ifx_FftF32_reverseBits,__Ifx_FftF32_reverseBits_function_end-Ifx_FftF32_reverseBits
.L55:
	; End of function
	
	.sdecl	'.text.Ifx_FftF32.Ifx_FftF32_radix2DecimationInTime',code,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.text.Ifx_FftF32.Ifx_FftF32_radix2DecimationInTime'
	.align	2
	
	.global	Ifx_FftF32_radix2DecimationInTime

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    92  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    93  /******************************************************************************/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    94  void Ifx_FftF32_radix2DecimationInTime(cfloat32 *R, unsigned long p)
; Function Ifx_FftF32_radix2DecimationInTime
.L25:
Ifx_FftF32_radix2DecimationInTime:	.type	func
	mov	d13,d4
.L156:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    95  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    96      /* http://www.engineeringproductivitytools.com/stuff/T0001/PT04.HTM#Head317
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    97       * */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    98      /*Perform in place Ifx_FftF32_radix2DecimationInTime of 2^p points (=size of f)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	    99       * N.B. The input array f is in bit reversed order! So all the
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   100       * 'even' input samples are in the 'top' half, all the 'odd'
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   101       * input samples are in the 'bottom' halR..etc (recursively).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   102       */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   103      /*Ifx_FftF32_radix2DecimationInTime*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   104      unsigned long Bp, Np, Npx, P, b, k, BaseT, BaseB;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   105      cfloat32      top, bot;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   106      /*initialise pass parameters*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   107      Bp = 1 << (p - 1); /*No. of blocks*/
	mov	d0,#1
.L247:
	add	d15,d13,#-1
.L248:
	sha	d0,d0,d15
.L157:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   108      Np = 2;            /*No. of points in each block*/
	mov	d1,#2
.L158:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   109  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   110      /*perform p passes*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   111      for (P = 0; P < p; P++)
	mov	d2,#0
	j	.L6
.L7:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   112      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   113          /*pass loop*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   114          Npx   = Np >> 1; /*No. of butterflies*/
	sh	d3,d1,#-1
.L159:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   115          BaseT = 0;       /*Reset even base index*/
	mov	d4,#0
.L160:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   116  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   117          for (b = 0; b < Bp; b++)
	mov	d5,d4
	j	.L8
.L9:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   118          {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   119              /*block loop*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   120              BaseB = BaseT + Npx; /*calc odd base index*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   121  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   122              for (k = 0; k < Npx; k++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   123              {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   124                  //printf("P = %d; b = %d; Np = %d; k = %d\n", P, b, Np, k);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   125                  /*butterfly loop*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   126                  top          = Ifx_FftF32_lookUpTwiddleFactor(Np, k);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   127                  bot          = IFX_Cf32_mul(&R[BaseB + k], &top); /*twiddle the odd n results*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   128                  top          = R[BaseT + k];
	addsc.a	a2,a4,d4,#3
.L249:
	add	d15,d4,d3
.L250:
	addsc.a	a15,a4,d15,#3
.L251:
	mov	d12,#0
	j	.L10
.L11:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    97      return index >> shift;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    98  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    99  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   100  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   101  /** \brief Lookup from \ref Ifx_g_FftF32_twiddleTable the twiddle factor for N, k */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   102  IFX_INLINE cfloat32 Ifx_FftF32_lookUpTwiddleFactor(sint32 N, sint32 k)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   103  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   104      return Ifx_g_FftF32_twiddleTable[k * IFX_FFTF32_MAX_LENGTH / N];
	sh	d15,d12,#14
	movh.a	a5,#@his(Ifx_g_FftF32_twiddleTable)
.L252:
	div.u	e6,d15,d1
	lea	a5,[a5]@los(Ifx_g_FftF32_twiddleTable)
.L117:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     2   * \file Ifx_Cf32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     3   * \brief Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     6   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     9   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    12   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    18  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    27  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    33   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    34  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    42  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    43   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    44   * \defgroup library_srvsw_sysse_math_cf32 Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    45   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    46   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    47  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    48  #ifndef IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    49  #define IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    50  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    52  #include <math.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    53  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    54  #define _DATAF(val) ((float32)(val))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    55  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    56  /* Complex Arithmetic --------------------------------------------------------*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    57  IFX_INLINE cfloat32 IFX_Cf32_exp(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    58  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    59      float32  f = (float32)expf(c->real);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    60      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    61      R.real = f * (float32)cosf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    62      R.imag = f * (float32)sinf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    63      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    64  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    65  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    66  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    67  IFX_INLINE cfloat32 IFX_Cf32_mul(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    68  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    69      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    70      R.real = (a->real * b->real) - (a->imag * b->imag);
	ld.w	d9,[a15]
.L253:
	ld.w	d15,[a15]4
.L118:
	addsc.a	a5,a5,d6,#3
.L254:
	add	d12,#1
.L255:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    97      return index >> shift;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    98  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    99  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   100  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   101  /** \brief Lookup from \ref Ifx_g_FftF32_twiddleTable the twiddle factor for N, k */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   102  IFX_INLINE cfloat32 Ifx_FftF32_lookUpTwiddleFactor(sint32 N, sint32 k)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   103  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	   104      return Ifx_g_FftF32_twiddleTable[k * IFX_FFTF32_MAX_LENGTH / N];
	ld.d	e6,[a5]0
.L125:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     2   * \file Ifx_Cf32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     3   * \brief Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     6   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     9   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    12   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    18  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    27  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    33   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    34  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    42  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    43   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    44   * \defgroup library_srvsw_sysse_math_cf32 Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    45   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    46   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    47  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    48  #ifndef IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    49  #define IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    50  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    52  #include <math.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    53  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    54  #define _DATAF(val) ((float32)(val))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    55  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    56  /* Complex Arithmetic --------------------------------------------------------*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    57  IFX_INLINE cfloat32 IFX_Cf32_exp(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    58  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    59      float32  f = (float32)expf(c->real);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    60      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    61      R.real = f * (float32)cosf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    62      R.imag = f * (float32)sinf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    63      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    64  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    65  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    66  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    67  IFX_INLINE cfloat32 IFX_Cf32_mul(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    68  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    69      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    70      R.real = (a->real * b->real) - (a->imag * b->imag);
	mul.f	d10,d9,d6
.L256:
	mov	d8,d7
.L257:
	msub.f	d10,d10,d15,d8
.L258:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    71      R.imag = (a->imag * b->real) + (a->real * b->imag);
	mul.f	d8,d9,d8
.L259:
	madd.f	d11,d8,d15,d6
	ld.d	e8,[a2]0
.L126:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     2   * \file Ifx_Cf32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     3   * \brief Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     6   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     9   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    12   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    18  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    27  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    33   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    34  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    42  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    43   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    44   * \defgroup library_srvsw_sysse_math_cf32 Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    45   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    46   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    47  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    48  #ifndef IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    49  #define IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    50  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    52  #include <math.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    53  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    54  #define _DATAF(val) ((float32)(val))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    55  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    56  /* Complex Arithmetic --------------------------------------------------------*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    57  IFX_INLINE cfloat32 IFX_Cf32_exp(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    58  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    59      float32  f = (float32)expf(c->real);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    60      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    61      R.real = f * (float32)cosf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    62      R.imag = f * (float32)sinf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    63      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    64  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    65  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    66  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    67  IFX_INLINE cfloat32 IFX_Cf32_mul(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    68  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    69      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    70      R.real = (a->real * b->real) - (a->imag * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    71      R.imag = (a->imag * b->real) + (a->real * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    72      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    73  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    75  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    76  IFX_INLINE cfloat32 IFX_Cf32_amp(const cfloat32 *a, float32 gain)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    77  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    78      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    79      R.real = a->real * gain;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    80      R.imag = a->imag * gain;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    81      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    82  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    84  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    85  IFX_INLINE float32 IFX_Cf32_dot(const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    86  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    87      return (b->real * b->real) + (b->imag * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    88  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    89  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    90  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    91  IFX_INLINE float32 IFX_Cf32_mag(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    92  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    93      return (float32)sqrtf(IFX_Cf32_dot(c));
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    94  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    95  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    96  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    97  IFX_INLINE cfloat32 IFX_Cf32_div(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    98  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    99      float32  denom = IFX_Cf32_dot(b);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   100      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   101      R.real = ((a->real * b->real) + (a->imag * b->imag)) / denom;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   102      R.imag = ((a->imag * b->real) - (a->real * b->imag)) / denom;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   103      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   104  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   105  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   106  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   107  IFX_INLINE cfloat32 IFX_Cf32_add(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   108  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   109      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   110      R.real = (a->real + b->real);
	mov	d6,d10
.L260:
	mov	d15,d8
.L261:
	add.f	d6,d15,d6
.L262:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   111      R.imag = (a->imag + b->imag);
	mov	d15,d9
.L263:
	mov	d14,d11
.L264:
	add.f	d7,d15,d14

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   129  n results*/
	st.d	[a2+]8,e6
.L129:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     2   * \file Ifx_Cf32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     3   * \brief Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     4   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     6   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     7   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     8   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	     9   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    10   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    12   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    14   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    16   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    17  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    18  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    19   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    21   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    22   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    23   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    24   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    25   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    26   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    27  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    28   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    29   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    30   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    31   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    32   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    33   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    34  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    35   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    36   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    37   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    38   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    39   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    40   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    41   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    42  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    43   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    44   * \defgroup library_srvsw_sysse_math_cf32 Floating point signal, vector, and matrix library
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    45   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    46   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    47  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    48  #ifndef IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    49  #define IFX_CF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    50  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    51  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    52  #include <math.h>
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    53  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    54  #define _DATAF(val) ((float32)(val))
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    55  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    56  /* Complex Arithmetic --------------------------------------------------------*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    57  IFX_INLINE cfloat32 IFX_Cf32_exp(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    58  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    59      float32  f = (float32)expf(c->real);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    60      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    61      R.real = f * (float32)cosf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    62      R.imag = f * (float32)sinf(c->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    63      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    64  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    65  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    66  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    67  IFX_INLINE cfloat32 IFX_Cf32_mul(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    68  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    69      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    70      R.real = (a->real * b->real) - (a->imag * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    71      R.imag = (a->imag * b->real) + (a->real * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    72      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    73  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    75  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    76  IFX_INLINE cfloat32 IFX_Cf32_amp(const cfloat32 *a, float32 gain)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    77  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    78      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    79      R.real = a->real * gain;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    80      R.imag = a->imag * gain;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    81      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    82  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    84  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    85  IFX_INLINE float32 IFX_Cf32_dot(const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    86  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    87      return (b->real * b->real) + (b->imag * b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    88  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    89  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    90  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    91  IFX_INLINE float32 IFX_Cf32_mag(const cfloat32 *c)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    92  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    93      return (float32)sqrtf(IFX_Cf32_dot(c));
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    94  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    95  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    96  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    97  IFX_INLINE cfloat32 IFX_Cf32_div(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    98  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	    99      float32  denom = IFX_Cf32_dot(b);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   100      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   101      R.real = ((a->real * b->real) + (a->imag * b->imag)) / denom;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   102      R.imag = ((a->imag * b->real) - (a->real * b->imag)) / denom;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   103      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   104  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   105  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   106  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   107  IFX_INLINE cfloat32 IFX_Cf32_add(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   108  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   109      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   110      R.real = (a->real + b->real);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   111      R.imag = (a->imag + b->imag);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   112      return R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   113  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   114  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   115  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   116  IFX_INLINE cfloat32 IFX_Cf32_sub(const cfloat32 *a, const cfloat32 *b)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   117  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   118      cfloat32 R;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   119      R.real = (a->real - b->real);
	mov	d15,d8
.L265:
	mov	d6,d10
.L161:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_Cf32.h	   120      R.imag = (a->imag - b->imag);
	sub.f	d7,d9,d11
.L266:
	sub.f	d6,d15,d6

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   130  2_mul(&R[BaseB + k], &top); /*twiddle the odd n results*/
	st.d	[a15+]8,e6
.L10:
	jlt.u	d12,d3,.L11
.L267:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   131                  top          = R[BaseT + k];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   132                  R[BaseT + k] = IFX_Cf32_add(&top, &bot);          /*top    subset*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   133                  R[BaseB + k] = IFX_Cf32_sub(&top, &bot);          /*bottom subset*/
	add	d4,d1
.L268:
	add	d5,#1
.L8:
	jlt.u	d5,d0,.L9
.L269:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   134              } /*butterfly loop*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   135  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   136              BaseT = BaseT + Np;                                   /*start of next block*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   137          } /*block loop*/
	sh	d0,#-1
.L270:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   138  
	sh	d1,#1
.L271:
	add	d2,#1
.L6:
	jlt.u	d2,d13,.L7
.L272:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   139          /*calc parameters for next pass*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   140          Bp = Bp >> 1; /*half as many blocks*/
	ret
.L103:
	
__Ifx_FftF32_radix2DecimationInTime_function_end:
	.size	Ifx_FftF32_radix2DecimationInTime,__Ifx_FftF32_radix2DecimationInTime_function_end-Ifx_FftF32_radix2DecimationInTime
.L60:
	; End of function
	
	.sdecl	'.text.Ifx_FftF32.Ifx_FftF32_radix2',code,cluster('Ifx_FftF32_radix2')
	.sect	'.text.Ifx_FftF32.Ifx_FftF32_radix2'
	.align	2
	
	.global	Ifx_FftF32_radix2

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   141          Np = Np << 1; /*twice as many points in each block*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   142      } /*pass loop*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   143  } /*Ifx_FftF32_radix2DecimationInTime*/
; Function Ifx_FftF32_radix2
.L27:
Ifx_FftF32_radix2:	.type	func

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   144  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   145  
	clz	d15,d4

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	movh.a	a2,#@his(Ifx_g_FftF32_bitReverseTable)
.L196:
	rsub	d1,d15,#31
	mov.aa	a12,a4
.L165:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	rsub	d2,d1,#14
	lea	a2,[a2]@los(Ifx_g_FftF32_bitReverseTable)
.L197:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   146  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   147  } /*Ifx_FftF32_radix2DecimationInTime*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   148  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   149  
	mov	d0,#0
	j	.L12
.L13:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    97      return index >> shift;
	mov	d3,d2
	ld.hu	d15,[a2]0
.L198:
	rsub	d3,#0
	sha	d15,d15,d3
.L199:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   150  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   151  } /*Ifx_FftF32_radix2DecimationInTime*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   152  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   153  
	addsc.a	a15,a12,d15,#3
.L200:
	ld.w	d15,[a5]
.L201:
	st.w	[a15],d15
.L202:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	ld.hu	d15,[a2+]2
.L203:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    97      return index >> shift;
	sha	d15,d15,d3
.L204:
	addsc.a	a15,a12,d15,#3
.L205:
	ld.w	d15,[a5]4
.L206:
	fcall	.cocofun_1
.L12:
	jlt.u	d0,d4,.L13
.L207:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   154  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   155  } /*Ifx_FftF32_radix2DecimationInTime*/
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   156  
	mov.aa	a4,a12
	mov	d4,d1
	call	Ifx_FftF32_radix2DecimationInTime
.L164:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   157  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   158  cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, unsigned short nX)
	mov.aa	a2,a12
.L166:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   159  {
	ret
.L75:
	
__Ifx_FftF32_radix2_function_end:
	.size	Ifx_FftF32_radix2,__Ifx_FftF32_radix2_function_end-Ifx_FftF32_radix2
.L45:
	; End of function
	
	.sdecl	'.text.Ifx_FftF32..cocofun_1',code,cluster('.cocofun_1')
	.sect	'.text.Ifx_FftF32..cocofun_1'
	.align	2
; Function .cocofun_1
.L29:
.cocofun_1:	.type	func
; Function body .cocofun_1, coco_iter:0
	add	d0,#1
	st.w	[a15]4,d15
.L163:
	extr.u	d0,d0,#0,#16
	lea	a5,[a5]8
.L162:
	fret
.L65:
	; End of function
	.sdecl	'.text.Ifx_FftF32.Ifx_FftF32_radix2I',code,cluster('Ifx_FftF32_radix2I')
	.sect	'.text.Ifx_FftF32.Ifx_FftF32_radix2I'
	.align	2
	
	.global	Ifx_FftF32_radix2I

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   160      unsigned int   logN = 31 - __clz(nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   161      unsigned short n, k;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   162  
; Function Ifx_FftF32_radix2I
.L31:
Ifx_FftF32_radix2I:	.type	func
	mov	d8,d4

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	movh.a	a2,#@his(Ifx_g_FftF32_bitReverseTable)
.L170:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   163   __clz(nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   164      unsigned short n, k;
	clz	d15,d8
	mov.aa	a12,a4
.L168:
	rsub	d4,d15,#31

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	lea	a2,[a2]@los(Ifx_g_FftF32_bitReverseTable)
.L167:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   165   - __clz(nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   166      unsigned short n, k;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   167  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   168      /* Arrange in bit-reversed index */
	mov	d0,#0
	j	.L15
.L16:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     1  /**
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     2   * \file Ifx_FftF32.h
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     3   * \brief Floating-point Fast Fourier Transform
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     4   * \ingroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     5   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     6   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     7   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     8   * \version disabled
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	     9   * \copyright Copyright (c) 2013 Infineon Technologies AG. All rights reserved.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    10   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    11   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    12   *                                 IMPORTANT NOTICE
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    13   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    14   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    15   * Use of this file is subject to the terms of use agreed between (i) you or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    16   * the company in which ordinary course of business you are acting and (ii) 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    17   * Infineon Technologies AG or its licensees. If and as long as no such 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    18   * terms of use are agreed, use of this file is subject to following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    19  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    20  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    21   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    22  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    23   * Permission is hereby granted, free of charge, to any person or 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    24   * organization obtaining a copy of the software and accompanying 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    25   * documentation covered by this license (the "Software") to use, reproduce,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    26   * display, distribute, execute, and transmit the Software, and to prepare
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    27   * derivative works of the Software, and to permit third-parties to whom the 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    28   * Software is furnished to do so, all subject to the following:
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    29  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    30   * The copyright notices in the Software and this entire statement, including
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    31   * the above license grant, this restriction and the following disclaimer, must
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    32   * be included in all copies of the Software, in whole or in part, and all
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    33   * derivative works of the Software, unless such copies or derivative works are
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    34   * solely in the form of machine-executable object code generated by a source
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    35   * language processor.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    36  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    37   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    38   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    39   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    40   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    41   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    42   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    43   * DEALINGS IN THE SOFTWARE.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    44  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    45   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    46   * \defgroup library_srvsw_sysse_math_f32_fft Floating-point FFT
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    47   * This module implements the Fast Fourier Transform in single precision floating-point
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    48   * \ingroup library_srvsw_sysse_math_f32
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    49   *
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    50   */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    51  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    52  #ifndef IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    53  #define IFX_FFTF32_H
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    54  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    55  #include "Ifx_Cf32.h"
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    56  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    57  /** \brief Maximum FFT resolution (bits).
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    58   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    59  #define IFX_FFTF32_MAX_RESOLUTION (14)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    60  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    61  /** \brief Maximum FFT length.
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    62   * If redefined, then \ref Ifx_g_FftF32_bitReverseTable and \ref Ifx_g_FftF32_twiddleTable shall be regenerated. */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    63  #define IFX_FFTF32_MAX_LENGTH     (1U << IFX_FFTF32_MAX_RESOLUTION)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    64  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    65  /** \brief Bit reversal table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    66  IFX_EXTERN IFX_CONST uint16   Ifx_g_FftF32_bitReverseTable[IFX_FFTF32_MAX_LENGTH];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    67  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    68  /** \brief Twiddle factor table */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    69  IFX_EXTERN IFX_CONST cfloat32 Ifx_g_FftF32_twiddleTable[IFX_FFTF32_MAX_LENGTH / 2];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    70  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    71  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    72  /** \addtogroup library_srvsw_sysse_math_f32_fft
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    73   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    74  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    75  /** \name Transform functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    76   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    77  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    78  /** \brief Twiddle factor generator */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    79  IFX_EXTERN cfloat32 *Ifx_FftF32_generateTwiddleFactor(cfloat32 *TF, sint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    80  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    81  /** \brief Radix-2 Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    82  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    83  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    84  /** \brief Radix-2 Inverse Fast-Fourier Transform */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    85  IFX_EXTERN cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, uint16 nX);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    86  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    87  /** \} */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    88  //----------------------------------------------------------------------------------------
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    89  /** \name Utility functions
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    90   * \{ */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    91  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    92  /** \brief Lookup from \ref Ifx_g_FftF32_bitReverseTable the bit-reversed \<n\> with \<bits\> as number of bits */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    93  IFX_INLINE uint16 Ifx_FftF32_lookUpReversedBits(uint16 n, unsigned bits)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    94  {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    95      unsigned shift = IFX_FFTF32_MAX_RESOLUTION - bits;
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    96      uint16   index = Ifx_g_FftF32_bitReverseTable[n];
	rsub	d1,d4,#14
	ld.hu	d15,[a2+]2
.L212:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.h	    97      return index >> shift;
	rsub	d1,#0
	sha	d15,d15,d1
.L92:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   169   /* Arrange in bit-reversed index */
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   170      for (n = 0; n < nX; n++)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   171      {
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   172          //k = Ifx_FftF32_reverseBits(n, logN);
	addsc.a	a15,a12,d15,#3
.L213:
	ld.w	d15,[a5]
.L214:
	st.w	[a15],d15
.L215:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   173          k    = Ifx_FftF32_lookUpReversedBits(n, logN);
	ld.w	d15,[a5]4
.L216:
	insn.t	d15,d15:31,d15:31
.L217:
	fcall	.cocofun_1
.L15:
	jlt.u	d0,d8,.L16
.L218:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   174          R[k] = X[n];
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   175      }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   176  
	mov.aa	a4,a12
	call	Ifx_FftF32_radix2DecimationInTime
.L169:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   177      Ifx_FftF32_radix2DecimationInTime(R, logN);
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   178  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   179      return R;
	mov	d0,#0
	mov.aa	a15,a12
.L171:
	j	.L17
.L18:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   180  }
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   181  
	add	d0,#1
	ld.w	d15,[a15]4
.L172:
	extr.u	d0,d0,#0,#16
.L173:
	insn.t	d15,d15:31,d15:31
	st.w	[a15]4,d15
.L219:
	lea	a15,[a15]8
.L17:
	jlt.u	d0,d8,.L18
.L220:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   182  
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   183  cfloat32 *Ifx_FftF32_radix2I(cfloat32 *R, const cfloat32 *X, unsigned short nX)
; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   184  {
	mov.aa	a2,a12
.L174:

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   185      unsigned int   logN = 31 - __clz(nX);
	ret
.L85:
	
__Ifx_FftF32_radix2I_function_end:
	.size	Ifx_FftF32_radix2I,__Ifx_FftF32_radix2I_function_end-Ifx_FftF32_radix2I
.L50:
	; End of function
	
	.calls	'Ifx_FftF32_generateTwiddleFactor','cosf'
	.calls	'Ifx_FftF32_generateTwiddleFactor','sinf'
	.calls	'Ifx_FftF32_radix2','Ifx_FftF32_radix2DecimationInTime'
	.calls	'Ifx_FftF32_radix2I','Ifx_FftF32_radix2DecimationInTime'
	.calls	'Ifx_FftF32_radix2','.cocofun_1'
	.calls	'Ifx_FftF32_radix2I','.cocofun_1'
	.calls	'Ifx_FftF32_generateTwiddleFactor','',0
	.calls	'Ifx_FftF32_reverseBits','',0
	.calls	'Ifx_FftF32_radix2DecimationInTime','',0
	.calls	'Ifx_FftF32_radix2','',0
	.calls	'.cocofun_1','',0
	.extern	sinf
	.extern	cosf
	.extern	Ifx_g_FftF32_bitReverseTable
	.extern	Ifx_g_FftF32_twiddleTable
	.calls	'Ifx_FftF32_radix2I','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L33:
	.word	1724
	.half	3
	.word	.L34
	.byte	4
.L32:
	.byte	1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L35
	.byte	2,1,1,3
	.word	182
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,61,17,1,1,5
	.byte	'fun',0,1,61,43
	.word	185
	.byte	6,0,7
	.byte	'__fract',0,4,128,1
.L73:
	.byte	7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,152,2,18
	.word	230
	.byte	1,1,5
	.byte	'a',0,1,152,2,44
	.word	242
	.byte	6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	322
	.byte	8
	.byte	'__ld64',0,3,2,135,1,19
	.word	296
	.byte	1,1,5
	.byte	'addr',0,2,135,1,32
	.word	328
	.byte	6,0,4
	.byte	'__st64',0,3,2,143,1,17,1,1,5
	.byte	'addr',0,2,143,1,30
	.word	328
	.byte	5
	.byte	'value',0,2,143,1,43
	.word	296
	.byte	6,0
.L113:
	.byte	10,4,61,9,8,11
	.byte	'real',0
	.word	242
	.byte	4,2,35,0,11
	.byte	'imag',0
	.word	242
	.byte	4,2,35,4,0,12
	.word	414
.L77:
	.byte	3
	.word	448
.L116:
	.byte	8
	.byte	'IFX_Cf32_mul',0,3,3,67,21
	.word	414
	.byte	1,1
.L119:
	.byte	5
	.byte	'a',0,3,67,50
	.word	453
.L121:
	.byte	5
	.byte	'b',0,3,67,69
	.word	453
.L123:
	.byte	6,0,8
	.byte	'IFX_Cf32_dot',0,3,3,85,20
	.word	242
	.byte	1,1,5
	.byte	'b',0,3,85,49
	.word	453
	.byte	6,0,8
	.byte	'IFX_Cf32_mag',0,3,3,91,20
	.word	242
	.byte	1,1,5
	.byte	'c',0,3,91,49
	.word	453
	.byte	13,6,0,0
.L128:
	.byte	8
	.byte	'IFX_Cf32_add',0,3,3,107,21
	.word	414
	.byte	1,1
.L130:
	.byte	5
	.byte	'a',0,3,107,50
	.word	453
.L132:
	.byte	5
	.byte	'b',0,3,107,69
	.word	453
.L134:
	.byte	6,0
.L136:
	.byte	8
	.byte	'IFX_Cf32_sub',0,3,3,116,21
	.word	414
	.byte	1,1
.L137:
	.byte	5
	.byte	'a',0,3,116,50
	.word	453
.L139:
	.byte	5
	.byte	'b',0,3,116,69
	.word	453
.L141:
	.byte	6,0
.L66:
	.byte	3
	.word	414
	.byte	4
	.byte	'IFX_Cf32_set',0,3,3,125,17,1,1,5
	.byte	'a',0,3,125,40
	.word	670
	.byte	5
	.byte	're',0,3,125,51
	.word	242
	.byte	5
	.byte	'im',0,3,125,63
	.word	242
	.byte	6,0
.L79:
	.byte	7
	.byte	'unsigned short int',0,2,7
.L82:
	.byte	7
	.byte	'unsigned int',0,4,7
.L91:
	.byte	8
	.byte	'Ifx_FftF32_lookUpReversedBits',0,3,5,93,19
	.word	729
	.byte	1,1
.L93:
	.byte	5
	.byte	'n',0,5,93,56
	.word	729
.L95:
	.byte	5
	.byte	'bits',0,5,93,68
	.word	751
.L97:
	.byte	6,0,7
	.byte	'long int',0,4,5,8
	.byte	'Ifx_FftF32_lookUpTwiddleFactor',0,3,5,102,21
	.word	414
	.byte	1,1,5
	.byte	'N',0,5,102,59
	.word	833
	.byte	5
	.byte	'k',0,5,102,69
	.word	833
	.byte	6,0
.L71:
	.byte	7
	.byte	'int',0,4,5,12
	.word	909
	.byte	14
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,15
	.word	916
	.byte	0,16
	.word	751
	.byte	3
	.word	751
	.byte	17
	.byte	'__cmpswapw',0
	.word	958
	.byte	1,1,1,1,18
	.byte	'p',0
	.word	963
	.byte	18
	.byte	'value',0
	.word	751
	.byte	18
	.byte	'compare',0
	.word	751
	.byte	0,17
	.byte	'__clz',0
	.word	909
	.byte	1,1,1,1,15
	.word	909
	.byte	0,19
	.word	190
	.byte	20
	.word	216
	.byte	6,0,19
	.word	251
	.byte	20
	.word	283
	.byte	6,0,19
	.word	333
	.byte	20
	.word	352
	.byte	6,0,19
	.word	368
	.byte	20
	.word	383
	.byte	20
	.word	397
	.byte	6,0,21
	.byte	'sinf',0,6,89,25
	.word	242
	.byte	1,1,1,1,22,6,89,43
	.word	242
	.byte	0,21
	.byte	'cosf',0,6,92,25
	.word	242
	.byte	1,1,1,1,22,6,92,43
	.word	242
	.byte	0,19
	.word	458
	.byte	20
	.word	482
	.byte	20
	.word	492
	.byte	6,0,19
	.word	504
	.byte	20
	.word	528
	.byte	6,0,19
	.word	540
	.byte	20
	.word	564
	.byte	13,23
	.word	504
	.byte	20
	.word	528
	.byte	24
	.word	538
	.byte	0,6,0,0,19
	.word	578
	.byte	20
	.word	602
	.byte	20
	.word	612
	.byte	6,0,19
	.word	624
	.byte	20
	.word	648
	.byte	20
	.word	658
	.byte	6,0,19
	.word	675
	.byte	20
	.word	695
	.byte	20
	.word	705
	.byte	20
	.word	716
	.byte	6,0
.L69:
	.byte	7
	.byte	'short int',0,2,5,19
	.word	767
	.byte	20
	.word	808
	.byte	20
	.word	818
	.byte	6,0,19
	.word	845
	.byte	20
	.word	887
	.byte	20
	.word	897
	.byte	6,0
.L101:
	.byte	7
	.byte	'unsigned long int',0,4,7,25
	.byte	'__wchar_t',0,7,1,1
	.word	1261
	.byte	25
	.byte	'__size_t',0,7,1,1
	.word	751
	.byte	25
	.byte	'__ptrdiff_t',0,7,1,1
	.word	909
	.byte	26,1,3
	.word	1384
	.byte	25
	.byte	'__codeptr',0,7,1,1
	.word	1386
	.byte	7
	.byte	'unsigned char',0,1,8,25
	.byte	'uint8',0,8,105,29
	.word	1409
	.byte	25
	.byte	'uint16',0,8,109,29
	.word	729
	.byte	25
	.byte	'uint32',0,8,113,29
	.word	1308
	.byte	25
	.byte	'uint64',0,8,118,29
	.word	296
	.byte	25
	.byte	'sint16',0,8,126,29
	.word	1261
	.byte	25
	.byte	'sint32',0,8,131,1,29
	.word	833
	.byte	7
	.byte	'long long int',0,8,5,25
	.byte	'sint64',0,8,139,1,29
	.word	1516
	.byte	25
	.byte	'float32',0,8,168,1,29
	.word	242
	.byte	25
	.byte	'pvoid',0,4,57,28
	.word	328
	.byte	25
	.byte	'cfloat32',0,4,65,3
	.word	414
	.byte	25
	.byte	'Ifx_TickTime',0,4,79,28
	.word	1516
	.byte	27,128,128,2
	.word	729
	.byte	28,255,127,0,12
	.word	1618
	.byte	29
	.byte	'Ifx_g_FftF32_bitReverseTable',0,5,66,31
	.word	1630
	.byte	1,1,27,128,128,4
	.word	414
	.byte	28,255,63,0,12
	.word	1674
	.byte	29
	.byte	'Ifx_g_FftF32_twiddleTable',0,5,69,31
	.word	1686
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L34:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,58,15,59,15,57
	.byte	15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,38,0,73,19,0,0,13,11,1,0,0,14,46,1,3,8,54,15,39,12,63
	.byte	12,60,12,0,0,15,5,0,73,19,0,0,16,53,0,73,19,0,0,17,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,18,5,0,3
	.byte	8,73,19,0,0,19,46,1,49,19,0,0,20,5,0,49,19,0,0,21,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,58,15,59,15,57,15,73,19,0,0,23,29,1,49,19,0,0,24,11,0,49,19,0,0,25,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,26,21,0,54,15,0,0,27,1,1,11,15,73,19,0,0,28,33,0,47,15,0,0,29,52,0,3,8,58,15,59,15,57
	.byte	15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L35:
	.word	.L176-.L175
.L175:
	.half	3
	.word	.L178-.L177
.L177:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\src\\BaseSw\\iLLD\\TC26B\\Tricore\\Cpu\\Std',0
	.byte	'C:\\Program Files\\TASKING\\TriCore v6.3r1\\ctc\\include\\',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_Cf32.h',0,0,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.h',0,0,0,0
	.byte	'math.h',0,2,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0,0
.L178:
.L176:
	.sdecl	'.debug_info',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_info'
.L36:
	.word	317
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Ifx_FftF32_generateTwiddleFactor',0,1,51,11
	.word	.L66
	.byte	1,1,1
	.word	.L21,.L67,.L20
	.byte	4
	.byte	'TF',0,1,51,54
	.word	.L66,.L68
	.byte	4
	.byte	'nX',0,1,51,64
	.word	.L69,.L70
	.byte	5
	.word	.L21,.L67
	.byte	6
	.byte	'i',0,1,53,12
	.word	.L71,.L72
	.byte	6
	.byte	'Theta',0,1,54,12
	.word	.L73,.L74
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_line'
.L38:
	.word	.L180-.L179
.L179:
	.half	3
	.word	.L182-.L181
.L181:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0,0
.L182:
	.byte	5,11,7,0,5,2
	.word	.L21
	.byte	3,50,1,5,26,9
	.half	.L143-.L21
	.byte	3,6,1,5,32,1,5,12,9
	.half	.L183-.L143
	.byte	1,5,24,9
	.half	.L144-.L183
	.byte	1,5,27,1,5,35,9
	.half	.L3-.L144
	.byte	3,2,1,5,24,9
	.half	.L184-.L3
	.byte	1,5,35,9
	.half	.L185-.L184
	.byte	1,5,39,9
	.half	.L186-.L185
	.byte	1,5,37,9
	.half	.L187-.L186
	.byte	1,9
	.half	.L145-.L187
	.byte	3,2,1,5,20,9
	.half	.L188-.L145
	.byte	1,5,38,9
	.half	.L189-.L188
	.byte	3,1,1,5,32,9
	.half	.L190-.L189
	.byte	1,5,20,1,5,30,9
	.half	.L146-.L190
	.byte	3,123,1,5,27,9
	.half	.L2-.L146
	.byte	1,5,5,7,9
	.half	.L191-.L2
	.byte	3,8,1,5,1,9
	.half	.L147-.L191
	.byte	3,1,1,7,9
	.half	.L40-.L147
	.byte	0,1,1
.L180:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L21,0,.L40-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_info'
.L41:
	.word	316
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Ifx_FftF32_radix2',0,1,143,1,11
	.word	.L66
	.byte	1,1,1
	.word	.L27,.L75,.L26
	.byte	4
	.byte	'R',0,1,143,1,39
	.word	.L66,.L76
	.byte	4
	.byte	'X',0,1,143,1,58
	.word	.L77,.L78
	.byte	4
	.byte	'nX',0,1,143,1,76
	.word	.L79,.L80
	.byte	5
	.word	.L81
	.byte	6
	.byte	'logN',0,1,145,1,20
	.word	.L82,.L83
	.byte	6
	.byte	'n',0,1,146,1,20
	.word	.L79,.L84
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,85,6,0,0,6,52,0
	.byte	3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_line'
.L43:
	.word	.L193-.L192
.L192:
	.half	3
	.word	.L195-.L194
.L194:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.h',0,0,0,0,0
.L195:
	.byte	5,37,7,0,5,2
	.word	.L27
	.byte	3,144,1,1,4,2,5,22,3,79,1,4,1,5,30,9
	.half	.L196-.L27
	.byte	3,49,1,5,11,3,126,1,4,2,5,48,9
	.half	.L165-.L196
	.byte	3,80,1,5,22,3,1,1,4,1,5,12,9
	.half	.L197-.L165
	.byte	3,53,1,5,23,1,4,2,5,18,9
	.half	.L13-.L197
	.byte	3,76,1,5,50,3,127,1,5,18,9
	.half	.L198-.L13
	.byte	3,1,1,4,1,5,10,9
	.half	.L199-.L198
	.byte	3,56,1,5,17,9
	.half	.L200-.L199
	.byte	1,5,10,9
	.half	.L201-.L200
	.byte	1,4,2,5,50,9
	.half	.L202-.L201
	.byte	3,71,1,5,18,9
	.half	.L203-.L202
	.byte	3,1,1,4,1,5,10,9
	.half	.L204-.L203
	.byte	3,56,1,5,17,9
	.half	.L205-.L204
	.byte	1,5,10,9
	.half	.L206-.L205
	.byte	1,5,23,9
	.half	.L12-.L206
	.byte	3,124,1,5,42,7,9
	.half	.L207-.L12
	.byte	3,7,1,5,5,9
	.half	.L164-.L207
	.byte	3,2,1,5,1,9
	.half	.L166-.L164
	.byte	3,1,1,7,9
	.half	.L45-.L166
	.byte	0,1,1
.L193:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L27,0,.L45-.L27,0,0
.L81:
	.word	-1,.L27,0,.L75-.L27,-1,.L29,0,.L65-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_info'
.L46:
	.word	366
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L49,.L48
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Ifx_FftF32_radix2I',0,1,162,1,11
	.word	.L66
	.byte	1,1,1
	.word	.L31,.L85,.L30
	.byte	4
	.byte	'R',0,1,162,1,40
	.word	.L66,.L86
	.byte	4
	.byte	'X',0,1,162,1,59
	.word	.L77,.L87
	.byte	4
	.byte	'nX',0,1,162,1,77
	.word	.L79,.L88
	.byte	5
	.word	.L31,.L85
	.byte	6
	.byte	'logN',0,1,164,1,20
	.word	.L82,.L89
	.byte	6
	.byte	'n',0,1,165,1,20
	.word	.L79,.L90
	.byte	7
	.word	.L91,.L16,.L92
	.byte	8
	.word	.L93,.L94
	.byte	8
	.word	.L95,.L96
	.byte	9
	.word	.L97,.L16,.L92
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_line'
.L48:
	.word	.L209-.L208
.L208:
	.half	3
	.word	.L211-.L210
.L210:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.h',0,0,0,0,0
.L211:
	.byte	5,11,7,0,5,2
	.word	.L31
	.byte	3,161,1,1,4,2,5,22,3,190,127,1,4,1,5,37,9
	.half	.L170-.L31
	.byte	3,196,0,1,5,11,3,126,1,5,30,9
	.half	.L168-.L170
	.byte	3,2,1,4,2,5,22,3,188,127,1,4,1,5,12,9
	.half	.L167-.L168
	.byte	3,200,0,1,5,23,1,4,2,5,48,9
	.half	.L16-.L167
	.byte	3,183,127,1,5,50,3,1,1,5,18,9
	.half	.L212-.L16
	.byte	3,1,1,4,1,5,10,9
	.half	.L92-.L212
	.byte	3,203,0,1,5,25,9
	.half	.L213-.L92
	.byte	1,5,19,9
	.half	.L214-.L213
	.byte	1,5,26,9
	.half	.L215-.L214
	.byte	3,1,1,5,21,9
	.half	.L216-.L215
	.byte	1,5,19,9
	.half	.L217-.L216
	.byte	1,5,23,9
	.half	.L15-.L217
	.byte	3,123,1,5,42,7,9
	.half	.L218-.L15
	.byte	3,8,1,5,12,9
	.half	.L169-.L218
	.byte	3,3,1,5,28,1,5,23,9
	.half	.L171-.L169
	.byte	1,5,26,9
	.half	.L18-.L171
	.byte	1,3,2,1,9
	.half	.L172-.L18
	.byte	3,126,1,5,21,9
	.half	.L173-.L172
	.byte	3,2,1,5,19,1,5,26,9
	.half	.L219-.L173
	.byte	3,126,1,5,23,9
	.half	.L17-.L219
	.byte	1,5,5,7,9
	.half	.L220-.L17
	.byte	3,5,1,5,1,9
	.half	.L174-.L220
	.byte	3,1,1,7,9
	.half	.L50-.L174
	.byte	0,1,1
.L209:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_ranges'
.L49:
	.word	-1,.L31,0,.L50-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_info'
.L51:
	.word	290
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L54,.L53
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Ifx_FftF32_reverseBits',0,1,70,16
	.word	.L79
	.byte	1,1,1
	.word	.L23,.L98,.L22
	.byte	4
	.byte	'n',0,1,70,54
	.word	.L79,.L99
	.byte	4
	.byte	'bits',0,1,70,66
	.word	.L82,.L100
	.byte	5
	.word	.L23,.L98
	.byte	6
	.byte	'v',0,1,75,19
	.word	.L101,.L102
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_line'
.L53:
	.word	.L222-.L221
.L221:
	.half	3
	.word	.L224-.L223
.L223:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0,0
.L224:
	.byte	5,43,7,0,5,2
	.word	.L23
	.byte	3,205,0,1,5,13,9
	.half	.L225-.L23
	.byte	1,5,19,9
	.half	.L226-.L225
	.byte	1,5,41,9
	.half	.L227-.L226
	.byte	1,5,57,9
	.half	.L148-.L227
	.byte	1,5,35,9
	.half	.L149-.L148
	.byte	1,5,43,9
	.half	.L228-.L149
	.byte	3,2,1,5,13,9
	.half	.L229-.L228
	.byte	1,5,19,9
	.half	.L230-.L229
	.byte	1,5,41,9
	.half	.L231-.L230
	.byte	1,5,57,9
	.half	.L150-.L231
	.byte	1,5,35,9
	.half	.L151-.L150
	.byte	1,5,43,9
	.half	.L232-.L151
	.byte	3,2,1,5,13,9
	.half	.L233-.L232
	.byte	1,5,19,9
	.half	.L234-.L233
	.byte	1,5,41,9
	.half	.L235-.L234
	.byte	1,5,57,9
	.half	.L152-.L235
	.byte	1,5,35,9
	.half	.L153-.L152
	.byte	1,5,13,9
	.half	.L236-.L153
	.byte	3,2,1,5,43,9
	.half	.L237-.L236
	.byte	1,5,41,9
	.half	.L238-.L237
	.byte	1,5,57,9
	.half	.L154-.L238
	.byte	1,5,35,9
	.half	.L239-.L154
	.byte	1,5,24,9
	.half	.L240-.L239
	.byte	3,2,1,5,18,9
	.half	.L241-.L240
	.byte	3,2,1,5,11,9
	.half	.L242-.L241
	.byte	1,5,12,9
	.half	.L155-.L242
	.byte	3,1,1,5,1,3,1,1,7,9
	.half	.L55-.L155
	.byte	0,1,1
.L222:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_ranges'
.L54:
	.word	-1,.L23,0,.L55-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_info'
.L56:
	.word	626
	.half	3
	.word	.L57
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L59,.L58
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Ifx_FftF32_radix2DecimationInTime',0,1,94,6,1,1,1
	.word	.L25,.L103,.L24
	.byte	4
	.byte	'R',0,1,94,50
	.word	.L66,.L104
	.byte	4
	.byte	'p',0,1,94,67
	.word	.L101,.L105
	.byte	5
	.word	.L25,.L103
	.byte	6
	.byte	'Bp',0,1,104,19
	.word	.L101,.L106
	.byte	6
	.byte	'Np',0,1,104,23
	.word	.L101,.L107
	.byte	6
	.byte	'Npx',0,1,104,27
	.word	.L101,.L108
	.byte	6
	.byte	'P',0,1,104,32
	.word	.L101,.L109
	.byte	6
	.byte	'b',0,1,104,35
	.word	.L101,.L110
	.byte	6
	.byte	'k',0,1,104,38
	.word	.L101,.L111
	.byte	6
	.byte	'BaseT',0,1,104,41
	.word	.L101,.L112
	.byte	6
	.byte	'top',0,1,105,19
	.word	.L113,.L114
	.byte	6
	.byte	'bot',0,1,105,24
	.word	.L113,.L115
	.byte	7
	.word	.L116,.L117,.L118
	.byte	8
	.word	.L119,.L120
	.byte	8
	.word	.L121,.L122
	.byte	9
	.word	.L123,.L124
	.byte	6
	.byte	'R',0,2,69,14
	.word	.L113,.L127
	.byte	0,0,7
	.word	.L116,.L125,.L126
	.byte	8
	.word	.L119,.L120
	.byte	8
	.word	.L121,.L122
	.byte	0,7
	.word	.L128,.L126,.L129
	.byte	8
	.word	.L130,.L131
	.byte	8
	.word	.L132,.L133
	.byte	10
	.word	.L134,.L126,.L129
	.byte	6
	.byte	'R',0,2,109,14
	.word	.L113,.L135
	.byte	0,0,7
	.word	.L136,.L129,.L10
	.byte	8
	.word	.L137,.L138
	.byte	8
	.word	.L139,.L140
	.byte	10
	.word	.L141,.L129,.L10
	.byte	6
	.byte	'R',0,2,118,14
	.word	.L113,.L142
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0
	.byte	10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_line'
.L58:
	.word	.L244-.L243
.L243:
	.half	3
	.word	.L246-.L245
.L245:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_Cf32.h',0,0,0,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.h',0,0,0,0,0
.L246:
	.byte	5,6,7,0,5,2
	.word	.L25
	.byte	3,221,0,1,5,10,9
	.half	.L156-.L25
	.byte	3,13,1,5,18,9
	.half	.L247-.L156
	.byte	1,5,12,9
	.half	.L248-.L247
	.byte	1,5,8,9
	.half	.L157-.L248
	.byte	3,1,1,5,12,9
	.half	.L158-.L157
	.byte	3,3,1,5,22,1,5,20,9
	.half	.L7-.L158
	.byte	3,3,1,5,15,9
	.half	.L159-.L7
	.byte	3,1,1,5,16,9
	.half	.L160-.L159
	.byte	3,2,1,5,27,1,5,32,9
	.half	.L9-.L160
	.byte	3,11,1,5,27,9
	.half	.L249-.L9
	.byte	3,120,1,5,46,9
	.half	.L250-.L249
	.byte	3,7,1,5,20,9
	.half	.L251-.L250
	.byte	3,123,1,5,32,1,4,3,5,38,9
	.half	.L11-.L251
	.byte	3,110,1,5,12,1,5,64,9
	.half	.L252-.L11
	.byte	1,5,12,1,4,2,5,16,9
	.half	.L117-.L252
	.byte	3,94,1,5,38,9
	.half	.L253-.L117
	.byte	1,4,3,5,37,9
	.half	.L118-.L253
	.byte	3,34,1,4,1,5,35,9
	.half	.L254-.L118
	.byte	3,18,1,4,3,5,37,9
	.half	.L255-.L254
	.byte	3,110,1,4,2,5,23,9
	.half	.L125-.L255
	.byte	3,94,1,5,48,9
	.half	.L256-.L125
	.byte	1,5,34,9
	.half	.L257-.L256
	.byte	1,5,45,9
	.half	.L258-.L257
	.byte	3,1,1,5,34,9
	.half	.L259-.L258
	.byte	1,4,1,5,33,3,57,1,4,2,5,26,9
	.half	.L126-.L259
	.byte	3,110,1,5,16,9
	.half	.L260-.L126
	.byte	1,5,23,9
	.half	.L261-.L260
	.byte	1,5,16,9
	.half	.L262-.L261
	.byte	3,1,1,5,26,9
	.half	.L263-.L262
	.byte	1,5,23,9
	.half	.L264-.L263
	.byte	1,4,1,5,30,3,18,1,4,2,5,16,9
	.half	.L129-.L264
	.byte	3,118,1,5,26,9
	.half	.L265-.L129
	.byte	1,5,23,9
	.half	.L161-.L265
	.byte	3,1,1,9
	.half	.L266-.L161
	.byte	3,127,1,4,1,5,30,3,11,1,5,32,9
	.half	.L10-.L266
	.byte	3,120,1,5,27,7,9
	.half	.L267-.L10
	.byte	3,11,1,5,30,9
	.half	.L268-.L267
	.byte	3,112,1,5,27,9
	.half	.L8-.L268
	.byte	1,5,17,7,9
	.half	.L269-.L8
	.byte	3,20,1,9
	.half	.L270-.L269
	.byte	3,1,1,5,25,9
	.half	.L271-.L270
	.byte	3,101,1,5,22,9
	.half	.L6-.L271
	.byte	1,5,1,7,9
	.half	.L272-.L6
	.byte	3,29,1,7,9
	.half	.L60-.L272
	.byte	0,1,1
.L244:
	.sdecl	'.debug_ranges',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_ranges'
.L59:
	.word	-1,.L25,0,.L60-.L25,0,0
.L124:
	.word	-1,.L25,.L117-.L25,.L118-.L25,.L125-.L25,.L126-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_1')
	.sect	'.debug_info'
.L61:
	.word	217
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'E:\\tasking workspace\\Copy of LQ_TC26xB_LIBtaskingAICTone\\Debug\\',0,12,1
	.word	.L64,.L63
	.byte	2
	.word	.L32
	.byte	3
	.byte	'.cocofun_1',0,1,143,1,11,1
	.word	.L29,.L65,.L28
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_1')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_1')
	.sect	'.debug_line'
.L63:
	.word	.L274-.L273
.L273:
	.half	3
	.word	.L276-.L275
.L275:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\src\\BaseSw\\Service\\CpuGeneric\\SysSe\\Math\\Ifx_FftF32.c',0,0,0,0,0
.L276:
	.byte	5,26,7,0,5,2
	.word	.L29
	.byte	3,148,1,1,5,10,3,4,1,5,26,9
	.half	.L163-.L29
	.byte	3,124,1,9
	.half	.L65-.L163
	.byte	0,1,1,5,26,0,5,2
	.word	.L29
	.byte	3,167,1,1,5,19,3,5,1,5,26,9
	.half	.L163-.L29
	.byte	3,123,1,9
	.half	.L162-.L163
	.byte	3,109,1,7,9
	.half	.L65-.L162
	.byte	0,1,1
.L274:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_1')
	.sect	'.debug_ranges'
.L64:
	.word	-1,.L29,0,.L65-.L29,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_1')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L65-.L29
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L67-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L68:
	.word	-1,.L21,0,.L3-.L21
	.half	1
	.byte	100
	.word	.L143-.L21,.L67-.L21
	.half	1
	.byte	108
	.word	.L147-.L21,.L67-.L21
	.half	1
	.byte	98
	.word	0,0
.L74:
	.word	-1,.L21,.L145-.L21,.L146-.L21
	.half	1
	.byte	95
	.word	0,0
.L72:
	.word	-1,.L21,.L144-.L21,.L67-.L21
	.half	1
	.byte	91
	.word	0,0
.L70:
	.word	-1,.L21,0,.L3-.L21
	.half	1
	.byte	84
	.word	.L143-.L21,.L67-.L21
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L75-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L76:
	.word	-1,.L27,.L29-.L27,.L162-.L27
	.half	1
	.byte	100
	.word	.L29-.L27,.L162-.L27
	.half	1
	.byte	108
	.word	0,.L164-.L27
	.half	1
	.byte	100
	.word	.L165-.L27,.L75-.L27
	.half	1
	.byte	108
	.word	.L166-.L27,.L75-.L27
	.half	1
	.byte	98
	.word	0,0
.L78:
	.word	-1,.L27,.L29-.L27,.L162-.L27
	.half	1
	.byte	101
	.word	0,.L164-.L27
	.half	1
	.byte	101
	.word	0,0
.L83:
	.word	-1,.L27,.L29-.L27,.L162-.L27
	.half	1
	.byte	81
	.word	.L165-.L27,.L164-.L27
	.half	1
	.byte	81
	.word	0,0
.L84:
	.word	-1,.L27,.L29-.L27,.L163-.L27
	.half	5
	.byte	144,32,157,32,0
	.word	.L13-.L27,.L164-.L27
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L80:
	.word	-1,.L27,.L29-.L27,.L162-.L27
	.half	1
	.byte	84
	.word	0,.L164-.L27
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L25,.L160-.L25,.L6-.L25
	.half	1
	.byte	84
	.word	0,0
.L106:
	.word	-1,.L25,.L157-.L25,.L103-.L25
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L24:
	.word	-1,.L25,0,.L103-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L107:
	.word	-1,.L25,.L158-.L25,.L103-.L25
	.half	1
	.byte	81
	.word	0,0
.L108:
	.word	-1,.L25,.L159-.L25,.L6-.L25
	.half	1
	.byte	83
	.word	0,0
.L109:
	.word	-1,.L25,.L7-.L25,.L103-.L25
	.half	1
	.byte	82
	.word	0,0
.L127:
	.word	-1,.L25,.L126-.L25,.L10-.L25
	.half	2
	.byte	144,37
	.word	0,0
.L104:
	.word	-1,.L25,0,.L103-.L25
	.half	1
	.byte	100
	.word	0,0
.L135:
	.word	-1,.L25,.L129-.L25,.L161-.L25
	.half	2
	.byte	144,35
	.word	0,0
.L142:
	.word	0,0
.L120:
	.word	0,0
.L131:
	.word	0,0
.L138:
	.word	0,0
.L122:
	.word	0,0
.L110:
	.word	-1,.L25,.L9-.L25,.L6-.L25
	.half	1
	.byte	85
	.word	0,0
.L133:
	.word	0,0
.L140:
	.word	0,0
.L115:
	.word	0,0
.L111:
	.word	-1,.L25,.L11-.L25,.L8-.L25
	.half	1
	.byte	92
	.word	0,0
.L105:
	.word	-1,.L25,0,.L7-.L25
	.half	1
	.byte	84
	.word	.L156-.L25,.L103-.L25
	.half	1
	.byte	93
	.word	0,0
.L114:
	.word	-1,.L25,.L125-.L25,.L126-.L25
	.half	2
	.byte	144,35
	.word	.L126-.L25,.L10-.L25
	.half	2
	.byte	144,36
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L85-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L86:
	.word	-1,.L31,.L29-.L31,.L65-.L31
	.half	1
	.byte	108
	.word	.L29-.L31,.L65-.L31
	.half	1
	.byte	100
	.word	.L168-.L31,.L85-.L31
	.half	1
	.byte	108
	.word	0,.L169-.L31
	.half	1
	.byte	100
	.word	.L174-.L31,.L85-.L31
	.half	1
	.byte	98
	.word	0,0
.L87:
	.word	-1,.L31,.L29-.L31,.L65-.L31
	.half	1
	.byte	101
	.word	0,.L169-.L31
	.half	1
	.byte	101
	.word	0,0
.L96:
	.word	0,0
.L89:
	.word	-1,.L31,.L29-.L31,.L65-.L31
	.half	1
	.byte	84
	.word	.L167-.L31,.L169-.L31
	.half	1
	.byte	84
	.word	0,0
.L94:
	.word	0,0
.L90:
	.word	-1,.L31,.L29-.L31,.L29-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	.L163-.L31,.L65-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	.L16-.L31,.L169-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	.L171-.L31,.L172-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	.L173-.L31,.L85-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L88:
	.word	-1,.L31,0,.L167-.L31
	.half	1
	.byte	84
	.word	.L29-.L31,.L65-.L31
	.half	1
	.byte	88
	.word	.L170-.L31,.L85-.L31
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L98-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L100:
	.word	-1,.L23,0,.L98-.L23
	.half	1
	.byte	85
	.word	0,0
.L99:
	.word	-1,.L23,0,.L148-.L23
	.half	1
	.byte	84
	.word	0,0
.L102:
	.word	-1,.L23,.L149-.L23,.L150-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	.L151-.L23,.L152-.L23
	.half	1
	.byte	81
	.word	.L153-.L23,.L154-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	.L155-.L23,.L98-.L23
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L277:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Ifx_FftF32_generateTwiddleFactor')
	.sect	'.debug_frame'
	.word	12
	.word	.L277,.L21,.L67-.L21
	.sdecl	'.debug_frame',debug,cluster('Ifx_FftF32_reverseBits')
	.sect	'.debug_frame'
	.word	24
	.word	.L277,.L23,.L98-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Ifx_FftF32_radix2DecimationInTime')
	.sect	'.debug_frame'
	.word	20
	.word	.L277,.L25,.L103-.L25
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Ifx_FftF32_radix2')
	.sect	'.debug_frame'
	.word	12
	.word	.L277,.L27,.L75-.L27
	.sdecl	'.debug_frame',debug,cluster('Ifx_FftF32_radix2I')
	.sect	'.debug_frame'
	.word	12
	.word	.L277,.L31,.L85-.L31
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L278:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_1')
	.sect	'.debug_frame'
	.word	24
	.word	.L278,.L29,.L65-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\src\BaseSw\Service\CpuGeneric\SysSe\Math\Ifx_FftF32.c	   186      unsigned short n, k = 0;
	; Module end
